<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataform/v1beta1/dataform.proto

namespace Google\Cloud\Dataform\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Configures various aspects of Dataform notebook runtime.
 *
 * Generated from protobuf message <code>google.cloud.dataform.v1beta1.NotebookRuntimeOptions</code>
 */
class NotebookRuntimeOptions extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The resource name of the [Colab runtime template]
     * (https://cloud.google.com/colab/docs/runtimes), from which a runtime is
     * created for notebook executions. If not specified, a runtime is created
     * with Colab's default specifications.
     *
     * Generated from protobuf field <code>string ai_platform_notebook_runtime_template = 2 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     */
    protected $ai_platform_notebook_runtime_template = '';
    protected $execution_sink;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $gcs_output_bucket
     *           Optional. The Google Cloud Storage location to upload the result to.
     *           Format: `gs://bucket-name`.
     *     @type string $ai_platform_notebook_runtime_template
     *           Optional. The resource name of the [Colab runtime template]
     *           (https://cloud.google.com/colab/docs/runtimes), from which a runtime is
     *           created for notebook executions. If not specified, a runtime is created
     *           with Colab's default specifications.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataform\V1Beta1\Dataform::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The Google Cloud Storage location to upload the result to.
     * Format: `gs://bucket-name`.
     *
     * Generated from protobuf field <code>string gcs_output_bucket = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getGcsOutputBucket()
    {
        return $this->readOneof(1);
    }

    public function hasGcsOutputBucket()
    {
        return $this->hasOneof(1);
    }

    /**
     * Optional. The Google Cloud Storage location to upload the result to.
     * Format: `gs://bucket-name`.
     *
     * Generated from protobuf field <code>string gcs_output_bucket = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setGcsOutputBucket($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Optional. The resource name of the [Colab runtime template]
     * (https://cloud.google.com/colab/docs/runtimes), from which a runtime is
     * created for notebook executions. If not specified, a runtime is created
     * with Colab's default specifications.
     *
     * Generated from protobuf field <code>string ai_platform_notebook_runtime_template = 2 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getAiPlatformNotebookRuntimeTemplate()
    {
        return $this->ai_platform_notebook_runtime_template;
    }

    /**
     * Optional. The resource name of the [Colab runtime template]
     * (https://cloud.google.com/colab/docs/runtimes), from which a runtime is
     * created for notebook executions. If not specified, a runtime is created
     * with Colab's default specifications.
     *
     * Generated from protobuf field <code>string ai_platform_notebook_runtime_template = 2 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setAiPlatformNotebookRuntimeTemplate($var)
    {
        GPBUtil::checkString($var, True);
        $this->ai_platform_notebook_runtime_template = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getExecutionSink()
    {
        return $this->whichOneof("execution_sink");
    }

}

