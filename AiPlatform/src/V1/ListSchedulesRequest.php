<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/schedule_service.proto

namespace Google\Cloud\AIPlatform\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [ScheduleService.ListSchedules][google.cloud.aiplatform.v1.ScheduleService.ListSchedules].
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.ListSchedulesRequest</code>
 */
class ListSchedulesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The resource name of the Location to list the Schedules from.
     * Format: `projects/{project}/locations/{location}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    private $parent = '';
    /**
     * Lists the Schedules that match the filter expression. The following
     * fields are supported:
     * * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard.
     * * `state`: Supports `=` and `!=` comparisons.
     * * `request`: Supports existence of the <request_type> check.
     *       (e.g. `create_pipeline_job_request:*` --> Schedule has
     *       create_pipeline_job_request).
     * * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
     *       Values must be in RFC 3339 format.
     * * `start_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
     *       Values must be in RFC 3339 format.
     * * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*`
     *       existence check. Values must be in RFC 3339 format.
     * * `next_run_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=`
     *       comparisons. Values must be in RFC 3339 format.
     * Filter expressions can be combined together using logical operators
     * (`NOT`, `AND` & `OR`).
     * The syntax to define filter expression is based on
     * https://google.aip.dev/160.
     * Examples:
     * * `state="ACTIVE" AND display_name:"my_schedule_*"`
     * * `NOT display_name="my_schedule"`
     * * `create_time>"2021-05-18T00:00:00Z"`
     * * `end_time>"2021-05-18T00:00:00Z" OR NOT end_time:*`
     * * `create_pipeline_job_request:*`
     *
     * Generated from protobuf field <code>string filter = 2;</code>
     */
    private $filter = '';
    /**
     * The standard list page size.
     * Default to 100 if not specified.
     *
     * Generated from protobuf field <code>int32 page_size = 3;</code>
     */
    private $page_size = 0;
    /**
     * The standard list page token.
     * Typically obtained via
     * [ListSchedulesResponse.next_page_token][google.cloud.aiplatform.v1.ListSchedulesResponse.next_page_token]
     * of the previous
     * [ScheduleService.ListSchedules][google.cloud.aiplatform.v1.ScheduleService.ListSchedules]
     * call.
     *
     * Generated from protobuf field <code>string page_token = 4;</code>
     */
    private $page_token = '';
    /**
     * A comma-separated list of fields to order by. The default sort order is in
     * ascending order. Use "desc" after a field name for descending. You can have
     * multiple order_by fields provided.
     * For example, using "create_time desc, end_time" will order results by
     * create time in descending order, and if there are multiple schedules having
     * the same create time, order them by the end time in ascending order.
     * If order_by is not specified, it will order by default with create_time in
     * descending order.
     * Supported fields:
     *   * `create_time`
     *   * `start_time`
     *   * `end_time`
     *   * `next_run_time`
     *
     * Generated from protobuf field <code>string order_by = 5;</code>
     */
    private $order_by = '';

    /**
     * @param string $parent Required. The resource name of the Location to list the Schedules from.
     *                       Format: `projects/{project}/locations/{location}`
     *                       Please see {@see ScheduleServiceClient::locationName()} for help formatting this field.
     *
     * @return \Google\Cloud\AIPlatform\V1\ListSchedulesRequest
     *
     * @experimental
     */
    public static function build(string $parent): self
    {
        return (new self())
            ->setParent($parent);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The resource name of the Location to list the Schedules from.
     *           Format: `projects/{project}/locations/{location}`
     *     @type string $filter
     *           Lists the Schedules that match the filter expression. The following
     *           fields are supported:
     *           * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard.
     *           * `state`: Supports `=` and `!=` comparisons.
     *           * `request`: Supports existence of the <request_type> check.
     *                 (e.g. `create_pipeline_job_request:*` --> Schedule has
     *                 create_pipeline_job_request).
     *           * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
     *                 Values must be in RFC 3339 format.
     *           * `start_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
     *                 Values must be in RFC 3339 format.
     *           * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*`
     *                 existence check. Values must be in RFC 3339 format.
     *           * `next_run_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=`
     *                 comparisons. Values must be in RFC 3339 format.
     *           Filter expressions can be combined together using logical operators
     *           (`NOT`, `AND` & `OR`).
     *           The syntax to define filter expression is based on
     *           https://google.aip.dev/160.
     *           Examples:
     *           * `state="ACTIVE" AND display_name:"my_schedule_*"`
     *           * `NOT display_name="my_schedule"`
     *           * `create_time>"2021-05-18T00:00:00Z"`
     *           * `end_time>"2021-05-18T00:00:00Z" OR NOT end_time:*`
     *           * `create_pipeline_job_request:*`
     *     @type int $page_size
     *           The standard list page size.
     *           Default to 100 if not specified.
     *     @type string $page_token
     *           The standard list page token.
     *           Typically obtained via
     *           [ListSchedulesResponse.next_page_token][google.cloud.aiplatform.v1.ListSchedulesResponse.next_page_token]
     *           of the previous
     *           [ScheduleService.ListSchedules][google.cloud.aiplatform.v1.ScheduleService.ListSchedules]
     *           call.
     *     @type string $order_by
     *           A comma-separated list of fields to order by. The default sort order is in
     *           ascending order. Use "desc" after a field name for descending. You can have
     *           multiple order_by fields provided.
     *           For example, using "create_time desc, end_time" will order results by
     *           create time in descending order, and if there are multiple schedules having
     *           the same create time, order them by the end time in ascending order.
     *           If order_by is not specified, it will order by default with create_time in
     *           descending order.
     *           Supported fields:
     *             * `create_time`
     *             * `start_time`
     *             * `end_time`
     *             * `next_run_time`
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\ScheduleService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The resource name of the Location to list the Schedules from.
     * Format: `projects/{project}/locations/{location}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The resource name of the Location to list the Schedules from.
     * Format: `projects/{project}/locations/{location}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Lists the Schedules that match the filter expression. The following
     * fields are supported:
     * * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard.
     * * `state`: Supports `=` and `!=` comparisons.
     * * `request`: Supports existence of the <request_type> check.
     *       (e.g. `create_pipeline_job_request:*` --> Schedule has
     *       create_pipeline_job_request).
     * * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
     *       Values must be in RFC 3339 format.
     * * `start_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
     *       Values must be in RFC 3339 format.
     * * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*`
     *       existence check. Values must be in RFC 3339 format.
     * * `next_run_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=`
     *       comparisons. Values must be in RFC 3339 format.
     * Filter expressions can be combined together using logical operators
     * (`NOT`, `AND` & `OR`).
     * The syntax to define filter expression is based on
     * https://google.aip.dev/160.
     * Examples:
     * * `state="ACTIVE" AND display_name:"my_schedule_*"`
     * * `NOT display_name="my_schedule"`
     * * `create_time>"2021-05-18T00:00:00Z"`
     * * `end_time>"2021-05-18T00:00:00Z" OR NOT end_time:*`
     * * `create_pipeline_job_request:*`
     *
     * Generated from protobuf field <code>string filter = 2;</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Lists the Schedules that match the filter expression. The following
     * fields are supported:
     * * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard.
     * * `state`: Supports `=` and `!=` comparisons.
     * * `request`: Supports existence of the <request_type> check.
     *       (e.g. `create_pipeline_job_request:*` --> Schedule has
     *       create_pipeline_job_request).
     * * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
     *       Values must be in RFC 3339 format.
     * * `start_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons.
     *       Values must be in RFC 3339 format.
     * * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*`
     *       existence check. Values must be in RFC 3339 format.
     * * `next_run_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=`
     *       comparisons. Values must be in RFC 3339 format.
     * Filter expressions can be combined together using logical operators
     * (`NOT`, `AND` & `OR`).
     * The syntax to define filter expression is based on
     * https://google.aip.dev/160.
     * Examples:
     * * `state="ACTIVE" AND display_name:"my_schedule_*"`
     * * `NOT display_name="my_schedule"`
     * * `create_time>"2021-05-18T00:00:00Z"`
     * * `end_time>"2021-05-18T00:00:00Z" OR NOT end_time:*`
     * * `create_pipeline_job_request:*`
     *
     * Generated from protobuf field <code>string filter = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

    /**
     * The standard list page size.
     * Default to 100 if not specified.
     *
     * Generated from protobuf field <code>int32 page_size = 3;</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * The standard list page size.
     * Default to 100 if not specified.
     *
     * Generated from protobuf field <code>int32 page_size = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * The standard list page token.
     * Typically obtained via
     * [ListSchedulesResponse.next_page_token][google.cloud.aiplatform.v1.ListSchedulesResponse.next_page_token]
     * of the previous
     * [ScheduleService.ListSchedules][google.cloud.aiplatform.v1.ScheduleService.ListSchedules]
     * call.
     *
     * Generated from protobuf field <code>string page_token = 4;</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * The standard list page token.
     * Typically obtained via
     * [ListSchedulesResponse.next_page_token][google.cloud.aiplatform.v1.ListSchedulesResponse.next_page_token]
     * of the previous
     * [ScheduleService.ListSchedules][google.cloud.aiplatform.v1.ScheduleService.ListSchedules]
     * call.
     *
     * Generated from protobuf field <code>string page_token = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

    /**
     * A comma-separated list of fields to order by. The default sort order is in
     * ascending order. Use "desc" after a field name for descending. You can have
     * multiple order_by fields provided.
     * For example, using "create_time desc, end_time" will order results by
     * create time in descending order, and if there are multiple schedules having
     * the same create time, order them by the end time in ascending order.
     * If order_by is not specified, it will order by default with create_time in
     * descending order.
     * Supported fields:
     *   * `create_time`
     *   * `start_time`
     *   * `end_time`
     *   * `next_run_time`
     *
     * Generated from protobuf field <code>string order_by = 5;</code>
     * @return string
     */
    public function getOrderBy()
    {
        return $this->order_by;
    }

    /**
     * A comma-separated list of fields to order by. The default sort order is in
     * ascending order. Use "desc" after a field name for descending. You can have
     * multiple order_by fields provided.
     * For example, using "create_time desc, end_time" will order results by
     * create time in descending order, and if there are multiple schedules having
     * the same create time, order them by the end time in ascending order.
     * If order_by is not specified, it will order by default with create_time in
     * descending order.
     * Supported fields:
     *   * `create_time`
     *   * `start_time`
     *   * `end_time`
     *   * `next_run_time`
     *
     * Generated from protobuf field <code>string order_by = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setOrderBy($var)
    {
        GPBUtil::checkString($var, True);
        $this->order_by = $var;

        return $this;
    }

}

