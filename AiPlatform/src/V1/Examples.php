<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/explanation.proto

namespace Google\Cloud\AIPlatform\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Example-based explainability that returns the nearest neighbors from the
 * provided dataset.
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.Examples</code>
 */
class Examples extends \Google\Protobuf\Internal\Message
{
    /**
     * The number of neighbors to return when querying for examples.
     *
     * Generated from protobuf field <code>int32 neighbor_count = 3;</code>
     */
    private $neighbor_count = 0;
    protected $source;
    protected $config;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\AIPlatform\V1\Examples\ExampleGcsSource $example_gcs_source
     *           The Cloud Storage input instances.
     *     @type \Google\Protobuf\Value $nearest_neighbor_search_config
     *           The full configuration for the generated index, the semantics are the
     *           same as [metadata][google.cloud.aiplatform.v1.Index.metadata] and should
     *           match
     *           [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config).
     *     @type \Google\Cloud\AIPlatform\V1\Presets $presets
     *           Simplified preset configuration, which automatically sets configuration
     *           values based on the desired query speed-precision trade-off and modality.
     *     @type int $neighbor_count
     *           The number of neighbors to return when querying for examples.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\Explanation::initOnce();
        parent::__construct($data);
    }

    /**
     * The Cloud Storage input instances.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.Examples.ExampleGcsSource example_gcs_source = 5;</code>
     * @return \Google\Cloud\AIPlatform\V1\Examples\ExampleGcsSource|null
     */
    public function getExampleGcsSource()
    {
        return $this->readOneof(5);
    }

    public function hasExampleGcsSource()
    {
        return $this->hasOneof(5);
    }

    /**
     * The Cloud Storage input instances.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.Examples.ExampleGcsSource example_gcs_source = 5;</code>
     * @param \Google\Cloud\AIPlatform\V1\Examples\ExampleGcsSource $var
     * @return $this
     */
    public function setExampleGcsSource($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\AIPlatform\V1\Examples\ExampleGcsSource::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * The full configuration for the generated index, the semantics are the
     * same as [metadata][google.cloud.aiplatform.v1.Index.metadata] and should
     * match
     * [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config).
     *
     * Generated from protobuf field <code>.google.protobuf.Value nearest_neighbor_search_config = 2;</code>
     * @return \Google\Protobuf\Value|null
     */
    public function getNearestNeighborSearchConfig()
    {
        return $this->readOneof(2);
    }

    public function hasNearestNeighborSearchConfig()
    {
        return $this->hasOneof(2);
    }

    /**
     * The full configuration for the generated index, the semantics are the
     * same as [metadata][google.cloud.aiplatform.v1.Index.metadata] and should
     * match
     * [NearestNeighborSearchConfig](https://cloud.google.com/vertex-ai/docs/explainable-ai/configuring-explanations-example-based#nearest-neighbor-search-config).
     *
     * Generated from protobuf field <code>.google.protobuf.Value nearest_neighbor_search_config = 2;</code>
     * @param \Google\Protobuf\Value $var
     * @return $this
     */
    public function setNearestNeighborSearchConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Value::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Simplified preset configuration, which automatically sets configuration
     * values based on the desired query speed-precision trade-off and modality.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.Presets presets = 4;</code>
     * @return \Google\Cloud\AIPlatform\V1\Presets|null
     */
    public function getPresets()
    {
        return $this->readOneof(4);
    }

    public function hasPresets()
    {
        return $this->hasOneof(4);
    }

    /**
     * Simplified preset configuration, which automatically sets configuration
     * values based on the desired query speed-precision trade-off and modality.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.Presets presets = 4;</code>
     * @param \Google\Cloud\AIPlatform\V1\Presets $var
     * @return $this
     */
    public function setPresets($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\AIPlatform\V1\Presets::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * The number of neighbors to return when querying for examples.
     *
     * Generated from protobuf field <code>int32 neighbor_count = 3;</code>
     * @return int
     */
    public function getNeighborCount()
    {
        return $this->neighbor_count;
    }

    /**
     * The number of neighbors to return when querying for examples.
     *
     * Generated from protobuf field <code>int32 neighbor_count = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setNeighborCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->neighbor_count = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getSource()
    {
        return $this->whichOneof("source");
    }

    /**
     * @return string
     */
    public function getConfig()
    {
        return $this->whichOneof("config");
    }

}

