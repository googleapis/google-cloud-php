<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/content.proto

namespace Google\Cloud\AIPlatform\V1\GenerationConfig;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Config for thinking features.
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.GenerationConfig.ThinkingConfig</code>
 */
class ThinkingConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Indicates whether to include thoughts in the response.
     * If true, thoughts are returned only when available.
     *
     * Generated from protobuf field <code>optional bool include_thoughts = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $include_thoughts = null;
    /**
     * Optional. Indicates the thinking budget in tokens.
     * This is only applied when enable_thinking is true.
     *
     * Generated from protobuf field <code>optional int32 thinking_budget = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $thinking_budget = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $include_thoughts
     *           Indicates whether to include thoughts in the response.
     *           If true, thoughts are returned only when available.
     *     @type int $thinking_budget
     *           Optional. Indicates the thinking budget in tokens.
     *           This is only applied when enable_thinking is true.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\Content::initOnce();
        parent::__construct($data);
    }

    /**
     * Indicates whether to include thoughts in the response.
     * If true, thoughts are returned only when available.
     *
     * Generated from protobuf field <code>optional bool include_thoughts = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getIncludeThoughts()
    {
        return isset($this->include_thoughts) ? $this->include_thoughts : false;
    }

    public function hasIncludeThoughts()
    {
        return isset($this->include_thoughts);
    }

    public function clearIncludeThoughts()
    {
        unset($this->include_thoughts);
    }

    /**
     * Indicates whether to include thoughts in the response.
     * If true, thoughts are returned only when available.
     *
     * Generated from protobuf field <code>optional bool include_thoughts = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setIncludeThoughts($var)
    {
        GPBUtil::checkBool($var);
        $this->include_thoughts = $var;

        return $this;
    }

    /**
     * Optional. Indicates the thinking budget in tokens.
     * This is only applied when enable_thinking is true.
     *
     * Generated from protobuf field <code>optional int32 thinking_budget = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getThinkingBudget()
    {
        return isset($this->thinking_budget) ? $this->thinking_budget : 0;
    }

    public function hasThinkingBudget()
    {
        return isset($this->thinking_budget);
    }

    public function clearThinkingBudget()
    {
        unset($this->thinking_budget);
    }

    /**
     * Optional. Indicates the thinking budget in tokens.
     * This is only applied when enable_thinking is true.
     *
     * Generated from protobuf field <code>optional int32 thinking_budget = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setThinkingBudget($var)
    {
        GPBUtil::checkInt32($var);
        $this->thinking_budget = $var;

        return $this;
    }

}


