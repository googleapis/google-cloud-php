<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/tool.proto

namespace Google\Cloud\AIPlatform\V1\VertexAISearch;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Define data stores within engine to filter on in a search call and
 * configurations for those data stores. For more information, see
 * https://cloud.google.com/generative-ai-app-builder/docs/reference/rpc/google.cloud.discoveryengine.v1#datastorespec
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.VertexAISearch.DataStoreSpec</code>
 */
class DataStoreSpec extends \Google\Protobuf\Internal\Message
{
    /**
     * Full resource name of DataStore, such as
     * Format:
     * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
     *
     * Generated from protobuf field <code>string data_store = 1;</code>
     */
    protected $data_store = '';
    /**
     * Optional. Filter specification to filter documents in the data store
     * specified by data_store field. For more information on filtering, see
     * [Filtering](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $filter = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $data_store
     *           Full resource name of DataStore, such as
     *           Format:
     *           `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
     *     @type string $filter
     *           Optional. Filter specification to filter documents in the data store
     *           specified by data_store field. For more information on filtering, see
     *           [Filtering](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\Tool::initOnce();
        parent::__construct($data);
    }

    /**
     * Full resource name of DataStore, such as
     * Format:
     * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
     *
     * Generated from protobuf field <code>string data_store = 1;</code>
     * @return string
     */
    public function getDataStore()
    {
        return $this->data_store;
    }

    /**
     * Full resource name of DataStore, such as
     * Format:
     * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
     *
     * Generated from protobuf field <code>string data_store = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDataStore($var)
    {
        GPBUtil::checkString($var, True);
        $this->data_store = $var;

        return $this;
    }

    /**
     * Optional. Filter specification to filter documents in the data store
     * specified by data_store field. For more information on filtering, see
     * [Filtering](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Optional. Filter specification to filter documents in the data store
     * specified by data_store field. For more information on filtering, see
     * [Filtering](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

}


