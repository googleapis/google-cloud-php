<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/vertex_rag_service.proto

namespace Google\Cloud\AIPlatform\V1\RetrieveContextsRequest;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The data source for Vertex RagStore.
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.RetrieveContextsRequest.VertexRagStore</code>
 */
class VertexRagStore extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The representation of the rag source. It can be used to specify
     * corpus only or ragfiles. Currently only support one corpus or multiple
     * files from one corpus. In the future we may open up multiple corpora
     * support.
     *
     * Generated from protobuf field <code>repeated .google.cloud.aiplatform.v1.RetrieveContextsRequest.VertexRagStore.RagResource rag_resources = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $rag_resources;
    /**
     * Optional. Only return contexts with vector distance smaller than the
     * threshold.
     *
     * Generated from protobuf field <code>optional double vector_distance_threshold = 2 [deprecated = true, (.google.api.field_behavior) = OPTIONAL];</code>
     * @deprecated
     */
    protected $vector_distance_threshold = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Google\Cloud\AIPlatform\V1\RetrieveContextsRequest\VertexRagStore\RagResource>|\Google\Protobuf\Internal\RepeatedField $rag_resources
     *           Optional. The representation of the rag source. It can be used to specify
     *           corpus only or ragfiles. Currently only support one corpus or multiple
     *           files from one corpus. In the future we may open up multiple corpora
     *           support.
     *     @type float $vector_distance_threshold
     *           Optional. Only return contexts with vector distance smaller than the
     *           threshold.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\VertexRagService::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The representation of the rag source. It can be used to specify
     * corpus only or ragfiles. Currently only support one corpus or multiple
     * files from one corpus. In the future we may open up multiple corpora
     * support.
     *
     * Generated from protobuf field <code>repeated .google.cloud.aiplatform.v1.RetrieveContextsRequest.VertexRagStore.RagResource rag_resources = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRagResources()
    {
        return $this->rag_resources;
    }

    /**
     * Optional. The representation of the rag source. It can be used to specify
     * corpus only or ragfiles. Currently only support one corpus or multiple
     * files from one corpus. In the future we may open up multiple corpora
     * support.
     *
     * Generated from protobuf field <code>repeated .google.cloud.aiplatform.v1.RetrieveContextsRequest.VertexRagStore.RagResource rag_resources = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Cloud\AIPlatform\V1\RetrieveContextsRequest\VertexRagStore\RagResource>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRagResources($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\AIPlatform\V1\RetrieveContextsRequest\VertexRagStore\RagResource::class);
        $this->rag_resources = $arr;

        return $this;
    }

    /**
     * Optional. Only return contexts with vector distance smaller than the
     * threshold.
     *
     * Generated from protobuf field <code>optional double vector_distance_threshold = 2 [deprecated = true, (.google.api.field_behavior) = OPTIONAL];</code>
     * @return float
     * @deprecated
     */
    public function getVectorDistanceThreshold()
    {
        @trigger_error('vector_distance_threshold is deprecated.', E_USER_DEPRECATED);
        return isset($this->vector_distance_threshold) ? $this->vector_distance_threshold : 0.0;
    }

    public function hasVectorDistanceThreshold()
    {
        @trigger_error('vector_distance_threshold is deprecated.', E_USER_DEPRECATED);
        return isset($this->vector_distance_threshold);
    }

    public function clearVectorDistanceThreshold()
    {
        @trigger_error('vector_distance_threshold is deprecated.', E_USER_DEPRECATED);
        unset($this->vector_distance_threshold);
    }

    /**
     * Optional. Only return contexts with vector distance smaller than the
     * threshold.
     *
     * Generated from protobuf field <code>optional double vector_distance_threshold = 2 [deprecated = true, (.google.api.field_behavior) = OPTIONAL];</code>
     * @param float $var
     * @return $this
     * @deprecated
     */
    public function setVectorDistanceThreshold($var)
    {
        @trigger_error('vector_distance_threshold is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkDouble($var);
        $this->vector_distance_threshold = $var;

        return $this;
    }

}


