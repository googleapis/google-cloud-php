<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/endpoint.proto

namespace Google\Cloud\AIPlatform\V1\SpeculativeDecodingSpec;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * N-Gram speculation works by trying to find matching tokens in the
 * previous prompt sequence and use those as speculation for generating
 * new tokens.
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.SpeculativeDecodingSpec.NgramSpeculation</code>
 */
class NgramSpeculation extends \Google\Protobuf\Internal\Message
{
    /**
     * The number of last N input tokens used as ngram to search/match
     * against the previous prompt sequence.
     * This is equal to the N in N-Gram.
     * The default value is 3 if not specified.
     *
     * Generated from protobuf field <code>int32 ngram_size = 1;</code>
     */
    protected $ngram_size = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $ngram_size
     *           The number of last N input tokens used as ngram to search/match
     *           against the previous prompt sequence.
     *           This is equal to the N in N-Gram.
     *           The default value is 3 if not specified.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\Endpoint::initOnce();
        parent::__construct($data);
    }

    /**
     * The number of last N input tokens used as ngram to search/match
     * against the previous prompt sequence.
     * This is equal to the N in N-Gram.
     * The default value is 3 if not specified.
     *
     * Generated from protobuf field <code>int32 ngram_size = 1;</code>
     * @return int
     */
    public function getNgramSize()
    {
        return $this->ngram_size;
    }

    /**
     * The number of last N input tokens used as ngram to search/match
     * against the previous prompt sequence.
     * This is equal to the N in N-Gram.
     * The default value is 3 if not specified.
     *
     * Generated from protobuf field <code>int32 ngram_size = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setNgramSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->ngram_size = $var;

        return $this;
    }

}


