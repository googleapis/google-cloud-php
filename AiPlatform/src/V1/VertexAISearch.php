<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/tool.proto

namespace Google\Cloud\AIPlatform\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Retrieve from Vertex AI Search datastore or engine for grounding.
 * datastore and engine are mutually exclusive.
 * See https://cloud.google.com/products/agent-builder
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.VertexAISearch</code>
 */
class VertexAISearch extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Fully-qualified Vertex AI Search data store resource ID.
     * Format:
     * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
     *
     * Generated from protobuf field <code>string datastore = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $datastore = '';
    /**
     * Optional. Fully-qualified Vertex AI Search engine resource ID.
     * Format:
     * `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
     *
     * Generated from protobuf field <code>string engine = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $engine = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $datastore
     *           Optional. Fully-qualified Vertex AI Search data store resource ID.
     *           Format:
     *           `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
     *     @type string $engine
     *           Optional. Fully-qualified Vertex AI Search engine resource ID.
     *           Format:
     *           `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\Tool::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Fully-qualified Vertex AI Search data store resource ID.
     * Format:
     * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
     *
     * Generated from protobuf field <code>string datastore = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDatastore()
    {
        return $this->datastore;
    }

    /**
     * Optional. Fully-qualified Vertex AI Search data store resource ID.
     * Format:
     * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore}`
     *
     * Generated from protobuf field <code>string datastore = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDatastore($var)
    {
        GPBUtil::checkString($var, True);
        $this->datastore = $var;

        return $this;
    }

    /**
     * Optional. Fully-qualified Vertex AI Search engine resource ID.
     * Format:
     * `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
     *
     * Generated from protobuf field <code>string engine = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getEngine()
    {
        return $this->engine;
    }

    /**
     * Optional. Fully-qualified Vertex AI Search engine resource ID.
     * Format:
     * `projects/{project}/locations/{location}/collections/{collection}/engines/{engine}`
     *
     * Generated from protobuf field <code>string engine = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setEngine($var)
    {
        GPBUtil::checkString($var, True);
        $this->engine = $var;

        return $this;
    }

}

