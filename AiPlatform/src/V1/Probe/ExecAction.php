<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/model.proto

namespace Google\Cloud\AIPlatform\V1\Probe;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ExecAction specifies a command to execute.
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.Probe.ExecAction</code>
 */
class ExecAction extends \Google\Protobuf\Internal\Message
{
    /**
     * Command is the command line to execute inside the container, the working
     * directory for the command is root ('/') in the container's filesystem.
     * The command is simply exec'd, it is not run inside a shell, so
     * traditional shell instructions ('|', etc) won't work. To use a shell, you
     * need to explicitly call out to that shell. Exit status of 0 is treated as
     * live/healthy and non-zero is unhealthy.
     *
     * Generated from protobuf field <code>repeated string command = 1;</code>
     */
    private $command;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $command
     *           Command is the command line to execute inside the container, the working
     *           directory for the command is root ('/') in the container's filesystem.
     *           The command is simply exec'd, it is not run inside a shell, so
     *           traditional shell instructions ('|', etc) won't work. To use a shell, you
     *           need to explicitly call out to that shell. Exit status of 0 is treated as
     *           live/healthy and non-zero is unhealthy.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * Command is the command line to execute inside the container, the working
     * directory for the command is root ('/') in the container's filesystem.
     * The command is simply exec'd, it is not run inside a shell, so
     * traditional shell instructions ('|', etc) won't work. To use a shell, you
     * need to explicitly call out to that shell. Exit status of 0 is treated as
     * live/healthy and non-zero is unhealthy.
     *
     * Generated from protobuf field <code>repeated string command = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCommand()
    {
        return $this->command;
    }

    /**
     * Command is the command line to execute inside the container, the working
     * directory for the command is root ('/') in the container's filesystem.
     * The command is simply exec'd, it is not run inside a shell, so
     * traditional shell instructions ('|', etc) won't work. To use a shell, you
     * need to explicitly call out to that shell. Exit status of 0 is treated as
     * live/healthy and non-zero is unhealthy.
     *
     * Generated from protobuf field <code>repeated string command = 1;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setCommand($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->command = $arr;

        return $this;
    }

}


