<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/pipeline_job.proto

namespace Google\Cloud\AIPlatform\V1\PipelineJob\RuntimeConfig;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The type of an input artifact.
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.PipelineJob.RuntimeConfig.InputArtifact</code>
 */
class InputArtifact extends \Google\Protobuf\Internal\Message
{
    protected $kind;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $artifact_id
     *           Artifact resource id from MLMD. Which is the last portion of an
     *           artifact resource
     *           name(projects/{project}/locations/{location}/metadataStores/default/artifacts/{artifact_id}).
     *           The artifact must stay within the same project, location and default
     *           metadatastore as the pipeline.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\PipelineJob::initOnce();
        parent::__construct($data);
    }

    /**
     * Artifact resource id from MLMD. Which is the last portion of an
     * artifact resource
     * name(projects/{project}/locations/{location}/metadataStores/default/artifacts/{artifact_id}).
     * The artifact must stay within the same project, location and default
     * metadatastore as the pipeline.
     *
     * Generated from protobuf field <code>string artifact_id = 1;</code>
     * @return string
     */
    public function getArtifactId()
    {
        return $this->readOneof(1);
    }

    public function hasArtifactId()
    {
        return $this->hasOneof(1);
    }

    /**
     * Artifact resource id from MLMD. Which is the last portion of an
     * artifact resource
     * name(projects/{project}/locations/{location}/metadataStores/default/artifacts/{artifact_id}).
     * The artifact must stay within the same project, location and default
     * metadatastore as the pipeline.
     *
     * Generated from protobuf field <code>string artifact_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setArtifactId($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getKind()
    {
        return $this->whichOneof("kind");
    }

}


