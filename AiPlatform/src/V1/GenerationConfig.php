<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/content.proto

namespace Google\Cloud\AIPlatform\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generation config.
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.GenerationConfig</code>
 */
class GenerationConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Controls the randomness of predictions.
     *
     * Generated from protobuf field <code>optional float temperature = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $temperature = null;
    /**
     * Optional. If specified, nucleus sampling will be used.
     *
     * Generated from protobuf field <code>optional float top_p = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $top_p = null;
    /**
     * Optional. If specified, top-k sampling will be used.
     *
     * Generated from protobuf field <code>optional float top_k = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $top_k = null;
    /**
     * Optional. Number of candidates to generate.
     *
     * Generated from protobuf field <code>optional int32 candidate_count = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $candidate_count = null;
    /**
     * Optional. The maximum number of output tokens to generate per message.
     *
     * Generated from protobuf field <code>optional int32 max_output_tokens = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $max_output_tokens = null;
    /**
     * Optional. Stop sequences.
     *
     * Generated from protobuf field <code>repeated string stop_sequences = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $stop_sequences;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type float $temperature
     *           Optional. Controls the randomness of predictions.
     *     @type float $top_p
     *           Optional. If specified, nucleus sampling will be used.
     *     @type float $top_k
     *           Optional. If specified, top-k sampling will be used.
     *     @type int $candidate_count
     *           Optional. Number of candidates to generate.
     *     @type int $max_output_tokens
     *           Optional. The maximum number of output tokens to generate per message.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $stop_sequences
     *           Optional. Stop sequences.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\Content::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Controls the randomness of predictions.
     *
     * Generated from protobuf field <code>optional float temperature = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return float
     */
    public function getTemperature()
    {
        return isset($this->temperature) ? $this->temperature : 0.0;
    }

    public function hasTemperature()
    {
        return isset($this->temperature);
    }

    public function clearTemperature()
    {
        unset($this->temperature);
    }

    /**
     * Optional. Controls the randomness of predictions.
     *
     * Generated from protobuf field <code>optional float temperature = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param float $var
     * @return $this
     */
    public function setTemperature($var)
    {
        GPBUtil::checkFloat($var);
        $this->temperature = $var;

        return $this;
    }

    /**
     * Optional. If specified, nucleus sampling will be used.
     *
     * Generated from protobuf field <code>optional float top_p = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return float
     */
    public function getTopP()
    {
        return isset($this->top_p) ? $this->top_p : 0.0;
    }

    public function hasTopP()
    {
        return isset($this->top_p);
    }

    public function clearTopP()
    {
        unset($this->top_p);
    }

    /**
     * Optional. If specified, nucleus sampling will be used.
     *
     * Generated from protobuf field <code>optional float top_p = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param float $var
     * @return $this
     */
    public function setTopP($var)
    {
        GPBUtil::checkFloat($var);
        $this->top_p = $var;

        return $this;
    }

    /**
     * Optional. If specified, top-k sampling will be used.
     *
     * Generated from protobuf field <code>optional float top_k = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return float
     */
    public function getTopK()
    {
        return isset($this->top_k) ? $this->top_k : 0.0;
    }

    public function hasTopK()
    {
        return isset($this->top_k);
    }

    public function clearTopK()
    {
        unset($this->top_k);
    }

    /**
     * Optional. If specified, top-k sampling will be used.
     *
     * Generated from protobuf field <code>optional float top_k = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param float $var
     * @return $this
     */
    public function setTopK($var)
    {
        GPBUtil::checkFloat($var);
        $this->top_k = $var;

        return $this;
    }

    /**
     * Optional. Number of candidates to generate.
     *
     * Generated from protobuf field <code>optional int32 candidate_count = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getCandidateCount()
    {
        return isset($this->candidate_count) ? $this->candidate_count : 0;
    }

    public function hasCandidateCount()
    {
        return isset($this->candidate_count);
    }

    public function clearCandidateCount()
    {
        unset($this->candidate_count);
    }

    /**
     * Optional. Number of candidates to generate.
     *
     * Generated from protobuf field <code>optional int32 candidate_count = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setCandidateCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->candidate_count = $var;

        return $this;
    }

    /**
     * Optional. The maximum number of output tokens to generate per message.
     *
     * Generated from protobuf field <code>optional int32 max_output_tokens = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getMaxOutputTokens()
    {
        return isset($this->max_output_tokens) ? $this->max_output_tokens : 0;
    }

    public function hasMaxOutputTokens()
    {
        return isset($this->max_output_tokens);
    }

    public function clearMaxOutputTokens()
    {
        unset($this->max_output_tokens);
    }

    /**
     * Optional. The maximum number of output tokens to generate per message.
     *
     * Generated from protobuf field <code>optional int32 max_output_tokens = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setMaxOutputTokens($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_output_tokens = $var;

        return $this;
    }

    /**
     * Optional. Stop sequences.
     *
     * Generated from protobuf field <code>repeated string stop_sequences = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getStopSequences()
    {
        return $this->stop_sequences;
    }

    /**
     * Optional. Stop sequences.
     *
     * Generated from protobuf field <code>repeated string stop_sequences = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setStopSequences($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->stop_sequences = $arr;

        return $this;
    }

}

