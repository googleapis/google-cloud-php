<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/vertex_rag_data.proto

namespace Google\Cloud\AIPlatform\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Configuration message for RagManagedDb used by RagEngine.
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.RagManagedDbConfig</code>
 */
class RagManagedDbConfig extends \Google\Protobuf\Internal\Message
{
    protected $tier;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\AIPlatform\V1\RagManagedDbConfig\Scaled $scaled
     *           Sets the RagManagedDb to the Scaled tier.
     *     @type \Google\Cloud\AIPlatform\V1\RagManagedDbConfig\Basic $basic
     *           Sets the RagManagedDb to the Basic tier.
     *     @type \Google\Cloud\AIPlatform\V1\RagManagedDbConfig\Unprovisioned $unprovisioned
     *           Sets the RagManagedDb to the Unprovisioned tier.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\VertexRagData::initOnce();
        parent::__construct($data);
    }

    /**
     * Sets the RagManagedDb to the Scaled tier.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagManagedDbConfig.Scaled scaled = 4;</code>
     * @return \Google\Cloud\AIPlatform\V1\RagManagedDbConfig\Scaled|null
     */
    public function getScaled()
    {
        return $this->readOneof(4);
    }

    public function hasScaled()
    {
        return $this->hasOneof(4);
    }

    /**
     * Sets the RagManagedDb to the Scaled tier.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagManagedDbConfig.Scaled scaled = 4;</code>
     * @param \Google\Cloud\AIPlatform\V1\RagManagedDbConfig\Scaled $var
     * @return $this
     */
    public function setScaled($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\AIPlatform\V1\RagManagedDbConfig\Scaled::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Sets the RagManagedDb to the Basic tier.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagManagedDbConfig.Basic basic = 2;</code>
     * @return \Google\Cloud\AIPlatform\V1\RagManagedDbConfig\Basic|null
     */
    public function getBasic()
    {
        return $this->readOneof(2);
    }

    public function hasBasic()
    {
        return $this->hasOneof(2);
    }

    /**
     * Sets the RagManagedDb to the Basic tier.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagManagedDbConfig.Basic basic = 2;</code>
     * @param \Google\Cloud\AIPlatform\V1\RagManagedDbConfig\Basic $var
     * @return $this
     */
    public function setBasic($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\AIPlatform\V1\RagManagedDbConfig\Basic::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Sets the RagManagedDb to the Unprovisioned tier.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagManagedDbConfig.Unprovisioned unprovisioned = 3;</code>
     * @return \Google\Cloud\AIPlatform\V1\RagManagedDbConfig\Unprovisioned|null
     */
    public function getUnprovisioned()
    {
        return $this->readOneof(3);
    }

    public function hasUnprovisioned()
    {
        return $this->hasOneof(3);
    }

    /**
     * Sets the RagManagedDb to the Unprovisioned tier.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagManagedDbConfig.Unprovisioned unprovisioned = 3;</code>
     * @param \Google\Cloud\AIPlatform\V1\RagManagedDbConfig\Unprovisioned $var
     * @return $this
     */
    public function setUnprovisioned($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\AIPlatform\V1\RagManagedDbConfig\Unprovisioned::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getTier()
    {
        return $this->whichOneof("tier");
    }

}

