<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/dataflow/v1beta3/jobs.proto

namespace Google\Cloud\Dataflow\V1beta3;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Additional job parameters that can only be updated during runtime using the
 * projects.jobs.update method. These fields have no effect when specified
 * during job creation.
 *
 * Generated from protobuf message <code>google.dataflow.v1beta3.RuntimeUpdatableParams</code>
 */
class RuntimeUpdatableParams extends \Google\Protobuf\Internal\Message
{
    /**
     * The maximum number of workers to cap autoscaling at. This field is
     * currently only supported for Streaming Engine jobs.
     *
     * Generated from protobuf field <code>optional int32 max_num_workers = 1;</code>
     */
    protected $max_num_workers = null;
    /**
     * The minimum number of workers to scale down to. This field is currently
     * only supported for Streaming Engine jobs.
     *
     * Generated from protobuf field <code>optional int32 min_num_workers = 2;</code>
     */
    protected $min_num_workers = null;
    /**
     * Target worker utilization, compared against the aggregate utilization of
     * the worker pool by autoscaler, to determine upscaling and downscaling when
     * absent other constraints such as backlog.
     * For more information, see
     * [Update an existing
     * pipeline](https://cloud.google.com/dataflow/docs/guides/updating-a-pipeline).
     *
     * Generated from protobuf field <code>optional double worker_utilization_hint = 3;</code>
     */
    protected $worker_utilization_hint = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $max_num_workers
     *           The maximum number of workers to cap autoscaling at. This field is
     *           currently only supported for Streaming Engine jobs.
     *     @type int $min_num_workers
     *           The minimum number of workers to scale down to. This field is currently
     *           only supported for Streaming Engine jobs.
     *     @type float $worker_utilization_hint
     *           Target worker utilization, compared against the aggregate utilization of
     *           the worker pool by autoscaler, to determine upscaling and downscaling when
     *           absent other constraints such as backlog.
     *           For more information, see
     *           [Update an existing
     *           pipeline](https://cloud.google.com/dataflow/docs/guides/updating-a-pipeline).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Dataflow\V1Beta3\Jobs::initOnce();
        parent::__construct($data);
    }

    /**
     * The maximum number of workers to cap autoscaling at. This field is
     * currently only supported for Streaming Engine jobs.
     *
     * Generated from protobuf field <code>optional int32 max_num_workers = 1;</code>
     * @return int
     */
    public function getMaxNumWorkers()
    {
        return isset($this->max_num_workers) ? $this->max_num_workers : 0;
    }

    public function hasMaxNumWorkers()
    {
        return isset($this->max_num_workers);
    }

    public function clearMaxNumWorkers()
    {
        unset($this->max_num_workers);
    }

    /**
     * The maximum number of workers to cap autoscaling at. This field is
     * currently only supported for Streaming Engine jobs.
     *
     * Generated from protobuf field <code>optional int32 max_num_workers = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxNumWorkers($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_num_workers = $var;

        return $this;
    }

    /**
     * The minimum number of workers to scale down to. This field is currently
     * only supported for Streaming Engine jobs.
     *
     * Generated from protobuf field <code>optional int32 min_num_workers = 2;</code>
     * @return int
     */
    public function getMinNumWorkers()
    {
        return isset($this->min_num_workers) ? $this->min_num_workers : 0;
    }

    public function hasMinNumWorkers()
    {
        return isset($this->min_num_workers);
    }

    public function clearMinNumWorkers()
    {
        unset($this->min_num_workers);
    }

    /**
     * The minimum number of workers to scale down to. This field is currently
     * only supported for Streaming Engine jobs.
     *
     * Generated from protobuf field <code>optional int32 min_num_workers = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMinNumWorkers($var)
    {
        GPBUtil::checkInt32($var);
        $this->min_num_workers = $var;

        return $this;
    }

    /**
     * Target worker utilization, compared against the aggregate utilization of
     * the worker pool by autoscaler, to determine upscaling and downscaling when
     * absent other constraints such as backlog.
     * For more information, see
     * [Update an existing
     * pipeline](https://cloud.google.com/dataflow/docs/guides/updating-a-pipeline).
     *
     * Generated from protobuf field <code>optional double worker_utilization_hint = 3;</code>
     * @return float
     */
    public function getWorkerUtilizationHint()
    {
        return isset($this->worker_utilization_hint) ? $this->worker_utilization_hint : 0.0;
    }

    public function hasWorkerUtilizationHint()
    {
        return isset($this->worker_utilization_hint);
    }

    public function clearWorkerUtilizationHint()
    {
        unset($this->worker_utilization_hint);
    }

    /**
     * Target worker utilization, compared against the aggregate utilization of
     * the worker pool by autoscaler, to determine upscaling and downscaling when
     * absent other constraints such as backlog.
     * For more information, see
     * [Update an existing
     * pipeline](https://cloud.google.com/dataflow/docs/guides/updating-a-pipeline).
     *
     * Generated from protobuf field <code>optional double worker_utilization_hint = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setWorkerUtilizationHint($var)
    {
        GPBUtil::checkDouble($var);
        $this->worker_utilization_hint = $var;

        return $this;
    }

}

