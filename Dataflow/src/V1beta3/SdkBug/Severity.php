<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/dataflow/v1beta3/jobs.proto

namespace Google\Cloud\Dataflow\V1beta3\SdkBug;

use UnexpectedValueException;

/**
 * Indicates the severity of the bug. Other severities may be added to this
 * list in the future.
 *
 * Protobuf type <code>google.dataflow.v1beta3.SdkBug.Severity</code>
 */
class Severity
{
    /**
     * A bug of unknown severity.
     *
     * Generated from protobuf enum <code>SEVERITY_UNSPECIFIED = 0;</code>
     */
    const SEVERITY_UNSPECIFIED = 0;
    /**
     * A minor bug that that may reduce reliability or performance for some
     * jobs. Impact will be minimal or non-existent for most jobs.
     *
     * Generated from protobuf enum <code>NOTICE = 1;</code>
     */
    const NOTICE = 1;
    /**
     * A bug that has some likelihood of causing performance degradation, data
     * loss, or job failures.
     *
     * Generated from protobuf enum <code>WARNING = 2;</code>
     */
    const WARNING = 2;
    /**
     * A bug with extremely significant impact. Jobs may fail erroneously,
     * performance may be severely degraded, and data loss may be very likely.
     *
     * Generated from protobuf enum <code>SEVERE = 3;</code>
     */
    const SEVERE = 3;

    private static $valueToName = [
        self::SEVERITY_UNSPECIFIED => 'SEVERITY_UNSPECIFIED',
        self::NOTICE => 'NOTICE',
        self::WARNING => 'WARNING',
        self::SEVERE => 'SEVERE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


