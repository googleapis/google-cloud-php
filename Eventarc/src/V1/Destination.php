<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/eventarc/v1/trigger.proto

namespace Google\Cloud\Eventarc\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents a target of an invocation over HTTP.
 *
 * Generated from protobuf message <code>google.cloud.eventarc.v1.Destination</code>
 */
class Destination extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Network config is used to configure how Eventarc resolves and
     * connect to a destination.
     * This should only be used with HttpEndpoint destination type.
     *
     * Generated from protobuf field <code>.google.cloud.eventarc.v1.NetworkConfig network_config = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $network_config = null;
    protected $descriptor;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Eventarc\V1\CloudRun $cloud_run
     *           Cloud Run fully-managed resource that receives the events. The resource
     *           should be in the same project as the trigger.
     *     @type string $cloud_function
     *           The Cloud Function resource name. Cloud Functions V1 and V2 are
     *           supported.
     *           Format: `projects/{project}/locations/{location}/functions/{function}`
     *           This is a read-only field. Creating Cloud Functions V1/V2 triggers is
     *           only supported via the Cloud Functions product. An error will be returned
     *           if the user sets this value.
     *     @type \Google\Cloud\Eventarc\V1\GKE $gke
     *           A GKE service capable of receiving events. The service should be running
     *           in the same project as the trigger.
     *     @type string $workflow
     *           The resource name of the Workflow whose Executions are triggered by
     *           the events. The Workflow resource should be deployed in the same project
     *           as the trigger.
     *           Format: `projects/{project}/locations/{location}/workflows/{workflow}`
     *     @type \Google\Cloud\Eventarc\V1\HttpEndpoint $http_endpoint
     *           An HTTP endpoint destination described by an URI.
     *     @type \Google\Cloud\Eventarc\V1\NetworkConfig $network_config
     *           Optional. Network config is used to configure how Eventarc resolves and
     *           connect to a destination.
     *           This should only be used with HttpEndpoint destination type.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Eventarc\V1\Trigger::initOnce();
        parent::__construct($data);
    }

    /**
     * Cloud Run fully-managed resource that receives the events. The resource
     * should be in the same project as the trigger.
     *
     * Generated from protobuf field <code>.google.cloud.eventarc.v1.CloudRun cloud_run = 1;</code>
     * @return \Google\Cloud\Eventarc\V1\CloudRun|null
     */
    public function getCloudRun()
    {
        return $this->readOneof(1);
    }

    public function hasCloudRun()
    {
        return $this->hasOneof(1);
    }

    /**
     * Cloud Run fully-managed resource that receives the events. The resource
     * should be in the same project as the trigger.
     *
     * Generated from protobuf field <code>.google.cloud.eventarc.v1.CloudRun cloud_run = 1;</code>
     * @param \Google\Cloud\Eventarc\V1\CloudRun $var
     * @return $this
     */
    public function setCloudRun($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Eventarc\V1\CloudRun::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * The Cloud Function resource name. Cloud Functions V1 and V2 are
     * supported.
     * Format: `projects/{project}/locations/{location}/functions/{function}`
     * This is a read-only field. Creating Cloud Functions V1/V2 triggers is
     * only supported via the Cloud Functions product. An error will be returned
     * if the user sets this value.
     *
     * Generated from protobuf field <code>string cloud_function = 2 [(.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getCloudFunction()
    {
        return $this->readOneof(2);
    }

    public function hasCloudFunction()
    {
        return $this->hasOneof(2);
    }

    /**
     * The Cloud Function resource name. Cloud Functions V1 and V2 are
     * supported.
     * Format: `projects/{project}/locations/{location}/functions/{function}`
     * This is a read-only field. Creating Cloud Functions V1/V2 triggers is
     * only supported via the Cloud Functions product. An error will be returned
     * if the user sets this value.
     *
     * Generated from protobuf field <code>string cloud_function = 2 [(.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setCloudFunction($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * A GKE service capable of receiving events. The service should be running
     * in the same project as the trigger.
     *
     * Generated from protobuf field <code>.google.cloud.eventarc.v1.GKE gke = 3;</code>
     * @return \Google\Cloud\Eventarc\V1\GKE|null
     */
    public function getGke()
    {
        return $this->readOneof(3);
    }

    public function hasGke()
    {
        return $this->hasOneof(3);
    }

    /**
     * A GKE service capable of receiving events. The service should be running
     * in the same project as the trigger.
     *
     * Generated from protobuf field <code>.google.cloud.eventarc.v1.GKE gke = 3;</code>
     * @param \Google\Cloud\Eventarc\V1\GKE $var
     * @return $this
     */
    public function setGke($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Eventarc\V1\GKE::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * The resource name of the Workflow whose Executions are triggered by
     * the events. The Workflow resource should be deployed in the same project
     * as the trigger.
     * Format: `projects/{project}/locations/{location}/workflows/{workflow}`
     *
     * Generated from protobuf field <code>string workflow = 4 [(.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getWorkflow()
    {
        return $this->readOneof(4);
    }

    public function hasWorkflow()
    {
        return $this->hasOneof(4);
    }

    /**
     * The resource name of the Workflow whose Executions are triggered by
     * the events. The Workflow resource should be deployed in the same project
     * as the trigger.
     * Format: `projects/{project}/locations/{location}/workflows/{workflow}`
     *
     * Generated from protobuf field <code>string workflow = 4 [(.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setWorkflow($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * An HTTP endpoint destination described by an URI.
     *
     * Generated from protobuf field <code>.google.cloud.eventarc.v1.HttpEndpoint http_endpoint = 5;</code>
     * @return \Google\Cloud\Eventarc\V1\HttpEndpoint|null
     */
    public function getHttpEndpoint()
    {
        return $this->readOneof(5);
    }

    public function hasHttpEndpoint()
    {
        return $this->hasOneof(5);
    }

    /**
     * An HTTP endpoint destination described by an URI.
     *
     * Generated from protobuf field <code>.google.cloud.eventarc.v1.HttpEndpoint http_endpoint = 5;</code>
     * @param \Google\Cloud\Eventarc\V1\HttpEndpoint $var
     * @return $this
     */
    public function setHttpEndpoint($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Eventarc\V1\HttpEndpoint::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Optional. Network config is used to configure how Eventarc resolves and
     * connect to a destination.
     * This should only be used with HttpEndpoint destination type.
     *
     * Generated from protobuf field <code>.google.cloud.eventarc.v1.NetworkConfig network_config = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\Eventarc\V1\NetworkConfig|null
     */
    public function getNetworkConfig()
    {
        return $this->network_config;
    }

    public function hasNetworkConfig()
    {
        return isset($this->network_config);
    }

    public function clearNetworkConfig()
    {
        unset($this->network_config);
    }

    /**
     * Optional. Network config is used to configure how Eventarc resolves and
     * connect to a destination.
     * This should only be used with HttpEndpoint destination type.
     *
     * Generated from protobuf field <code>.google.cloud.eventarc.v1.NetworkConfig network_config = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\Eventarc\V1\NetworkConfig $var
     * @return $this
     */
    public function setNetworkConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Eventarc\V1\NetworkConfig::class);
        $this->network_config = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getDescriptor()
    {
        return $this->whichOneof("descriptor");
    }

}

