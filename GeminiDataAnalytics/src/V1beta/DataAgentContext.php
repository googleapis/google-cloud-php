<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/geminidataanalytics/v1beta/data_chat_service.proto

namespace Google\Cloud\GeminiDataAnalytics\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Context for the chat request using a data agent.
 *
 * Generated from protobuf message <code>google.cloud.geminidataanalytics.v1beta.DataAgentContext</code>
 */
class DataAgentContext extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the data agent resource.
     *
     * Generated from protobuf field <code>string data_agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $data_agent = '';
    /**
     * Optional. The credentials to use when calling the looker datasource
     * Currently supports both oauth token and api keys based credentials, as
     * described in
     * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $credentials = null;
    /**
     * Optional. Version of context to be used by DCS (e.g. STAGING, PUBLISHED)
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion context_version = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $context_version = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $data_agent
     *           Required. The name of the data agent resource.
     *     @type \Google\Cloud\GeminiDataAnalytics\V1beta\Credentials $credentials
     *           Optional. The credentials to use when calling the looker datasource
     *           Currently supports both oauth token and api keys based credentials, as
     *           described in
     *           https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     *     @type int $context_version
     *           Optional. Version of context to be used by DCS (e.g. STAGING, PUBLISHED)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Geminidataanalytics\V1Beta\DataChatService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The name of the data agent resource.
     *
     * Generated from protobuf field <code>string data_agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getDataAgent()
    {
        return $this->data_agent;
    }

    /**
     * Required. The name of the data agent resource.
     *
     * Generated from protobuf field <code>string data_agent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setDataAgent($var)
    {
        GPBUtil::checkString($var, True);
        $this->data_agent = $var;

        return $this;
    }

    /**
     * Optional. The credentials to use when calling the looker datasource
     * Currently supports both oauth token and api keys based credentials, as
     * described in
     * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\GeminiDataAnalytics\V1beta\Credentials|null
     */
    public function getCredentials()
    {
        return $this->credentials;
    }

    public function hasCredentials()
    {
        return isset($this->credentials);
    }

    public function clearCredentials()
    {
        unset($this->credentials);
    }

    /**
     * Optional. The credentials to use when calling the looker datasource
     * Currently supports both oauth token and api keys based credentials, as
     * described in
     * https://cloud.google.com/looker/docs/api-auth#authentication_with_an_sdk
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.Credentials credentials = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\GeminiDataAnalytics\V1beta\Credentials $var
     * @return $this
     */
    public function setCredentials($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GeminiDataAnalytics\V1beta\Credentials::class);
        $this->credentials = $var;

        return $this;
    }

    /**
     * Optional. Version of context to be used by DCS (e.g. STAGING, PUBLISHED)
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion context_version = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getContextVersion()
    {
        return $this->context_version;
    }

    /**
     * Optional. Version of context to be used by DCS (e.g. STAGING, PUBLISHED)
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.DataAgentContext.ContextVersion context_version = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setContextVersion($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\GeminiDataAnalytics\V1beta\DataAgentContext\ContextVersion::class);
        $this->context_version = $var;

        return $this;
    }

}

