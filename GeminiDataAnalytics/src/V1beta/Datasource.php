<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/geminidataanalytics/v1beta/datasource.proto

namespace Google\Cloud\GeminiDataAnalytics\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A datasource that can be used to answer questions.
 *
 * Generated from protobuf message <code>google.cloud.geminidataanalytics.v1beta.Datasource</code>
 */
class Datasource extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The schema of the datasource.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $schema = null;
    protected $reference;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\GeminiDataAnalytics\V1beta\BigQueryTableReference $bigquery_table_reference
     *           A reference to a BigQuery table.
     *     @type string $studio_datasource_id
     *           A reference to a LookerStudio datasource.
     *     @type \Google\Cloud\GeminiDataAnalytics\V1beta\LookerExploreReference $looker_explore_reference
     *           A reference to a Looker explore.
     *     @type \Google\Cloud\GeminiDataAnalytics\V1beta\Schema $schema
     *           Optional. The schema of the datasource.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Geminidataanalytics\V1Beta\Datasource::initOnce();
        parent::__construct($data);
    }

    /**
     * A reference to a BigQuery table.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;</code>
     * @return \Google\Cloud\GeminiDataAnalytics\V1beta\BigQueryTableReference|null
     */
    public function getBigqueryTableReference()
    {
        return $this->readOneof(1);
    }

    public function hasBigqueryTableReference()
    {
        return $this->hasOneof(1);
    }

    /**
     * A reference to a BigQuery table.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.BigQueryTableReference bigquery_table_reference = 1;</code>
     * @param \Google\Cloud\GeminiDataAnalytics\V1beta\BigQueryTableReference $var
     * @return $this
     */
    public function setBigqueryTableReference($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GeminiDataAnalytics\V1beta\BigQueryTableReference::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * A reference to a LookerStudio datasource.
     *
     * Generated from protobuf field <code>string studio_datasource_id = 2;</code>
     * @return string
     */
    public function getStudioDatasourceId()
    {
        return $this->readOneof(2);
    }

    public function hasStudioDatasourceId()
    {
        return $this->hasOneof(2);
    }

    /**
     * A reference to a LookerStudio datasource.
     *
     * Generated from protobuf field <code>string studio_datasource_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setStudioDatasourceId($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * A reference to a Looker explore.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;</code>
     * @return \Google\Cloud\GeminiDataAnalytics\V1beta\LookerExploreReference|null
     */
    public function getLookerExploreReference()
    {
        return $this->readOneof(4);
    }

    public function hasLookerExploreReference()
    {
        return $this->hasOneof(4);
    }

    /**
     * A reference to a Looker explore.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.LookerExploreReference looker_explore_reference = 4;</code>
     * @param \Google\Cloud\GeminiDataAnalytics\V1beta\LookerExploreReference $var
     * @return $this
     */
    public function setLookerExploreReference($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GeminiDataAnalytics\V1beta\LookerExploreReference::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Optional. The schema of the datasource.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\GeminiDataAnalytics\V1beta\Schema|null
     */
    public function getSchema()
    {
        return $this->schema;
    }

    public function hasSchema()
    {
        return isset($this->schema);
    }

    public function clearSchema()
    {
        unset($this->schema);
    }

    /**
     * Optional. The schema of the datasource.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.Schema schema = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\GeminiDataAnalytics\V1beta\Schema $var
     * @return $this
     */
    public function setSchema($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GeminiDataAnalytics\V1beta\Schema::class);
        $this->schema = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getReference()
    {
        return $this->whichOneof("reference");
    }

}

