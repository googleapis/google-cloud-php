<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/geminidataanalytics/v1beta/data_agent.proto

namespace Google\Cloud\GeminiDataAnalytics\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message describing a DataAgent object.
 *
 * Generated from protobuf message <code>google.cloud.geminidataanalytics.v1beta.DataAgent</code>
 */
class DataAgent extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Identifier. The unique resource name of a Agent.
     * Format:
     * `projects/{project}/locations/{location}/dataAgents/{data_agent_id}`
     * `{data_agent}` is the resource id and should be 63 characters or less and
     * must match the format described in
     * https://google.aip.dev/122#resource-id-segments
     * Example: `projects/1234567890/locations/us-central1/dataAgents/my-agent`.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IDENTIFIER];</code>
     */
    protected $name = '';
    /**
     * Optional. User friendly display name.
     * * Must be between 1-256 characters.
     *
     * Generated from protobuf field <code>string display_name = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $display_name = '';
    /**
     * Optional. Description of the agent.
     * * Must be between 1-1024 characters.
     *
     * Generated from protobuf field <code>string description = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $description = '';
    /**
     * Optional. Labels to help users filter related agents.
     * E.g. "sales", "business", "etl", etc.
     * Note labels are only used for filtering and not for policies.
     * See https://cloud.google.com/resource-manager/docs/labels-overview for more
     * details on label usage.
     *
     * Generated from protobuf field <code>map<string, string> labels = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $labels;
    /**
     * Output only. The time when the data agent was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $create_time = null;
    /**
     * Output only. The time when the data agent was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $update_time = null;
    /**
     * Output only. [Output only] The time the data agent was soft deleted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp delete_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $delete_time = null;
    /**
     * Output only. Timestamp in UTC of when this data agent is considered
     * expired. This is *always* provided on output, regardless of what was sent
     * on input.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp purge_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $purge_time = null;
    protected $type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\GeminiDataAnalytics\V1beta\DataAnalyticsAgent $data_analytics_agent
     *           Data analytics agent.
     *     @type string $name
     *           Optional. Identifier. The unique resource name of a Agent.
     *           Format:
     *           `projects/{project}/locations/{location}/dataAgents/{data_agent_id}`
     *           `{data_agent}` is the resource id and should be 63 characters or less and
     *           must match the format described in
     *           https://google.aip.dev/122#resource-id-segments
     *           Example: `projects/1234567890/locations/us-central1/dataAgents/my-agent`.
     *     @type string $display_name
     *           Optional. User friendly display name.
     *           * Must be between 1-256 characters.
     *     @type string $description
     *           Optional. Description of the agent.
     *           * Must be between 1-1024 characters.
     *     @type array|\Google\Protobuf\Internal\MapField $labels
     *           Optional. Labels to help users filter related agents.
     *           E.g. "sales", "business", "etl", etc.
     *           Note labels are only used for filtering and not for policies.
     *           See https://cloud.google.com/resource-manager/docs/labels-overview for more
     *           details on label usage.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. The time when the data agent was created.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. The time when the data agent was last updated.
     *     @type \Google\Protobuf\Timestamp $delete_time
     *           Output only. [Output only] The time the data agent was soft deleted.
     *     @type \Google\Protobuf\Timestamp $purge_time
     *           Output only. Timestamp in UTC of when this data agent is considered
     *           expired. This is *always* provided on output, regardless of what was sent
     *           on input.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Geminidataanalytics\V1Beta\DataAgent::initOnce();
        parent::__construct($data);
    }

    /**
     * Data analytics agent.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.DataAnalyticsAgent data_analytics_agent = 101;</code>
     * @return \Google\Cloud\GeminiDataAnalytics\V1beta\DataAnalyticsAgent|null
     */
    public function getDataAnalyticsAgent()
    {
        return $this->readOneof(101);
    }

    public function hasDataAnalyticsAgent()
    {
        return $this->hasOneof(101);
    }

    /**
     * Data analytics agent.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.DataAnalyticsAgent data_analytics_agent = 101;</code>
     * @param \Google\Cloud\GeminiDataAnalytics\V1beta\DataAnalyticsAgent $var
     * @return $this
     */
    public function setDataAnalyticsAgent($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GeminiDataAnalytics\V1beta\DataAnalyticsAgent::class);
        $this->writeOneof(101, $var);

        return $this;
    }

    /**
     * Optional. Identifier. The unique resource name of a Agent.
     * Format:
     * `projects/{project}/locations/{location}/dataAgents/{data_agent_id}`
     * `{data_agent}` is the resource id and should be 63 characters or less and
     * must match the format described in
     * https://google.aip.dev/122#resource-id-segments
     * Example: `projects/1234567890/locations/us-central1/dataAgents/my-agent`.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IDENTIFIER];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Optional. Identifier. The unique resource name of a Agent.
     * Format:
     * `projects/{project}/locations/{location}/dataAgents/{data_agent_id}`
     * `{data_agent}` is the resource id and should be 63 characters or less and
     * must match the format described in
     * https://google.aip.dev/122#resource-id-segments
     * Example: `projects/1234567890/locations/us-central1/dataAgents/my-agent`.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IDENTIFIER];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. User friendly display name.
     * * Must be between 1-256 characters.
     *
     * Generated from protobuf field <code>string display_name = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Optional. User friendly display name.
     * * Must be between 1-256 characters.
     *
     * Generated from protobuf field <code>string display_name = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * Optional. Description of the agent.
     * * Must be between 1-1024 characters.
     *
     * Generated from protobuf field <code>string description = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Optional. Description of the agent.
     * * Must be between 1-1024 characters.
     *
     * Generated from protobuf field <code>string description = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Optional. Labels to help users filter related agents.
     * E.g. "sales", "business", "etl", etc.
     * Note labels are only used for filtering and not for policies.
     * See https://cloud.google.com/resource-manager/docs/labels-overview for more
     * details on label usage.
     *
     * Generated from protobuf field <code>map<string, string> labels = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * Optional. Labels to help users filter related agents.
     * E.g. "sales", "business", "etl", etc.
     * Note labels are only used for filtering and not for policies.
     * See https://cloud.google.com/resource-manager/docs/labels-overview for more
     * details on label usage.
     *
     * Generated from protobuf field <code>map<string, string> labels = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setLabels($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;

        return $this;
    }

    /**
     * Output only. The time when the data agent was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. The time when the data agent was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * Output only. The time when the data agent was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. The time when the data agent was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Output only. [Output only] The time the data agent was soft deleted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp delete_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getDeleteTime()
    {
        return $this->delete_time;
    }

    public function hasDeleteTime()
    {
        return isset($this->delete_time);
    }

    public function clearDeleteTime()
    {
        unset($this->delete_time);
    }

    /**
     * Output only. [Output only] The time the data agent was soft deleted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp delete_time = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setDeleteTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->delete_time = $var;

        return $this;
    }

    /**
     * Output only. Timestamp in UTC of when this data agent is considered
     * expired. This is *always* provided on output, regardless of what was sent
     * on input.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp purge_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getPurgeTime()
    {
        return $this->purge_time;
    }

    public function hasPurgeTime()
    {
        return isset($this->purge_time);
    }

    public function clearPurgeTime()
    {
        unset($this->purge_time);
    }

    /**
     * Output only. Timestamp in UTC of when this data agent is considered
     * expired. This is *always* provided on output, regardless of what was sent
     * on input.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp purge_time = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setPurgeTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->purge_time = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getType()
    {
        return $this->whichOneof("type");
    }

}

