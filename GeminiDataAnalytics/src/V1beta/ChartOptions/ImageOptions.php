<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/geminidataanalytics/v1beta/context.proto

namespace Google\Cloud\GeminiDataAnalytics\V1beta\ChartOptions;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Options for rendering images of generated charts.
 *
 * Generated from protobuf message <code>google.cloud.geminidataanalytics.v1beta.ChartOptions.ImageOptions</code>
 */
class ImageOptions extends \Google\Protobuf\Internal\Message
{
    protected $kind;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\GeminiDataAnalytics\V1beta\ChartOptions\ImageOptions\NoImage $no_image
     *           No image.
     *     @type \Google\Cloud\GeminiDataAnalytics\V1beta\ChartOptions\ImageOptions\SvgOptions $svg
     *           SVG format.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Geminidataanalytics\V1Beta\Context::initOnce();
        parent::__construct($data);
    }

    /**
     * No image.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.ChartOptions.ImageOptions.NoImage no_image = 1;</code>
     * @return \Google\Cloud\GeminiDataAnalytics\V1beta\ChartOptions\ImageOptions\NoImage|null
     */
    public function getNoImage()
    {
        return $this->readOneof(1);
    }

    public function hasNoImage()
    {
        return $this->hasOneof(1);
    }

    /**
     * No image.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.ChartOptions.ImageOptions.NoImage no_image = 1;</code>
     * @param \Google\Cloud\GeminiDataAnalytics\V1beta\ChartOptions\ImageOptions\NoImage $var
     * @return $this
     */
    public function setNoImage($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GeminiDataAnalytics\V1beta\ChartOptions\ImageOptions\NoImage::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * SVG format.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.ChartOptions.ImageOptions.SvgOptions svg = 2;</code>
     * @return \Google\Cloud\GeminiDataAnalytics\V1beta\ChartOptions\ImageOptions\SvgOptions|null
     */
    public function getSvg()
    {
        return $this->readOneof(2);
    }

    public function hasSvg()
    {
        return $this->hasOneof(2);
    }

    /**
     * SVG format.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.ChartOptions.ImageOptions.SvgOptions svg = 2;</code>
     * @param \Google\Cloud\GeminiDataAnalytics\V1beta\ChartOptions\ImageOptions\SvgOptions $var
     * @return $this
     */
    public function setSvg($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GeminiDataAnalytics\V1beta\ChartOptions\ImageOptions\SvgOptions::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getKind()
    {
        return $this->whichOneof("kind");
    }

}


