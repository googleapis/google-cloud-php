<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/geminidataanalytics/v1beta/datasource.proto

namespace Google\Cloud\GeminiDataAnalytics\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A filter on a datasource's underlying data. Filter syntax documentation:
 * https://cloud.google.com/looker/docs/filter-expressions
 *
 * Generated from protobuf message <code>google.cloud.geminidataanalytics.v1beta.DataFilter</code>
 */
class DataFilter extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The field to filter on. For example: ["event_date",
     * "customer_id", "product_category"]
     *
     * Generated from protobuf field <code>string field = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $field = '';
    /**
     * Optional. The default value used for this filter if the filter is not
     * overridden in a query. For example: ["after 2024-01-01", "123", "-fashion"]
     *
     * Generated from protobuf field <code>string value = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $value = '';
    /**
     * Optional. The type of filter present on a datasource, such as
     * ALWAYS_FILTER.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.DataFilterType type = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $field
     *           Optional. The field to filter on. For example: ["event_date",
     *           "customer_id", "product_category"]
     *     @type string $value
     *           Optional. The default value used for this filter if the filter is not
     *           overridden in a query. For example: ["after 2024-01-01", "123", "-fashion"]
     *     @type int $type
     *           Optional. The type of filter present on a datasource, such as
     *           ALWAYS_FILTER.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Geminidataanalytics\V1Beta\Datasource::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The field to filter on. For example: ["event_date",
     * "customer_id", "product_category"]
     *
     * Generated from protobuf field <code>string field = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getField()
    {
        return $this->field;
    }

    /**
     * Optional. The field to filter on. For example: ["event_date",
     * "customer_id", "product_category"]
     *
     * Generated from protobuf field <code>string field = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setField($var)
    {
        GPBUtil::checkString($var, True);
        $this->field = $var;

        return $this;
    }

    /**
     * Optional. The default value used for this filter if the filter is not
     * overridden in a query. For example: ["after 2024-01-01", "123", "-fashion"]
     *
     * Generated from protobuf field <code>string value = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * Optional. The default value used for this filter if the filter is not
     * overridden in a query. For example: ["after 2024-01-01", "123", "-fashion"]
     *
     * Generated from protobuf field <code>string value = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->value = $var;

        return $this;
    }

    /**
     * Optional. The type of filter present on a datasource, such as
     * ALWAYS_FILTER.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.DataFilterType type = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Optional. The type of filter present on a datasource, such as
     * ALWAYS_FILTER.
     *
     * Generated from protobuf field <code>.google.cloud.geminidataanalytics.v1beta.DataFilterType type = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\GeminiDataAnalytics\V1beta\DataFilterType::class);
        $this->type = $var;

        return $this;
    }

}

