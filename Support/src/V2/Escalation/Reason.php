<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/support/v2/escalation.proto

namespace Google\Cloud\Support\V2\Escalation;

use UnexpectedValueException;

/**
 * An enum detailing the possible reasons a case may be escalated.
 *
 * Protobuf type <code>google.cloud.support.v2.Escalation.Reason</code>
 */
class Reason
{
    /**
     * The escalation reason is in an unknown state or has not been specified.
     *
     * Generated from protobuf enum <code>REASON_UNSPECIFIED = 0;</code>
     */
    const REASON_UNSPECIFIED = 0;
    /**
     * The case is taking too long to resolve.
     *
     * Generated from protobuf enum <code>RESOLUTION_TIME = 1;</code>
     */
    const RESOLUTION_TIME = 1;
    /**
     * The support agent does not have the expertise required to successfully
     * resolve the issue.
     *
     * Generated from protobuf enum <code>TECHNICAL_EXPERTISE = 2;</code>
     */
    const TECHNICAL_EXPERTISE = 2;
    /**
     * The issue is having a significant business impact.
     *
     * Generated from protobuf enum <code>BUSINESS_IMPACT = 3;</code>
     */
    const BUSINESS_IMPACT = 3;

    private static $valueToName = [
        self::REASON_UNSPECIFIED => 'REASON_UNSPECIFIED',
        self::RESOLUTION_TIME => 'RESOLUTION_TIME',
        self::TECHNICAL_EXPERTISE => 'TECHNICAL_EXPERTISE',
        self::BUSINESS_IMPACT => 'BUSINESS_IMPACT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


