<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/support/v2/case_service.proto

namespace Google\Cloud\Support\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The request message for the ListCases endpoint.
 *
 * Generated from protobuf message <code>google.cloud.support.v2.ListCasesRequest</code>
 */
class ListCasesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The fully qualified name of parent resource to list cases under.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * An expression written in filter language. If non-empty, the query returns
     * the cases that match the filter. Else, the query doesn't filter the cases.
     * Filter expressions use the following fields with the operators equals (`=`)
     * and `AND`:
     * - `state`: The accepted values are `OPEN` or `CLOSED`.
     * - `priority`: The accepted values are `P0`, `P1`, `P2`, `P3`, or `P4`. You
     * can specify multiple values for priority using the `OR` operator. For
     * example, `priority=P1 OR priority=P2`.
     * - `creator.email`: The email address of the case creator.
     * Examples:
     * - `state=CLOSED`
     * - `state=OPEN AND creator.email="tester&#64;example.com"`
     * - `state=OPEN AND (priority=P0 OR priority=P1)`
     *
     * Generated from protobuf field <code>string filter = 2;</code>
     */
    protected $filter = '';
    /**
     * The maximum number of cases fetched with each request. Defaults to 10.
     *
     * Generated from protobuf field <code>int32 page_size = 4;</code>
     */
    protected $page_size = 0;
    /**
     * A token identifying the page of results to return. If unspecified, the
     * first page is retrieved.
     *
     * Generated from protobuf field <code>string page_token = 5;</code>
     */
    protected $page_token = '';

    /**
     * @param string $parent Required. The fully qualified name of parent resource to list cases under. Please see
     *                       {@see CaseServiceClient::projectName()} for help formatting this field.
     *
     * @return \Google\Cloud\Support\V2\ListCasesRequest
     *
     * @experimental
     */
    public static function build(string $parent): self
    {
        return (new self())
            ->setParent($parent);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The fully qualified name of parent resource to list cases under.
     *     @type string $filter
     *           An expression written in filter language. If non-empty, the query returns
     *           the cases that match the filter. Else, the query doesn't filter the cases.
     *           Filter expressions use the following fields with the operators equals (`=`)
     *           and `AND`:
     *           - `state`: The accepted values are `OPEN` or `CLOSED`.
     *           - `priority`: The accepted values are `P0`, `P1`, `P2`, `P3`, or `P4`. You
     *           can specify multiple values for priority using the `OR` operator. For
     *           example, `priority=P1 OR priority=P2`.
     *           - `creator.email`: The email address of the case creator.
     *           Examples:
     *           - `state=CLOSED`
     *           - `state=OPEN AND creator.email="tester&#64;example.com"`
     *           - `state=OPEN AND (priority=P0 OR priority=P1)`
     *     @type int $page_size
     *           The maximum number of cases fetched with each request. Defaults to 10.
     *     @type string $page_token
     *           A token identifying the page of results to return. If unspecified, the
     *           first page is retrieved.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Support\V2\CaseService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The fully qualified name of parent resource to list cases under.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The fully qualified name of parent resource to list cases under.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * An expression written in filter language. If non-empty, the query returns
     * the cases that match the filter. Else, the query doesn't filter the cases.
     * Filter expressions use the following fields with the operators equals (`=`)
     * and `AND`:
     * - `state`: The accepted values are `OPEN` or `CLOSED`.
     * - `priority`: The accepted values are `P0`, `P1`, `P2`, `P3`, or `P4`. You
     * can specify multiple values for priority using the `OR` operator. For
     * example, `priority=P1 OR priority=P2`.
     * - `creator.email`: The email address of the case creator.
     * Examples:
     * - `state=CLOSED`
     * - `state=OPEN AND creator.email="tester&#64;example.com"`
     * - `state=OPEN AND (priority=P0 OR priority=P1)`
     *
     * Generated from protobuf field <code>string filter = 2;</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * An expression written in filter language. If non-empty, the query returns
     * the cases that match the filter. Else, the query doesn't filter the cases.
     * Filter expressions use the following fields with the operators equals (`=`)
     * and `AND`:
     * - `state`: The accepted values are `OPEN` or `CLOSED`.
     * - `priority`: The accepted values are `P0`, `P1`, `P2`, `P3`, or `P4`. You
     * can specify multiple values for priority using the `OR` operator. For
     * example, `priority=P1 OR priority=P2`.
     * - `creator.email`: The email address of the case creator.
     * Examples:
     * - `state=CLOSED`
     * - `state=OPEN AND creator.email="tester&#64;example.com"`
     * - `state=OPEN AND (priority=P0 OR priority=P1)`
     *
     * Generated from protobuf field <code>string filter = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

    /**
     * The maximum number of cases fetched with each request. Defaults to 10.
     *
     * Generated from protobuf field <code>int32 page_size = 4;</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * The maximum number of cases fetched with each request. Defaults to 10.
     *
     * Generated from protobuf field <code>int32 page_size = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * A token identifying the page of results to return. If unspecified, the
     * first page is retrieved.
     *
     * Generated from protobuf field <code>string page_token = 5;</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * A token identifying the page of results to return. If unspecified, the
     * first page is retrieved.
     *
     * Generated from protobuf field <code>string page_token = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

}

