<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/commerce/consumer/procurement/v1/license_management_service.proto

namespace Google\Cloud\Commerce\Consumer\Procurement\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A license pool represents a pool of licenses that can be assigned to users.
 *
 * Generated from protobuf message <code>google.cloud.commerce.consumer.procurement.v1.LicensePool</code>
 */
class LicensePool extends \Google\Protobuf\Internal\Message
{
    /**
     * Identifier. Format:
     * `billingAccounts/{billing_account}/orders/{order}/licensePool`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     */
    protected $name = '';
    /**
     * Required. Assignment protocol for the license pool.
     *
     * Generated from protobuf field <code>.google.cloud.commerce.consumer.procurement.v1.AssignmentProtocol license_assignment_protocol = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $license_assignment_protocol = null;
    /**
     * Output only. Licenses count that are available to be assigned.
     *
     * Generated from protobuf field <code>int32 available_license_count = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $available_license_count = 0;
    /**
     * Output only. Total number of licenses in the pool.
     *
     * Generated from protobuf field <code>int32 total_license_count = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $total_license_count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Identifier. Format:
     *           `billingAccounts/{billing_account}/orders/{order}/licensePool`
     *     @type \Google\Cloud\Commerce\Consumer\Procurement\V1\AssignmentProtocol $license_assignment_protocol
     *           Required. Assignment protocol for the license pool.
     *     @type int $available_license_count
     *           Output only. Licenses count that are available to be assigned.
     *     @type int $total_license_count
     *           Output only. Total number of licenses in the pool.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Commerce\Consumer\Procurement\V1\LicenseManagementService::initOnce();
        parent::__construct($data);
    }

    /**
     * Identifier. Format:
     * `billingAccounts/{billing_account}/orders/{order}/licensePool`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Identifier. Format:
     * `billingAccounts/{billing_account}/orders/{order}/licensePool`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Required. Assignment protocol for the license pool.
     *
     * Generated from protobuf field <code>.google.cloud.commerce.consumer.procurement.v1.AssignmentProtocol license_assignment_protocol = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\Commerce\Consumer\Procurement\V1\AssignmentProtocol|null
     */
    public function getLicenseAssignmentProtocol()
    {
        return $this->license_assignment_protocol;
    }

    public function hasLicenseAssignmentProtocol()
    {
        return isset($this->license_assignment_protocol);
    }

    public function clearLicenseAssignmentProtocol()
    {
        unset($this->license_assignment_protocol);
    }

    /**
     * Required. Assignment protocol for the license pool.
     *
     * Generated from protobuf field <code>.google.cloud.commerce.consumer.procurement.v1.AssignmentProtocol license_assignment_protocol = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Commerce\Consumer\Procurement\V1\AssignmentProtocol $var
     * @return $this
     */
    public function setLicenseAssignmentProtocol($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Commerce\Consumer\Procurement\V1\AssignmentProtocol::class);
        $this->license_assignment_protocol = $var;

        return $this;
    }

    /**
     * Output only. Licenses count that are available to be assigned.
     *
     * Generated from protobuf field <code>int32 available_license_count = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getAvailableLicenseCount()
    {
        return $this->available_license_count;
    }

    /**
     * Output only. Licenses count that are available to be assigned.
     *
     * Generated from protobuf field <code>int32 available_license_count = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setAvailableLicenseCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->available_license_count = $var;

        return $this;
    }

    /**
     * Output only. Total number of licenses in the pool.
     *
     * Generated from protobuf field <code>int32 total_license_count = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getTotalLicenseCount()
    {
        return $this->total_license_count;
    }

    /**
     * Output only. Total number of licenses in the pool.
     *
     * Generated from protobuf field <code>int32 total_license_count = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setTotalLicenseCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->total_license_count = $var;

        return $this;
    }

}

