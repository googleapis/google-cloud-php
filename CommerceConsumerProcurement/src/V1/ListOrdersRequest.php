<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/commerce/consumer/procurement/v1/procurement_service.proto

namespace Google\Cloud\Commerce\Consumer\Procurement\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [ConsumerProcurementService.ListOrders][google.cloud.commerce.consumer.procurement.v1.ConsumerProcurementService.ListOrders].
 *
 * Generated from protobuf message <code>google.cloud.commerce.consumer.procurement.v1.ListOrdersRequest</code>
 */
class ListOrdersRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The parent resource to query for orders.
     * This field has the form `billingAccounts/{billing-account-id}`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $parent = '';
    /**
     * The maximum number of entries requested.
     * The default page size is 25 and the maximum page size is 200.
     *
     * Generated from protobuf field <code>int32 page_size = 2;</code>
     */
    protected $page_size = 0;
    /**
     * The token for fetching the next page.
     *
     * Generated from protobuf field <code>string page_token = 3;</code>
     */
    protected $page_token = '';
    /**
     * Filter that you can use to limit the list request.
     * A query string that can match a selected set of attributes
     * with string values. For example, `display_name=abc`.
     * Supported query attributes are
     * * `display_name`
     * If the query contains special characters other than letters,
     * underscore, or digits, the phrase must be quoted with double quotes. For
     * example, `display_name="foo:bar"`, where the display name needs to be
     * quoted because it contains special character colon.
     * Queries can be combined with `OR`, and `NOT` to form more complex queries.
     * You can also group them to force a desired evaluation order.
     * For example, `display_name=abc OR display_name=def`.
     *
     * Generated from protobuf field <code>string filter = 4;</code>
     */
    protected $filter = '';

    /**
     * @param string $parent Required. The parent resource to query for orders.
     *                       This field has the form `billingAccounts/{billing-account-id}`.
     *
     * @return \Google\Cloud\Commerce\Consumer\Procurement\V1\ListOrdersRequest
     *
     * @experimental
     */
    public static function build(string $parent): self
    {
        return (new self())
            ->setParent($parent);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The parent resource to query for orders.
     *           This field has the form `billingAccounts/{billing-account-id}`.
     *     @type int $page_size
     *           The maximum number of entries requested.
     *           The default page size is 25 and the maximum page size is 200.
     *     @type string $page_token
     *           The token for fetching the next page.
     *     @type string $filter
     *           Filter that you can use to limit the list request.
     *           A query string that can match a selected set of attributes
     *           with string values. For example, `display_name=abc`.
     *           Supported query attributes are
     *           * `display_name`
     *           If the query contains special characters other than letters,
     *           underscore, or digits, the phrase must be quoted with double quotes. For
     *           example, `display_name="foo:bar"`, where the display name needs to be
     *           quoted because it contains special character colon.
     *           Queries can be combined with `OR`, and `NOT` to form more complex queries.
     *           You can also group them to force a desired evaluation order.
     *           For example, `display_name=abc OR display_name=def`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Commerce\Consumer\Procurement\V1\ProcurementService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The parent resource to query for orders.
     * This field has the form `billingAccounts/{billing-account-id}`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The parent resource to query for orders.
     * This field has the form `billingAccounts/{billing-account-id}`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * The maximum number of entries requested.
     * The default page size is 25 and the maximum page size is 200.
     *
     * Generated from protobuf field <code>int32 page_size = 2;</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * The maximum number of entries requested.
     * The default page size is 25 and the maximum page size is 200.
     *
     * Generated from protobuf field <code>int32 page_size = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * The token for fetching the next page.
     *
     * Generated from protobuf field <code>string page_token = 3;</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * The token for fetching the next page.
     *
     * Generated from protobuf field <code>string page_token = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

    /**
     * Filter that you can use to limit the list request.
     * A query string that can match a selected set of attributes
     * with string values. For example, `display_name=abc`.
     * Supported query attributes are
     * * `display_name`
     * If the query contains special characters other than letters,
     * underscore, or digits, the phrase must be quoted with double quotes. For
     * example, `display_name="foo:bar"`, where the display name needs to be
     * quoted because it contains special character colon.
     * Queries can be combined with `OR`, and `NOT` to form more complex queries.
     * You can also group them to force a desired evaluation order.
     * For example, `display_name=abc OR display_name=def`.
     *
     * Generated from protobuf field <code>string filter = 4;</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Filter that you can use to limit the list request.
     * A query string that can match a selected set of attributes
     * with string values. For example, `display_name=abc`.
     * Supported query attributes are
     * * `display_name`
     * If the query contains special characters other than letters,
     * underscore, or digits, the phrase must be quoted with double quotes. For
     * example, `display_name="foo:bar"`, where the display name needs to be
     * quoted because it contains special character colon.
     * Queries can be combined with `OR`, and `NOT` to form more complex queries.
     * You can also group them to force a desired evaluation order.
     * For example, `display_name=abc OR display_name=def`.
     *
     * Generated from protobuf field <code>string filter = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

}

