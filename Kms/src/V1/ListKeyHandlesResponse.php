<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/kms/v1/autokey.proto

namespace Google\Cloud\Kms\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Response message for
 * [Autokey.ListKeyHandles][google.cloud.kms.v1.Autokey.ListKeyHandles].
 *
 * Generated from protobuf message <code>google.cloud.kms.v1.ListKeyHandlesResponse</code>
 */
class ListKeyHandlesResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Resulting [KeyHandles][google.cloud.kms.v1.KeyHandle].
     *
     * Generated from protobuf field <code>repeated .google.cloud.kms.v1.KeyHandle key_handles = 1;</code>
     */
    private $key_handles;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Google\Cloud\Kms\V1\KeyHandle>|\Google\Protobuf\Internal\RepeatedField $key_handles
     *           Resulting [KeyHandles][google.cloud.kms.v1.KeyHandle].
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Kms\V1\Autokey::initOnce();
        parent::__construct($data);
    }

    /**
     * Resulting [KeyHandles][google.cloud.kms.v1.KeyHandle].
     *
     * Generated from protobuf field <code>repeated .google.cloud.kms.v1.KeyHandle key_handles = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getKeyHandles()
    {
        return $this->key_handles;
    }

    /**
     * Resulting [KeyHandles][google.cloud.kms.v1.KeyHandle].
     *
     * Generated from protobuf field <code>repeated .google.cloud.kms.v1.KeyHandle key_handles = 1;</code>
     * @param array<\Google\Cloud\Kms\V1\KeyHandle>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setKeyHandles($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Kms\V1\KeyHandle::class);
        $this->key_handles = $arr;

        return $this;
    }

}

