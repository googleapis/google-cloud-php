<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/kms/v1/service.proto

namespace Google\Cloud\Kms\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Response message for
 * [KeyManagementService.RawEncrypt][google.cloud.kms.v1.KeyManagementService.RawEncrypt].
 *
 * Generated from protobuf message <code>google.cloud.kms.v1.RawEncryptResponse</code>
 */
class RawEncryptResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * The encrypted data. In the case of AES-GCM, the authentication tag
     * is the [tag_length][google.cloud.kms.v1.RawEncryptResponse.tag_length]
     * bytes at the end of this field.
     *
     * Generated from protobuf field <code>bytes ciphertext = 1;</code>
     */
    private $ciphertext = '';
    /**
     * The initialization vector (IV) generated by the service during
     * encryption. This value must be stored and provided in
     * [RawDecryptRequest.initialization_vector][google.cloud.kms.v1.RawDecryptRequest.initialization_vector]
     * at decryption time.
     *
     * Generated from protobuf field <code>bytes initialization_vector = 2;</code>
     */
    private $initialization_vector = '';
    /**
     * The length of the authentication tag that is appended to
     * the end of the ciphertext.
     *
     * Generated from protobuf field <code>int32 tag_length = 3;</code>
     */
    private $tag_length = 0;
    /**
     * Integrity verification field. A CRC32C checksum of the returned
     * [RawEncryptResponse.ciphertext][google.cloud.kms.v1.RawEncryptResponse.ciphertext].
     * An integrity check of ciphertext can be performed by computing the CRC32C
     * checksum of ciphertext and comparing your results to this field. Discard
     * the response in case of non-matching checksum values, and perform a limited
     * number of retries. A persistent mismatch may indicate an issue in your
     * computation of the CRC32C checksum. Note: This field is defined as int64
     * for reasons of compatibility across different languages. However, it is a
     * non-negative integer, which will never exceed 2^32-1, and can be safely
     * downconverted to uint32 in languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value ciphertext_crc32c = 4;</code>
     */
    private $ciphertext_crc32c = null;
    /**
     * Integrity verification field. A CRC32C checksum of the returned
     * [RawEncryptResponse.initialization_vector][google.cloud.kms.v1.RawEncryptResponse.initialization_vector].
     * An integrity check of initialization_vector can be performed by computing
     * the CRC32C checksum of initialization_vector and comparing your results to
     * this field. Discard the response in case of non-matching checksum values,
     * and perform a limited number of retries. A persistent mismatch may indicate
     * an issue in your computation of the CRC32C checksum. Note: This field is
     * defined as int64 for reasons of compatibility across different languages.
     * However, it is a non-negative integer, which will never exceed 2^32-1, and
     * can be safely downconverted to uint32 in languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value initialization_vector_crc32c = 5;</code>
     */
    private $initialization_vector_crc32c = null;
    /**
     * Integrity verification field. A flag indicating whether
     * [RawEncryptRequest.plaintext_crc32c][google.cloud.kms.v1.RawEncryptRequest.plaintext_crc32c]
     * was received by
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] and used
     * for the integrity verification of the plaintext. A false value of this
     * field indicates either that
     * [RawEncryptRequest.plaintext_crc32c][google.cloud.kms.v1.RawEncryptRequest.plaintext_crc32c]
     * was left unset or that it was not delivered to
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService]. If you've
     * set
     * [RawEncryptRequest.plaintext_crc32c][google.cloud.kms.v1.RawEncryptRequest.plaintext_crc32c]
     * but this field is still false, discard the response and perform a limited
     * number of retries.
     *
     * Generated from protobuf field <code>bool verified_plaintext_crc32c = 6;</code>
     */
    private $verified_plaintext_crc32c = false;
    /**
     * Integrity verification field. A flag indicating whether
     * [RawEncryptRequest.additional_authenticated_data_crc32c][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data_crc32c]
     * was received by
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] and used
     * for the integrity verification of additional_authenticated_data. A false
     * value of this field indicates either that //
     * [RawEncryptRequest.additional_authenticated_data_crc32c][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data_crc32c]
     * was left unset or that it was not delivered to
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService]. If you've
     * set
     * [RawEncryptRequest.additional_authenticated_data_crc32c][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data_crc32c]
     * but this field is still false, discard the response and perform a limited
     * number of retries.
     *
     * Generated from protobuf field <code>bool verified_additional_authenticated_data_crc32c = 7;</code>
     */
    private $verified_additional_authenticated_data_crc32c = false;
    /**
     * Integrity verification field. A flag indicating whether
     * [RawEncryptRequest.initialization_vector_crc32c][google.cloud.kms.v1.RawEncryptRequest.initialization_vector_crc32c]
     * was received by
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] and used
     * for the integrity verification of initialization_vector. A false value of
     * this field indicates either that
     * [RawEncryptRequest.initialization_vector_crc32c][google.cloud.kms.v1.RawEncryptRequest.initialization_vector_crc32c]
     * was left unset or that it was not delivered to
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService]. If you've
     * set
     * [RawEncryptRequest.initialization_vector_crc32c][google.cloud.kms.v1.RawEncryptRequest.initialization_vector_crc32c]
     * but this field is still false, discard the response and perform a limited
     * number of retries.
     *
     * Generated from protobuf field <code>bool verified_initialization_vector_crc32c = 10;</code>
     */
    private $verified_initialization_vector_crc32c = false;
    /**
     * The resource name of the
     * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] used in
     * encryption. Check this field to verify that the intended resource was used
     * for encryption.
     *
     * Generated from protobuf field <code>string name = 8;</code>
     */
    private $name = '';
    /**
     * The [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] of the
     * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] used in
     * encryption.
     *
     * Generated from protobuf field <code>.google.cloud.kms.v1.ProtectionLevel protection_level = 9;</code>
     */
    private $protection_level = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $ciphertext
     *           The encrypted data. In the case of AES-GCM, the authentication tag
     *           is the [tag_length][google.cloud.kms.v1.RawEncryptResponse.tag_length]
     *           bytes at the end of this field.
     *     @type string $initialization_vector
     *           The initialization vector (IV) generated by the service during
     *           encryption. This value must be stored and provided in
     *           [RawDecryptRequest.initialization_vector][google.cloud.kms.v1.RawDecryptRequest.initialization_vector]
     *           at decryption time.
     *     @type int $tag_length
     *           The length of the authentication tag that is appended to
     *           the end of the ciphertext.
     *     @type \Google\Protobuf\Int64Value $ciphertext_crc32c
     *           Integrity verification field. A CRC32C checksum of the returned
     *           [RawEncryptResponse.ciphertext][google.cloud.kms.v1.RawEncryptResponse.ciphertext].
     *           An integrity check of ciphertext can be performed by computing the CRC32C
     *           checksum of ciphertext and comparing your results to this field. Discard
     *           the response in case of non-matching checksum values, and perform a limited
     *           number of retries. A persistent mismatch may indicate an issue in your
     *           computation of the CRC32C checksum. Note: This field is defined as int64
     *           for reasons of compatibility across different languages. However, it is a
     *           non-negative integer, which will never exceed 2^32-1, and can be safely
     *           downconverted to uint32 in languages that support this type.
     *     @type \Google\Protobuf\Int64Value $initialization_vector_crc32c
     *           Integrity verification field. A CRC32C checksum of the returned
     *           [RawEncryptResponse.initialization_vector][google.cloud.kms.v1.RawEncryptResponse.initialization_vector].
     *           An integrity check of initialization_vector can be performed by computing
     *           the CRC32C checksum of initialization_vector and comparing your results to
     *           this field. Discard the response in case of non-matching checksum values,
     *           and perform a limited number of retries. A persistent mismatch may indicate
     *           an issue in your computation of the CRC32C checksum. Note: This field is
     *           defined as int64 for reasons of compatibility across different languages.
     *           However, it is a non-negative integer, which will never exceed 2^32-1, and
     *           can be safely downconverted to uint32 in languages that support this type.
     *     @type bool $verified_plaintext_crc32c
     *           Integrity verification field. A flag indicating whether
     *           [RawEncryptRequest.plaintext_crc32c][google.cloud.kms.v1.RawEncryptRequest.plaintext_crc32c]
     *           was received by
     *           [KeyManagementService][google.cloud.kms.v1.KeyManagementService] and used
     *           for the integrity verification of the plaintext. A false value of this
     *           field indicates either that
     *           [RawEncryptRequest.plaintext_crc32c][google.cloud.kms.v1.RawEncryptRequest.plaintext_crc32c]
     *           was left unset or that it was not delivered to
     *           [KeyManagementService][google.cloud.kms.v1.KeyManagementService]. If you've
     *           set
     *           [RawEncryptRequest.plaintext_crc32c][google.cloud.kms.v1.RawEncryptRequest.plaintext_crc32c]
     *           but this field is still false, discard the response and perform a limited
     *           number of retries.
     *     @type bool $verified_additional_authenticated_data_crc32c
     *           Integrity verification field. A flag indicating whether
     *           [RawEncryptRequest.additional_authenticated_data_crc32c][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data_crc32c]
     *           was received by
     *           [KeyManagementService][google.cloud.kms.v1.KeyManagementService] and used
     *           for the integrity verification of additional_authenticated_data. A false
     *           value of this field indicates either that //
     *           [RawEncryptRequest.additional_authenticated_data_crc32c][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data_crc32c]
     *           was left unset or that it was not delivered to
     *           [KeyManagementService][google.cloud.kms.v1.KeyManagementService]. If you've
     *           set
     *           [RawEncryptRequest.additional_authenticated_data_crc32c][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data_crc32c]
     *           but this field is still false, discard the response and perform a limited
     *           number of retries.
     *     @type bool $verified_initialization_vector_crc32c
     *           Integrity verification field. A flag indicating whether
     *           [RawEncryptRequest.initialization_vector_crc32c][google.cloud.kms.v1.RawEncryptRequest.initialization_vector_crc32c]
     *           was received by
     *           [KeyManagementService][google.cloud.kms.v1.KeyManagementService] and used
     *           for the integrity verification of initialization_vector. A false value of
     *           this field indicates either that
     *           [RawEncryptRequest.initialization_vector_crc32c][google.cloud.kms.v1.RawEncryptRequest.initialization_vector_crc32c]
     *           was left unset or that it was not delivered to
     *           [KeyManagementService][google.cloud.kms.v1.KeyManagementService]. If you've
     *           set
     *           [RawEncryptRequest.initialization_vector_crc32c][google.cloud.kms.v1.RawEncryptRequest.initialization_vector_crc32c]
     *           but this field is still false, discard the response and perform a limited
     *           number of retries.
     *     @type string $name
     *           The resource name of the
     *           [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] used in
     *           encryption. Check this field to verify that the intended resource was used
     *           for encryption.
     *     @type int $protection_level
     *           The [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] of the
     *           [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] used in
     *           encryption.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Kms\V1\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * The encrypted data. In the case of AES-GCM, the authentication tag
     * is the [tag_length][google.cloud.kms.v1.RawEncryptResponse.tag_length]
     * bytes at the end of this field.
     *
     * Generated from protobuf field <code>bytes ciphertext = 1;</code>
     * @return string
     */
    public function getCiphertext()
    {
        return $this->ciphertext;
    }

    /**
     * The encrypted data. In the case of AES-GCM, the authentication tag
     * is the [tag_length][google.cloud.kms.v1.RawEncryptResponse.tag_length]
     * bytes at the end of this field.
     *
     * Generated from protobuf field <code>bytes ciphertext = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCiphertext($var)
    {
        GPBUtil::checkString($var, False);
        $this->ciphertext = $var;

        return $this;
    }

    /**
     * The initialization vector (IV) generated by the service during
     * encryption. This value must be stored and provided in
     * [RawDecryptRequest.initialization_vector][google.cloud.kms.v1.RawDecryptRequest.initialization_vector]
     * at decryption time.
     *
     * Generated from protobuf field <code>bytes initialization_vector = 2;</code>
     * @return string
     */
    public function getInitializationVector()
    {
        return $this->initialization_vector;
    }

    /**
     * The initialization vector (IV) generated by the service during
     * encryption. This value must be stored and provided in
     * [RawDecryptRequest.initialization_vector][google.cloud.kms.v1.RawDecryptRequest.initialization_vector]
     * at decryption time.
     *
     * Generated from protobuf field <code>bytes initialization_vector = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setInitializationVector($var)
    {
        GPBUtil::checkString($var, False);
        $this->initialization_vector = $var;

        return $this;
    }

    /**
     * The length of the authentication tag that is appended to
     * the end of the ciphertext.
     *
     * Generated from protobuf field <code>int32 tag_length = 3;</code>
     * @return int
     */
    public function getTagLength()
    {
        return $this->tag_length;
    }

    /**
     * The length of the authentication tag that is appended to
     * the end of the ciphertext.
     *
     * Generated from protobuf field <code>int32 tag_length = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setTagLength($var)
    {
        GPBUtil::checkInt32($var);
        $this->tag_length = $var;

        return $this;
    }

    /**
     * Integrity verification field. A CRC32C checksum of the returned
     * [RawEncryptResponse.ciphertext][google.cloud.kms.v1.RawEncryptResponse.ciphertext].
     * An integrity check of ciphertext can be performed by computing the CRC32C
     * checksum of ciphertext and comparing your results to this field. Discard
     * the response in case of non-matching checksum values, and perform a limited
     * number of retries. A persistent mismatch may indicate an issue in your
     * computation of the CRC32C checksum. Note: This field is defined as int64
     * for reasons of compatibility across different languages. However, it is a
     * non-negative integer, which will never exceed 2^32-1, and can be safely
     * downconverted to uint32 in languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value ciphertext_crc32c = 4;</code>
     * @return \Google\Protobuf\Int64Value|null
     */
    public function getCiphertextCrc32C()
    {
        return $this->ciphertext_crc32c;
    }

    public function hasCiphertextCrc32C()
    {
        return isset($this->ciphertext_crc32c);
    }

    public function clearCiphertextCrc32C()
    {
        unset($this->ciphertext_crc32c);
    }

    /**
     * Returns the unboxed value from <code>getCiphertextCrc32C()</code>

     * Integrity verification field. A CRC32C checksum of the returned
     * [RawEncryptResponse.ciphertext][google.cloud.kms.v1.RawEncryptResponse.ciphertext].
     * An integrity check of ciphertext can be performed by computing the CRC32C
     * checksum of ciphertext and comparing your results to this field. Discard
     * the response in case of non-matching checksum values, and perform a limited
     * number of retries. A persistent mismatch may indicate an issue in your
     * computation of the CRC32C checksum. Note: This field is defined as int64
     * for reasons of compatibility across different languages. However, it is a
     * non-negative integer, which will never exceed 2^32-1, and can be safely
     * downconverted to uint32 in languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value ciphertext_crc32c = 4;</code>
     * @return int|string|null
     */
    public function getCiphertextCrc32CValue()
    {
        return $this->readWrapperValue("ciphertext_crc32c");
    }

    /**
     * Integrity verification field. A CRC32C checksum of the returned
     * [RawEncryptResponse.ciphertext][google.cloud.kms.v1.RawEncryptResponse.ciphertext].
     * An integrity check of ciphertext can be performed by computing the CRC32C
     * checksum of ciphertext and comparing your results to this field. Discard
     * the response in case of non-matching checksum values, and perform a limited
     * number of retries. A persistent mismatch may indicate an issue in your
     * computation of the CRC32C checksum. Note: This field is defined as int64
     * for reasons of compatibility across different languages. However, it is a
     * non-negative integer, which will never exceed 2^32-1, and can be safely
     * downconverted to uint32 in languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value ciphertext_crc32c = 4;</code>
     * @param \Google\Protobuf\Int64Value $var
     * @return $this
     */
    public function setCiphertextCrc32C($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Int64Value::class);
        $this->ciphertext_crc32c = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\Int64Value object.

     * Integrity verification field. A CRC32C checksum of the returned
     * [RawEncryptResponse.ciphertext][google.cloud.kms.v1.RawEncryptResponse.ciphertext].
     * An integrity check of ciphertext can be performed by computing the CRC32C
     * checksum of ciphertext and comparing your results to this field. Discard
     * the response in case of non-matching checksum values, and perform a limited
     * number of retries. A persistent mismatch may indicate an issue in your
     * computation of the CRC32C checksum. Note: This field is defined as int64
     * for reasons of compatibility across different languages. However, it is a
     * non-negative integer, which will never exceed 2^32-1, and can be safely
     * downconverted to uint32 in languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value ciphertext_crc32c = 4;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setCiphertextCrc32CValue($var)
    {
        $this->writeWrapperValue("ciphertext_crc32c", $var);
        return $this;}

    /**
     * Integrity verification field. A CRC32C checksum of the returned
     * [RawEncryptResponse.initialization_vector][google.cloud.kms.v1.RawEncryptResponse.initialization_vector].
     * An integrity check of initialization_vector can be performed by computing
     * the CRC32C checksum of initialization_vector and comparing your results to
     * this field. Discard the response in case of non-matching checksum values,
     * and perform a limited number of retries. A persistent mismatch may indicate
     * an issue in your computation of the CRC32C checksum. Note: This field is
     * defined as int64 for reasons of compatibility across different languages.
     * However, it is a non-negative integer, which will never exceed 2^32-1, and
     * can be safely downconverted to uint32 in languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value initialization_vector_crc32c = 5;</code>
     * @return \Google\Protobuf\Int64Value|null
     */
    public function getInitializationVectorCrc32C()
    {
        return $this->initialization_vector_crc32c;
    }

    public function hasInitializationVectorCrc32C()
    {
        return isset($this->initialization_vector_crc32c);
    }

    public function clearInitializationVectorCrc32C()
    {
        unset($this->initialization_vector_crc32c);
    }

    /**
     * Returns the unboxed value from <code>getInitializationVectorCrc32C()</code>

     * Integrity verification field. A CRC32C checksum of the returned
     * [RawEncryptResponse.initialization_vector][google.cloud.kms.v1.RawEncryptResponse.initialization_vector].
     * An integrity check of initialization_vector can be performed by computing
     * the CRC32C checksum of initialization_vector and comparing your results to
     * this field. Discard the response in case of non-matching checksum values,
     * and perform a limited number of retries. A persistent mismatch may indicate
     * an issue in your computation of the CRC32C checksum. Note: This field is
     * defined as int64 for reasons of compatibility across different languages.
     * However, it is a non-negative integer, which will never exceed 2^32-1, and
     * can be safely downconverted to uint32 in languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value initialization_vector_crc32c = 5;</code>
     * @return int|string|null
     */
    public function getInitializationVectorCrc32CValue()
    {
        return $this->readWrapperValue("initialization_vector_crc32c");
    }

    /**
     * Integrity verification field. A CRC32C checksum of the returned
     * [RawEncryptResponse.initialization_vector][google.cloud.kms.v1.RawEncryptResponse.initialization_vector].
     * An integrity check of initialization_vector can be performed by computing
     * the CRC32C checksum of initialization_vector and comparing your results to
     * this field. Discard the response in case of non-matching checksum values,
     * and perform a limited number of retries. A persistent mismatch may indicate
     * an issue in your computation of the CRC32C checksum. Note: This field is
     * defined as int64 for reasons of compatibility across different languages.
     * However, it is a non-negative integer, which will never exceed 2^32-1, and
     * can be safely downconverted to uint32 in languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value initialization_vector_crc32c = 5;</code>
     * @param \Google\Protobuf\Int64Value $var
     * @return $this
     */
    public function setInitializationVectorCrc32C($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Int64Value::class);
        $this->initialization_vector_crc32c = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\Int64Value object.

     * Integrity verification field. A CRC32C checksum of the returned
     * [RawEncryptResponse.initialization_vector][google.cloud.kms.v1.RawEncryptResponse.initialization_vector].
     * An integrity check of initialization_vector can be performed by computing
     * the CRC32C checksum of initialization_vector and comparing your results to
     * this field. Discard the response in case of non-matching checksum values,
     * and perform a limited number of retries. A persistent mismatch may indicate
     * an issue in your computation of the CRC32C checksum. Note: This field is
     * defined as int64 for reasons of compatibility across different languages.
     * However, it is a non-negative integer, which will never exceed 2^32-1, and
     * can be safely downconverted to uint32 in languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value initialization_vector_crc32c = 5;</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setInitializationVectorCrc32CValue($var)
    {
        $this->writeWrapperValue("initialization_vector_crc32c", $var);
        return $this;}

    /**
     * Integrity verification field. A flag indicating whether
     * [RawEncryptRequest.plaintext_crc32c][google.cloud.kms.v1.RawEncryptRequest.plaintext_crc32c]
     * was received by
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] and used
     * for the integrity verification of the plaintext. A false value of this
     * field indicates either that
     * [RawEncryptRequest.plaintext_crc32c][google.cloud.kms.v1.RawEncryptRequest.plaintext_crc32c]
     * was left unset or that it was not delivered to
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService]. If you've
     * set
     * [RawEncryptRequest.plaintext_crc32c][google.cloud.kms.v1.RawEncryptRequest.plaintext_crc32c]
     * but this field is still false, discard the response and perform a limited
     * number of retries.
     *
     * Generated from protobuf field <code>bool verified_plaintext_crc32c = 6;</code>
     * @return bool
     */
    public function getVerifiedPlaintextCrc32C()
    {
        return $this->verified_plaintext_crc32c;
    }

    /**
     * Integrity verification field. A flag indicating whether
     * [RawEncryptRequest.plaintext_crc32c][google.cloud.kms.v1.RawEncryptRequest.plaintext_crc32c]
     * was received by
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] and used
     * for the integrity verification of the plaintext. A false value of this
     * field indicates either that
     * [RawEncryptRequest.plaintext_crc32c][google.cloud.kms.v1.RawEncryptRequest.plaintext_crc32c]
     * was left unset or that it was not delivered to
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService]. If you've
     * set
     * [RawEncryptRequest.plaintext_crc32c][google.cloud.kms.v1.RawEncryptRequest.plaintext_crc32c]
     * but this field is still false, discard the response and perform a limited
     * number of retries.
     *
     * Generated from protobuf field <code>bool verified_plaintext_crc32c = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setVerifiedPlaintextCrc32C($var)
    {
        GPBUtil::checkBool($var);
        $this->verified_plaintext_crc32c = $var;

        return $this;
    }

    /**
     * Integrity verification field. A flag indicating whether
     * [RawEncryptRequest.additional_authenticated_data_crc32c][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data_crc32c]
     * was received by
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] and used
     * for the integrity verification of additional_authenticated_data. A false
     * value of this field indicates either that //
     * [RawEncryptRequest.additional_authenticated_data_crc32c][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data_crc32c]
     * was left unset or that it was not delivered to
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService]. If you've
     * set
     * [RawEncryptRequest.additional_authenticated_data_crc32c][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data_crc32c]
     * but this field is still false, discard the response and perform a limited
     * number of retries.
     *
     * Generated from protobuf field <code>bool verified_additional_authenticated_data_crc32c = 7;</code>
     * @return bool
     */
    public function getVerifiedAdditionalAuthenticatedDataCrc32C()
    {
        return $this->verified_additional_authenticated_data_crc32c;
    }

    /**
     * Integrity verification field. A flag indicating whether
     * [RawEncryptRequest.additional_authenticated_data_crc32c][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data_crc32c]
     * was received by
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] and used
     * for the integrity verification of additional_authenticated_data. A false
     * value of this field indicates either that //
     * [RawEncryptRequest.additional_authenticated_data_crc32c][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data_crc32c]
     * was left unset or that it was not delivered to
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService]. If you've
     * set
     * [RawEncryptRequest.additional_authenticated_data_crc32c][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data_crc32c]
     * but this field is still false, discard the response and perform a limited
     * number of retries.
     *
     * Generated from protobuf field <code>bool verified_additional_authenticated_data_crc32c = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setVerifiedAdditionalAuthenticatedDataCrc32C($var)
    {
        GPBUtil::checkBool($var);
        $this->verified_additional_authenticated_data_crc32c = $var;

        return $this;
    }

    /**
     * Integrity verification field. A flag indicating whether
     * [RawEncryptRequest.initialization_vector_crc32c][google.cloud.kms.v1.RawEncryptRequest.initialization_vector_crc32c]
     * was received by
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] and used
     * for the integrity verification of initialization_vector. A false value of
     * this field indicates either that
     * [RawEncryptRequest.initialization_vector_crc32c][google.cloud.kms.v1.RawEncryptRequest.initialization_vector_crc32c]
     * was left unset or that it was not delivered to
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService]. If you've
     * set
     * [RawEncryptRequest.initialization_vector_crc32c][google.cloud.kms.v1.RawEncryptRequest.initialization_vector_crc32c]
     * but this field is still false, discard the response and perform a limited
     * number of retries.
     *
     * Generated from protobuf field <code>bool verified_initialization_vector_crc32c = 10;</code>
     * @return bool
     */
    public function getVerifiedInitializationVectorCrc32C()
    {
        return $this->verified_initialization_vector_crc32c;
    }

    /**
     * Integrity verification field. A flag indicating whether
     * [RawEncryptRequest.initialization_vector_crc32c][google.cloud.kms.v1.RawEncryptRequest.initialization_vector_crc32c]
     * was received by
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] and used
     * for the integrity verification of initialization_vector. A false value of
     * this field indicates either that
     * [RawEncryptRequest.initialization_vector_crc32c][google.cloud.kms.v1.RawEncryptRequest.initialization_vector_crc32c]
     * was left unset or that it was not delivered to
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService]. If you've
     * set
     * [RawEncryptRequest.initialization_vector_crc32c][google.cloud.kms.v1.RawEncryptRequest.initialization_vector_crc32c]
     * but this field is still false, discard the response and perform a limited
     * number of retries.
     *
     * Generated from protobuf field <code>bool verified_initialization_vector_crc32c = 10;</code>
     * @param bool $var
     * @return $this
     */
    public function setVerifiedInitializationVectorCrc32C($var)
    {
        GPBUtil::checkBool($var);
        $this->verified_initialization_vector_crc32c = $var;

        return $this;
    }

    /**
     * The resource name of the
     * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] used in
     * encryption. Check this field to verify that the intended resource was used
     * for encryption.
     *
     * Generated from protobuf field <code>string name = 8;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The resource name of the
     * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] used in
     * encryption. Check this field to verify that the intended resource was used
     * for encryption.
     *
     * Generated from protobuf field <code>string name = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] of the
     * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] used in
     * encryption.
     *
     * Generated from protobuf field <code>.google.cloud.kms.v1.ProtectionLevel protection_level = 9;</code>
     * @return int
     */
    public function getProtectionLevel()
    {
        return $this->protection_level;
    }

    /**
     * The [ProtectionLevel][google.cloud.kms.v1.ProtectionLevel] of the
     * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] used in
     * encryption.
     *
     * Generated from protobuf field <code>.google.cloud.kms.v1.ProtectionLevel protection_level = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setProtectionLevel($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Kms\V1\ProtectionLevel::class);
        $this->protection_level = $var;

        return $this;
    }

}

