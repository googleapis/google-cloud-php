<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/kms/v1/service.proto

namespace Google\Cloud\Kms\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [KeyManagementService.RawEncrypt][google.cloud.kms.v1.KeyManagementService.RawEncrypt].
 *
 * Generated from protobuf message <code>google.cloud.kms.v1.RawEncryptRequest</code>
 */
class RawEncryptRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The resource name of the
     * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to use for
     * encryption.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $name = '';
    /**
     * Required. The data to encrypt. Must be no larger than 64KiB.
     * The maximum size depends on the key version's
     * [protection_level][google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level].
     * For [SOFTWARE][google.cloud.kms.v1.ProtectionLevel.SOFTWARE] keys, the
     * plaintext must be no larger than 64KiB. For
     * [HSM][google.cloud.kms.v1.ProtectionLevel.HSM] keys, the combined length of
     * the plaintext and additional_authenticated_data fields must be no larger
     * than 8KiB.
     *
     * Generated from protobuf field <code>bytes plaintext = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $plaintext = '';
    /**
     * Optional. Optional data that, if specified, must also be provided during
     * decryption through
     * [RawDecryptRequest.additional_authenticated_data][google.cloud.kms.v1.RawDecryptRequest.additional_authenticated_data].
     * This field may only be used in conjunction with an
     * [algorithm][google.cloud.kms.v1.CryptoKeyVersion.algorithm] that accepts
     * additional authenticated data (for example, AES-GCM).
     * The maximum size depends on the key version's
     * [protection_level][google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level].
     * For [SOFTWARE][google.cloud.kms.v1.ProtectionLevel.SOFTWARE] keys, the
     * plaintext must be no larger than 64KiB. For
     * [HSM][google.cloud.kms.v1.ProtectionLevel.HSM] keys, the combined length of
     * the plaintext and additional_authenticated_data fields must be no larger
     * than 8KiB.
     *
     * Generated from protobuf field <code>bytes additional_authenticated_data = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $additional_authenticated_data = '';
    /**
     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.plaintext][google.cloud.kms.v1.RawEncryptRequest.plaintext].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received plaintext using this checksum.
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that CRC32C(plaintext) is equal
     * to plaintext_crc32c, and if so, perform a limited number of retries. A
     * persistent mismatch may indicate an issue in your computation of the CRC32C
     * checksum. Note: This field is defined as int64 for reasons of compatibility
     * across different languages. However, it is a non-negative integer, which
     * will never exceed 2^32-1, and can be safely downconverted to uint32 in
     * languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value plaintext_crc32c = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $plaintext_crc32c = null;
    /**
     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.additional_authenticated_data][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received additional_authenticated_data using
     * this checksum.
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that
     * CRC32C(additional_authenticated_data) is equal to
     * additional_authenticated_data_crc32c, and if so, perform
     * a limited number of retries. A persistent mismatch may indicate an issue in
     * your computation of the CRC32C checksum.
     * Note: This field is defined as int64 for reasons of compatibility across
     * different languages. However, it is a non-negative integer, which will
     * never exceed 2^32-1, and can be safely downconverted to uint32 in languages
     * that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value additional_authenticated_data_crc32c = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $additional_authenticated_data_crc32c = null;
    /**
     * Optional. A customer-supplied initialization vector that will be used for
     * encryption. If it is not provided for AES-CBC and AES-CTR, one will be
     * generated. It will be returned in
     * [RawEncryptResponse.initialization_vector][google.cloud.kms.v1.RawEncryptResponse.initialization_vector].
     *
     * Generated from protobuf field <code>bytes initialization_vector = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $initialization_vector = '';
    /**
     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.initialization_vector][google.cloud.kms.v1.RawEncryptRequest.initialization_vector].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received initialization_vector using this
     * checksum. [KeyManagementService][google.cloud.kms.v1.KeyManagementService]
     * will report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that
     * CRC32C(initialization_vector) is equal to
     * initialization_vector_crc32c, and if so, perform
     * a limited number of retries. A persistent mismatch may indicate an issue in
     * your computation of the CRC32C checksum.
     * Note: This field is defined as int64 for reasons of compatibility across
     * different languages. However, it is a non-negative integer, which will
     * never exceed 2^32-1, and can be safely downconverted to uint32 in languages
     * that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value initialization_vector_crc32c = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $initialization_vector_crc32c = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The resource name of the
     *           [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to use for
     *           encryption.
     *     @type string $plaintext
     *           Required. The data to encrypt. Must be no larger than 64KiB.
     *           The maximum size depends on the key version's
     *           [protection_level][google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level].
     *           For [SOFTWARE][google.cloud.kms.v1.ProtectionLevel.SOFTWARE] keys, the
     *           plaintext must be no larger than 64KiB. For
     *           [HSM][google.cloud.kms.v1.ProtectionLevel.HSM] keys, the combined length of
     *           the plaintext and additional_authenticated_data fields must be no larger
     *           than 8KiB.
     *     @type string $additional_authenticated_data
     *           Optional. Optional data that, if specified, must also be provided during
     *           decryption through
     *           [RawDecryptRequest.additional_authenticated_data][google.cloud.kms.v1.RawDecryptRequest.additional_authenticated_data].
     *           This field may only be used in conjunction with an
     *           [algorithm][google.cloud.kms.v1.CryptoKeyVersion.algorithm] that accepts
     *           additional authenticated data (for example, AES-GCM).
     *           The maximum size depends on the key version's
     *           [protection_level][google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level].
     *           For [SOFTWARE][google.cloud.kms.v1.ProtectionLevel.SOFTWARE] keys, the
     *           plaintext must be no larger than 64KiB. For
     *           [HSM][google.cloud.kms.v1.ProtectionLevel.HSM] keys, the combined length of
     *           the plaintext and additional_authenticated_data fields must be no larger
     *           than 8KiB.
     *     @type \Google\Protobuf\Int64Value $plaintext_crc32c
     *           Optional. An optional CRC32C checksum of the
     *           [RawEncryptRequest.plaintext][google.cloud.kms.v1.RawEncryptRequest.plaintext].
     *           If specified,
     *           [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     *           verify the integrity of the received plaintext using this checksum.
     *           [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     *           report an error if the checksum verification fails. If you receive a
     *           checksum error, your client should verify that CRC32C(plaintext) is equal
     *           to plaintext_crc32c, and if so, perform a limited number of retries. A
     *           persistent mismatch may indicate an issue in your computation of the CRC32C
     *           checksum. Note: This field is defined as int64 for reasons of compatibility
     *           across different languages. However, it is a non-negative integer, which
     *           will never exceed 2^32-1, and can be safely downconverted to uint32 in
     *           languages that support this type.
     *     @type \Google\Protobuf\Int64Value $additional_authenticated_data_crc32c
     *           Optional. An optional CRC32C checksum of the
     *           [RawEncryptRequest.additional_authenticated_data][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data].
     *           If specified,
     *           [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     *           verify the integrity of the received additional_authenticated_data using
     *           this checksum.
     *           [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     *           report an error if the checksum verification fails. If you receive a
     *           checksum error, your client should verify that
     *           CRC32C(additional_authenticated_data) is equal to
     *           additional_authenticated_data_crc32c, and if so, perform
     *           a limited number of retries. A persistent mismatch may indicate an issue in
     *           your computation of the CRC32C checksum.
     *           Note: This field is defined as int64 for reasons of compatibility across
     *           different languages. However, it is a non-negative integer, which will
     *           never exceed 2^32-1, and can be safely downconverted to uint32 in languages
     *           that support this type.
     *     @type string $initialization_vector
     *           Optional. A customer-supplied initialization vector that will be used for
     *           encryption. If it is not provided for AES-CBC and AES-CTR, one will be
     *           generated. It will be returned in
     *           [RawEncryptResponse.initialization_vector][google.cloud.kms.v1.RawEncryptResponse.initialization_vector].
     *     @type \Google\Protobuf\Int64Value $initialization_vector_crc32c
     *           Optional. An optional CRC32C checksum of the
     *           [RawEncryptRequest.initialization_vector][google.cloud.kms.v1.RawEncryptRequest.initialization_vector].
     *           If specified,
     *           [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     *           verify the integrity of the received initialization_vector using this
     *           checksum. [KeyManagementService][google.cloud.kms.v1.KeyManagementService]
     *           will report an error if the checksum verification fails. If you receive a
     *           checksum error, your client should verify that
     *           CRC32C(initialization_vector) is equal to
     *           initialization_vector_crc32c, and if so, perform
     *           a limited number of retries. A persistent mismatch may indicate an issue in
     *           your computation of the CRC32C checksum.
     *           Note: This field is defined as int64 for reasons of compatibility across
     *           different languages. However, it is a non-negative integer, which will
     *           never exceed 2^32-1, and can be safely downconverted to uint32 in languages
     *           that support this type.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Kms\V1\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The resource name of the
     * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to use for
     * encryption.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The resource name of the
     * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] to use for
     * encryption.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Required. The data to encrypt. Must be no larger than 64KiB.
     * The maximum size depends on the key version's
     * [protection_level][google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level].
     * For [SOFTWARE][google.cloud.kms.v1.ProtectionLevel.SOFTWARE] keys, the
     * plaintext must be no larger than 64KiB. For
     * [HSM][google.cloud.kms.v1.ProtectionLevel.HSM] keys, the combined length of
     * the plaintext and additional_authenticated_data fields must be no larger
     * than 8KiB.
     *
     * Generated from protobuf field <code>bytes plaintext = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getPlaintext()
    {
        return $this->plaintext;
    }

    /**
     * Required. The data to encrypt. Must be no larger than 64KiB.
     * The maximum size depends on the key version's
     * [protection_level][google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level].
     * For [SOFTWARE][google.cloud.kms.v1.ProtectionLevel.SOFTWARE] keys, the
     * plaintext must be no larger than 64KiB. For
     * [HSM][google.cloud.kms.v1.ProtectionLevel.HSM] keys, the combined length of
     * the plaintext and additional_authenticated_data fields must be no larger
     * than 8KiB.
     *
     * Generated from protobuf field <code>bytes plaintext = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setPlaintext($var)
    {
        GPBUtil::checkString($var, False);
        $this->plaintext = $var;

        return $this;
    }

    /**
     * Optional. Optional data that, if specified, must also be provided during
     * decryption through
     * [RawDecryptRequest.additional_authenticated_data][google.cloud.kms.v1.RawDecryptRequest.additional_authenticated_data].
     * This field may only be used in conjunction with an
     * [algorithm][google.cloud.kms.v1.CryptoKeyVersion.algorithm] that accepts
     * additional authenticated data (for example, AES-GCM).
     * The maximum size depends on the key version's
     * [protection_level][google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level].
     * For [SOFTWARE][google.cloud.kms.v1.ProtectionLevel.SOFTWARE] keys, the
     * plaintext must be no larger than 64KiB. For
     * [HSM][google.cloud.kms.v1.ProtectionLevel.HSM] keys, the combined length of
     * the plaintext and additional_authenticated_data fields must be no larger
     * than 8KiB.
     *
     * Generated from protobuf field <code>bytes additional_authenticated_data = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getAdditionalAuthenticatedData()
    {
        return $this->additional_authenticated_data;
    }

    /**
     * Optional. Optional data that, if specified, must also be provided during
     * decryption through
     * [RawDecryptRequest.additional_authenticated_data][google.cloud.kms.v1.RawDecryptRequest.additional_authenticated_data].
     * This field may only be used in conjunction with an
     * [algorithm][google.cloud.kms.v1.CryptoKeyVersion.algorithm] that accepts
     * additional authenticated data (for example, AES-GCM).
     * The maximum size depends on the key version's
     * [protection_level][google.cloud.kms.v1.CryptoKeyVersionTemplate.protection_level].
     * For [SOFTWARE][google.cloud.kms.v1.ProtectionLevel.SOFTWARE] keys, the
     * plaintext must be no larger than 64KiB. For
     * [HSM][google.cloud.kms.v1.ProtectionLevel.HSM] keys, the combined length of
     * the plaintext and additional_authenticated_data fields must be no larger
     * than 8KiB.
     *
     * Generated from protobuf field <code>bytes additional_authenticated_data = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setAdditionalAuthenticatedData($var)
    {
        GPBUtil::checkString($var, False);
        $this->additional_authenticated_data = $var;

        return $this;
    }

    /**
     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.plaintext][google.cloud.kms.v1.RawEncryptRequest.plaintext].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received plaintext using this checksum.
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that CRC32C(plaintext) is equal
     * to plaintext_crc32c, and if so, perform a limited number of retries. A
     * persistent mismatch may indicate an issue in your computation of the CRC32C
     * checksum. Note: This field is defined as int64 for reasons of compatibility
     * across different languages. However, it is a non-negative integer, which
     * will never exceed 2^32-1, and can be safely downconverted to uint32 in
     * languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value plaintext_crc32c = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Int64Value|null
     */
    public function getPlaintextCrc32C()
    {
        return $this->plaintext_crc32c;
    }

    public function hasPlaintextCrc32C()
    {
        return isset($this->plaintext_crc32c);
    }

    public function clearPlaintextCrc32C()
    {
        unset($this->plaintext_crc32c);
    }

    /**
     * Returns the unboxed value from <code>getPlaintextCrc32C()</code>

     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.plaintext][google.cloud.kms.v1.RawEncryptRequest.plaintext].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received plaintext using this checksum.
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that CRC32C(plaintext) is equal
     * to plaintext_crc32c, and if so, perform a limited number of retries. A
     * persistent mismatch may indicate an issue in your computation of the CRC32C
     * checksum. Note: This field is defined as int64 for reasons of compatibility
     * across different languages. However, it is a non-negative integer, which
     * will never exceed 2^32-1, and can be safely downconverted to uint32 in
     * languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value plaintext_crc32c = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int|string|null
     */
    public function getPlaintextCrc32CValue()
    {
        return $this->readWrapperValue("plaintext_crc32c");
    }

    /**
     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.plaintext][google.cloud.kms.v1.RawEncryptRequest.plaintext].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received plaintext using this checksum.
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that CRC32C(plaintext) is equal
     * to plaintext_crc32c, and if so, perform a limited number of retries. A
     * persistent mismatch may indicate an issue in your computation of the CRC32C
     * checksum. Note: This field is defined as int64 for reasons of compatibility
     * across different languages. However, it is a non-negative integer, which
     * will never exceed 2^32-1, and can be safely downconverted to uint32 in
     * languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value plaintext_crc32c = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\Int64Value $var
     * @return $this
     */
    public function setPlaintextCrc32C($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Int64Value::class);
        $this->plaintext_crc32c = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\Int64Value object.

     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.plaintext][google.cloud.kms.v1.RawEncryptRequest.plaintext].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received plaintext using this checksum.
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that CRC32C(plaintext) is equal
     * to plaintext_crc32c, and if so, perform a limited number of retries. A
     * persistent mismatch may indicate an issue in your computation of the CRC32C
     * checksum. Note: This field is defined as int64 for reasons of compatibility
     * across different languages. However, it is a non-negative integer, which
     * will never exceed 2^32-1, and can be safely downconverted to uint32 in
     * languages that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value plaintext_crc32c = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setPlaintextCrc32CValue($var)
    {
        $this->writeWrapperValue("plaintext_crc32c", $var);
        return $this;}

    /**
     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.additional_authenticated_data][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received additional_authenticated_data using
     * this checksum.
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that
     * CRC32C(additional_authenticated_data) is equal to
     * additional_authenticated_data_crc32c, and if so, perform
     * a limited number of retries. A persistent mismatch may indicate an issue in
     * your computation of the CRC32C checksum.
     * Note: This field is defined as int64 for reasons of compatibility across
     * different languages. However, it is a non-negative integer, which will
     * never exceed 2^32-1, and can be safely downconverted to uint32 in languages
     * that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value additional_authenticated_data_crc32c = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Int64Value|null
     */
    public function getAdditionalAuthenticatedDataCrc32C()
    {
        return $this->additional_authenticated_data_crc32c;
    }

    public function hasAdditionalAuthenticatedDataCrc32C()
    {
        return isset($this->additional_authenticated_data_crc32c);
    }

    public function clearAdditionalAuthenticatedDataCrc32C()
    {
        unset($this->additional_authenticated_data_crc32c);
    }

    /**
     * Returns the unboxed value from <code>getAdditionalAuthenticatedDataCrc32C()</code>

     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.additional_authenticated_data][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received additional_authenticated_data using
     * this checksum.
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that
     * CRC32C(additional_authenticated_data) is equal to
     * additional_authenticated_data_crc32c, and if so, perform
     * a limited number of retries. A persistent mismatch may indicate an issue in
     * your computation of the CRC32C checksum.
     * Note: This field is defined as int64 for reasons of compatibility across
     * different languages. However, it is a non-negative integer, which will
     * never exceed 2^32-1, and can be safely downconverted to uint32 in languages
     * that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value additional_authenticated_data_crc32c = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int|string|null
     */
    public function getAdditionalAuthenticatedDataCrc32CValue()
    {
        return $this->readWrapperValue("additional_authenticated_data_crc32c");
    }

    /**
     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.additional_authenticated_data][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received additional_authenticated_data using
     * this checksum.
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that
     * CRC32C(additional_authenticated_data) is equal to
     * additional_authenticated_data_crc32c, and if so, perform
     * a limited number of retries. A persistent mismatch may indicate an issue in
     * your computation of the CRC32C checksum.
     * Note: This field is defined as int64 for reasons of compatibility across
     * different languages. However, it is a non-negative integer, which will
     * never exceed 2^32-1, and can be safely downconverted to uint32 in languages
     * that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value additional_authenticated_data_crc32c = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\Int64Value $var
     * @return $this
     */
    public function setAdditionalAuthenticatedDataCrc32C($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Int64Value::class);
        $this->additional_authenticated_data_crc32c = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\Int64Value object.

     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.additional_authenticated_data][google.cloud.kms.v1.RawEncryptRequest.additional_authenticated_data].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received additional_authenticated_data using
     * this checksum.
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that
     * CRC32C(additional_authenticated_data) is equal to
     * additional_authenticated_data_crc32c, and if so, perform
     * a limited number of retries. A persistent mismatch may indicate an issue in
     * your computation of the CRC32C checksum.
     * Note: This field is defined as int64 for reasons of compatibility across
     * different languages. However, it is a non-negative integer, which will
     * never exceed 2^32-1, and can be safely downconverted to uint32 in languages
     * that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value additional_authenticated_data_crc32c = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setAdditionalAuthenticatedDataCrc32CValue($var)
    {
        $this->writeWrapperValue("additional_authenticated_data_crc32c", $var);
        return $this;}

    /**
     * Optional. A customer-supplied initialization vector that will be used for
     * encryption. If it is not provided for AES-CBC and AES-CTR, one will be
     * generated. It will be returned in
     * [RawEncryptResponse.initialization_vector][google.cloud.kms.v1.RawEncryptResponse.initialization_vector].
     *
     * Generated from protobuf field <code>bytes initialization_vector = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getInitializationVector()
    {
        return $this->initialization_vector;
    }

    /**
     * Optional. A customer-supplied initialization vector that will be used for
     * encryption. If it is not provided for AES-CBC and AES-CTR, one will be
     * generated. It will be returned in
     * [RawEncryptResponse.initialization_vector][google.cloud.kms.v1.RawEncryptResponse.initialization_vector].
     *
     * Generated from protobuf field <code>bytes initialization_vector = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setInitializationVector($var)
    {
        GPBUtil::checkString($var, False);
        $this->initialization_vector = $var;

        return $this;
    }

    /**
     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.initialization_vector][google.cloud.kms.v1.RawEncryptRequest.initialization_vector].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received initialization_vector using this
     * checksum. [KeyManagementService][google.cloud.kms.v1.KeyManagementService]
     * will report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that
     * CRC32C(initialization_vector) is equal to
     * initialization_vector_crc32c, and if so, perform
     * a limited number of retries. A persistent mismatch may indicate an issue in
     * your computation of the CRC32C checksum.
     * Note: This field is defined as int64 for reasons of compatibility across
     * different languages. However, it is a non-negative integer, which will
     * never exceed 2^32-1, and can be safely downconverted to uint32 in languages
     * that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value initialization_vector_crc32c = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Int64Value|null
     */
    public function getInitializationVectorCrc32C()
    {
        return $this->initialization_vector_crc32c;
    }

    public function hasInitializationVectorCrc32C()
    {
        return isset($this->initialization_vector_crc32c);
    }

    public function clearInitializationVectorCrc32C()
    {
        unset($this->initialization_vector_crc32c);
    }

    /**
     * Returns the unboxed value from <code>getInitializationVectorCrc32C()</code>

     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.initialization_vector][google.cloud.kms.v1.RawEncryptRequest.initialization_vector].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received initialization_vector using this
     * checksum. [KeyManagementService][google.cloud.kms.v1.KeyManagementService]
     * will report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that
     * CRC32C(initialization_vector) is equal to
     * initialization_vector_crc32c, and if so, perform
     * a limited number of retries. A persistent mismatch may indicate an issue in
     * your computation of the CRC32C checksum.
     * Note: This field is defined as int64 for reasons of compatibility across
     * different languages. However, it is a non-negative integer, which will
     * never exceed 2^32-1, and can be safely downconverted to uint32 in languages
     * that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value initialization_vector_crc32c = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int|string|null
     */
    public function getInitializationVectorCrc32CValue()
    {
        return $this->readWrapperValue("initialization_vector_crc32c");
    }

    /**
     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.initialization_vector][google.cloud.kms.v1.RawEncryptRequest.initialization_vector].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received initialization_vector using this
     * checksum. [KeyManagementService][google.cloud.kms.v1.KeyManagementService]
     * will report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that
     * CRC32C(initialization_vector) is equal to
     * initialization_vector_crc32c, and if so, perform
     * a limited number of retries. A persistent mismatch may indicate an issue in
     * your computation of the CRC32C checksum.
     * Note: This field is defined as int64 for reasons of compatibility across
     * different languages. However, it is a non-negative integer, which will
     * never exceed 2^32-1, and can be safely downconverted to uint32 in languages
     * that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value initialization_vector_crc32c = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\Int64Value $var
     * @return $this
     */
    public function setInitializationVectorCrc32C($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Int64Value::class);
        $this->initialization_vector_crc32c = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\Int64Value object.

     * Optional. An optional CRC32C checksum of the
     * [RawEncryptRequest.initialization_vector][google.cloud.kms.v1.RawEncryptRequest.initialization_vector].
     * If specified,
     * [KeyManagementService][google.cloud.kms.v1.KeyManagementService] will
     * verify the integrity of the received initialization_vector using this
     * checksum. [KeyManagementService][google.cloud.kms.v1.KeyManagementService]
     * will report an error if the checksum verification fails. If you receive a
     * checksum error, your client should verify that
     * CRC32C(initialization_vector) is equal to
     * initialization_vector_crc32c, and if so, perform
     * a limited number of retries. A persistent mismatch may indicate an issue in
     * your computation of the CRC32C checksum.
     * Note: This field is defined as int64 for reasons of compatibility across
     * different languages. However, it is a non-negative integer, which will
     * never exceed 2^32-1, and can be safely downconverted to uint32 in languages
     * that support this type.
     *
     * Generated from protobuf field <code>.google.protobuf.Int64Value initialization_vector_crc32c = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int|string|null $var
     * @return $this
     */
    public function setInitializationVectorCrc32CValue($var)
    {
        $this->writeWrapperValue("initialization_vector_crc32c", $var);
        return $this;}

}

