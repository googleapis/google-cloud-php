<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/kms/v1/ekm_service.proto

namespace Google\Cloud\Kms\V1\EkmConnection;

use UnexpectedValueException;

/**
 * [KeyManagementMode][google.cloud.kms.v1.EkmConnection.KeyManagementMode]
 * describes who can perform control plane cryptographic operations using this
 * [EkmConnection][google.cloud.kms.v1.EkmConnection].
 *
 * Protobuf type <code>google.cloud.kms.v1.EkmConnection.KeyManagementMode</code>
 */
class KeyManagementMode
{
    /**
     * Not specified.
     *
     * Generated from protobuf enum <code>KEY_MANAGEMENT_MODE_UNSPECIFIED = 0;</code>
     */
    const KEY_MANAGEMENT_MODE_UNSPECIFIED = 0;
    /**
     * EKM-side key management operations on
     * [CryptoKeys][google.cloud.kms.v1.CryptoKey] created with this
     * [EkmConnection][google.cloud.kms.v1.EkmConnection] must be initiated from
     * the EKM directly and cannot be performed from Cloud KMS. This means that:
     * * When creating a
     * [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion] associated with
     * this
     *   [EkmConnection][google.cloud.kms.v1.EkmConnection], the caller must
     *   supply the key path of pre-existing external key material that will be
     *   linked to the [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion].
     * * Destruction of external key material cannot be requested via the
     *   Cloud KMS API and must be performed directly in the EKM.
     * * Automatic rotation of key material is not supported.
     *
     * Generated from protobuf enum <code>MANUAL = 1;</code>
     */
    const MANUAL = 1;
    /**
     * All [CryptoKeys][google.cloud.kms.v1.CryptoKey] created with this
     * [EkmConnection][google.cloud.kms.v1.EkmConnection] use EKM-side key
     * management operations initiated from Cloud KMS. This means that:
     * * When a [CryptoKeyVersion][google.cloud.kms.v1.CryptoKeyVersion]
     * associated with this [EkmConnection][google.cloud.kms.v1.EkmConnection]
     * is
     *   created, the EKM automatically generates new key material and a new
     *   key path. The caller cannot supply the key path of pre-existing
     *   external key material.
     * * Destruction of external key material associated with this
     *   [EkmConnection][google.cloud.kms.v1.EkmConnection] can be requested by
     *   calling [DestroyCryptoKeyVersion][EkmService.DestroyCryptoKeyVersion].
     * * Automatic rotation of key material is supported.
     *
     * Generated from protobuf enum <code>CLOUD_KMS = 2;</code>
     */
    const CLOUD_KMS = 2;

    private static $valueToName = [
        self::KEY_MANAGEMENT_MODE_UNSPECIFIED => 'KEY_MANAGEMENT_MODE_UNSPECIFIED',
        self::MANUAL => 'MANUAL',
        self::CLOUD_KMS => 'CLOUD_KMS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(KeyManagementMode::class, \Google\Cloud\Kms\V1\EkmConnection_KeyManagementMode::class);

