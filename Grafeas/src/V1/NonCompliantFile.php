<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grafeas/v1/compliance.proto

namespace Grafeas\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details about files that caused a compliance check to fail.
 *
 * Generated from protobuf message <code>grafeas.v1.NonCompliantFile</code>
 */
class NonCompliantFile extends \Google\Protobuf\Internal\Message
{
    /**
     * Empty if `display_command` is set.
     *
     * Generated from protobuf field <code>string path = 1;</code>
     */
    private $path = '';
    /**
     * Command to display the non-compliant files.
     *
     * Generated from protobuf field <code>string display_command = 2;</code>
     */
    private $display_command = '';
    /**
     * Explains why a file is non compliant for a CIS check.
     *
     * Generated from protobuf field <code>string reason = 3;</code>
     */
    private $reason = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $path
     *           Empty if `display_command` is set.
     *     @type string $display_command
     *           Command to display the non-compliant files.
     *     @type string $reason
     *           Explains why a file is non compliant for a CIS check.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Grafeas\V1\Compliance::initOnce();
        parent::__construct($data);
    }

    /**
     * Empty if `display_command` is set.
     *
     * Generated from protobuf field <code>string path = 1;</code>
     * @return string
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * Empty if `display_command` is set.
     *
     * Generated from protobuf field <code>string path = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->path = $var;

        return $this;
    }

    /**
     * Command to display the non-compliant files.
     *
     * Generated from protobuf field <code>string display_command = 2;</code>
     * @return string
     */
    public function getDisplayCommand()
    {
        return $this->display_command;
    }

    /**
     * Command to display the non-compliant files.
     *
     * Generated from protobuf field <code>string display_command = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayCommand($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_command = $var;

        return $this;
    }

    /**
     * Explains why a file is non compliant for a CIS check.
     *
     * Generated from protobuf field <code>string reason = 3;</code>
     * @return string
     */
    public function getReason()
    {
        return $this->reason;
    }

    /**
     * Explains why a file is non compliant for a CIS check.
     *
     * Generated from protobuf field <code>string reason = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setReason($var)
    {
        GPBUtil::checkString($var, True);
        $this->reason = $var;

        return $this;
    }

}

