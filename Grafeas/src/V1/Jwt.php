<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grafeas/v1/attestation.proto

namespace Grafeas\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>grafeas.v1.Jwt</code>
 */
class Jwt extends \Google\Protobuf\Internal\Message
{
    /**
     * The compact encoding of a JWS, which is always three base64 encoded strings
     * joined by periods. For details, see:
     * https://tools.ietf.org/html/rfc7515.html#section-3.1
     *
     * Generated from protobuf field <code>string compact_jwt = 1;</code>
     */
    private $compact_jwt = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $compact_jwt
     *           The compact encoding of a JWS, which is always three base64 encoded strings
     *           joined by periods. For details, see:
     *           https://tools.ietf.org/html/rfc7515.html#section-3.1
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Grafeas\V1\Attestation::initOnce();
        parent::__construct($data);
    }

    /**
     * The compact encoding of a JWS, which is always three base64 encoded strings
     * joined by periods. For details, see:
     * https://tools.ietf.org/html/rfc7515.html#section-3.1
     *
     * Generated from protobuf field <code>string compact_jwt = 1;</code>
     * @return string
     */
    public function getCompactJwt()
    {
        return $this->compact_jwt;
    }

    /**
     * The compact encoding of a JWS, which is always three base64 encoded strings
     * joined by periods. For details, see:
     * https://tools.ietf.org/html/rfc7515.html#section-3.1
     *
     * Generated from protobuf field <code>string compact_jwt = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCompactJwt($var)
    {
        GPBUtil::checkString($var, True);
        $this->compact_jwt = $var;

        return $this;
    }

}

