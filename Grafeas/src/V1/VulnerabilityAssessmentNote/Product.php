<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grafeas/v1/vex.proto

namespace Grafeas\V1\VulnerabilityAssessmentNote;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Product contains information about a product and how to uniquely identify
 * it.
 * (-- api-linter: core::0123::resource-annotation=disabled
 *     aip.dev/not-precedent: Product is not a separate resource. --)
 *
 * Generated from protobuf message <code>grafeas.v1.VulnerabilityAssessmentNote.Product</code>
 */
class Product extends \Google\Protobuf\Internal\Message
{
    /**
     * Name of the product.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * Token that identifies a product so that it can be referred to from other
     * parts in the document. There is no predefined format as long as it
     * uniquely identifies a group in the context of the current document.
     *
     * Generated from protobuf field <code>string id = 2;</code>
     */
    private $id = '';
    protected $identifier;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Name of the product.
     *     @type string $id
     *           Token that identifies a product so that it can be referred to from other
     *           parts in the document. There is no predefined format as long as it
     *           uniquely identifies a group in the context of the current document.
     *     @type string $generic_uri
     *           Contains a URI which is vendor-specific.
     *           Example: The artifact repository URL of an image.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Grafeas\V1\Vex::initOnce();
        parent::__construct($data);
    }

    /**
     * Name of the product.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Name of the product.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Token that identifies a product so that it can be referred to from other
     * parts in the document. There is no predefined format as long as it
     * uniquely identifies a group in the context of the current document.
     *
     * Generated from protobuf field <code>string id = 2;</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Token that identifies a product so that it can be referred to from other
     * parts in the document. There is no predefined format as long as it
     * uniquely identifies a group in the context of the current document.
     *
     * Generated from protobuf field <code>string id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Contains a URI which is vendor-specific.
     * Example: The artifact repository URL of an image.
     *
     * Generated from protobuf field <code>string generic_uri = 3;</code>
     * @return string
     */
    public function getGenericUri()
    {
        return $this->readOneof(3);
    }

    public function hasGenericUri()
    {
        return $this->hasOneof(3);
    }

    /**
     * Contains a URI which is vendor-specific.
     * Example: The artifact repository URL of an image.
     *
     * Generated from protobuf field <code>string generic_uri = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setGenericUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getIdentifier()
    {
        return $this->whichOneof("identifier");
    }

}


