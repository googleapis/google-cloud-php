<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grafeas/v1/vex.proto

namespace Grafeas\V1\VulnerabilityAssessmentNote\Assessment\Remediation;

use UnexpectedValueException;

/**
 * The type of remediation that can be applied.
 *
 * Protobuf type <code>grafeas.v1.VulnerabilityAssessmentNote.Assessment.Remediation.RemediationType</code>
 */
class RemediationType
{
    /**
     * No remediation type specified.
     *
     * Generated from protobuf enum <code>REMEDIATION_TYPE_UNSPECIFIED = 0;</code>
     */
    const REMEDIATION_TYPE_UNSPECIFIED = 0;
    /**
     * A MITIGATION is available.
     *
     * Generated from protobuf enum <code>MITIGATION = 1;</code>
     */
    const MITIGATION = 1;
    /**
     * No fix is planned.
     *
     * Generated from protobuf enum <code>NO_FIX_PLANNED = 2;</code>
     */
    const NO_FIX_PLANNED = 2;
    /**
     * Not available.
     *
     * Generated from protobuf enum <code>NONE_AVAILABLE = 3;</code>
     */
    const NONE_AVAILABLE = 3;
    /**
     * A vendor fix is available.
     *
     * Generated from protobuf enum <code>VENDOR_FIX = 4;</code>
     */
    const VENDOR_FIX = 4;
    /**
     * A workaround is available.
     *
     * Generated from protobuf enum <code>WORKAROUND = 5;</code>
     */
    const WORKAROUND = 5;

    private static $valueToName = [
        self::REMEDIATION_TYPE_UNSPECIFIED => 'REMEDIATION_TYPE_UNSPECIFIED',
        self::MITIGATION => 'MITIGATION',
        self::NO_FIX_PLANNED => 'NO_FIX_PLANNED',
        self::NONE_AVAILABLE => 'NONE_AVAILABLE',
        self::VENDOR_FIX => 'VENDOR_FIX',
        self::WORKAROUND => 'WORKAROUND',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


