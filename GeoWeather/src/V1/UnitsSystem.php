<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/weather/v1/units_system.proto

namespace Google\Geo\Weather\V1;

use UnexpectedValueException;

/**
 * Represents the units system used to measure values.
 *
 * Protobuf type <code>google.maps.weather.v1.UnitsSystem</code>
 */
class UnitsSystem
{
    /**
     * The units system is unspecified.
     *
     * Generated from protobuf enum <code>UNITS_SYSTEM_UNSPECIFIED = 0;</code>
     */
    const UNITS_SYSTEM_UNSPECIFIED = 0;
    /**
     * The imperial units system (e.g. Fahrenheit, miles, etc).
     *
     * Generated from protobuf enum <code>IMPERIAL = 1;</code>
     */
    const IMPERIAL = 1;
    /**
     * The metric units system (e.g. Celsius, kilometers, etc).
     *
     * Generated from protobuf enum <code>METRIC = 2;</code>
     */
    const METRIC = 2;

    private static $valueToName = [
        self::UNITS_SYSTEM_UNSPECIFIED => 'UNITS_SYSTEM_UNSPECIFIED',
        self::IMPERIAL => 'IMPERIAL',
        self::METRIC => 'METRIC',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

