<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/weather/v1/weather_service.proto

namespace Google\Geo\Weather\V1\LookupCurrentConditionsResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents a set of changes in the current conditions over the last 24
 * hours.
 *
 * Generated from protobuf message <code>google.maps.weather.v1.LookupCurrentConditionsResponse.CurrentConditionsHistory</code>
 */
class CurrentConditionsHistory extends \Google\Protobuf\Internal\Message
{
    /**
     * The current temperature minus the temperature 24 hours ago.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature temperature_change = 1;</code>
     */
    protected $temperature_change = null;
    /**
     * The maximum (high) temperature in the past 24 hours.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature max_temperature = 2;</code>
     */
    protected $max_temperature = null;
    /**
     * The minimum (low) temperature in the past 24 hours.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature min_temperature = 3;</code>
     */
    protected $min_temperature = null;
    /**
     * The amount of precipitation (rain or snow), measured as liquid water
     * equivalent, that has accumulated over the last 24 hours. Note: QPF is an
     * abbreviation for Quantitative Precipitation Forecast (please see the
     * QuantitativePrecipitationForecast definition for more details).
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.QuantitativePrecipitationForecast qpf = 6;</code>
     */
    protected $qpf = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Geo\Weather\V1\Temperature $temperature_change
     *           The current temperature minus the temperature 24 hours ago.
     *     @type \Google\Geo\Weather\V1\Temperature $max_temperature
     *           The maximum (high) temperature in the past 24 hours.
     *     @type \Google\Geo\Weather\V1\Temperature $min_temperature
     *           The minimum (low) temperature in the past 24 hours.
     *     @type \Google\Geo\Weather\V1\QuantitativePrecipitationForecast $qpf
     *           The amount of precipitation (rain or snow), measured as liquid water
     *           equivalent, that has accumulated over the last 24 hours. Note: QPF is an
     *           abbreviation for Quantitative Precipitation Forecast (please see the
     *           QuantitativePrecipitationForecast definition for more details).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Maps\Weather\V1\WeatherService::initOnce();
        parent::__construct($data);
    }

    /**
     * The current temperature minus the temperature 24 hours ago.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature temperature_change = 1;</code>
     * @return \Google\Geo\Weather\V1\Temperature|null
     */
    public function getTemperatureChange()
    {
        return $this->temperature_change;
    }

    public function hasTemperatureChange()
    {
        return isset($this->temperature_change);
    }

    public function clearTemperatureChange()
    {
        unset($this->temperature_change);
    }

    /**
     * The current temperature minus the temperature 24 hours ago.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature temperature_change = 1;</code>
     * @param \Google\Geo\Weather\V1\Temperature $var
     * @return $this
     */
    public function setTemperatureChange($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\Temperature::class);
        $this->temperature_change = $var;

        return $this;
    }

    /**
     * The maximum (high) temperature in the past 24 hours.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature max_temperature = 2;</code>
     * @return \Google\Geo\Weather\V1\Temperature|null
     */
    public function getMaxTemperature()
    {
        return $this->max_temperature;
    }

    public function hasMaxTemperature()
    {
        return isset($this->max_temperature);
    }

    public function clearMaxTemperature()
    {
        unset($this->max_temperature);
    }

    /**
     * The maximum (high) temperature in the past 24 hours.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature max_temperature = 2;</code>
     * @param \Google\Geo\Weather\V1\Temperature $var
     * @return $this
     */
    public function setMaxTemperature($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\Temperature::class);
        $this->max_temperature = $var;

        return $this;
    }

    /**
     * The minimum (low) temperature in the past 24 hours.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature min_temperature = 3;</code>
     * @return \Google\Geo\Weather\V1\Temperature|null
     */
    public function getMinTemperature()
    {
        return $this->min_temperature;
    }

    public function hasMinTemperature()
    {
        return isset($this->min_temperature);
    }

    public function clearMinTemperature()
    {
        unset($this->min_temperature);
    }

    /**
     * The minimum (low) temperature in the past 24 hours.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature min_temperature = 3;</code>
     * @param \Google\Geo\Weather\V1\Temperature $var
     * @return $this
     */
    public function setMinTemperature($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\Temperature::class);
        $this->min_temperature = $var;

        return $this;
    }

    /**
     * The amount of precipitation (rain or snow), measured as liquid water
     * equivalent, that has accumulated over the last 24 hours. Note: QPF is an
     * abbreviation for Quantitative Precipitation Forecast (please see the
     * QuantitativePrecipitationForecast definition for more details).
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.QuantitativePrecipitationForecast qpf = 6;</code>
     * @return \Google\Geo\Weather\V1\QuantitativePrecipitationForecast|null
     */
    public function getQpf()
    {
        return $this->qpf;
    }

    public function hasQpf()
    {
        return isset($this->qpf);
    }

    public function clearQpf()
    {
        unset($this->qpf);
    }

    /**
     * The amount of precipitation (rain or snow), measured as liquid water
     * equivalent, that has accumulated over the last 24 hours. Note: QPF is an
     * abbreviation for Quantitative Precipitation Forecast (please see the
     * QuantitativePrecipitationForecast definition for more details).
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.QuantitativePrecipitationForecast qpf = 6;</code>
     * @param \Google\Geo\Weather\V1\QuantitativePrecipitationForecast $var
     * @return $this
     */
    public function setQpf($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\QuantitativePrecipitationForecast::class);
        $this->qpf = $var;

        return $this;
    }

}


