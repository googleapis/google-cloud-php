<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/weather/v1/precipitation.proto

namespace Google\Geo\Weather\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents a set of precipitation values at a given location.
 *
 * Generated from protobuf message <code>google.maps.weather.v1.Precipitation</code>
 */
class Precipitation extends \Google\Protobuf\Internal\Message
{
    /**
     * The probability of precipitation (values from 0 to 100).
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.PrecipitationProbability probability = 1;</code>
     */
    protected $probability = null;
    /**
     * The amount of precipitation (rain or snow), measured as liquid water
     * equivalent, that has accumulated over a period of time. Note: QPF is an
     * abbreviation for Quantitative Precipitation Forecast (please see the
     * QuantitativePrecipitationForecast definition for more details).
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.QuantitativePrecipitationForecast qpf = 4;</code>
     */
    protected $qpf = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Geo\Weather\V1\PrecipitationProbability $probability
     *           The probability of precipitation (values from 0 to 100).
     *     @type \Google\Geo\Weather\V1\QuantitativePrecipitationForecast $qpf
     *           The amount of precipitation (rain or snow), measured as liquid water
     *           equivalent, that has accumulated over a period of time. Note: QPF is an
     *           abbreviation for Quantitative Precipitation Forecast (please see the
     *           QuantitativePrecipitationForecast definition for more details).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Maps\Weather\V1\Precipitation::initOnce();
        parent::__construct($data);
    }

    /**
     * The probability of precipitation (values from 0 to 100).
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.PrecipitationProbability probability = 1;</code>
     * @return \Google\Geo\Weather\V1\PrecipitationProbability|null
     */
    public function getProbability()
    {
        return $this->probability;
    }

    public function hasProbability()
    {
        return isset($this->probability);
    }

    public function clearProbability()
    {
        unset($this->probability);
    }

    /**
     * The probability of precipitation (values from 0 to 100).
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.PrecipitationProbability probability = 1;</code>
     * @param \Google\Geo\Weather\V1\PrecipitationProbability $var
     * @return $this
     */
    public function setProbability($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\PrecipitationProbability::class);
        $this->probability = $var;

        return $this;
    }

    /**
     * The amount of precipitation (rain or snow), measured as liquid water
     * equivalent, that has accumulated over a period of time. Note: QPF is an
     * abbreviation for Quantitative Precipitation Forecast (please see the
     * QuantitativePrecipitationForecast definition for more details).
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.QuantitativePrecipitationForecast qpf = 4;</code>
     * @return \Google\Geo\Weather\V1\QuantitativePrecipitationForecast|null
     */
    public function getQpf()
    {
        return $this->qpf;
    }

    public function hasQpf()
    {
        return isset($this->qpf);
    }

    public function clearQpf()
    {
        unset($this->qpf);
    }

    /**
     * The amount of precipitation (rain or snow), measured as liquid water
     * equivalent, that has accumulated over a period of time. Note: QPF is an
     * abbreviation for Quantitative Precipitation Forecast (please see the
     * QuantitativePrecipitationForecast definition for more details).
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.QuantitativePrecipitationForecast qpf = 4;</code>
     * @param \Google\Geo\Weather\V1\QuantitativePrecipitationForecast $var
     * @return $this
     */
    public function setQpf($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\QuantitativePrecipitationForecast::class);
        $this->qpf = $var;

        return $this;
    }

}

