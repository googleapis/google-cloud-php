<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/weather/v1/weather_service.proto

namespace Google\Geo\Weather\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Response for the LookupCurrentConditions RPC - represents the current weather
 * conditions at the requested location.
 *
 * Generated from protobuf message <code>google.maps.weather.v1.LookupCurrentConditionsResponse</code>
 */
class LookupCurrentConditionsResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Current time (UTC) associated with the returned data.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp current_time = 1;</code>
     */
    protected $current_time = null;
    /**
     * The time zone at the requested location.
     *
     * Generated from protobuf field <code>.google.type.TimeZone time_zone = 2;</code>
     */
    protected $time_zone = null;
    /**
     * True if the current time at the requested location is between the local
     * sunrise (inclusive) and the sunset (exclusive) times. Otherwise, it is
     * nighttime (between the sunset and the next sunrise).
     *
     * Generated from protobuf field <code>optional bool is_daytime = 3;</code>
     */
    protected $is_daytime = null;
    /**
     * The current weather condition.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.WeatherCondition weather_condition = 4;</code>
     */
    protected $weather_condition = null;
    /**
     * The current temperature.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature temperature = 5;</code>
     */
    protected $temperature = null;
    /**
     * The measure of how the temperature currently feels like at the requested
     * location.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature feels_like_temperature = 6;</code>
     */
    protected $feels_like_temperature = null;
    /**
     * The current dew point temperature.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature dew_point = 7;</code>
     */
    protected $dew_point = null;
    /**
     * The current heat index temperature.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature heat_index = 8;</code>
     */
    protected $heat_index = null;
    /**
     * The current wind chill, air temperature exposed on the skin.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature wind_chill = 9;</code>
     */
    protected $wind_chill = null;
    /**
     * The current percent of relative humidity (values from 0 to 100).
     *
     * Generated from protobuf field <code>optional int32 relative_humidity = 10;</code>
     */
    protected $relative_humidity = null;
    /**
     * The current ultraviolet (UV) index.
     *
     * Generated from protobuf field <code>optional int32 uv_index = 11;</code>
     */
    protected $uv_index = null;
    /**
     * The current precipitation probability and amount of precipitation
     * accumulated over the last hour.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Precipitation precipitation = 12;</code>
     */
    protected $precipitation = null;
    /**
     * The current thunderstorm probability (values from 0 to 100).
     *
     * Generated from protobuf field <code>optional int32 thunderstorm_probability = 13;</code>
     */
    protected $thunderstorm_probability = null;
    /**
     * The current air pressure conditions.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.AirPressure air_pressure = 14;</code>
     */
    protected $air_pressure = null;
    /**
     * The current wind conditions.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Wind wind = 15;</code>
     */
    protected $wind = null;
    /**
     * The current visibility.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Visibility visibility = 16;</code>
     */
    protected $visibility = null;
    /**
     * The current percentage of the sky covered by clouds (values from 0 to 100).
     *
     * Generated from protobuf field <code>optional int32 cloud_cover = 17;</code>
     */
    protected $cloud_cover = null;
    /**
     * The changes in the current conditions over the last 24 hours.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.LookupCurrentConditionsResponse.CurrentConditionsHistory current_conditions_history = 18;</code>
     */
    protected $current_conditions_history = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Timestamp $current_time
     *           Current time (UTC) associated with the returned data.
     *     @type \Google\Type\TimeZone $time_zone
     *           The time zone at the requested location.
     *     @type bool $is_daytime
     *           True if the current time at the requested location is between the local
     *           sunrise (inclusive) and the sunset (exclusive) times. Otherwise, it is
     *           nighttime (between the sunset and the next sunrise).
     *     @type \Google\Geo\Weather\V1\WeatherCondition $weather_condition
     *           The current weather condition.
     *     @type \Google\Geo\Weather\V1\Temperature $temperature
     *           The current temperature.
     *     @type \Google\Geo\Weather\V1\Temperature $feels_like_temperature
     *           The measure of how the temperature currently feels like at the requested
     *           location.
     *     @type \Google\Geo\Weather\V1\Temperature $dew_point
     *           The current dew point temperature.
     *     @type \Google\Geo\Weather\V1\Temperature $heat_index
     *           The current heat index temperature.
     *     @type \Google\Geo\Weather\V1\Temperature $wind_chill
     *           The current wind chill, air temperature exposed on the skin.
     *     @type int $relative_humidity
     *           The current percent of relative humidity (values from 0 to 100).
     *     @type int $uv_index
     *           The current ultraviolet (UV) index.
     *     @type \Google\Geo\Weather\V1\Precipitation $precipitation
     *           The current precipitation probability and amount of precipitation
     *           accumulated over the last hour.
     *     @type int $thunderstorm_probability
     *           The current thunderstorm probability (values from 0 to 100).
     *     @type \Google\Geo\Weather\V1\AirPressure $air_pressure
     *           The current air pressure conditions.
     *     @type \Google\Geo\Weather\V1\Wind $wind
     *           The current wind conditions.
     *     @type \Google\Geo\Weather\V1\Visibility $visibility
     *           The current visibility.
     *     @type int $cloud_cover
     *           The current percentage of the sky covered by clouds (values from 0 to 100).
     *     @type \Google\Geo\Weather\V1\LookupCurrentConditionsResponse\CurrentConditionsHistory $current_conditions_history
     *           The changes in the current conditions over the last 24 hours.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Maps\Weather\V1\WeatherService::initOnce();
        parent::__construct($data);
    }

    /**
     * Current time (UTC) associated with the returned data.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp current_time = 1;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCurrentTime()
    {
        return $this->current_time;
    }

    public function hasCurrentTime()
    {
        return isset($this->current_time);
    }

    public function clearCurrentTime()
    {
        unset($this->current_time);
    }

    /**
     * Current time (UTC) associated with the returned data.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp current_time = 1;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCurrentTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->current_time = $var;

        return $this;
    }

    /**
     * The time zone at the requested location.
     *
     * Generated from protobuf field <code>.google.type.TimeZone time_zone = 2;</code>
     * @return \Google\Type\TimeZone|null
     */
    public function getTimeZone()
    {
        return $this->time_zone;
    }

    public function hasTimeZone()
    {
        return isset($this->time_zone);
    }

    public function clearTimeZone()
    {
        unset($this->time_zone);
    }

    /**
     * The time zone at the requested location.
     *
     * Generated from protobuf field <code>.google.type.TimeZone time_zone = 2;</code>
     * @param \Google\Type\TimeZone $var
     * @return $this
     */
    public function setTimeZone($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\TimeZone::class);
        $this->time_zone = $var;

        return $this;
    }

    /**
     * True if the current time at the requested location is between the local
     * sunrise (inclusive) and the sunset (exclusive) times. Otherwise, it is
     * nighttime (between the sunset and the next sunrise).
     *
     * Generated from protobuf field <code>optional bool is_daytime = 3;</code>
     * @return bool
     */
    public function getIsDaytime()
    {
        return isset($this->is_daytime) ? $this->is_daytime : false;
    }

    public function hasIsDaytime()
    {
        return isset($this->is_daytime);
    }

    public function clearIsDaytime()
    {
        unset($this->is_daytime);
    }

    /**
     * True if the current time at the requested location is between the local
     * sunrise (inclusive) and the sunset (exclusive) times. Otherwise, it is
     * nighttime (between the sunset and the next sunrise).
     *
     * Generated from protobuf field <code>optional bool is_daytime = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsDaytime($var)
    {
        GPBUtil::checkBool($var);
        $this->is_daytime = $var;

        return $this;
    }

    /**
     * The current weather condition.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.WeatherCondition weather_condition = 4;</code>
     * @return \Google\Geo\Weather\V1\WeatherCondition|null
     */
    public function getWeatherCondition()
    {
        return $this->weather_condition;
    }

    public function hasWeatherCondition()
    {
        return isset($this->weather_condition);
    }

    public function clearWeatherCondition()
    {
        unset($this->weather_condition);
    }

    /**
     * The current weather condition.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.WeatherCondition weather_condition = 4;</code>
     * @param \Google\Geo\Weather\V1\WeatherCondition $var
     * @return $this
     */
    public function setWeatherCondition($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\WeatherCondition::class);
        $this->weather_condition = $var;

        return $this;
    }

    /**
     * The current temperature.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature temperature = 5;</code>
     * @return \Google\Geo\Weather\V1\Temperature|null
     */
    public function getTemperature()
    {
        return $this->temperature;
    }

    public function hasTemperature()
    {
        return isset($this->temperature);
    }

    public function clearTemperature()
    {
        unset($this->temperature);
    }

    /**
     * The current temperature.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature temperature = 5;</code>
     * @param \Google\Geo\Weather\V1\Temperature $var
     * @return $this
     */
    public function setTemperature($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\Temperature::class);
        $this->temperature = $var;

        return $this;
    }

    /**
     * The measure of how the temperature currently feels like at the requested
     * location.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature feels_like_temperature = 6;</code>
     * @return \Google\Geo\Weather\V1\Temperature|null
     */
    public function getFeelsLikeTemperature()
    {
        return $this->feels_like_temperature;
    }

    public function hasFeelsLikeTemperature()
    {
        return isset($this->feels_like_temperature);
    }

    public function clearFeelsLikeTemperature()
    {
        unset($this->feels_like_temperature);
    }

    /**
     * The measure of how the temperature currently feels like at the requested
     * location.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature feels_like_temperature = 6;</code>
     * @param \Google\Geo\Weather\V1\Temperature $var
     * @return $this
     */
    public function setFeelsLikeTemperature($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\Temperature::class);
        $this->feels_like_temperature = $var;

        return $this;
    }

    /**
     * The current dew point temperature.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature dew_point = 7;</code>
     * @return \Google\Geo\Weather\V1\Temperature|null
     */
    public function getDewPoint()
    {
        return $this->dew_point;
    }

    public function hasDewPoint()
    {
        return isset($this->dew_point);
    }

    public function clearDewPoint()
    {
        unset($this->dew_point);
    }

    /**
     * The current dew point temperature.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature dew_point = 7;</code>
     * @param \Google\Geo\Weather\V1\Temperature $var
     * @return $this
     */
    public function setDewPoint($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\Temperature::class);
        $this->dew_point = $var;

        return $this;
    }

    /**
     * The current heat index temperature.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature heat_index = 8;</code>
     * @return \Google\Geo\Weather\V1\Temperature|null
     */
    public function getHeatIndex()
    {
        return $this->heat_index;
    }

    public function hasHeatIndex()
    {
        return isset($this->heat_index);
    }

    public function clearHeatIndex()
    {
        unset($this->heat_index);
    }

    /**
     * The current heat index temperature.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature heat_index = 8;</code>
     * @param \Google\Geo\Weather\V1\Temperature $var
     * @return $this
     */
    public function setHeatIndex($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\Temperature::class);
        $this->heat_index = $var;

        return $this;
    }

    /**
     * The current wind chill, air temperature exposed on the skin.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature wind_chill = 9;</code>
     * @return \Google\Geo\Weather\V1\Temperature|null
     */
    public function getWindChill()
    {
        return $this->wind_chill;
    }

    public function hasWindChill()
    {
        return isset($this->wind_chill);
    }

    public function clearWindChill()
    {
        unset($this->wind_chill);
    }

    /**
     * The current wind chill, air temperature exposed on the skin.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Temperature wind_chill = 9;</code>
     * @param \Google\Geo\Weather\V1\Temperature $var
     * @return $this
     */
    public function setWindChill($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\Temperature::class);
        $this->wind_chill = $var;

        return $this;
    }

    /**
     * The current percent of relative humidity (values from 0 to 100).
     *
     * Generated from protobuf field <code>optional int32 relative_humidity = 10;</code>
     * @return int
     */
    public function getRelativeHumidity()
    {
        return isset($this->relative_humidity) ? $this->relative_humidity : 0;
    }

    public function hasRelativeHumidity()
    {
        return isset($this->relative_humidity);
    }

    public function clearRelativeHumidity()
    {
        unset($this->relative_humidity);
    }

    /**
     * The current percent of relative humidity (values from 0 to 100).
     *
     * Generated from protobuf field <code>optional int32 relative_humidity = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setRelativeHumidity($var)
    {
        GPBUtil::checkInt32($var);
        $this->relative_humidity = $var;

        return $this;
    }

    /**
     * The current ultraviolet (UV) index.
     *
     * Generated from protobuf field <code>optional int32 uv_index = 11;</code>
     * @return int
     */
    public function getUvIndex()
    {
        return isset($this->uv_index) ? $this->uv_index : 0;
    }

    public function hasUvIndex()
    {
        return isset($this->uv_index);
    }

    public function clearUvIndex()
    {
        unset($this->uv_index);
    }

    /**
     * The current ultraviolet (UV) index.
     *
     * Generated from protobuf field <code>optional int32 uv_index = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setUvIndex($var)
    {
        GPBUtil::checkInt32($var);
        $this->uv_index = $var;

        return $this;
    }

    /**
     * The current precipitation probability and amount of precipitation
     * accumulated over the last hour.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Precipitation precipitation = 12;</code>
     * @return \Google\Geo\Weather\V1\Precipitation|null
     */
    public function getPrecipitation()
    {
        return $this->precipitation;
    }

    public function hasPrecipitation()
    {
        return isset($this->precipitation);
    }

    public function clearPrecipitation()
    {
        unset($this->precipitation);
    }

    /**
     * The current precipitation probability and amount of precipitation
     * accumulated over the last hour.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Precipitation precipitation = 12;</code>
     * @param \Google\Geo\Weather\V1\Precipitation $var
     * @return $this
     */
    public function setPrecipitation($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\Precipitation::class);
        $this->precipitation = $var;

        return $this;
    }

    /**
     * The current thunderstorm probability (values from 0 to 100).
     *
     * Generated from protobuf field <code>optional int32 thunderstorm_probability = 13;</code>
     * @return int
     */
    public function getThunderstormProbability()
    {
        return isset($this->thunderstorm_probability) ? $this->thunderstorm_probability : 0;
    }

    public function hasThunderstormProbability()
    {
        return isset($this->thunderstorm_probability);
    }

    public function clearThunderstormProbability()
    {
        unset($this->thunderstorm_probability);
    }

    /**
     * The current thunderstorm probability (values from 0 to 100).
     *
     * Generated from protobuf field <code>optional int32 thunderstorm_probability = 13;</code>
     * @param int $var
     * @return $this
     */
    public function setThunderstormProbability($var)
    {
        GPBUtil::checkInt32($var);
        $this->thunderstorm_probability = $var;

        return $this;
    }

    /**
     * The current air pressure conditions.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.AirPressure air_pressure = 14;</code>
     * @return \Google\Geo\Weather\V1\AirPressure|null
     */
    public function getAirPressure()
    {
        return $this->air_pressure;
    }

    public function hasAirPressure()
    {
        return isset($this->air_pressure);
    }

    public function clearAirPressure()
    {
        unset($this->air_pressure);
    }

    /**
     * The current air pressure conditions.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.AirPressure air_pressure = 14;</code>
     * @param \Google\Geo\Weather\V1\AirPressure $var
     * @return $this
     */
    public function setAirPressure($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\AirPressure::class);
        $this->air_pressure = $var;

        return $this;
    }

    /**
     * The current wind conditions.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Wind wind = 15;</code>
     * @return \Google\Geo\Weather\V1\Wind|null
     */
    public function getWind()
    {
        return $this->wind;
    }

    public function hasWind()
    {
        return isset($this->wind);
    }

    public function clearWind()
    {
        unset($this->wind);
    }

    /**
     * The current wind conditions.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Wind wind = 15;</code>
     * @param \Google\Geo\Weather\V1\Wind $var
     * @return $this
     */
    public function setWind($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\Wind::class);
        $this->wind = $var;

        return $this;
    }

    /**
     * The current visibility.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Visibility visibility = 16;</code>
     * @return \Google\Geo\Weather\V1\Visibility|null
     */
    public function getVisibility()
    {
        return $this->visibility;
    }

    public function hasVisibility()
    {
        return isset($this->visibility);
    }

    public function clearVisibility()
    {
        unset($this->visibility);
    }

    /**
     * The current visibility.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.Visibility visibility = 16;</code>
     * @param \Google\Geo\Weather\V1\Visibility $var
     * @return $this
     */
    public function setVisibility($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\Visibility::class);
        $this->visibility = $var;

        return $this;
    }

    /**
     * The current percentage of the sky covered by clouds (values from 0 to 100).
     *
     * Generated from protobuf field <code>optional int32 cloud_cover = 17;</code>
     * @return int
     */
    public function getCloudCover()
    {
        return isset($this->cloud_cover) ? $this->cloud_cover : 0;
    }

    public function hasCloudCover()
    {
        return isset($this->cloud_cover);
    }

    public function clearCloudCover()
    {
        unset($this->cloud_cover);
    }

    /**
     * The current percentage of the sky covered by clouds (values from 0 to 100).
     *
     * Generated from protobuf field <code>optional int32 cloud_cover = 17;</code>
     * @param int $var
     * @return $this
     */
    public function setCloudCover($var)
    {
        GPBUtil::checkInt32($var);
        $this->cloud_cover = $var;

        return $this;
    }

    /**
     * The changes in the current conditions over the last 24 hours.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.LookupCurrentConditionsResponse.CurrentConditionsHistory current_conditions_history = 18;</code>
     * @return \Google\Geo\Weather\V1\LookupCurrentConditionsResponse\CurrentConditionsHistory|null
     */
    public function getCurrentConditionsHistory()
    {
        return $this->current_conditions_history;
    }

    public function hasCurrentConditionsHistory()
    {
        return isset($this->current_conditions_history);
    }

    public function clearCurrentConditionsHistory()
    {
        unset($this->current_conditions_history);
    }

    /**
     * The changes in the current conditions over the last 24 hours.
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.LookupCurrentConditionsResponse.CurrentConditionsHistory current_conditions_history = 18;</code>
     * @param \Google\Geo\Weather\V1\LookupCurrentConditionsResponse\CurrentConditionsHistory $var
     * @return $this
     */
    public function setCurrentConditionsHistory($var)
    {
        GPBUtil::checkMessage($var, \Google\Geo\Weather\V1\LookupCurrentConditionsResponse\CurrentConditionsHistory::class);
        $this->current_conditions_history = $var;

        return $this;
    }

}

