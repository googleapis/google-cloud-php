<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/weather/v1/weather_service.proto

namespace Google\Geo\Weather\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for the LookupCurrentConditions RPC.
 *
 * Generated from protobuf message <code>google.maps.weather.v1.LookupCurrentConditionsRequest</code>
 */
class LookupCurrentConditionsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The location to get the current weather conditions for.
     *
     * Generated from protobuf field <code>.google.type.LatLng location = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $location = null;
    /**
     * Optional. The units system to use for the returned weather conditions. If
     * not provided, the returned weather conditions will be in the metric system
     * (default = METRIC).
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.UnitsSystem units_system = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $units_system = 0;
    /**
     * Optional. Allows the client to choose the language for the response. If
     * data cannot be provided for that language, the API uses the closest match.
     * Allowed values rely on the IETF BCP-47 standard. The default value is "en".
     *
     * Generated from protobuf field <code>optional string language_code = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $language_code = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Type\LatLng $location
     *           Required. The location to get the current weather conditions for.
     *     @type int $units_system
     *           Optional. The units system to use for the returned weather conditions. If
     *           not provided, the returned weather conditions will be in the metric system
     *           (default = METRIC).
     *     @type string $language_code
     *           Optional. Allows the client to choose the language for the response. If
     *           data cannot be provided for that language, the API uses the closest match.
     *           Allowed values rely on the IETF BCP-47 standard. The default value is "en".
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Maps\Weather\V1\WeatherService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The location to get the current weather conditions for.
     *
     * Generated from protobuf field <code>.google.type.LatLng location = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Type\LatLng|null
     */
    public function getLocation()
    {
        return $this->location;
    }

    public function hasLocation()
    {
        return isset($this->location);
    }

    public function clearLocation()
    {
        unset($this->location);
    }

    /**
     * Required. The location to get the current weather conditions for.
     *
     * Generated from protobuf field <code>.google.type.LatLng location = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Type\LatLng $var
     * @return $this
     */
    public function setLocation($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\LatLng::class);
        $this->location = $var;

        return $this;
    }

    /**
     * Optional. The units system to use for the returned weather conditions. If
     * not provided, the returned weather conditions will be in the metric system
     * (default = METRIC).
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.UnitsSystem units_system = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getUnitsSystem()
    {
        return $this->units_system;
    }

    /**
     * Optional. The units system to use for the returned weather conditions. If
     * not provided, the returned weather conditions will be in the metric system
     * (default = METRIC).
     *
     * Generated from protobuf field <code>.google.maps.weather.v1.UnitsSystem units_system = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setUnitsSystem($var)
    {
        GPBUtil::checkEnum($var, \Google\Geo\Weather\V1\UnitsSystem::class);
        $this->units_system = $var;

        return $this;
    }

    /**
     * Optional. Allows the client to choose the language for the response. If
     * data cannot be provided for that language, the API uses the closest match.
     * Allowed values rely on the IETF BCP-47 standard. The default value is "en".
     *
     * Generated from protobuf field <code>optional string language_code = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getLanguageCode()
    {
        return isset($this->language_code) ? $this->language_code : '';
    }

    public function hasLanguageCode()
    {
        return isset($this->language_code);
    }

    public function clearLanguageCode()
    {
        unset($this->language_code);
    }

    /**
     * Optional. Allows the client to choose the language for the response. If
     * data cannot be provided for that language, the API uses the closest match.
     * Allowed values rely on the IETF BCP-47 standard. The default value is "en".
     *
     * Generated from protobuf field <code>optional string language_code = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setLanguageCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->language_code = $var;

        return $this;
    }

}

