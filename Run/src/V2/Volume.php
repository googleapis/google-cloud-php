<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/run/v2/k8s.min.proto

namespace Google\Cloud\Run\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Volume represents a named volume in a container.
 *
 * Generated from protobuf message <code>google.cloud.run.v2.Volume</code>
 */
class Volume extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Volume's name.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $name = '';
    protected $volume_type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. Volume's name.
     *     @type \Google\Cloud\Run\V2\SecretVolumeSource $secret
     *           Secret represents a secret that should populate this volume.
     *     @type \Google\Cloud\Run\V2\CloudSqlInstance $cloud_sql_instance
     *           For Cloud SQL volumes, contains the specific instances that should be
     *           mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
     *           more information on how to connect Cloud SQL and Cloud Run.
     *     @type \Google\Cloud\Run\V2\EmptyDirVolumeSource $empty_dir
     *           Ephemeral storage used as a shared volume.
     *     @type \Google\Cloud\Run\V2\NFSVolumeSource $nfs
     *           For NFS Voumes, contains the path to the nfs Volume
     *     @type \Google\Cloud\Run\V2\GCSVolumeSource $gcs
     *           Persistent storage backed by a Google Cloud Storage bucket.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Run\V2\K8SMin::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Volume's name.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. Volume's name.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Secret represents a secret that should populate this volume.
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
     * @return \Google\Cloud\Run\V2\SecretVolumeSource|null
     */
    public function getSecret()
    {
        return $this->readOneof(2);
    }

    public function hasSecret()
    {
        return $this->hasOneof(2);
    }

    /**
     * Secret represents a secret that should populate this volume.
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.SecretVolumeSource secret = 2;</code>
     * @param \Google\Cloud\Run\V2\SecretVolumeSource $var
     * @return $this
     */
    public function setSecret($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Run\V2\SecretVolumeSource::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * For Cloud SQL volumes, contains the specific instances that should be
     * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
     * more information on how to connect Cloud SQL and Cloud Run.
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
     * @return \Google\Cloud\Run\V2\CloudSqlInstance|null
     */
    public function getCloudSqlInstance()
    {
        return $this->readOneof(3);
    }

    public function hasCloudSqlInstance()
    {
        return $this->hasOneof(3);
    }

    /**
     * For Cloud SQL volumes, contains the specific instances that should be
     * mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for
     * more information on how to connect Cloud SQL and Cloud Run.
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.CloudSqlInstance cloud_sql_instance = 3;</code>
     * @param \Google\Cloud\Run\V2\CloudSqlInstance $var
     * @return $this
     */
    public function setCloudSqlInstance($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Run\V2\CloudSqlInstance::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Ephemeral storage used as a shared volume.
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.EmptyDirVolumeSource empty_dir = 4;</code>
     * @return \Google\Cloud\Run\V2\EmptyDirVolumeSource|null
     */
    public function getEmptyDir()
    {
        return $this->readOneof(4);
    }

    public function hasEmptyDir()
    {
        return $this->hasOneof(4);
    }

    /**
     * Ephemeral storage used as a shared volume.
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.EmptyDirVolumeSource empty_dir = 4;</code>
     * @param \Google\Cloud\Run\V2\EmptyDirVolumeSource $var
     * @return $this
     */
    public function setEmptyDir($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Run\V2\EmptyDirVolumeSource::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * For NFS Voumes, contains the path to the nfs Volume
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.NFSVolumeSource nfs = 5;</code>
     * @return \Google\Cloud\Run\V2\NFSVolumeSource|null
     */
    public function getNfs()
    {
        return $this->readOneof(5);
    }

    public function hasNfs()
    {
        return $this->hasOneof(5);
    }

    /**
     * For NFS Voumes, contains the path to the nfs Volume
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.NFSVolumeSource nfs = 5;</code>
     * @param \Google\Cloud\Run\V2\NFSVolumeSource $var
     * @return $this
     */
    public function setNfs($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Run\V2\NFSVolumeSource::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Persistent storage backed by a Google Cloud Storage bucket.
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.GCSVolumeSource gcs = 6;</code>
     * @return \Google\Cloud\Run\V2\GCSVolumeSource|null
     */
    public function getGcs()
    {
        return $this->readOneof(6);
    }

    public function hasGcs()
    {
        return $this->hasOneof(6);
    }

    /**
     * Persistent storage backed by a Google Cloud Storage bucket.
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.GCSVolumeSource gcs = 6;</code>
     * @param \Google\Cloud\Run\V2\GCSVolumeSource $var
     * @return $this
     */
    public function setGcs($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Run\V2\GCSVolumeSource::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getVolumeType()
    {
        return $this->whichOneof("volume_type");
    }

}

