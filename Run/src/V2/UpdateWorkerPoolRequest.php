<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/run/v2/worker_pool.proto

namespace Google\Cloud\Run\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for updating a worker pool.
 *
 * Generated from protobuf message <code>google.cloud.run.v2.UpdateWorkerPoolRequest</code>
 */
class UpdateWorkerPoolRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The list of fields to be updated.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $update_mask = null;
    /**
     * Required. The WorkerPool to be updated.
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.WorkerPool worker_pool = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $worker_pool = null;
    /**
     * Optional. Indicates that the request should be validated and default values
     * populated, without persisting the request or updating any resources.
     *
     * Generated from protobuf field <code>bool validate_only = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $validate_only = false;
    /**
     * Optional. If set to true, and if the WorkerPool does not exist, it will
     * create a new one. The caller must have 'run.workerpools.create' permissions
     * if this is set to true and the WorkerPool does not exist.
     *
     * Generated from protobuf field <code>bool allow_missing = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $allow_missing = false;
    /**
     * Optional. If set to true, a new revision will be created from the template
     * even if the system doesn't detect any changes from the previously deployed
     * revision.
     * This may be useful for cases where the underlying resources need to be
     * recreated or reinitialized. For example if the image is specified by label,
     * but the underlying image digest has changed) or if the container performs
     * deployment initialization work that needs to be performed again.
     *
     * Generated from protobuf field <code>bool force_new_revision = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $force_new_revision = false;

    /**
     * @param \Google\Cloud\Run\V2\WorkerPool $workerPool Required. The WorkerPool to be updated.
     *
     * @return \Google\Cloud\Run\V2\UpdateWorkerPoolRequest
     *
     * @experimental
     */
    public static function build(\Google\Cloud\Run\V2\WorkerPool $workerPool): self
    {
        return (new self())
            ->setWorkerPool($workerPool);
    }

    /**
     * @param \Google\Cloud\Run\V2\WorkerPool $workerPool Required. The WorkerPool to be updated.
     * @param \Google\Protobuf\FieldMask      $updateMask Optional. The list of fields to be updated.
     *
     * @return \Google\Cloud\Run\V2\UpdateWorkerPoolRequest
     *
     * @experimental
     */
    public static function buildFromWorkerPoolUpdateMask(\Google\Cloud\Run\V2\WorkerPool $workerPool, \Google\Protobuf\FieldMask $updateMask): self
    {
        return (new self())
            ->setWorkerPool($workerPool)
            ->setUpdateMask($updateMask);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           Optional. The list of fields to be updated.
     *     @type \Google\Cloud\Run\V2\WorkerPool $worker_pool
     *           Required. The WorkerPool to be updated.
     *     @type bool $validate_only
     *           Optional. Indicates that the request should be validated and default values
     *           populated, without persisting the request or updating any resources.
     *     @type bool $allow_missing
     *           Optional. If set to true, and if the WorkerPool does not exist, it will
     *           create a new one. The caller must have 'run.workerpools.create' permissions
     *           if this is set to true and the WorkerPool does not exist.
     *     @type bool $force_new_revision
     *           Optional. If set to true, a new revision will be created from the template
     *           even if the system doesn't detect any changes from the previously deployed
     *           revision.
     *           This may be useful for cases where the underlying resources need to be
     *           recreated or reinitialized. For example if the image is specified by label,
     *           but the underlying image digest has changed) or if the container performs
     *           deployment initialization work that needs to be performed again.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Run\V2\WorkerPool::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The list of fields to be updated.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * Optional. The list of fields to be updated.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

    /**
     * Required. The WorkerPool to be updated.
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.WorkerPool worker_pool = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\Run\V2\WorkerPool|null
     */
    public function getWorkerPool()
    {
        return $this->worker_pool;
    }

    public function hasWorkerPool()
    {
        return isset($this->worker_pool);
    }

    public function clearWorkerPool()
    {
        unset($this->worker_pool);
    }

    /**
     * Required. The WorkerPool to be updated.
     *
     * Generated from protobuf field <code>.google.cloud.run.v2.WorkerPool worker_pool = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Run\V2\WorkerPool $var
     * @return $this
     */
    public function setWorkerPool($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Run\V2\WorkerPool::class);
        $this->worker_pool = $var;

        return $this;
    }

    /**
     * Optional. Indicates that the request should be validated and default values
     * populated, without persisting the request or updating any resources.
     *
     * Generated from protobuf field <code>bool validate_only = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getValidateOnly()
    {
        return $this->validate_only;
    }

    /**
     * Optional. Indicates that the request should be validated and default values
     * populated, without persisting the request or updating any resources.
     *
     * Generated from protobuf field <code>bool validate_only = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setValidateOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->validate_only = $var;

        return $this;
    }

    /**
     * Optional. If set to true, and if the WorkerPool does not exist, it will
     * create a new one. The caller must have 'run.workerpools.create' permissions
     * if this is set to true and the WorkerPool does not exist.
     *
     * Generated from protobuf field <code>bool allow_missing = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getAllowMissing()
    {
        return $this->allow_missing;
    }

    /**
     * Optional. If set to true, and if the WorkerPool does not exist, it will
     * create a new one. The caller must have 'run.workerpools.create' permissions
     * if this is set to true and the WorkerPool does not exist.
     *
     * Generated from protobuf field <code>bool allow_missing = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setAllowMissing($var)
    {
        GPBUtil::checkBool($var);
        $this->allow_missing = $var;

        return $this;
    }

    /**
     * Optional. If set to true, a new revision will be created from the template
     * even if the system doesn't detect any changes from the previously deployed
     * revision.
     * This may be useful for cases where the underlying resources need to be
     * recreated or reinitialized. For example if the image is specified by label,
     * but the underlying image digest has changed) or if the container performs
     * deployment initialization work that needs to be performed again.
     *
     * Generated from protobuf field <code>bool force_new_revision = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getForceNewRevision()
    {
        return $this->force_new_revision;
    }

    /**
     * Optional. If set to true, a new revision will be created from the template
     * even if the system doesn't detect any changes from the previously deployed
     * revision.
     * This may be useful for cases where the underlying resources need to be
     * recreated or reinitialized. For example if the image is specified by label,
     * but the underlying image digest has changed) or if the container performs
     * deployment initialization work that needs to be performed again.
     *
     * Generated from protobuf field <code>bool force_new_revision = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setForceNewRevision($var)
    {
        GPBUtil::checkBool($var);
        $this->force_new_revision = $var;

        return $this;
    }

}

