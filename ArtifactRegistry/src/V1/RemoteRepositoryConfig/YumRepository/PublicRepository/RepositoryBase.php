<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/artifactregistry/v1/repository.proto

namespace Google\Cloud\ArtifactRegistry\V1\RemoteRepositoryConfig\YumRepository\PublicRepository;

use UnexpectedValueException;

/**
 * Predefined list of publicly available repository bases for Yum.
 *
 * Protobuf type <code>google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.RepositoryBase</code>
 */
class RepositoryBase
{
    /**
     * Unspecified repository base.
     *
     * Generated from protobuf enum <code>REPOSITORY_BASE_UNSPECIFIED = 0;</code>
     */
    const REPOSITORY_BASE_UNSPECIFIED = 0;
    /**
     * CentOS.
     *
     * Generated from protobuf enum <code>CENTOS = 1;</code>
     */
    const CENTOS = 1;
    /**
     * CentOS Debug.
     *
     * Generated from protobuf enum <code>CENTOS_DEBUG = 2;</code>
     */
    const CENTOS_DEBUG = 2;
    /**
     * CentOS Vault.
     *
     * Generated from protobuf enum <code>CENTOS_VAULT = 3;</code>
     */
    const CENTOS_VAULT = 3;
    /**
     * CentOS Stream.
     *
     * Generated from protobuf enum <code>CENTOS_STREAM = 4;</code>
     */
    const CENTOS_STREAM = 4;
    /**
     * Rocky.
     *
     * Generated from protobuf enum <code>ROCKY = 5;</code>
     */
    const ROCKY = 5;
    /**
     * Fedora Extra Packages for Enterprise Linux (EPEL).
     *
     * Generated from protobuf enum <code>EPEL = 6;</code>
     */
    const EPEL = 6;

    private static $valueToName = [
        self::REPOSITORY_BASE_UNSPECIFIED => 'REPOSITORY_BASE_UNSPECIFIED',
        self::CENTOS => 'CENTOS',
        self::CENTOS_DEBUG => 'CENTOS_DEBUG',
        self::CENTOS_VAULT => 'CENTOS_VAULT',
        self::CENTOS_STREAM => 'CENTOS_STREAM',
        self::ROCKY => 'ROCKY',
        self::EPEL => 'EPEL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(RepositoryBase::class, \Google\Cloud\ArtifactRegistry\V1\RemoteRepositoryConfig_YumRepository_PublicRepository_RepositoryBase::class);

