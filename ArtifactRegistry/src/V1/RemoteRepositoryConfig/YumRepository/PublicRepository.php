<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/artifactregistry/v1/repository.proto

namespace Google\Cloud\ArtifactRegistry\V1\RemoteRepositoryConfig\YumRepository;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Publicly available Yum repositories constructed from a common repository
 * base and a custom repository path.
 *
 * Generated from protobuf message <code>google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository</code>
 */
class PublicRepository extends \Google\Protobuf\Internal\Message
{
    /**
     * A common public repository base for Yum.
     *
     * Generated from protobuf field <code>.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.RepositoryBase repository_base = 1;</code>
     */
    private $repository_base = 0;
    /**
     * A custom field to define a path to a specific repository from the base.
     *
     * Generated from protobuf field <code>string repository_path = 2;</code>
     */
    private $repository_path = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $repository_base
     *           A common public repository base for Yum.
     *     @type string $repository_path
     *           A custom field to define a path to a specific repository from the base.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Artifactregistry\V1\Repository::initOnce();
        parent::__construct($data);
    }

    /**
     * A common public repository base for Yum.
     *
     * Generated from protobuf field <code>.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.RepositoryBase repository_base = 1;</code>
     * @return int
     */
    public function getRepositoryBase()
    {
        return $this->repository_base;
    }

    /**
     * A common public repository base for Yum.
     *
     * Generated from protobuf field <code>.google.devtools.artifactregistry.v1.RemoteRepositoryConfig.YumRepository.PublicRepository.RepositoryBase repository_base = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setRepositoryBase($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\ArtifactRegistry\V1\RemoteRepositoryConfig\YumRepository\PublicRepository\RepositoryBase::class);
        $this->repository_base = $var;

        return $this;
    }

    /**
     * A custom field to define a path to a specific repository from the base.
     *
     * Generated from protobuf field <code>string repository_path = 2;</code>
     * @return string
     */
    public function getRepositoryPath()
    {
        return $this->repository_path;
    }

    /**
     * A custom field to define a path to a specific repository from the base.
     *
     * Generated from protobuf field <code>string repository_path = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setRepositoryPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->repository_path = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PublicRepository::class, \Google\Cloud\ArtifactRegistry\V1\RemoteRepositoryConfig_YumRepository_PublicRepository::class);

