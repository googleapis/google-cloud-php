<?php
/*
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * GENERATED CODE WARNING
 * Generated by gapic-generator-php from the file
 * https://github.com/googleapis/googleapis/blob/master/google/cloud/gdchardwaremanagement/v1alpha/service.proto
 * Updates to the above are reflected here through a refresh process.
 *
 * @experimental
 */

namespace Google\Cloud\GdcHardwareManagement\V1alpha\Client;

use Google\ApiCore\ApiException;
use Google\ApiCore\CredentialsWrapper;
use Google\ApiCore\GapicClientTrait;
use Google\ApiCore\OperationResponse;
use Google\ApiCore\PagedListResponse;
use Google\ApiCore\ResourceHelperTrait;
use Google\ApiCore\RetrySettings;
use Google\ApiCore\Transport\TransportInterface;
use Google\ApiCore\ValidationException;
use Google\Auth\FetchAuthTokenInterface;
use Google\Cloud\GdcHardwareManagement\V1alpha\ChangeLogEntry;
use Google\Cloud\GdcHardwareManagement\V1alpha\Comment;
use Google\Cloud\GdcHardwareManagement\V1alpha\CreateCommentRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\CreateHardwareGroupRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\CreateHardwareRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\CreateOrderRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\CreateSiteRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\CreateZoneRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\DeleteHardwareGroupRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\DeleteHardwareRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\DeleteOrderRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\DeleteZoneRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\GetChangeLogEntryRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\GetCommentRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\GetHardwareGroupRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\GetHardwareRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\GetOrderRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\GetSiteRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\GetSkuRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\GetZoneRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\Hardware;
use Google\Cloud\GdcHardwareManagement\V1alpha\HardwareGroup;
use Google\Cloud\GdcHardwareManagement\V1alpha\ListChangeLogEntriesRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\ListCommentsRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\ListHardwareGroupsRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\ListHardwareRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\ListOrdersRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\ListSitesRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\ListSkusRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\ListZonesRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\Order;
use Google\Cloud\GdcHardwareManagement\V1alpha\RecordActionOnCommentRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\SignalZoneStateRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\Site;
use Google\Cloud\GdcHardwareManagement\V1alpha\Sku;
use Google\Cloud\GdcHardwareManagement\V1alpha\SubmitOrderRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\UpdateHardwareGroupRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\UpdateHardwareRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\UpdateOrderRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\UpdateSiteRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\UpdateZoneRequest;
use Google\Cloud\GdcHardwareManagement\V1alpha\Zone;
use Google\Cloud\Location\GetLocationRequest;
use Google\Cloud\Location\ListLocationsRequest;
use Google\Cloud\Location\Location;
use Google\LongRunning\Client\OperationsClient;
use Google\LongRunning\Operation;
use GuzzleHttp\Promise\PromiseInterface;

/**
 * Service Description: The GDC Hardware Management service.
 *
 * This class provides the ability to make remote calls to the backing service through method
 * calls that map to API methods.
 *
 * Many parameters require resource names to be formatted in a particular way. To
 * assist with these names, this class includes a format method for each type of
 * name, and additionally a parseName method to extract the individual identifiers
 * contained within formatted names that are returned by the API.
 *
 * @experimental
 *
 * @method PromiseInterface createCommentAsync(CreateCommentRequest $request, array $optionalArgs = [])
 * @method PromiseInterface createHardwareAsync(CreateHardwareRequest $request, array $optionalArgs = [])
 * @method PromiseInterface createHardwareGroupAsync(CreateHardwareGroupRequest $request, array $optionalArgs = [])
 * @method PromiseInterface createOrderAsync(CreateOrderRequest $request, array $optionalArgs = [])
 * @method PromiseInterface createSiteAsync(CreateSiteRequest $request, array $optionalArgs = [])
 * @method PromiseInterface createZoneAsync(CreateZoneRequest $request, array $optionalArgs = [])
 * @method PromiseInterface deleteHardwareAsync(DeleteHardwareRequest $request, array $optionalArgs = [])
 * @method PromiseInterface deleteHardwareGroupAsync(DeleteHardwareGroupRequest $request, array $optionalArgs = [])
 * @method PromiseInterface deleteOrderAsync(DeleteOrderRequest $request, array $optionalArgs = [])
 * @method PromiseInterface deleteZoneAsync(DeleteZoneRequest $request, array $optionalArgs = [])
 * @method PromiseInterface getChangeLogEntryAsync(GetChangeLogEntryRequest $request, array $optionalArgs = [])
 * @method PromiseInterface getCommentAsync(GetCommentRequest $request, array $optionalArgs = [])
 * @method PromiseInterface getHardwareAsync(GetHardwareRequest $request, array $optionalArgs = [])
 * @method PromiseInterface getHardwareGroupAsync(GetHardwareGroupRequest $request, array $optionalArgs = [])
 * @method PromiseInterface getOrderAsync(GetOrderRequest $request, array $optionalArgs = [])
 * @method PromiseInterface getSiteAsync(GetSiteRequest $request, array $optionalArgs = [])
 * @method PromiseInterface getSkuAsync(GetSkuRequest $request, array $optionalArgs = [])
 * @method PromiseInterface getZoneAsync(GetZoneRequest $request, array $optionalArgs = [])
 * @method PromiseInterface listChangeLogEntriesAsync(ListChangeLogEntriesRequest $request, array $optionalArgs = [])
 * @method PromiseInterface listCommentsAsync(ListCommentsRequest $request, array $optionalArgs = [])
 * @method PromiseInterface listHardwareAsync(ListHardwareRequest $request, array $optionalArgs = [])
 * @method PromiseInterface listHardwareGroupsAsync(ListHardwareGroupsRequest $request, array $optionalArgs = [])
 * @method PromiseInterface listOrdersAsync(ListOrdersRequest $request, array $optionalArgs = [])
 * @method PromiseInterface listSitesAsync(ListSitesRequest $request, array $optionalArgs = [])
 * @method PromiseInterface listSkusAsync(ListSkusRequest $request, array $optionalArgs = [])
 * @method PromiseInterface listZonesAsync(ListZonesRequest $request, array $optionalArgs = [])
 * @method PromiseInterface recordActionOnCommentAsync(RecordActionOnCommentRequest $request, array $optionalArgs = [])
 * @method PromiseInterface signalZoneStateAsync(SignalZoneStateRequest $request, array $optionalArgs = [])
 * @method PromiseInterface submitOrderAsync(SubmitOrderRequest $request, array $optionalArgs = [])
 * @method PromiseInterface updateHardwareAsync(UpdateHardwareRequest $request, array $optionalArgs = [])
 * @method PromiseInterface updateHardwareGroupAsync(UpdateHardwareGroupRequest $request, array $optionalArgs = [])
 * @method PromiseInterface updateOrderAsync(UpdateOrderRequest $request, array $optionalArgs = [])
 * @method PromiseInterface updateSiteAsync(UpdateSiteRequest $request, array $optionalArgs = [])
 * @method PromiseInterface updateZoneAsync(UpdateZoneRequest $request, array $optionalArgs = [])
 * @method PromiseInterface getLocationAsync(GetLocationRequest $request, array $optionalArgs = [])
 * @method PromiseInterface listLocationsAsync(ListLocationsRequest $request, array $optionalArgs = [])
 */
final class GDCHardwareManagementClient
{
    use GapicClientTrait;
    use ResourceHelperTrait;

    /** The name of the service. */
    private const SERVICE_NAME = 'google.cloud.gdchardwaremanagement.v1alpha.GDCHardwareManagement';

    /**
     * The default address of the service.
     *
     * @deprecated SERVICE_ADDRESS_TEMPLATE should be used instead.
     */
    private const SERVICE_ADDRESS = 'gdchardwaremanagement.googleapis.com';

    /** The address template of the service. */
    private const SERVICE_ADDRESS_TEMPLATE = 'gdchardwaremanagement.UNIVERSE_DOMAIN';

    /** The default port of the service. */
    private const DEFAULT_SERVICE_PORT = 443;

    /** The name of the code generator, to be included in the agent header. */
    private const CODEGEN_NAME = 'gapic';

    /** The default scopes required by the service. */
    public static $serviceScopes = ['https://www.googleapis.com/auth/cloud-platform'];

    private $operationsClient;

    private static function getClientDefaults()
    {
        return [
            'serviceName' => self::SERVICE_NAME,
            'apiEndpoint' => self::SERVICE_ADDRESS . ':' . self::DEFAULT_SERVICE_PORT,
            'clientConfig' => __DIR__ . '/../resources/gdc_hardware_management_client_config.json',
            'descriptorsConfigPath' => __DIR__ . '/../resources/gdc_hardware_management_descriptor_config.php',
            'gcpApiConfigPath' => __DIR__ . '/../resources/gdc_hardware_management_grpc_config.json',
            'credentialsConfig' => [
                'defaultScopes' => self::$serviceScopes,
            ],
            'transportConfig' => [
                'rest' => [
                    'restClientConfigPath' => __DIR__ . '/../resources/gdc_hardware_management_rest_client_config.php',
                ],
            ],
        ];
    }

    /**
     * Return an OperationsClient object with the same endpoint as $this.
     *
     * @return OperationsClient
     *
     * @experimental
     */
    public function getOperationsClient()
    {
        return $this->operationsClient;
    }

    /**
     * Resume an existing long running operation that was previously started by a long
     * running API method. If $methodName is not provided, or does not match a long
     * running API method, then the operation can still be resumed, but the
     * OperationResponse object will not deserialize the final response.
     *
     * @param string $operationName The name of the long running operation
     * @param string $methodName    The name of the method used to start the operation
     *
     * @return OperationResponse
     *
     * @experimental
     */
    public function resumeOperation($operationName, $methodName = null)
    {
        $options = isset($this->descriptors[$methodName]['longRunning'])
            ? $this->descriptors[$methodName]['longRunning']
            : [];
        $operation = new OperationResponse($operationName, $this->getOperationsClient(), $options);
        $operation->reload();
        return $operation;
    }

    /**
     * Create the default operation client for the service.
     *
     * @param array $options ClientOptions for the client.
     *
     * @return OperationsClient
     */
    private function createOperationsClient(array $options)
    {
        // Unset client-specific configuration options
        unset($options['serviceName'], $options['clientConfig'], $options['descriptorsConfigPath']);

        if (isset($options['operationsClient'])) {
            return $options['operationsClient'];
        }

        return new OperationsClient($options);
    }

    /**
     * Formats a string containing the fully-qualified path to represent a
     * change_log_entry resource.
     *
     * @param string $project
     * @param string $location
     * @param string $order
     * @param string $changeLogEntry
     *
     * @return string The formatted change_log_entry resource.
     *
     * @experimental
     */
    public static function changeLogEntryName(
        string $project,
        string $location,
        string $order,
        string $changeLogEntry
    ): string {
        return self::getPathTemplate('changeLogEntry')->render([
            'project' => $project,
            'location' => $location,
            'order' => $order,
            'change_log_entry' => $changeLogEntry,
        ]);
    }

    /**
     * Formats a string containing the fully-qualified path to represent a comment
     * resource.
     *
     * @param string $project
     * @param string $location
     * @param string $order
     * @param string $comment
     *
     * @return string The formatted comment resource.
     *
     * @experimental
     */
    public static function commentName(string $project, string $location, string $order, string $comment): string
    {
        return self::getPathTemplate('comment')->render([
            'project' => $project,
            'location' => $location,
            'order' => $order,
            'comment' => $comment,
        ]);
    }

    /**
     * Formats a string containing the fully-qualified path to represent a hardware
     * resource.
     *
     * @param string $project
     * @param string $location
     * @param string $hardware
     *
     * @return string The formatted hardware resource.
     *
     * @experimental
     */
    public static function hardwareName(string $project, string $location, string $hardware): string
    {
        return self::getPathTemplate('hardware')->render([
            'project' => $project,
            'location' => $location,
            'hardware' => $hardware,
        ]);
    }

    /**
     * Formats a string containing the fully-qualified path to represent a
     * hardware_group resource.
     *
     * @param string $project
     * @param string $location
     * @param string $order
     * @param string $hardwareGroup
     *
     * @return string The formatted hardware_group resource.
     *
     * @experimental
     */
    public static function hardwareGroupName(
        string $project,
        string $location,
        string $order,
        string $hardwareGroup
    ): string {
        return self::getPathTemplate('hardwareGroup')->render([
            'project' => $project,
            'location' => $location,
            'order' => $order,
            'hardware_group' => $hardwareGroup,
        ]);
    }

    /**
     * Formats a string containing the fully-qualified path to represent a location
     * resource.
     *
     * @param string $project
     * @param string $location
     *
     * @return string The formatted location resource.
     *
     * @experimental
     */
    public static function locationName(string $project, string $location): string
    {
        return self::getPathTemplate('location')->render([
            'project' => $project,
            'location' => $location,
        ]);
    }

    /**
     * Formats a string containing the fully-qualified path to represent a order
     * resource.
     *
     * @param string $project
     * @param string $location
     * @param string $order
     *
     * @return string The formatted order resource.
     *
     * @experimental
     */
    public static function orderName(string $project, string $location, string $order): string
    {
        return self::getPathTemplate('order')->render([
            'project' => $project,
            'location' => $location,
            'order' => $order,
        ]);
    }

    /**
     * Formats a string containing the fully-qualified path to represent a site
     * resource.
     *
     * @param string $project
     * @param string $location
     * @param string $site
     *
     * @return string The formatted site resource.
     *
     * @experimental
     */
    public static function siteName(string $project, string $location, string $site): string
    {
        return self::getPathTemplate('site')->render([
            'project' => $project,
            'location' => $location,
            'site' => $site,
        ]);
    }

    /**
     * Formats a string containing the fully-qualified path to represent a sku
     * resource.
     *
     * @param string $project
     * @param string $location
     * @param string $sku
     *
     * @return string The formatted sku resource.
     *
     * @experimental
     */
    public static function skuName(string $project, string $location, string $sku): string
    {
        return self::getPathTemplate('sku')->render([
            'project' => $project,
            'location' => $location,
            'sku' => $sku,
        ]);
    }

    /**
     * Formats a string containing the fully-qualified path to represent a zone
     * resource.
     *
     * @param string $project
     * @param string $location
     * @param string $zone
     *
     * @return string The formatted zone resource.
     *
     * @experimental
     */
    public static function zoneName(string $project, string $location, string $zone): string
    {
        return self::getPathTemplate('zone')->render([
            'project' => $project,
            'location' => $location,
            'zone' => $zone,
        ]);
    }

    /**
     * Parses a formatted name string and returns an associative array of the components in the name.
     * The following name formats are supported:
     * Template: Pattern
     * - changeLogEntry: projects/{project}/locations/{location}/orders/{order}/changeLogEntries/{change_log_entry}
     * - comment: projects/{project}/locations/{location}/orders/{order}/comments/{comment}
     * - hardware: projects/{project}/locations/{location}/hardware/{hardware}
     * - hardwareGroup: projects/{project}/locations/{location}/orders/{order}/hardwareGroups/{hardware_group}
     * - location: projects/{project}/locations/{location}
     * - order: projects/{project}/locations/{location}/orders/{order}
     * - site: projects/{project}/locations/{location}/sites/{site}
     * - sku: projects/{project}/locations/{location}/skus/{sku}
     * - zone: projects/{project}/locations/{location}/zones/{zone}
     *
     * The optional $template argument can be supplied to specify a particular pattern,
     * and must match one of the templates listed above. If no $template argument is
     * provided, or if the $template argument does not match one of the templates
     * listed, then parseName will check each of the supported templates, and return
     * the first match.
     *
     * @param string $formattedName The formatted name string
     * @param string $template      Optional name of template to match
     *
     * @return array An associative array from name component IDs to component values.
     *
     * @throws ValidationException If $formattedName could not be matched.
     *
     * @experimental
     */
    public static function parseName(string $formattedName, string $template = null): array
    {
        return self::parseFormattedName($formattedName, $template);
    }

    /**
     * Constructor.
     *
     * @param array $options {
     *     Optional. Options for configuring the service API wrapper.
     *
     *     @type string $apiEndpoint
     *           The address of the API remote host. May optionally include the port, formatted
     *           as "<uri>:<port>". Default 'gdchardwaremanagement.googleapis.com:443'.
     *     @type string|array|FetchAuthTokenInterface|CredentialsWrapper $credentials
     *           The credentials to be used by the client to authorize API calls. This option
     *           accepts either a path to a credentials file, or a decoded credentials file as a
     *           PHP array.
     *           *Advanced usage*: In addition, this option can also accept a pre-constructed
     *           {@see \Google\Auth\FetchAuthTokenInterface} object or
     *           {@see \Google\ApiCore\CredentialsWrapper} object. Note that when one of these
     *           objects are provided, any settings in $credentialsConfig will be ignored.
     *     @type array $credentialsConfig
     *           Options used to configure credentials, including auth token caching, for the
     *           client. For a full list of supporting configuration options, see
     *           {@see \Google\ApiCore\CredentialsWrapper::build()} .
     *     @type bool $disableRetries
     *           Determines whether or not retries defined by the client configuration should be
     *           disabled. Defaults to `false`.
     *     @type string|array $clientConfig
     *           Client method configuration, including retry settings. This option can be either
     *           a path to a JSON file, or a PHP array containing the decoded JSON data. By
     *           default this settings points to the default client config file, which is
     *           provided in the resources folder.
     *     @type string|TransportInterface $transport
     *           The transport used for executing network requests. May be either the string
     *           `rest` or `grpc`. Defaults to `grpc` if gRPC support is detected on the system.
     *           *Advanced usage*: Additionally, it is possible to pass in an already
     *           instantiated {@see \Google\ApiCore\Transport\TransportInterface} object. Note
     *           that when this object is provided, any settings in $transportConfig, and any
     *           $apiEndpoint setting, will be ignored.
     *     @type array $transportConfig
     *           Configuration options that will be used to construct the transport. Options for
     *           each supported transport type should be passed in a key for that transport. For
     *           example:
     *           $transportConfig = [
     *               'grpc' => [...],
     *               'rest' => [...],
     *           ];
     *           See the {@see \Google\ApiCore\Transport\GrpcTransport::build()} and
     *           {@see \Google\ApiCore\Transport\RestTransport::build()} methods for the
     *           supported options.
     *     @type callable $clientCertSource
     *           A callable which returns the client cert as a string. This can be used to
     *           provide a certificate and private key to the transport layer for mTLS.
     * }
     *
     * @throws ValidationException
     *
     * @experimental
     */
    public function __construct(array $options = [])
    {
        $clientOptions = $this->buildClientOptions($options);
        $this->setClientOptions($clientOptions);
        $this->operationsClient = $this->createOperationsClient($clientOptions);
    }

    /** Handles execution of the async variants for each documented method. */
    public function __call($method, $args)
    {
        if (substr($method, -5) !== 'Async') {
            trigger_error('Call to undefined method ' . __CLASS__ . "::$method()", E_USER_ERROR);
        }

        array_unshift($args, substr($method, 0, -5));
        return call_user_func_array([$this, 'startAsyncCall'], $args);
    }

    /**
     * Creates a new comment on an order.
     *
     * The async variant is {@see GDCHardwareManagementClient::createCommentAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/create_comment.php
     *
     * @param CreateCommentRequest $request     A request to house fields associated with the call.
     * @param array                $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function createComment(CreateCommentRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('CreateComment', $request, $callOptions)->wait();
    }

    /**
     * Creates new hardware in a given project and location.
     *
     * The async variant is {@see GDCHardwareManagementClient::createHardwareAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/create_hardware.php
     *
     * @param CreateHardwareRequest $request     A request to house fields associated with the call.
     * @param array                 $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function createHardware(CreateHardwareRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('CreateHardware', $request, $callOptions)->wait();
    }

    /**
     * Creates a new hardware group in a given order.
     *
     * The async variant is
     * {@see GDCHardwareManagementClient::createHardwareGroupAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/create_hardware_group.php
     *
     * @param CreateHardwareGroupRequest $request     A request to house fields associated with the call.
     * @param array                      $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function createHardwareGroup(CreateHardwareGroupRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('CreateHardwareGroup', $request, $callOptions)->wait();
    }

    /**
     * Creates a new order in a given project and location.
     *
     * The async variant is {@see GDCHardwareManagementClient::createOrderAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/create_order.php
     *
     * @param CreateOrderRequest $request     A request to house fields associated with the call.
     * @param array              $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function createOrder(CreateOrderRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('CreateOrder', $request, $callOptions)->wait();
    }

    /**
     * Creates a new site in a given project and location.
     *
     * The async variant is {@see GDCHardwareManagementClient::createSiteAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/create_site.php
     *
     * @param CreateSiteRequest $request     A request to house fields associated with the call.
     * @param array             $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function createSite(CreateSiteRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('CreateSite', $request, $callOptions)->wait();
    }

    /**
     * Creates a new zone in a given project and location.
     *
     * The async variant is {@see GDCHardwareManagementClient::createZoneAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/create_zone.php
     *
     * @param CreateZoneRequest $request     A request to house fields associated with the call.
     * @param array             $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function createZone(CreateZoneRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('CreateZone', $request, $callOptions)->wait();
    }

    /**
     * Deletes hardware.
     *
     * The async variant is {@see GDCHardwareManagementClient::deleteHardwareAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/delete_hardware.php
     *
     * @param DeleteHardwareRequest $request     A request to house fields associated with the call.
     * @param array                 $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function deleteHardware(DeleteHardwareRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('DeleteHardware', $request, $callOptions)->wait();
    }

    /**
     * Deletes a hardware group.
     *
     * The async variant is
     * {@see GDCHardwareManagementClient::deleteHardwareGroupAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/delete_hardware_group.php
     *
     * @param DeleteHardwareGroupRequest $request     A request to house fields associated with the call.
     * @param array                      $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function deleteHardwareGroup(DeleteHardwareGroupRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('DeleteHardwareGroup', $request, $callOptions)->wait();
    }

    /**
     * Deletes an order.
     *
     * The async variant is {@see GDCHardwareManagementClient::deleteOrderAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/delete_order.php
     *
     * @param DeleteOrderRequest $request     A request to house fields associated with the call.
     * @param array              $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function deleteOrder(DeleteOrderRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('DeleteOrder', $request, $callOptions)->wait();
    }

    /**
     * Deletes a zone.
     *
     * The async variant is {@see GDCHardwareManagementClient::deleteZoneAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/delete_zone.php
     *
     * @param DeleteZoneRequest $request     A request to house fields associated with the call.
     * @param array             $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function deleteZone(DeleteZoneRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('DeleteZone', $request, $callOptions)->wait();
    }

    /**
     * Gets details of a change to an order.
     *
     * The async variant is
     * {@see GDCHardwareManagementClient::getChangeLogEntryAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/get_change_log_entry.php
     *
     * @param GetChangeLogEntryRequest $request     A request to house fields associated with the call.
     * @param array                    $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return ChangeLogEntry
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function getChangeLogEntry(GetChangeLogEntryRequest $request, array $callOptions = []): ChangeLogEntry
    {
        return $this->startApiCall('GetChangeLogEntry', $request, $callOptions)->wait();
    }

    /**
     * Gets the content of a comment.
     *
     * The async variant is {@see GDCHardwareManagementClient::getCommentAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/get_comment.php
     *
     * @param GetCommentRequest $request     A request to house fields associated with the call.
     * @param array             $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return Comment
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function getComment(GetCommentRequest $request, array $callOptions = []): Comment
    {
        return $this->startApiCall('GetComment', $request, $callOptions)->wait();
    }

    /**
     * Gets hardware details.
     *
     * The async variant is {@see GDCHardwareManagementClient::getHardwareAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/get_hardware.php
     *
     * @param GetHardwareRequest $request     A request to house fields associated with the call.
     * @param array              $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return Hardware
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function getHardware(GetHardwareRequest $request, array $callOptions = []): Hardware
    {
        return $this->startApiCall('GetHardware', $request, $callOptions)->wait();
    }

    /**
     * Gets details of a hardware group.
     *
     * The async variant is {@see GDCHardwareManagementClient::getHardwareGroupAsync()}
     * .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/get_hardware_group.php
     *
     * @param GetHardwareGroupRequest $request     A request to house fields associated with the call.
     * @param array                   $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return HardwareGroup
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function getHardwareGroup(GetHardwareGroupRequest $request, array $callOptions = []): HardwareGroup
    {
        return $this->startApiCall('GetHardwareGroup', $request, $callOptions)->wait();
    }

    /**
     * Gets details of an order.
     *
     * The async variant is {@see GDCHardwareManagementClient::getOrderAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/get_order.php
     *
     * @param GetOrderRequest $request     A request to house fields associated with the call.
     * @param array           $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return Order
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function getOrder(GetOrderRequest $request, array $callOptions = []): Order
    {
        return $this->startApiCall('GetOrder', $request, $callOptions)->wait();
    }

    /**
     * Gets details of a site.
     *
     * The async variant is {@see GDCHardwareManagementClient::getSiteAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/get_site.php
     *
     * @param GetSiteRequest $request     A request to house fields associated with the call.
     * @param array          $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return Site
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function getSite(GetSiteRequest $request, array $callOptions = []): Site
    {
        return $this->startApiCall('GetSite', $request, $callOptions)->wait();
    }

    /**
     * Gets details of an SKU.
     *
     * The async variant is {@see GDCHardwareManagementClient::getSkuAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/get_sku.php
     *
     * @param GetSkuRequest $request     A request to house fields associated with the call.
     * @param array         $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return Sku
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function getSku(GetSkuRequest $request, array $callOptions = []): Sku
    {
        return $this->startApiCall('GetSku', $request, $callOptions)->wait();
    }

    /**
     * Gets details of a zone.
     *
     * The async variant is {@see GDCHardwareManagementClient::getZoneAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/get_zone.php
     *
     * @param GetZoneRequest $request     A request to house fields associated with the call.
     * @param array          $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return Zone
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function getZone(GetZoneRequest $request, array $callOptions = []): Zone
    {
        return $this->startApiCall('GetZone', $request, $callOptions)->wait();
    }

    /**
     * Lists the changes made to an order.
     *
     * The async variant is
     * {@see GDCHardwareManagementClient::listChangeLogEntriesAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/list_change_log_entries.php
     *
     * @param ListChangeLogEntriesRequest $request     A request to house fields associated with the call.
     * @param array                       $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return PagedListResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function listChangeLogEntries(
        ListChangeLogEntriesRequest $request,
        array $callOptions = []
    ): PagedListResponse {
        return $this->startApiCall('ListChangeLogEntries', $request, $callOptions);
    }

    /**
     * Lists the comments on an order.
     *
     * The async variant is {@see GDCHardwareManagementClient::listCommentsAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/list_comments.php
     *
     * @param ListCommentsRequest $request     A request to house fields associated with the call.
     * @param array               $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return PagedListResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function listComments(ListCommentsRequest $request, array $callOptions = []): PagedListResponse
    {
        return $this->startApiCall('ListComments', $request, $callOptions);
    }

    /**
     * Lists hardware in a given project and location.
     *
     * The async variant is {@see GDCHardwareManagementClient::listHardwareAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/list_hardware.php
     *
     * @param ListHardwareRequest $request     A request to house fields associated with the call.
     * @param array               $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return PagedListResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function listHardware(ListHardwareRequest $request, array $callOptions = []): PagedListResponse
    {
        return $this->startApiCall('ListHardware', $request, $callOptions);
    }

    /**
     * Lists hardware groups in a given order.
     *
     * The async variant is
     * {@see GDCHardwareManagementClient::listHardwareGroupsAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/list_hardware_groups.php
     *
     * @param ListHardwareGroupsRequest $request     A request to house fields associated with the call.
     * @param array                     $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return PagedListResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function listHardwareGroups(ListHardwareGroupsRequest $request, array $callOptions = []): PagedListResponse
    {
        return $this->startApiCall('ListHardwareGroups', $request, $callOptions);
    }

    /**
     * Lists orders in a given project and location.
     *
     * The async variant is {@see GDCHardwareManagementClient::listOrdersAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/list_orders.php
     *
     * @param ListOrdersRequest $request     A request to house fields associated with the call.
     * @param array             $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return PagedListResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function listOrders(ListOrdersRequest $request, array $callOptions = []): PagedListResponse
    {
        return $this->startApiCall('ListOrders', $request, $callOptions);
    }

    /**
     * Lists sites in a given project and location.
     *
     * The async variant is {@see GDCHardwareManagementClient::listSitesAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/list_sites.php
     *
     * @param ListSitesRequest $request     A request to house fields associated with the call.
     * @param array            $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return PagedListResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function listSites(ListSitesRequest $request, array $callOptions = []): PagedListResponse
    {
        return $this->startApiCall('ListSites', $request, $callOptions);
    }

    /**
     * Lists SKUs for a given project and location.
     *
     * The async variant is {@see GDCHardwareManagementClient::listSkusAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/list_skus.php
     *
     * @param ListSkusRequest $request     A request to house fields associated with the call.
     * @param array           $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return PagedListResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function listSkus(ListSkusRequest $request, array $callOptions = []): PagedListResponse
    {
        return $this->startApiCall('ListSkus', $request, $callOptions);
    }

    /**
     * Lists zones in a given project and location.
     *
     * The async variant is {@see GDCHardwareManagementClient::listZonesAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/list_zones.php
     *
     * @param ListZonesRequest $request     A request to house fields associated with the call.
     * @param array            $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return PagedListResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function listZones(ListZonesRequest $request, array $callOptions = []): PagedListResponse
    {
        return $this->startApiCall('ListZones', $request, $callOptions);
    }

    /**
     * Record Action on a Comment. If the Action specified in the request is READ,
     * the viewed time in the comment is set to the time the request was received.
     * If the comment is already marked as read, subsequent calls will be ignored.
     * If the Action is UNREAD, the viewed time is cleared from the comment.
     *
     * The async variant is
     * {@see GDCHardwareManagementClient::recordActionOnCommentAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/record_action_on_comment.php
     *
     * @param RecordActionOnCommentRequest $request     A request to house fields associated with the call.
     * @param array                        $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return Comment
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function recordActionOnComment(RecordActionOnCommentRequest $request, array $callOptions = []): Comment
    {
        return $this->startApiCall('RecordActionOnComment', $request, $callOptions)->wait();
    }

    /**
     * Signals the state of a zone.
     *
     * The async variant is {@see GDCHardwareManagementClient::signalZoneStateAsync()}
     * .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/signal_zone_state.php
     *
     * @param SignalZoneStateRequest $request     A request to house fields associated with the call.
     * @param array                  $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function signalZoneState(SignalZoneStateRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('SignalZoneState', $request, $callOptions)->wait();
    }

    /**
     * Submits an order.
     *
     * The async variant is {@see GDCHardwareManagementClient::submitOrderAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/submit_order.php
     *
     * @param SubmitOrderRequest $request     A request to house fields associated with the call.
     * @param array              $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function submitOrder(SubmitOrderRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('SubmitOrder', $request, $callOptions)->wait();
    }

    /**
     * Updates hardware parameters.
     *
     * The async variant is {@see GDCHardwareManagementClient::updateHardwareAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/update_hardware.php
     *
     * @param UpdateHardwareRequest $request     A request to house fields associated with the call.
     * @param array                 $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function updateHardware(UpdateHardwareRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('UpdateHardware', $request, $callOptions)->wait();
    }

    /**
     * Updates the parameters of a hardware group.
     *
     * The async variant is
     * {@see GDCHardwareManagementClient::updateHardwareGroupAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/update_hardware_group.php
     *
     * @param UpdateHardwareGroupRequest $request     A request to house fields associated with the call.
     * @param array                      $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function updateHardwareGroup(UpdateHardwareGroupRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('UpdateHardwareGroup', $request, $callOptions)->wait();
    }

    /**
     * Updates the parameters of an order.
     *
     * The async variant is {@see GDCHardwareManagementClient::updateOrderAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/update_order.php
     *
     * @param UpdateOrderRequest $request     A request to house fields associated with the call.
     * @param array              $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function updateOrder(UpdateOrderRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('UpdateOrder', $request, $callOptions)->wait();
    }

    /**
     * Updates the parameters of a site.
     *
     * The async variant is {@see GDCHardwareManagementClient::updateSiteAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/update_site.php
     *
     * @param UpdateSiteRequest $request     A request to house fields associated with the call.
     * @param array             $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function updateSite(UpdateSiteRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('UpdateSite', $request, $callOptions)->wait();
    }

    /**
     * Updates the parameters of a zone.
     *
     * The async variant is {@see GDCHardwareManagementClient::updateZoneAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/update_zone.php
     *
     * @param UpdateZoneRequest $request     A request to house fields associated with the call.
     * @param array             $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return OperationResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function updateZone(UpdateZoneRequest $request, array $callOptions = []): OperationResponse
    {
        return $this->startApiCall('UpdateZone', $request, $callOptions)->wait();
    }

    /**
     * Gets information about a location.
     *
     * The async variant is {@see GDCHardwareManagementClient::getLocationAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/get_location.php
     *
     * @param GetLocationRequest $request     A request to house fields associated with the call.
     * @param array              $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return Location
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function getLocation(GetLocationRequest $request, array $callOptions = []): Location
    {
        return $this->startApiCall('GetLocation', $request, $callOptions)->wait();
    }

    /**
     * Lists information about the supported locations for this service.
     *
     * The async variant is {@see GDCHardwareManagementClient::listLocationsAsync()} .
     *
     * @example samples/V1alpha/GDCHardwareManagementClient/list_locations.php
     *
     * @param ListLocationsRequest $request     A request to house fields associated with the call.
     * @param array                $callOptions {
     *     Optional.
     *
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a {@see RetrySettings} object, or an
     *           associative array of retry settings parameters. See the documentation on
     *           {@see RetrySettings} for example usage.
     * }
     *
     * @return PagedListResponse
     *
     * @throws ApiException Thrown if the API call fails.
     *
     * @experimental
     */
    public function listLocations(ListLocationsRequest $request, array $callOptions = []): PagedListResponse
    {
        return $this->startApiCall('ListLocations', $request, $callOptions);
    }
}
