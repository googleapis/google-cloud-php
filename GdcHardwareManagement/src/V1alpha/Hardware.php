<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/gdchardwaremanagement/v1alpha/resources.proto

namespace Google\Cloud\GdcHardwareManagement\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An instance of hardware installed at a site.
 *
 * Generated from protobuf message <code>google.cloud.gdchardwaremanagement.v1alpha.Hardware</code>
 */
class Hardware extends \Google\Protobuf\Internal\Message
{
    /**
     * Identifier. Name of this hardware.
     * Format: `projects/{project}/locations/{location}/hardware/{hardware}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     */
    protected $name = '';
    /**
     * Optional. Display name for this hardware.
     *
     * Generated from protobuf field <code>string display_name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $display_name = '';
    /**
     * Output only. Time when this hardware was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $create_time = null;
    /**
     * Output only. Time when this hardware was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $update_time = null;
    /**
     * Optional. Labels associated with this hardware as key value pairs.
     * For more information about labels, see [Create and manage
     * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
     *
     * Generated from protobuf field <code>map<string, string> labels = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $labels;
    /**
     * Required. Name of the order that this hardware belongs to.
     * Format: `projects/{project}/locations/{location}/orders/{order}`
     *
     * Generated from protobuf field <code>string order = 6 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $order = '';
    /**
     * Output only. Name for the hardware group that this hardware belongs to.
     * Format:
     * `projects/{project}/locations/{location}/orders/{order}/hardwareGroups/{hardware_group}`
     *
     * Generated from protobuf field <code>string hardware_group = 7 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = {</code>
     */
    protected $hardware_group = '';
    /**
     * Required. Name for the site that this hardware belongs to.
     * Format: `projects/{project}/locations/{location}/sites/{site}`
     *
     * Generated from protobuf field <code>string site = 8 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $site = '';
    /**
     * Output only. Current state for this hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.Hardware.State state = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $state = 0;
    /**
     * Output only. Link to the Customer Intake Questionnaire (CIQ) sheet for this
     * Hardware.
     *
     * Generated from protobuf field <code>string ciq_uri = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $ciq_uri = '';
    /**
     * Required. Configuration for this hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwareConfig config = 11 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $config = null;
    /**
     * Output only. Estimated installation date for this hardware.
     *
     * Generated from protobuf field <code>.google.type.Date estimated_installation_date = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $estimated_installation_date = null;
    /**
     * Optional. Physical properties of this hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo physical_info = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $physical_info = null;
    /**
     * Optional. Information for installation of this hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo installation_info = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $installation_info = null;
    /**
     * Required. Name for the zone that this hardware belongs to.
     * Format: `projects/{project}/locations/{location}/zones/{zone}`
     *
     * Generated from protobuf field <code>string zone = 15 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $zone = '';
    /**
     * Optional. Requested installation date for this hardware. This is
     * auto-populated when the order is accepted, if the hardware's HardwareGroup
     * specifies this. It can also be filled in by the customer.
     *
     * Generated from protobuf field <code>.google.type.Date requested_installation_date = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $requested_installation_date = null;
    /**
     * Output only. Actual installation date for this hardware. Filled in by
     * Google.
     *
     * Generated from protobuf field <code>.google.type.Date actual_installation_date = 17 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $actual_installation_date = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Identifier. Name of this hardware.
     *           Format: `projects/{project}/locations/{location}/hardware/{hardware}`
     *     @type string $display_name
     *           Optional. Display name for this hardware.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. Time when this hardware was created.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. Time when this hardware was last updated.
     *     @type array|\Google\Protobuf\Internal\MapField $labels
     *           Optional. Labels associated with this hardware as key value pairs.
     *           For more information about labels, see [Create and manage
     *           labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
     *     @type string $order
     *           Required. Name of the order that this hardware belongs to.
     *           Format: `projects/{project}/locations/{location}/orders/{order}`
     *     @type string $hardware_group
     *           Output only. Name for the hardware group that this hardware belongs to.
     *           Format:
     *           `projects/{project}/locations/{location}/orders/{order}/hardwareGroups/{hardware_group}`
     *     @type string $site
     *           Required. Name for the site that this hardware belongs to.
     *           Format: `projects/{project}/locations/{location}/sites/{site}`
     *     @type int $state
     *           Output only. Current state for this hardware.
     *     @type string $ciq_uri
     *           Output only. Link to the Customer Intake Questionnaire (CIQ) sheet for this
     *           Hardware.
     *     @type \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareConfig $config
     *           Required. Configuration for this hardware.
     *     @type \Google\Type\Date $estimated_installation_date
     *           Output only. Estimated installation date for this hardware.
     *     @type \Google\Cloud\GdcHardwareManagement\V1alpha\HardwarePhysicalInfo $physical_info
     *           Optional. Physical properties of this hardware.
     *     @type \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareInstallationInfo $installation_info
     *           Optional. Information for installation of this hardware.
     *     @type string $zone
     *           Required. Name for the zone that this hardware belongs to.
     *           Format: `projects/{project}/locations/{location}/zones/{zone}`
     *     @type \Google\Type\Date $requested_installation_date
     *           Optional. Requested installation date for this hardware. This is
     *           auto-populated when the order is accepted, if the hardware's HardwareGroup
     *           specifies this. It can also be filled in by the customer.
     *     @type \Google\Type\Date $actual_installation_date
     *           Output only. Actual installation date for this hardware. Filled in by
     *           Google.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Gdchardwaremanagement\V1Alpha\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Identifier. Name of this hardware.
     * Format: `projects/{project}/locations/{location}/hardware/{hardware}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Identifier. Name of this hardware.
     * Format: `projects/{project}/locations/{location}/hardware/{hardware}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. Display name for this hardware.
     *
     * Generated from protobuf field <code>string display_name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Optional. Display name for this hardware.
     *
     * Generated from protobuf field <code>string display_name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * Output only. Time when this hardware was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. Time when this hardware was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * Output only. Time when this hardware was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. Time when this hardware was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Optional. Labels associated with this hardware as key value pairs.
     * For more information about labels, see [Create and manage
     * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
     *
     * Generated from protobuf field <code>map<string, string> labels = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * Optional. Labels associated with this hardware as key value pairs.
     * For more information about labels, see [Create and manage
     * labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels).
     *
     * Generated from protobuf field <code>map<string, string> labels = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setLabels($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;

        return $this;
    }

    /**
     * Required. Name of the order that this hardware belongs to.
     * Format: `projects/{project}/locations/{location}/orders/{order}`
     *
     * Generated from protobuf field <code>string order = 6 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getOrder()
    {
        return $this->order;
    }

    /**
     * Required. Name of the order that this hardware belongs to.
     * Format: `projects/{project}/locations/{location}/orders/{order}`
     *
     * Generated from protobuf field <code>string order = 6 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setOrder($var)
    {
        GPBUtil::checkString($var, True);
        $this->order = $var;

        return $this;
    }

    /**
     * Output only. Name for the hardware group that this hardware belongs to.
     * Format:
     * `projects/{project}/locations/{location}/orders/{order}/hardwareGroups/{hardware_group}`
     *
     * Generated from protobuf field <code>string hardware_group = 7 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getHardwareGroup()
    {
        return $this->hardware_group;
    }

    /**
     * Output only. Name for the hardware group that this hardware belongs to.
     * Format:
     * `projects/{project}/locations/{location}/orders/{order}/hardwareGroups/{hardware_group}`
     *
     * Generated from protobuf field <code>string hardware_group = 7 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setHardwareGroup($var)
    {
        GPBUtil::checkString($var, True);
        $this->hardware_group = $var;

        return $this;
    }

    /**
     * Required. Name for the site that this hardware belongs to.
     * Format: `projects/{project}/locations/{location}/sites/{site}`
     *
     * Generated from protobuf field <code>string site = 8 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getSite()
    {
        return $this->site;
    }

    /**
     * Required. Name for the site that this hardware belongs to.
     * Format: `projects/{project}/locations/{location}/sites/{site}`
     *
     * Generated from protobuf field <code>string site = 8 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setSite($var)
    {
        GPBUtil::checkString($var, True);
        $this->site = $var;

        return $this;
    }

    /**
     * Output only. Current state for this hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.Hardware.State state = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * Output only. Current state for this hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.Hardware.State state = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\GdcHardwareManagement\V1alpha\Hardware\State::class);
        $this->state = $var;

        return $this;
    }

    /**
     * Output only. Link to the Customer Intake Questionnaire (CIQ) sheet for this
     * Hardware.
     *
     * Generated from protobuf field <code>string ciq_uri = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getCiqUri()
    {
        return $this->ciq_uri;
    }

    /**
     * Output only. Link to the Customer Intake Questionnaire (CIQ) sheet for this
     * Hardware.
     *
     * Generated from protobuf field <code>string ciq_uri = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setCiqUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->ciq_uri = $var;

        return $this;
    }

    /**
     * Required. Configuration for this hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwareConfig config = 11 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareConfig|null
     */
    public function getConfig()
    {
        return $this->config;
    }

    public function hasConfig()
    {
        return isset($this->config);
    }

    public function clearConfig()
    {
        unset($this->config);
    }

    /**
     * Required. Configuration for this hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwareConfig config = 11 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareConfig $var
     * @return $this
     */
    public function setConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareConfig::class);
        $this->config = $var;

        return $this;
    }

    /**
     * Output only. Estimated installation date for this hardware.
     *
     * Generated from protobuf field <code>.google.type.Date estimated_installation_date = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Type\Date|null
     */
    public function getEstimatedInstallationDate()
    {
        return $this->estimated_installation_date;
    }

    public function hasEstimatedInstallationDate()
    {
        return isset($this->estimated_installation_date);
    }

    public function clearEstimatedInstallationDate()
    {
        unset($this->estimated_installation_date);
    }

    /**
     * Output only. Estimated installation date for this hardware.
     *
     * Generated from protobuf field <code>.google.type.Date estimated_installation_date = 12 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setEstimatedInstallationDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->estimated_installation_date = $var;

        return $this;
    }

    /**
     * Optional. Physical properties of this hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo physical_info = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\GdcHardwareManagement\V1alpha\HardwarePhysicalInfo|null
     */
    public function getPhysicalInfo()
    {
        return $this->physical_info;
    }

    public function hasPhysicalInfo()
    {
        return isset($this->physical_info);
    }

    public function clearPhysicalInfo()
    {
        unset($this->physical_info);
    }

    /**
     * Optional. Physical properties of this hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwarePhysicalInfo physical_info = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\GdcHardwareManagement\V1alpha\HardwarePhysicalInfo $var
     * @return $this
     */
    public function setPhysicalInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GdcHardwareManagement\V1alpha\HardwarePhysicalInfo::class);
        $this->physical_info = $var;

        return $this;
    }

    /**
     * Optional. Information for installation of this hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo installation_info = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareInstallationInfo|null
     */
    public function getInstallationInfo()
    {
        return $this->installation_info;
    }

    public function hasInstallationInfo()
    {
        return isset($this->installation_info);
    }

    public function clearInstallationInfo()
    {
        unset($this->installation_info);
    }

    /**
     * Optional. Information for installation of this hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo installation_info = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareInstallationInfo $var
     * @return $this
     */
    public function setInstallationInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareInstallationInfo::class);
        $this->installation_info = $var;

        return $this;
    }

    /**
     * Required. Name for the zone that this hardware belongs to.
     * Format: `projects/{project}/locations/{location}/zones/{zone}`
     *
     * Generated from protobuf field <code>string zone = 15 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getZone()
    {
        return $this->zone;
    }

    /**
     * Required. Name for the zone that this hardware belongs to.
     * Format: `projects/{project}/locations/{location}/zones/{zone}`
     *
     * Generated from protobuf field <code>string zone = 15 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setZone($var)
    {
        GPBUtil::checkString($var, True);
        $this->zone = $var;

        return $this;
    }

    /**
     * Optional. Requested installation date for this hardware. This is
     * auto-populated when the order is accepted, if the hardware's HardwareGroup
     * specifies this. It can also be filled in by the customer.
     *
     * Generated from protobuf field <code>.google.type.Date requested_installation_date = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Type\Date|null
     */
    public function getRequestedInstallationDate()
    {
        return $this->requested_installation_date;
    }

    public function hasRequestedInstallationDate()
    {
        return isset($this->requested_installation_date);
    }

    public function clearRequestedInstallationDate()
    {
        unset($this->requested_installation_date);
    }

    /**
     * Optional. Requested installation date for this hardware. This is
     * auto-populated when the order is accepted, if the hardware's HardwareGroup
     * specifies this. It can also be filled in by the customer.
     *
     * Generated from protobuf field <code>.google.type.Date requested_installation_date = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setRequestedInstallationDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->requested_installation_date = $var;

        return $this;
    }

    /**
     * Output only. Actual installation date for this hardware. Filled in by
     * Google.
     *
     * Generated from protobuf field <code>.google.type.Date actual_installation_date = 17 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Type\Date|null
     */
    public function getActualInstallationDate()
    {
        return $this->actual_installation_date;
    }

    public function hasActualInstallationDate()
    {
        return isset($this->actual_installation_date);
    }

    public function clearActualInstallationDate()
    {
        unset($this->actual_installation_date);
    }

    /**
     * Output only. Actual installation date for this hardware. Filled in by
     * Google.
     *
     * Generated from protobuf field <code>.google.type.Date actual_installation_date = 17 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setActualInstallationDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->actual_installation_date = $var;

        return $this;
    }

}

