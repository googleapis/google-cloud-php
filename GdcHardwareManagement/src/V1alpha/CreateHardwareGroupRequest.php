<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/gdchardwaremanagement/v1alpha/service.proto

namespace Google\Cloud\GdcHardwareManagement\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A request to create a hardware group.
 *
 * Generated from protobuf message <code>google.cloud.gdchardwaremanagement.v1alpha.CreateHardwareGroupRequest</code>
 */
class CreateHardwareGroupRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The order to create the hardware group in.
     * Format: `projects/{project}/locations/{location}/orders/{order}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Optional. ID used to uniquely identify the HardwareGroup within its parent
     * scope. This field should contain at most 63 characters and must start with
     * lowercase characters.
     * Only lowercase characters, numbers and `-` are accepted.
     * The `-` character cannot be the first or the last one.
     * A system generated ID will be used if the field is not set.
     * The hardware_group.name field in the request will be ignored.
     *
     * Generated from protobuf field <code>string hardware_group_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $hardware_group_id = '';
    /**
     * Required. The hardware group to create.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwareGroup hardware_group = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $hardware_group = null;
    /**
     * Optional. An optional unique identifier for this request. See
     * [AIP-155](https://google.aip.dev/155).
     *
     * Generated from protobuf field <code>string request_id = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $request_id = '';

    /**
     * @param string                                                    $parent          Required. The order to create the hardware group in.
     *                                                                                   Format: `projects/{project}/locations/{location}/orders/{order}`
     *                                                                                   Please see {@see GDCHardwareManagementClient::orderName()} for help formatting this field.
     * @param \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareGroup $hardwareGroup   Required. The hardware group to create.
     * @param string                                                    $hardwareGroupId Optional. ID used to uniquely identify the HardwareGroup within its parent
     *                                                                                   scope. This field should contain at most 63 characters and must start with
     *                                                                                   lowercase characters.
     *                                                                                   Only lowercase characters, numbers and `-` are accepted.
     *                                                                                   The `-` character cannot be the first or the last one.
     *                                                                                   A system generated ID will be used if the field is not set.
     *
     *                                                                                   The hardware_group.name field in the request will be ignored.
     *
     * @return \Google\Cloud\GdcHardwareManagement\V1alpha\CreateHardwareGroupRequest
     *
     * @experimental
     */
    public static function build(string $parent, \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareGroup $hardwareGroup, string $hardwareGroupId): self
    {
        return (new self())
            ->setParent($parent)
            ->setHardwareGroup($hardwareGroup)
            ->setHardwareGroupId($hardwareGroupId);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The order to create the hardware group in.
     *           Format: `projects/{project}/locations/{location}/orders/{order}`
     *     @type string $hardware_group_id
     *           Optional. ID used to uniquely identify the HardwareGroup within its parent
     *           scope. This field should contain at most 63 characters and must start with
     *           lowercase characters.
     *           Only lowercase characters, numbers and `-` are accepted.
     *           The `-` character cannot be the first or the last one.
     *           A system generated ID will be used if the field is not set.
     *           The hardware_group.name field in the request will be ignored.
     *     @type \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareGroup $hardware_group
     *           Required. The hardware group to create.
     *     @type string $request_id
     *           Optional. An optional unique identifier for this request. See
     *           [AIP-155](https://google.aip.dev/155).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Gdchardwaremanagement\V1Alpha\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The order to create the hardware group in.
     * Format: `projects/{project}/locations/{location}/orders/{order}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The order to create the hardware group in.
     * Format: `projects/{project}/locations/{location}/orders/{order}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Optional. ID used to uniquely identify the HardwareGroup within its parent
     * scope. This field should contain at most 63 characters and must start with
     * lowercase characters.
     * Only lowercase characters, numbers and `-` are accepted.
     * The `-` character cannot be the first or the last one.
     * A system generated ID will be used if the field is not set.
     * The hardware_group.name field in the request will be ignored.
     *
     * Generated from protobuf field <code>string hardware_group_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getHardwareGroupId()
    {
        return $this->hardware_group_id;
    }

    /**
     * Optional. ID used to uniquely identify the HardwareGroup within its parent
     * scope. This field should contain at most 63 characters and must start with
     * lowercase characters.
     * Only lowercase characters, numbers and `-` are accepted.
     * The `-` character cannot be the first or the last one.
     * A system generated ID will be used if the field is not set.
     * The hardware_group.name field in the request will be ignored.
     *
     * Generated from protobuf field <code>string hardware_group_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setHardwareGroupId($var)
    {
        GPBUtil::checkString($var, True);
        $this->hardware_group_id = $var;

        return $this;
    }

    /**
     * Required. The hardware group to create.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwareGroup hardware_group = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareGroup|null
     */
    public function getHardwareGroup()
    {
        return $this->hardware_group;
    }

    public function hasHardwareGroup()
    {
        return isset($this->hardware_group);
    }

    public function clearHardwareGroup()
    {
        unset($this->hardware_group);
    }

    /**
     * Required. The hardware group to create.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwareGroup hardware_group = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareGroup $var
     * @return $this
     */
    public function setHardwareGroup($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareGroup::class);
        $this->hardware_group = $var;

        return $this;
    }

    /**
     * Optional. An optional unique identifier for this request. See
     * [AIP-155](https://google.aip.dev/155).
     *
     * Generated from protobuf field <code>string request_id = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Optional. An optional unique identifier for this request. See
     * [AIP-155](https://google.aip.dev/155).
     *
     * Generated from protobuf field <code>string request_id = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

}

