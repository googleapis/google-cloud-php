<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/gdchardwaremanagement/v1alpha/resources.proto

namespace Google\Cloud\GdcHardwareManagement\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Information for installation of a Hardware.
 *
 * Generated from protobuf message <code>google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo</code>
 */
class HardwareInstallationInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Location of the rack in the site e.g. Floor 2, Room 201, Row 7,
     * Rack 3.
     *
     * Generated from protobuf field <code>string rack_location = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $rack_location = '';
    /**
     * Required. Distance from the power outlet in meters.
     *
     * Generated from protobuf field <code>int32 power_distance_meters = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $power_distance_meters = 0;
    /**
     * Required. Distance from the network switch in meters.
     *
     * Generated from protobuf field <code>int32 switch_distance_meters = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $switch_distance_meters = 0;
    /**
     * Required. Dimensions of the rack unit.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.Dimensions rack_unit_dimensions = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $rack_unit_dimensions = null;
    /**
     * Required. Rack space allocated for the hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.RackSpace rack_space = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $rack_space = null;
    /**
     * Required. Type of the rack.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo.RackType rack_type = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $rack_type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $rack_location
     *           Optional. Location of the rack in the site e.g. Floor 2, Room 201, Row 7,
     *           Rack 3.
     *     @type int $power_distance_meters
     *           Required. Distance from the power outlet in meters.
     *     @type int $switch_distance_meters
     *           Required. Distance from the network switch in meters.
     *     @type \Google\Cloud\GdcHardwareManagement\V1alpha\Dimensions $rack_unit_dimensions
     *           Required. Dimensions of the rack unit.
     *     @type \Google\Cloud\GdcHardwareManagement\V1alpha\RackSpace $rack_space
     *           Required. Rack space allocated for the hardware.
     *     @type int $rack_type
     *           Required. Type of the rack.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Gdchardwaremanagement\V1Alpha\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Location of the rack in the site e.g. Floor 2, Room 201, Row 7,
     * Rack 3.
     *
     * Generated from protobuf field <code>string rack_location = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getRackLocation()
    {
        return $this->rack_location;
    }

    /**
     * Optional. Location of the rack in the site e.g. Floor 2, Room 201, Row 7,
     * Rack 3.
     *
     * Generated from protobuf field <code>string rack_location = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setRackLocation($var)
    {
        GPBUtil::checkString($var, True);
        $this->rack_location = $var;

        return $this;
    }

    /**
     * Required. Distance from the power outlet in meters.
     *
     * Generated from protobuf field <code>int32 power_distance_meters = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getPowerDistanceMeters()
    {
        return $this->power_distance_meters;
    }

    /**
     * Required. Distance from the power outlet in meters.
     *
     * Generated from protobuf field <code>int32 power_distance_meters = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setPowerDistanceMeters($var)
    {
        GPBUtil::checkInt32($var);
        $this->power_distance_meters = $var;

        return $this;
    }

    /**
     * Required. Distance from the network switch in meters.
     *
     * Generated from protobuf field <code>int32 switch_distance_meters = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getSwitchDistanceMeters()
    {
        return $this->switch_distance_meters;
    }

    /**
     * Required. Distance from the network switch in meters.
     *
     * Generated from protobuf field <code>int32 switch_distance_meters = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setSwitchDistanceMeters($var)
    {
        GPBUtil::checkInt32($var);
        $this->switch_distance_meters = $var;

        return $this;
    }

    /**
     * Required. Dimensions of the rack unit.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.Dimensions rack_unit_dimensions = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\GdcHardwareManagement\V1alpha\Dimensions|null
     */
    public function getRackUnitDimensions()
    {
        return $this->rack_unit_dimensions;
    }

    public function hasRackUnitDimensions()
    {
        return isset($this->rack_unit_dimensions);
    }

    public function clearRackUnitDimensions()
    {
        unset($this->rack_unit_dimensions);
    }

    /**
     * Required. Dimensions of the rack unit.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.Dimensions rack_unit_dimensions = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\GdcHardwareManagement\V1alpha\Dimensions $var
     * @return $this
     */
    public function setRackUnitDimensions($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GdcHardwareManagement\V1alpha\Dimensions::class);
        $this->rack_unit_dimensions = $var;

        return $this;
    }

    /**
     * Required. Rack space allocated for the hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.RackSpace rack_space = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\GdcHardwareManagement\V1alpha\RackSpace|null
     */
    public function getRackSpace()
    {
        return $this->rack_space;
    }

    public function hasRackSpace()
    {
        return isset($this->rack_space);
    }

    public function clearRackSpace()
    {
        unset($this->rack_space);
    }

    /**
     * Required. Rack space allocated for the hardware.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.RackSpace rack_space = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\GdcHardwareManagement\V1alpha\RackSpace $var
     * @return $this
     */
    public function setRackSpace($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GdcHardwareManagement\V1alpha\RackSpace::class);
        $this->rack_space = $var;

        return $this;
    }

    /**
     * Required. Type of the rack.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo.RackType rack_type = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getRackType()
    {
        return $this->rack_type;
    }

    /**
     * Required. Type of the rack.
     *
     * Generated from protobuf field <code>.google.cloud.gdchardwaremanagement.v1alpha.HardwareInstallationInfo.RackType rack_type = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setRackType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\GdcHardwareManagement\V1alpha\HardwareInstallationInfo\RackType::class);
        $this->rack_type = $var;

        return $this;
    }

}

