<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/tasks/v2beta2/cloudtasks.proto

namespace Google\Cloud\Tasks\V2beta2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for leasing tasks using [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks].
 *
 * Generated from protobuf message <code>google.cloud.tasks.v2beta2.LeaseTasksRequest</code>
 */
class LeaseTasksRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The queue name. For example:
     * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    private $parent = '';
    /**
     * The maximum number of tasks to lease.
     * The system will make a best effort to return as close to as
     * `max_tasks` as possible.
     * The largest that `max_tasks` can be is 1000.
     * The maximum total size of a [lease tasks response][google.cloud.tasks.v2beta2.LeaseTasksResponse] is
     * 32 MB. If the sum of all task sizes requested reaches this limit,
     * fewer tasks than requested are returned.
     *
     * Generated from protobuf field <code>int32 max_tasks = 2;</code>
     */
    private $max_tasks = 0;
    /**
     * Required. The duration of the lease.
     * Each task returned in the [response][google.cloud.tasks.v2beta2.LeaseTasksResponse] will
     * have its [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] set to the current
     * time plus the `lease_duration`. The task is leased until its
     * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time]; thus, the task will not be
     * returned to another [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] call
     * before its [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time].
     * After the worker has successfully finished the work associated
     * with the task, the worker must call via
     * [AcknowledgeTask][google.cloud.tasks.v2beta2.CloudTasks.AcknowledgeTask] before the
     * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time]. Otherwise the task will be
     * returned to a later [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] call so
     * that another worker can retry it.
     * The maximum lease duration is 1 week.
     * `lease_duration` will be truncated to the nearest second.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration lease_duration = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $lease_duration = null;
    /**
     * The response_view specifies which subset of the [Task][google.cloud.tasks.v2beta2.Task] will be
     * returned.
     * By default response_view is [BASIC][google.cloud.tasks.v2beta2.Task.View.BASIC]; not all
     * information is retrieved by default because some data, such as
     * payloads, might be desirable to return only when needed because
     * of its large size or because of the sensitivity of data that it
     * contains.
     * Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL] requires
     * `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)
     * permission on the [Task][google.cloud.tasks.v2beta2.Task] resource.
     *
     * Generated from protobuf field <code>.google.cloud.tasks.v2beta2.Task.View response_view = 4;</code>
     */
    private $response_view = 0;
    /**
     * `filter` can be used to specify a subset of tasks to lease.
     * When `filter` is set to `tag=<my-tag>` then the
     * [response][google.cloud.tasks.v2beta2.LeaseTasksResponse] will contain only tasks whose
     * [tag][google.cloud.tasks.v2beta2.PullMessage.tag] is equal to `<my-tag>`. `<my-tag>` must be
     * less than 500 characters.
     * When `filter` is set to `tag_function=oldest_tag()`, only tasks which have
     * the same tag as the task with the oldest
     * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] will be returned.
     * Grammar Syntax:
     * * `filter = "tag=" tag | "tag_function=" function`
     * * `tag = string`
     * * `function = "oldest_tag()"`
     * The `oldest_tag()` function returns tasks which have the same tag as the
     * oldest task (ordered by schedule time).
     * SDK compatibility: Although the SDK allows tags to be either
     * string or
     * [bytes](https://cloud.google.com/appengine/docs/standard/java/javadoc/com/google/appengine/api/taskqueue/TaskOptions.html#tag-byte:A-),
     * only UTF-8 encoded tags can be used in Cloud Tasks. Tag which
     * aren't UTF-8 encoded can't be used in the
     * [filter][google.cloud.tasks.v2beta2.LeaseTasksRequest.filter] and the task's
     * [tag][google.cloud.tasks.v2beta2.PullMessage.tag] will be displayed as empty in Cloud Tasks.
     *
     * Generated from protobuf field <code>string filter = 5;</code>
     */
    private $filter = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The queue name. For example:
     *           `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
     *     @type int $max_tasks
     *           The maximum number of tasks to lease.
     *           The system will make a best effort to return as close to as
     *           `max_tasks` as possible.
     *           The largest that `max_tasks` can be is 1000.
     *           The maximum total size of a [lease tasks response][google.cloud.tasks.v2beta2.LeaseTasksResponse] is
     *           32 MB. If the sum of all task sizes requested reaches this limit,
     *           fewer tasks than requested are returned.
     *     @type \Google\Protobuf\Duration $lease_duration
     *           Required. The duration of the lease.
     *           Each task returned in the [response][google.cloud.tasks.v2beta2.LeaseTasksResponse] will
     *           have its [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] set to the current
     *           time plus the `lease_duration`. The task is leased until its
     *           [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time]; thus, the task will not be
     *           returned to another [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] call
     *           before its [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time].
     *           After the worker has successfully finished the work associated
     *           with the task, the worker must call via
     *           [AcknowledgeTask][google.cloud.tasks.v2beta2.CloudTasks.AcknowledgeTask] before the
     *           [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time]. Otherwise the task will be
     *           returned to a later [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] call so
     *           that another worker can retry it.
     *           The maximum lease duration is 1 week.
     *           `lease_duration` will be truncated to the nearest second.
     *     @type int $response_view
     *           The response_view specifies which subset of the [Task][google.cloud.tasks.v2beta2.Task] will be
     *           returned.
     *           By default response_view is [BASIC][google.cloud.tasks.v2beta2.Task.View.BASIC]; not all
     *           information is retrieved by default because some data, such as
     *           payloads, might be desirable to return only when needed because
     *           of its large size or because of the sensitivity of data that it
     *           contains.
     *           Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL] requires
     *           `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)
     *           permission on the [Task][google.cloud.tasks.v2beta2.Task] resource.
     *     @type string $filter
     *           `filter` can be used to specify a subset of tasks to lease.
     *           When `filter` is set to `tag=<my-tag>` then the
     *           [response][google.cloud.tasks.v2beta2.LeaseTasksResponse] will contain only tasks whose
     *           [tag][google.cloud.tasks.v2beta2.PullMessage.tag] is equal to `<my-tag>`. `<my-tag>` must be
     *           less than 500 characters.
     *           When `filter` is set to `tag_function=oldest_tag()`, only tasks which have
     *           the same tag as the task with the oldest
     *           [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] will be returned.
     *           Grammar Syntax:
     *           * `filter = "tag=" tag | "tag_function=" function`
     *           * `tag = string`
     *           * `function = "oldest_tag()"`
     *           The `oldest_tag()` function returns tasks which have the same tag as the
     *           oldest task (ordered by schedule time).
     *           SDK compatibility: Although the SDK allows tags to be either
     *           string or
     *           [bytes](https://cloud.google.com/appengine/docs/standard/java/javadoc/com/google/appengine/api/taskqueue/TaskOptions.html#tag-byte:A-),
     *           only UTF-8 encoded tags can be used in Cloud Tasks. Tag which
     *           aren't UTF-8 encoded can't be used in the
     *           [filter][google.cloud.tasks.v2beta2.LeaseTasksRequest.filter] and the task's
     *           [tag][google.cloud.tasks.v2beta2.PullMessage.tag] will be displayed as empty in Cloud Tasks.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Tasks\V2Beta2\Cloudtasks::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The queue name. For example:
     * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The queue name. For example:
     * `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * The maximum number of tasks to lease.
     * The system will make a best effort to return as close to as
     * `max_tasks` as possible.
     * The largest that `max_tasks` can be is 1000.
     * The maximum total size of a [lease tasks response][google.cloud.tasks.v2beta2.LeaseTasksResponse] is
     * 32 MB. If the sum of all task sizes requested reaches this limit,
     * fewer tasks than requested are returned.
     *
     * Generated from protobuf field <code>int32 max_tasks = 2;</code>
     * @return int
     */
    public function getMaxTasks()
    {
        return $this->max_tasks;
    }

    /**
     * The maximum number of tasks to lease.
     * The system will make a best effort to return as close to as
     * `max_tasks` as possible.
     * The largest that `max_tasks` can be is 1000.
     * The maximum total size of a [lease tasks response][google.cloud.tasks.v2beta2.LeaseTasksResponse] is
     * 32 MB. If the sum of all task sizes requested reaches this limit,
     * fewer tasks than requested are returned.
     *
     * Generated from protobuf field <code>int32 max_tasks = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxTasks($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_tasks = $var;

        return $this;
    }

    /**
     * Required. The duration of the lease.
     * Each task returned in the [response][google.cloud.tasks.v2beta2.LeaseTasksResponse] will
     * have its [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] set to the current
     * time plus the `lease_duration`. The task is leased until its
     * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time]; thus, the task will not be
     * returned to another [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] call
     * before its [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time].
     * After the worker has successfully finished the work associated
     * with the task, the worker must call via
     * [AcknowledgeTask][google.cloud.tasks.v2beta2.CloudTasks.AcknowledgeTask] before the
     * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time]. Otherwise the task will be
     * returned to a later [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] call so
     * that another worker can retry it.
     * The maximum lease duration is 1 week.
     * `lease_duration` will be truncated to the nearest second.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration lease_duration = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getLeaseDuration()
    {
        return $this->lease_duration;
    }

    public function hasLeaseDuration()
    {
        return isset($this->lease_duration);
    }

    public function clearLeaseDuration()
    {
        unset($this->lease_duration);
    }

    /**
     * Required. The duration of the lease.
     * Each task returned in the [response][google.cloud.tasks.v2beta2.LeaseTasksResponse] will
     * have its [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] set to the current
     * time plus the `lease_duration`. The task is leased until its
     * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time]; thus, the task will not be
     * returned to another [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] call
     * before its [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time].
     * After the worker has successfully finished the work associated
     * with the task, the worker must call via
     * [AcknowledgeTask][google.cloud.tasks.v2beta2.CloudTasks.AcknowledgeTask] before the
     * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time]. Otherwise the task will be
     * returned to a later [LeaseTasks][google.cloud.tasks.v2beta2.CloudTasks.LeaseTasks] call so
     * that another worker can retry it.
     * The maximum lease duration is 1 week.
     * `lease_duration` will be truncated to the nearest second.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration lease_duration = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setLeaseDuration($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->lease_duration = $var;

        return $this;
    }

    /**
     * The response_view specifies which subset of the [Task][google.cloud.tasks.v2beta2.Task] will be
     * returned.
     * By default response_view is [BASIC][google.cloud.tasks.v2beta2.Task.View.BASIC]; not all
     * information is retrieved by default because some data, such as
     * payloads, might be desirable to return only when needed because
     * of its large size or because of the sensitivity of data that it
     * contains.
     * Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL] requires
     * `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)
     * permission on the [Task][google.cloud.tasks.v2beta2.Task] resource.
     *
     * Generated from protobuf field <code>.google.cloud.tasks.v2beta2.Task.View response_view = 4;</code>
     * @return int
     */
    public function getResponseView()
    {
        return $this->response_view;
    }

    /**
     * The response_view specifies which subset of the [Task][google.cloud.tasks.v2beta2.Task] will be
     * returned.
     * By default response_view is [BASIC][google.cloud.tasks.v2beta2.Task.View.BASIC]; not all
     * information is retrieved by default because some data, such as
     * payloads, might be desirable to return only when needed because
     * of its large size or because of the sensitivity of data that it
     * contains.
     * Authorization for [FULL][google.cloud.tasks.v2beta2.Task.View.FULL] requires
     * `cloudtasks.tasks.fullView` [Google IAM](https://cloud.google.com/iam/)
     * permission on the [Task][google.cloud.tasks.v2beta2.Task] resource.
     *
     * Generated from protobuf field <code>.google.cloud.tasks.v2beta2.Task.View response_view = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setResponseView($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Tasks\V2beta2\Task\View::class);
        $this->response_view = $var;

        return $this;
    }

    /**
     * `filter` can be used to specify a subset of tasks to lease.
     * When `filter` is set to `tag=<my-tag>` then the
     * [response][google.cloud.tasks.v2beta2.LeaseTasksResponse] will contain only tasks whose
     * [tag][google.cloud.tasks.v2beta2.PullMessage.tag] is equal to `<my-tag>`. `<my-tag>` must be
     * less than 500 characters.
     * When `filter` is set to `tag_function=oldest_tag()`, only tasks which have
     * the same tag as the task with the oldest
     * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] will be returned.
     * Grammar Syntax:
     * * `filter = "tag=" tag | "tag_function=" function`
     * * `tag = string`
     * * `function = "oldest_tag()"`
     * The `oldest_tag()` function returns tasks which have the same tag as the
     * oldest task (ordered by schedule time).
     * SDK compatibility: Although the SDK allows tags to be either
     * string or
     * [bytes](https://cloud.google.com/appengine/docs/standard/java/javadoc/com/google/appengine/api/taskqueue/TaskOptions.html#tag-byte:A-),
     * only UTF-8 encoded tags can be used in Cloud Tasks. Tag which
     * aren't UTF-8 encoded can't be used in the
     * [filter][google.cloud.tasks.v2beta2.LeaseTasksRequest.filter] and the task's
     * [tag][google.cloud.tasks.v2beta2.PullMessage.tag] will be displayed as empty in Cloud Tasks.
     *
     * Generated from protobuf field <code>string filter = 5;</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * `filter` can be used to specify a subset of tasks to lease.
     * When `filter` is set to `tag=<my-tag>` then the
     * [response][google.cloud.tasks.v2beta2.LeaseTasksResponse] will contain only tasks whose
     * [tag][google.cloud.tasks.v2beta2.PullMessage.tag] is equal to `<my-tag>`. `<my-tag>` must be
     * less than 500 characters.
     * When `filter` is set to `tag_function=oldest_tag()`, only tasks which have
     * the same tag as the task with the oldest
     * [schedule_time][google.cloud.tasks.v2beta2.Task.schedule_time] will be returned.
     * Grammar Syntax:
     * * `filter = "tag=" tag | "tag_function=" function`
     * * `tag = string`
     * * `function = "oldest_tag()"`
     * The `oldest_tag()` function returns tasks which have the same tag as the
     * oldest task (ordered by schedule time).
     * SDK compatibility: Although the SDK allows tags to be either
     * string or
     * [bytes](https://cloud.google.com/appengine/docs/standard/java/javadoc/com/google/appengine/api/taskqueue/TaskOptions.html#tag-byte:A-),
     * only UTF-8 encoded tags can be used in Cloud Tasks. Tag which
     * aren't UTF-8 encoded can't be used in the
     * [filter][google.cloud.tasks.v2beta2.LeaseTasksRequest.filter] and the task's
     * [tag][google.cloud.tasks.v2beta2.PullMessage.tag] will be displayed as empty in Cloud Tasks.
     *
     * Generated from protobuf field <code>string filter = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

}

