<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/gkebackup/v1/restore.proto

namespace Google\Cloud\GkeBackup\V1\RestoreConfig\TransformationRuleAction;

use UnexpectedValueException;

/**
 * Possible values for operations of a transformation rule action.
 *
 * Protobuf type <code>google.cloud.gkebackup.v1.RestoreConfig.TransformationRuleAction.Op</code>
 */
class Op
{
    /**
     * Unspecified operation
     *
     * Generated from protobuf enum <code>OP_UNSPECIFIED = 0;</code>
     */
    const OP_UNSPECIFIED = 0;
    /**
     * The "remove" operation removes the value at the target location.
     *
     * Generated from protobuf enum <code>REMOVE = 1;</code>
     */
    const REMOVE = 1;
    /**
     * The "move" operation removes the value at a specified location and
     * adds it to the target location.
     *
     * Generated from protobuf enum <code>MOVE = 2;</code>
     */
    const MOVE = 2;
    /**
     * The "copy" operation copies the value at a specified location to the
     * target location.
     *
     * Generated from protobuf enum <code>COPY = 3;</code>
     */
    const COPY = 3;
    /**
     * The "add" operation performs one of the following functions,
     * depending upon what the target location references:
     * 1. If the target location specifies an array index, a new value is
     * inserted into the array at the specified index.
     * 2. If the target location specifies an object member that does not
     * already exist, a new member is added to the object.
     * 3. If the target location specifies an object member that does exist,
     * that member's value is replaced.
     *
     * Generated from protobuf enum <code>ADD = 4;</code>
     */
    const ADD = 4;
    /**
     * The "test" operation tests that a value at the target location is
     * equal to a specified value.
     *
     * Generated from protobuf enum <code>TEST = 5;</code>
     */
    const TEST = 5;
    /**
     * The "replace" operation replaces the value at the target location
     * with a new value.  The operation object MUST contain a "value" member
     * whose content specifies the replacement value.
     *
     * Generated from protobuf enum <code>REPLACE = 6;</code>
     */
    const REPLACE = 6;

    private static $valueToName = [
        self::OP_UNSPECIFIED => 'OP_UNSPECIFIED',
        self::REMOVE => 'REMOVE',
        self::MOVE => 'MOVE',
        self::COPY => 'COPY',
        self::ADD => 'ADD',
        self::TEST => 'TEST',
        self::REPLACE => 'REPLACE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


