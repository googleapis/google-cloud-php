<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/chronicle/v1/reference_list.proto

namespace Google\Cloud\Chronicle\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A request to update a reference list.
 *
 * Generated from protobuf message <code>google.cloud.chronicle.v1.UpdateReferenceListRequest</code>
 */
class UpdateReferenceListRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The reference list to update.
     * The reference list's `name` field is used to identify the reference list to
     * update.
     * Format:
     * `projects/{project}/locations/{locations}/instances/{instance}/referenceLists/{reference_list}`
     *
     * Generated from protobuf field <code>.google.cloud.chronicle.v1.ReferenceList reference_list = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $reference_list = null;
    /**
     * The list of fields to update.
     * When no field mask is supplied, all non-empty fields will be updated.
     * A field mask of "*" will update all fields, whether empty or not.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     */
    protected $update_mask = null;

    /**
     * @param \Google\Cloud\Chronicle\V1\ReferenceList $referenceList Required. The reference list to update.
     *
     *                                                                The reference list's `name` field is used to identify the reference list to
     *                                                                update.
     *                                                                Format:
     *                                                                `projects/{project}/locations/{locations}/instances/{instance}/referenceLists/{reference_list}`
     * @param \Google\Protobuf\FieldMask               $updateMask    The list of fields to update.
     *                                                                When no field mask is supplied, all non-empty fields will be updated.
     *                                                                A field mask of "*" will update all fields, whether empty or not.
     *
     * @return \Google\Cloud\Chronicle\V1\UpdateReferenceListRequest
     *
     * @experimental
     */
    public static function build(\Google\Cloud\Chronicle\V1\ReferenceList $referenceList, \Google\Protobuf\FieldMask $updateMask): self
    {
        return (new self())
            ->setReferenceList($referenceList)
            ->setUpdateMask($updateMask);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Chronicle\V1\ReferenceList $reference_list
     *           Required. The reference list to update.
     *           The reference list's `name` field is used to identify the reference list to
     *           update.
     *           Format:
     *           `projects/{project}/locations/{locations}/instances/{instance}/referenceLists/{reference_list}`
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           The list of fields to update.
     *           When no field mask is supplied, all non-empty fields will be updated.
     *           A field mask of "*" will update all fields, whether empty or not.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Chronicle\V1\ReferenceList::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The reference list to update.
     * The reference list's `name` field is used to identify the reference list to
     * update.
     * Format:
     * `projects/{project}/locations/{locations}/instances/{instance}/referenceLists/{reference_list}`
     *
     * Generated from protobuf field <code>.google.cloud.chronicle.v1.ReferenceList reference_list = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\Chronicle\V1\ReferenceList|null
     */
    public function getReferenceList()
    {
        return $this->reference_list;
    }

    public function hasReferenceList()
    {
        return isset($this->reference_list);
    }

    public function clearReferenceList()
    {
        unset($this->reference_list);
    }

    /**
     * Required. The reference list to update.
     * The reference list's `name` field is used to identify the reference list to
     * update.
     * Format:
     * `projects/{project}/locations/{locations}/instances/{instance}/referenceLists/{reference_list}`
     *
     * Generated from protobuf field <code>.google.cloud.chronicle.v1.ReferenceList reference_list = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Chronicle\V1\ReferenceList $var
     * @return $this
     */
    public function setReferenceList($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Chronicle\V1\ReferenceList::class);
        $this->reference_list = $var;

        return $this;
    }

    /**
     * The list of fields to update.
     * When no field mask is supplied, all non-empty fields will be updated.
     * A field mask of "*" will update all fields, whether empty or not.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * The list of fields to update.
     * When no field mask is supplied, all non-empty fields will be updated.
     * A field mask of "*" will update all fields, whether empty or not.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

}

