<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/chronicle/v1/rule.proto

namespace Google\Cloud\Chronicle\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for the DeleteRule method.
 *
 * Generated from protobuf message <code>google.cloud.chronicle.v1.DeleteRuleRequest</code>
 */
class DeleteRuleRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the rule to delete. A rule revision timestamp cannot
     * be specified as part of the name, as deleting specific revisions is not
     * supported.
     * Format:
     * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $name = '';
    /**
     * Optional. If set to true, any retrohunts and any detections associated with
     * the rule will also be deleted. If set to false, the call will only succeed
     * if the rule has no associated retrohunts, including completed retrohunts,
     * and no associated detections. Regardless of this field's value, the rule
     * deployment associated with this rule will also be deleted.
     *
     * Generated from protobuf field <code>bool force = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $force = false;

    /**
     * @param string $name Required. The name of the rule to delete. A rule revision timestamp cannot
     *                     be specified as part of the name, as deleting specific revisions is not
     *                     supported.
     *                     Format:
     *                     `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}`
     *                     Please see {@see RuleServiceClient::ruleName()} for help formatting this field.
     *
     * @return \Google\Cloud\Chronicle\V1\DeleteRuleRequest
     *
     * @experimental
     */
    public static function build(string $name): self
    {
        return (new self())
            ->setName($name);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The name of the rule to delete. A rule revision timestamp cannot
     *           be specified as part of the name, as deleting specific revisions is not
     *           supported.
     *           Format:
     *           `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}`
     *     @type bool $force
     *           Optional. If set to true, any retrohunts and any detections associated with
     *           the rule will also be deleted. If set to false, the call will only succeed
     *           if the rule has no associated retrohunts, including completed retrohunts,
     *           and no associated detections. Regardless of this field's value, the rule
     *           deployment associated with this rule will also be deleted.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Chronicle\V1\Rule::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The name of the rule to delete. A rule revision timestamp cannot
     * be specified as part of the name, as deleting specific revisions is not
     * supported.
     * Format:
     * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The name of the rule to delete. A rule revision timestamp cannot
     * be specified as part of the name, as deleting specific revisions is not
     * supported.
     * Format:
     * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. If set to true, any retrohunts and any detections associated with
     * the rule will also be deleted. If set to false, the call will only succeed
     * if the rule has no associated retrohunts, including completed retrohunts,
     * and no associated detections. Regardless of this field's value, the rule
     * deployment associated with this rule will also be deleted.
     *
     * Generated from protobuf field <code>bool force = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getForce()
    {
        return $this->force;
    }

    /**
     * Optional. If set to true, any retrohunts and any detections associated with
     * the rule will also be deleted. If set to false, the call will only succeed
     * if the rule has no associated retrohunts, including completed retrohunts,
     * and no associated detections. Regardless of this field's value, the rule
     * deployment associated with this rule will also be deleted.
     *
     * Generated from protobuf field <code>bool force = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setForce($var)
    {
        GPBUtil::checkBool($var);
        $this->force = $var;

        return $this;
    }

}

