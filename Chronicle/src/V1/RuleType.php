<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/chronicle/v1/rule.proto

namespace Google\Cloud\Chronicle\V1;

use UnexpectedValueException;

/**
 * RuleType indicates the YARA-L rule type of user-created and Google Cloud
 * Threat Intelligence (GCTI) authored rules.
 *
 * Protobuf type <code>google.cloud.chronicle.v1.RuleType</code>
 */
class RuleType
{
    /**
     * The rule type is unspecified/unknown.
     *
     * Generated from protobuf enum <code>RULE_TYPE_UNSPECIFIED = 0;</code>
     */
    const RULE_TYPE_UNSPECIFIED = 0;
    /**
     * Rule checks for the existence of a single event.
     *
     * Generated from protobuf enum <code>SINGLE_EVENT = 1;</code>
     */
    const SINGLE_EVENT = 1;
    /**
     * Rule checks for correlation between multiple events
     *
     * Generated from protobuf enum <code>MULTI_EVENT = 2;</code>
     */
    const MULTI_EVENT = 2;

    private static $valueToName = [
        self::RULE_TYPE_UNSPECIFIED => 'RULE_TYPE_UNSPECIFIED',
        self::SINGLE_EVENT => 'SINGLE_EVENT',
        self::MULTI_EVENT => 'MULTI_EVENT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

