<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/chronicle/v1/data_access_control.proto

namespace Google\Cloud\Chronicle\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Reference object to a data access label.
 *
 * Generated from protobuf message <code>google.cloud.chronicle.v1.DataAccessLabelReference</code>
 */
class DataAccessLabelReference extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. The display name of the label.
     * Data access label and log types's name
     * will match the display name of the resource.
     * The asset namespace will match the namespace itself.
     * The ingestion key value pair will match the key of the tuple.
     *
     * Generated from protobuf field <code>string display_name = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $display_name = '';
    protected $label;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $data_access_label
     *           The name of the data access label.
     *     @type string $log_type
     *           The name of the log type.
     *     @type string $asset_namespace
     *           The asset namespace configured in the forwarder
     *           of the customer's events.
     *     @type \Google\Cloud\Chronicle\V1\IngestionLabel $ingestion_label
     *           The ingestion label configured in the forwarder of the customer's events.
     *     @type string $display_name
     *           Output only. The display name of the label.
     *           Data access label and log types's name
     *           will match the display name of the resource.
     *           The asset namespace will match the namespace itself.
     *           The ingestion key value pair will match the key of the tuple.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Chronicle\V1\DataAccessControl::initOnce();
        parent::__construct($data);
    }

    /**
     * The name of the data access label.
     *
     * Generated from protobuf field <code>string data_access_label = 1;</code>
     * @return string
     */
    public function getDataAccessLabel()
    {
        return $this->readOneof(1);
    }

    public function hasDataAccessLabel()
    {
        return $this->hasOneof(1);
    }

    /**
     * The name of the data access label.
     *
     * Generated from protobuf field <code>string data_access_label = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDataAccessLabel($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * The name of the log type.
     *
     * Generated from protobuf field <code>string log_type = 2;</code>
     * @return string
     */
    public function getLogType()
    {
        return $this->readOneof(2);
    }

    public function hasLogType()
    {
        return $this->hasOneof(2);
    }

    /**
     * The name of the log type.
     *
     * Generated from protobuf field <code>string log_type = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLogType($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * The asset namespace configured in the forwarder
     * of the customer's events.
     *
     * Generated from protobuf field <code>string asset_namespace = 3;</code>
     * @return string
     */
    public function getAssetNamespace()
    {
        return $this->readOneof(3);
    }

    public function hasAssetNamespace()
    {
        return $this->hasOneof(3);
    }

    /**
     * The asset namespace configured in the forwarder
     * of the customer's events.
     *
     * Generated from protobuf field <code>string asset_namespace = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setAssetNamespace($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * The ingestion label configured in the forwarder of the customer's events.
     *
     * Generated from protobuf field <code>.google.cloud.chronicle.v1.IngestionLabel ingestion_label = 4;</code>
     * @return \Google\Cloud\Chronicle\V1\IngestionLabel|null
     */
    public function getIngestionLabel()
    {
        return $this->readOneof(4);
    }

    public function hasIngestionLabel()
    {
        return $this->hasOneof(4);
    }

    /**
     * The ingestion label configured in the forwarder of the customer's events.
     *
     * Generated from protobuf field <code>.google.cloud.chronicle.v1.IngestionLabel ingestion_label = 4;</code>
     * @param \Google\Cloud\Chronicle\V1\IngestionLabel $var
     * @return $this
     */
    public function setIngestionLabel($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Chronicle\V1\IngestionLabel::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Output only. The display name of the label.
     * Data access label and log types's name
     * will match the display name of the resource.
     * The asset namespace will match the namespace itself.
     * The ingestion key value pair will match the key of the tuple.
     *
     * Generated from protobuf field <code>string display_name = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Output only. The display name of the label.
     * Data access label and log types's name
     * will match the display name of the resource.
     * The asset namespace will match the namespace itself.
     * The ingestion key value pair will match the key of the tuple.
     *
     * Generated from protobuf field <code>string display_name = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getLabel()
    {
        return $this->whichOneof("label");
    }

}

