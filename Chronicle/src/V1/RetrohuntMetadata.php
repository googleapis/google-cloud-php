<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/chronicle/v1/rule.proto

namespace Google\Cloud\Chronicle\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Operation Metadata for Retrohunts.
 *
 * Generated from protobuf message <code>google.cloud.chronicle.v1.RetrohuntMetadata</code>
 */
class RetrohuntMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * The name of the retrohunt.
     * Format:
     * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/retrohunts/{retrohunt}`
     *
     * Generated from protobuf field <code>string retrohunt = 1 [(.google.api.resource_reference) = {</code>
     */
    protected $retrohunt = '';
    /**
     * The start and end time of the retrohunt execution. If the retrohunt is not
     * yet finished, the end time of the interval will not be filled.
     *
     * Generated from protobuf field <code>.google.type.Interval execution_interval = 2;</code>
     */
    protected $execution_interval = null;
    /**
     * Percent progress of the retrohunt towards completion, from 0.00 to 100.00.
     *
     * Generated from protobuf field <code>float progress_percentage = 3;</code>
     */
    protected $progress_percentage = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $retrohunt
     *           The name of the retrohunt.
     *           Format:
     *           `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/retrohunts/{retrohunt}`
     *     @type \Google\Type\Interval $execution_interval
     *           The start and end time of the retrohunt execution. If the retrohunt is not
     *           yet finished, the end time of the interval will not be filled.
     *     @type float $progress_percentage
     *           Percent progress of the retrohunt towards completion, from 0.00 to 100.00.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Chronicle\V1\Rule::initOnce();
        parent::__construct($data);
    }

    /**
     * The name of the retrohunt.
     * Format:
     * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/retrohunts/{retrohunt}`
     *
     * Generated from protobuf field <code>string retrohunt = 1 [(.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getRetrohunt()
    {
        return $this->retrohunt;
    }

    /**
     * The name of the retrohunt.
     * Format:
     * `projects/{project}/locations/{location}/instances/{instance}/rules/{rule}/retrohunts/{retrohunt}`
     *
     * Generated from protobuf field <code>string retrohunt = 1 [(.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setRetrohunt($var)
    {
        GPBUtil::checkString($var, True);
        $this->retrohunt = $var;

        return $this;
    }

    /**
     * The start and end time of the retrohunt execution. If the retrohunt is not
     * yet finished, the end time of the interval will not be filled.
     *
     * Generated from protobuf field <code>.google.type.Interval execution_interval = 2;</code>
     * @return \Google\Type\Interval|null
     */
    public function getExecutionInterval()
    {
        return $this->execution_interval;
    }

    public function hasExecutionInterval()
    {
        return isset($this->execution_interval);
    }

    public function clearExecutionInterval()
    {
        unset($this->execution_interval);
    }

    /**
     * The start and end time of the retrohunt execution. If the retrohunt is not
     * yet finished, the end time of the interval will not be filled.
     *
     * Generated from protobuf field <code>.google.type.Interval execution_interval = 2;</code>
     * @param \Google\Type\Interval $var
     * @return $this
     */
    public function setExecutionInterval($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Interval::class);
        $this->execution_interval = $var;

        return $this;
    }

    /**
     * Percent progress of the retrohunt towards completion, from 0.00 to 100.00.
     *
     * Generated from protobuf field <code>float progress_percentage = 3;</code>
     * @return float
     */
    public function getProgressPercentage()
    {
        return $this->progress_percentage;
    }

    /**
     * Percent progress of the retrohunt towards completion, from 0.00 to 100.00.
     *
     * Generated from protobuf field <code>float progress_percentage = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setProgressPercentage($var)
    {
        GPBUtil::checkFloat($var);
        $this->progress_percentage = $var;

        return $this;
    }

}

