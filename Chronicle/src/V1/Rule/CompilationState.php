<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/chronicle/v1/rule.proto

namespace Google\Cloud\Chronicle\V1\Rule;

use UnexpectedValueException;

/**
 * The current compilation state of the rule.
 *
 * Protobuf type <code>google.cloud.chronicle.v1.Rule.CompilationState</code>
 */
class CompilationState
{
    /**
     * The compilation state is unspecified/unknown.
     *
     * Generated from protobuf enum <code>COMPILATION_STATE_UNSPECIFIED = 0;</code>
     */
    const COMPILATION_STATE_UNSPECIFIED = 0;
    /**
     * The Rule can successfully compile.
     *
     * Generated from protobuf enum <code>SUCCEEDED = 1;</code>
     */
    const SUCCEEDED = 1;
    /**
     * The Rule cannot successfully compile.
     * This is possible if a backwards-incompatible change was made to the
     * compiler.
     *
     * Generated from protobuf enum <code>FAILED = 2;</code>
     */
    const FAILED = 2;

    private static $valueToName = [
        self::COMPILATION_STATE_UNSPECIFIED => 'COMPILATION_STATE_UNSPECIFIED',
        self::SUCCEEDED => 'SUCCEEDED',
        self::FAILED => 'FAILED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


