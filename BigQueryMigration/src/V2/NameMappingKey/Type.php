<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/bigquery/migration/v2/translation_config.proto

namespace Google\Cloud\BigQuery\Migration\V2\NameMappingKey;

use UnexpectedValueException;

/**
 * The type of the object that is being mapped.
 *
 * Protobuf type <code>google.cloud.bigquery.migration.v2.NameMappingKey.Type</code>
 */
class Type
{
    /**
     * Unspecified name mapping type.
     *
     * Generated from protobuf enum <code>TYPE_UNSPECIFIED = 0;</code>
     */
    const TYPE_UNSPECIFIED = 0;
    /**
     * The object being mapped is a database.
     *
     * Generated from protobuf enum <code>DATABASE = 1;</code>
     */
    const DATABASE = 1;
    /**
     * The object being mapped is a schema.
     *
     * Generated from protobuf enum <code>SCHEMA = 2;</code>
     */
    const SCHEMA = 2;
    /**
     * The object being mapped is a relation.
     *
     * Generated from protobuf enum <code>RELATION = 3;</code>
     */
    const RELATION = 3;
    /**
     * The object being mapped is an attribute.
     *
     * Generated from protobuf enum <code>ATTRIBUTE = 4;</code>
     */
    const ATTRIBUTE = 4;
    /**
     * The object being mapped is a relation alias.
     *
     * Generated from protobuf enum <code>RELATION_ALIAS = 5;</code>
     */
    const RELATION_ALIAS = 5;
    /**
     * The object being mapped is a an attribute alias.
     *
     * Generated from protobuf enum <code>ATTRIBUTE_ALIAS = 6;</code>
     */
    const ATTRIBUTE_ALIAS = 6;
    /**
     * The object being mapped is a function.
     *
     * Generated from protobuf enum <code>FUNCTION = 7;</code>
     */
    const PBFUNCTION = 7;

    private static $valueToName = [
        self::TYPE_UNSPECIFIED => 'TYPE_UNSPECIFIED',
        self::DATABASE => 'DATABASE',
        self::SCHEMA => 'SCHEMA',
        self::RELATION => 'RELATION',
        self::ATTRIBUTE => 'ATTRIBUTE',
        self::RELATION_ALIAS => 'RELATION_ALIAS',
        self::ATTRIBUTE_ALIAS => 'ATTRIBUTE_ALIAS',
        self::PBFUNCTION => 'FUNCTION',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            $pbconst =  __CLASS__. '::PB' . strtoupper($name);
            if (!defined($pbconst)) {
                throw new UnexpectedValueException(sprintf(
                        'Enum %s has no value defined for name %s', __CLASS__, $name));
            }
            return constant($pbconst);
        }
        return constant($const);
    }
}


