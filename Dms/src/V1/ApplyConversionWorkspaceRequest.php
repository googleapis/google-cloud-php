<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/clouddms/v1/clouddms.proto

namespace Google\Cloud\CloudDms\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for 'ApplyConversionWorkspace' request.
 *
 * Generated from protobuf message <code>google.cloud.clouddms.v1.ApplyConversionWorkspaceRequest</code>
 */
class ApplyConversionWorkspaceRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the conversion workspace resource for which to apply
     * the draft tree. Must be in the form of:
     *  projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    private $name = '';
    /**
     * Filter which entities to apply. Leaving this field empty will apply all of
     * the entities. Supports Google AIP 160 based filtering.
     *
     * Generated from protobuf field <code>string filter = 2;</code>
     */
    private $filter = '';
    /**
     * Optional. Only validates the apply process, but doesn't change the
     * destination database. Only works for PostgreSQL destination connection
     * profile.
     *
     * Generated from protobuf field <code>bool dry_run = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $dry_run = false;
    /**
     * Optional. Specifies whether the conversion workspace is to be committed
     * automatically after the apply.
     *
     * Generated from protobuf field <code>bool auto_commit = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $auto_commit = false;
    protected $destination;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The name of the conversion workspace resource for which to apply
     *           the draft tree. Must be in the form of:
     *            projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.
     *     @type string $filter
     *           Filter which entities to apply. Leaving this field empty will apply all of
     *           the entities. Supports Google AIP 160 based filtering.
     *     @type bool $dry_run
     *           Optional. Only validates the apply process, but doesn't change the
     *           destination database. Only works for PostgreSQL destination connection
     *           profile.
     *     @type bool $auto_commit
     *           Optional. Specifies whether the conversion workspace is to be committed
     *           automatically after the apply.
     *     @type string $connection_profile
     *           Optional. Fully qualified (Uri) name of the destination connection
     *           profile.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Clouddms\V1\Clouddms::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The name of the conversion workspace resource for which to apply
     * the draft tree. Must be in the form of:
     *  projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The name of the conversion workspace resource for which to apply
     * the draft tree. Must be in the form of:
     *  projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Filter which entities to apply. Leaving this field empty will apply all of
     * the entities. Supports Google AIP 160 based filtering.
     *
     * Generated from protobuf field <code>string filter = 2;</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Filter which entities to apply. Leaving this field empty will apply all of
     * the entities. Supports Google AIP 160 based filtering.
     *
     * Generated from protobuf field <code>string filter = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

    /**
     * Optional. Only validates the apply process, but doesn't change the
     * destination database. Only works for PostgreSQL destination connection
     * profile.
     *
     * Generated from protobuf field <code>bool dry_run = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getDryRun()
    {
        return $this->dry_run;
    }

    /**
     * Optional. Only validates the apply process, but doesn't change the
     * destination database. Only works for PostgreSQL destination connection
     * profile.
     *
     * Generated from protobuf field <code>bool dry_run = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setDryRun($var)
    {
        GPBUtil::checkBool($var);
        $this->dry_run = $var;

        return $this;
    }

    /**
     * Optional. Specifies whether the conversion workspace is to be committed
     * automatically after the apply.
     *
     * Generated from protobuf field <code>bool auto_commit = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getAutoCommit()
    {
        return $this->auto_commit;
    }

    /**
     * Optional. Specifies whether the conversion workspace is to be committed
     * automatically after the apply.
     *
     * Generated from protobuf field <code>bool auto_commit = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setAutoCommit($var)
    {
        GPBUtil::checkBool($var);
        $this->auto_commit = $var;

        return $this;
    }

    /**
     * Optional. Fully qualified (Uri) name of the destination connection
     * profile.
     *
     * Generated from protobuf field <code>string connection_profile = 100 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getConnectionProfile()
    {
        return $this->readOneof(100);
    }

    public function hasConnectionProfile()
    {
        return $this->hasOneof(100);
    }

    /**
     * Optional. Fully qualified (Uri) name of the destination connection
     * profile.
     *
     * Generated from protobuf field <code>string connection_profile = 100 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setConnectionProfile($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(100, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getDestination()
    {
        return $this->whichOneof("destination");
    }

}

