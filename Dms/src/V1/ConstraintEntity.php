<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/clouddms/v1/conversionworkspace_resources.proto

namespace Google\Cloud\CloudDms\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Constraint is not used as an independent entity, it is retrieved
 * as part of another entity such as Table or View.
 *
 * Generated from protobuf message <code>google.cloud.clouddms.v1.ConstraintEntity</code>
 */
class ConstraintEntity extends \Google\Protobuf\Internal\Message
{
    /**
     * The name of the table constraint.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * Type of constraint, for example unique, primary key, foreign key (currently
     * only primary key is supported).
     *
     * Generated from protobuf field <code>string type = 2;</code>
     */
    private $type = '';
    /**
     * Table columns used as part of the Constraint, for example primary key
     * constraint should list the columns which constitutes the key.
     *
     * Generated from protobuf field <code>repeated string table_columns = 3;</code>
     */
    private $table_columns;
    /**
     * Custom engine specific features.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct custom_features = 4;</code>
     */
    private $custom_features = null;
    /**
     * Reference columns which may be associated with the constraint. For example,
     * if the constraint is a FOREIGN_KEY, this represents the list of full names
     * of referenced columns by the foreign key.
     *
     * Generated from protobuf field <code>repeated string reference_columns = 5;</code>
     */
    private $reference_columns;
    /**
     * Reference table which may be associated with the constraint. For example,
     * if the constraint is a FOREIGN_KEY, this represents the list of full name
     * of the referenced table by the foreign key.
     *
     * Generated from protobuf field <code>string reference_table = 6;</code>
     */
    private $reference_table = '';
    /**
     * Table which is associated with the constraint. In case the constraint
     * is defined on a table, this field is left empty as this information is
     * stored in parent_name. However, if constraint is defined on a view, this
     * field stores the table name on which the view is defined.
     *
     * Generated from protobuf field <code>string table_name = 7;</code>
     */
    private $table_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           The name of the table constraint.
     *     @type string $type
     *           Type of constraint, for example unique, primary key, foreign key (currently
     *           only primary key is supported).
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $table_columns
     *           Table columns used as part of the Constraint, for example primary key
     *           constraint should list the columns which constitutes the key.
     *     @type \Google\Protobuf\Struct $custom_features
     *           Custom engine specific features.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $reference_columns
     *           Reference columns which may be associated with the constraint. For example,
     *           if the constraint is a FOREIGN_KEY, this represents the list of full names
     *           of referenced columns by the foreign key.
     *     @type string $reference_table
     *           Reference table which may be associated with the constraint. For example,
     *           if the constraint is a FOREIGN_KEY, this represents the list of full name
     *           of the referenced table by the foreign key.
     *     @type string $table_name
     *           Table which is associated with the constraint. In case the constraint
     *           is defined on a table, this field is left empty as this information is
     *           stored in parent_name. However, if constraint is defined on a view, this
     *           field stores the table name on which the view is defined.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Clouddms\V1\ConversionworkspaceResources::initOnce();
        parent::__construct($data);
    }

    /**
     * The name of the table constraint.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The name of the table constraint.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Type of constraint, for example unique, primary key, foreign key (currently
     * only primary key is supported).
     *
     * Generated from protobuf field <code>string type = 2;</code>
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Type of constraint, for example unique, primary key, foreign key (currently
     * only primary key is supported).
     *
     * Generated from protobuf field <code>string type = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

    /**
     * Table columns used as part of the Constraint, for example primary key
     * constraint should list the columns which constitutes the key.
     *
     * Generated from protobuf field <code>repeated string table_columns = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTableColumns()
    {
        return $this->table_columns;
    }

    /**
     * Table columns used as part of the Constraint, for example primary key
     * constraint should list the columns which constitutes the key.
     *
     * Generated from protobuf field <code>repeated string table_columns = 3;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTableColumns($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->table_columns = $arr;

        return $this;
    }

    /**
     * Custom engine specific features.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct custom_features = 4;</code>
     * @return \Google\Protobuf\Struct|null
     */
    public function getCustomFeatures()
    {
        return $this->custom_features;
    }

    public function hasCustomFeatures()
    {
        return isset($this->custom_features);
    }

    public function clearCustomFeatures()
    {
        unset($this->custom_features);
    }

    /**
     * Custom engine specific features.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct custom_features = 4;</code>
     * @param \Google\Protobuf\Struct $var
     * @return $this
     */
    public function setCustomFeatures($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Struct::class);
        $this->custom_features = $var;

        return $this;
    }

    /**
     * Reference columns which may be associated with the constraint. For example,
     * if the constraint is a FOREIGN_KEY, this represents the list of full names
     * of referenced columns by the foreign key.
     *
     * Generated from protobuf field <code>repeated string reference_columns = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getReferenceColumns()
    {
        return $this->reference_columns;
    }

    /**
     * Reference columns which may be associated with the constraint. For example,
     * if the constraint is a FOREIGN_KEY, this represents the list of full names
     * of referenced columns by the foreign key.
     *
     * Generated from protobuf field <code>repeated string reference_columns = 5;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setReferenceColumns($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->reference_columns = $arr;

        return $this;
    }

    /**
     * Reference table which may be associated with the constraint. For example,
     * if the constraint is a FOREIGN_KEY, this represents the list of full name
     * of the referenced table by the foreign key.
     *
     * Generated from protobuf field <code>string reference_table = 6;</code>
     * @return string
     */
    public function getReferenceTable()
    {
        return $this->reference_table;
    }

    /**
     * Reference table which may be associated with the constraint. For example,
     * if the constraint is a FOREIGN_KEY, this represents the list of full name
     * of the referenced table by the foreign key.
     *
     * Generated from protobuf field <code>string reference_table = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setReferenceTable($var)
    {
        GPBUtil::checkString($var, True);
        $this->reference_table = $var;

        return $this;
    }

    /**
     * Table which is associated with the constraint. In case the constraint
     * is defined on a table, this field is left empty as this information is
     * stored in parent_name. However, if constraint is defined on a view, this
     * field stores the table name on which the view is defined.
     *
     * Generated from protobuf field <code>string table_name = 7;</code>
     * @return string
     */
    public function getTableName()
    {
        return $this->table_name;
    }

    /**
     * Table which is associated with the constraint. In case the constraint
     * is defined on a table, this field is left empty as this information is
     * stored in parent_name. However, if constraint is defined on a view, this
     * field stores the table name on which the view is defined.
     *
     * Generated from protobuf field <code>string table_name = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setTableName($var)
    {
        GPBUtil::checkString($var, True);
        $this->table_name = $var;

        return $this;
    }

}

