<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/clouddms/v1/conversionworkspace_resources.proto

namespace Google\Cloud\CloudDms\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details of the mappings of a database entity.
 *
 * Generated from protobuf message <code>google.cloud.clouddms.v1.EntityMapping</code>
 */
class EntityMapping extends \Google\Protobuf\Internal\Message
{
    /**
     * Source entity full name.
     * The source entity can also be a column, index or constraint using the
     * same naming notation schema.table.column.
     *
     * Generated from protobuf field <code>string source_entity = 1;</code>
     */
    private $source_entity = '';
    /**
     * Target entity full name.
     * The draft entity can also include a column, index or constraint using the
     * same naming notation schema.table.column.
     *
     * Generated from protobuf field <code>string draft_entity = 2;</code>
     */
    private $draft_entity = '';
    /**
     * Type of source entity.
     *
     * Generated from protobuf field <code>.google.cloud.clouddms.v1.DatabaseEntityType source_type = 4;</code>
     */
    private $source_type = 0;
    /**
     * Type of draft entity.
     *
     * Generated from protobuf field <code>.google.cloud.clouddms.v1.DatabaseEntityType draft_type = 5;</code>
     */
    private $draft_type = 0;
    /**
     * Entity mapping log entries.
     * Multiple rules can be effective and contribute changes to a converted
     * entity, such as a rule can handle the entity name, another rule can handle
     * an entity type. In addition, rules which did not change the entity are also
     * logged along with the reason preventing them to do so.
     *
     * Generated from protobuf field <code>repeated .google.cloud.clouddms.v1.EntityMappingLogEntry mapping_log = 3;</code>
     */
    private $mapping_log;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $source_entity
     *           Source entity full name.
     *           The source entity can also be a column, index or constraint using the
     *           same naming notation schema.table.column.
     *     @type string $draft_entity
     *           Target entity full name.
     *           The draft entity can also include a column, index or constraint using the
     *           same naming notation schema.table.column.
     *     @type int $source_type
     *           Type of source entity.
     *     @type int $draft_type
     *           Type of draft entity.
     *     @type array<\Google\Cloud\CloudDms\V1\EntityMappingLogEntry>|\Google\Protobuf\Internal\RepeatedField $mapping_log
     *           Entity mapping log entries.
     *           Multiple rules can be effective and contribute changes to a converted
     *           entity, such as a rule can handle the entity name, another rule can handle
     *           an entity type. In addition, rules which did not change the entity are also
     *           logged along with the reason preventing them to do so.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Clouddms\V1\ConversionworkspaceResources::initOnce();
        parent::__construct($data);
    }

    /**
     * Source entity full name.
     * The source entity can also be a column, index or constraint using the
     * same naming notation schema.table.column.
     *
     * Generated from protobuf field <code>string source_entity = 1;</code>
     * @return string
     */
    public function getSourceEntity()
    {
        return $this->source_entity;
    }

    /**
     * Source entity full name.
     * The source entity can also be a column, index or constraint using the
     * same naming notation schema.table.column.
     *
     * Generated from protobuf field <code>string source_entity = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSourceEntity($var)
    {
        GPBUtil::checkString($var, True);
        $this->source_entity = $var;

        return $this;
    }

    /**
     * Target entity full name.
     * The draft entity can also include a column, index or constraint using the
     * same naming notation schema.table.column.
     *
     * Generated from protobuf field <code>string draft_entity = 2;</code>
     * @return string
     */
    public function getDraftEntity()
    {
        return $this->draft_entity;
    }

    /**
     * Target entity full name.
     * The draft entity can also include a column, index or constraint using the
     * same naming notation schema.table.column.
     *
     * Generated from protobuf field <code>string draft_entity = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDraftEntity($var)
    {
        GPBUtil::checkString($var, True);
        $this->draft_entity = $var;

        return $this;
    }

    /**
     * Type of source entity.
     *
     * Generated from protobuf field <code>.google.cloud.clouddms.v1.DatabaseEntityType source_type = 4;</code>
     * @return int
     */
    public function getSourceType()
    {
        return $this->source_type;
    }

    /**
     * Type of source entity.
     *
     * Generated from protobuf field <code>.google.cloud.clouddms.v1.DatabaseEntityType source_type = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setSourceType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\CloudDms\V1\DatabaseEntityType::class);
        $this->source_type = $var;

        return $this;
    }

    /**
     * Type of draft entity.
     *
     * Generated from protobuf field <code>.google.cloud.clouddms.v1.DatabaseEntityType draft_type = 5;</code>
     * @return int
     */
    public function getDraftType()
    {
        return $this->draft_type;
    }

    /**
     * Type of draft entity.
     *
     * Generated from protobuf field <code>.google.cloud.clouddms.v1.DatabaseEntityType draft_type = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setDraftType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\CloudDms\V1\DatabaseEntityType::class);
        $this->draft_type = $var;

        return $this;
    }

    /**
     * Entity mapping log entries.
     * Multiple rules can be effective and contribute changes to a converted
     * entity, such as a rule can handle the entity name, another rule can handle
     * an entity type. In addition, rules which did not change the entity are also
     * logged along with the reason preventing them to do so.
     *
     * Generated from protobuf field <code>repeated .google.cloud.clouddms.v1.EntityMappingLogEntry mapping_log = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMappingLog()
    {
        return $this->mapping_log;
    }

    /**
     * Entity mapping log entries.
     * Multiple rules can be effective and contribute changes to a converted
     * entity, such as a rule can handle the entity name, another rule can handle
     * an entity type. In addition, rules which did not change the entity are also
     * logged along with the reason preventing them to do so.
     *
     * Generated from protobuf field <code>repeated .google.cloud.clouddms.v1.EntityMappingLogEntry mapping_log = 3;</code>
     * @param array<\Google\Cloud\CloudDms\V1\EntityMappingLogEntry>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMappingLog($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\CloudDms\V1\EntityMappingLogEntry::class);
        $this->mapping_log = $arr;

        return $this;
    }

}

