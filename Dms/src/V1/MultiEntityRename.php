<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/clouddms/v1/conversionworkspace_resources.proto

namespace Google\Cloud\CloudDms\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Options to configure rule type MultiEntityRename.
 * The rule is used to rename multiple entities.
 * The rule filter field can refer to one or more entities.
 * The rule scope can be one of: Database, Schema, Table, Column, Constraint,
 * Index, View, Function, Stored Procedure, Materialized View, Sequence, UDT
 *
 * Generated from protobuf message <code>google.cloud.clouddms.v1.MultiEntityRename</code>
 */
class MultiEntityRename extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The pattern used to generate the new entity's name. This pattern
     * must include the characters '{name}', which will be replaced with the name
     * of the original entity. For example, the pattern 't_{name}' for an entity
     * name jobs would be converted to 't_jobs'.
     * If unspecified, the default value for this field is '{name}'
     *
     * Generated from protobuf field <code>string new_name_pattern = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $new_name_pattern = '';
    /**
     * Optional. Additional transformation that can be done on the source entity
     * name before it is being used by the new_name_pattern, for example lower
     * case. If no transformation is desired, use NO_TRANSFORMATION
     *
     * Generated from protobuf field <code>.google.cloud.clouddms.v1.EntityNameTransformation source_name_transformation = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $source_name_transformation = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $new_name_pattern
     *           Optional. The pattern used to generate the new entity's name. This pattern
     *           must include the characters '{name}', which will be replaced with the name
     *           of the original entity. For example, the pattern 't_{name}' for an entity
     *           name jobs would be converted to 't_jobs'.
     *           If unspecified, the default value for this field is '{name}'
     *     @type int $source_name_transformation
     *           Optional. Additional transformation that can be done on the source entity
     *           name before it is being used by the new_name_pattern, for example lower
     *           case. If no transformation is desired, use NO_TRANSFORMATION
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Clouddms\V1\ConversionworkspaceResources::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The pattern used to generate the new entity's name. This pattern
     * must include the characters '{name}', which will be replaced with the name
     * of the original entity. For example, the pattern 't_{name}' for an entity
     * name jobs would be converted to 't_jobs'.
     * If unspecified, the default value for this field is '{name}'
     *
     * Generated from protobuf field <code>string new_name_pattern = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getNewNamePattern()
    {
        return $this->new_name_pattern;
    }

    /**
     * Optional. The pattern used to generate the new entity's name. This pattern
     * must include the characters '{name}', which will be replaced with the name
     * of the original entity. For example, the pattern 't_{name}' for an entity
     * name jobs would be converted to 't_jobs'.
     * If unspecified, the default value for this field is '{name}'
     *
     * Generated from protobuf field <code>string new_name_pattern = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setNewNamePattern($var)
    {
        GPBUtil::checkString($var, True);
        $this->new_name_pattern = $var;

        return $this;
    }

    /**
     * Optional. Additional transformation that can be done on the source entity
     * name before it is being used by the new_name_pattern, for example lower
     * case. If no transformation is desired, use NO_TRANSFORMATION
     *
     * Generated from protobuf field <code>.google.cloud.clouddms.v1.EntityNameTransformation source_name_transformation = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getSourceNameTransformation()
    {
        return $this->source_name_transformation;
    }

    /**
     * Optional. Additional transformation that can be done on the source entity
     * name before it is being used by the new_name_pattern, for example lower
     * case. If no transformation is desired, use NO_TRANSFORMATION
     *
     * Generated from protobuf field <code>.google.cloud.clouddms.v1.EntityNameTransformation source_name_transformation = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setSourceNameTransformation($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\CloudDms\V1\EntityNameTransformation::class);
        $this->source_name_transformation = $var;

        return $this;
    }

}

