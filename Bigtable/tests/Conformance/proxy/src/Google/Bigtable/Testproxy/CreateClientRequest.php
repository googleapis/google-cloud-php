<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: google/bigtable/testproxy/test_proxy.proto

namespace Google\Bigtable\Testproxy;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request to test proxy service to create a client object.
 *
 * Generated from protobuf message <code>google.bigtable.testproxy.CreateClientRequest</code>
 */
class CreateClientRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * A unique ID associated with the client object to be created.
     *
     * Generated from protobuf field <code>string client_id = 1;</code>
     */
    protected $client_id = '';
    /**
     * The "host:port" address of the data API endpoint (i.e. the backend being
     * proxied to). Example: 127.0.0.1:38543. If you want to connect to a local
     * emulator via BIGTABLE_EMULATOR_HOST environment variable, you can use
     * "emulator" instead of "host:port" for this field.
     *
     * Generated from protobuf field <code>string data_target = 2;</code>
     */
    protected $data_target = '';
    /**
     * The project for all calls on this client.
     *
     * Generated from protobuf field <code>string project_id = 3;</code>
     */
    protected $project_id = '';
    /**
     * The instance for all calls on this client.
     *
     * Generated from protobuf field <code>string instance_id = 4;</code>
     */
    protected $instance_id = '';
    /**
     * Optional app profile for all calls on this client.
     * Some client bindings allow specifying the app profile on a per-operation
     * basis. We don't yet support this in the proxy API, but may in the future.
     *
     * Generated from protobuf field <code>string app_profile_id = 5;</code>
     */
    protected $app_profile_id = '';
    /**
     * If provided, a custom timeout will be set for each API call conducted by
     * the created client. Otherwise, the default timeout from the client library
     * will be used. Note that the override applies to all the methods.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration per_operation_timeout = 6;</code>
     */
    protected $per_operation_timeout = null;
    /**
     * Optional config that dictates how the optional features should be enabled
     * during the client creation. Please check the enum type's docstring above.
     *
     * Generated from protobuf field <code>.google.bigtable.testproxy.OptionalFeatureConfig optional_feature_config = 7;</code>
     */
    protected $optional_feature_config = 0;
    /**
     * Options to allow connecting to backends with channel and/or call
     * credentials. This is needed internally by Cloud Bigtable's own testing
     * frameworks.It is not necessary to support these fields for client
     * conformance testing.
     * WARNING: this allows the proxy to connect to a real production
     * CBT backend with the right options, however, the proxy itself is insecure
     * so it is not recommended to use it with real credentials or outside testing
     * contexts.
     *
     * Generated from protobuf field <code>.google.bigtable.testproxy.CreateClientRequest.SecurityOptions security_options = 8;</code>
     */
    protected $security_options = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $client_id
     *           A unique ID associated with the client object to be created.
     *     @type string $data_target
     *           The "host:port" address of the data API endpoint (i.e. the backend being
     *           proxied to). Example: 127.0.0.1:38543. If you want to connect to a local
     *           emulator via BIGTABLE_EMULATOR_HOST environment variable, you can use
     *           "emulator" instead of "host:port" for this field.
     *     @type string $project_id
     *           The project for all calls on this client.
     *     @type string $instance_id
     *           The instance for all calls on this client.
     *     @type string $app_profile_id
     *           Optional app profile for all calls on this client.
     *           Some client bindings allow specifying the app profile on a per-operation
     *           basis. We don't yet support this in the proxy API, but may in the future.
     *     @type \Google\Protobuf\Duration $per_operation_timeout
     *           If provided, a custom timeout will be set for each API call conducted by
     *           the created client. Otherwise, the default timeout from the client library
     *           will be used. Note that the override applies to all the methods.
     *     @type int $optional_feature_config
     *           Optional config that dictates how the optional features should be enabled
     *           during the client creation. Please check the enum type's docstring above.
     *     @type \Google\Bigtable\Testproxy\CreateClientRequest\SecurityOptions $security_options
     *           Options to allow connecting to backends with channel and/or call
     *           credentials. This is needed internally by Cloud Bigtable's own testing
     *           frameworks.It is not necessary to support these fields for client
     *           conformance testing.
     *           WARNING: this allows the proxy to connect to a real production
     *           CBT backend with the right options, however, the proxy itself is insecure
     *           so it is not recommended to use it with real credentials or outside testing
     *           contexts.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Bigtable\Testproxy\TestProxy::initOnce();
        parent::__construct($data);
    }

    /**
     * A unique ID associated with the client object to be created.
     *
     * Generated from protobuf field <code>string client_id = 1;</code>
     * @return string
     */
    public function getClientId()
    {
        return $this->client_id;
    }

    /**
     * A unique ID associated with the client object to be created.
     *
     * Generated from protobuf field <code>string client_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setClientId($var)
    {
        GPBUtil::checkString($var, True);
        $this->client_id = $var;

        return $this;
    }

    /**
     * The "host:port" address of the data API endpoint (i.e. the backend being
     * proxied to). Example: 127.0.0.1:38543. If you want to connect to a local
     * emulator via BIGTABLE_EMULATOR_HOST environment variable, you can use
     * "emulator" instead of "host:port" for this field.
     *
     * Generated from protobuf field <code>string data_target = 2;</code>
     * @return string
     */
    public function getDataTarget()
    {
        return $this->data_target;
    }

    /**
     * The "host:port" address of the data API endpoint (i.e. the backend being
     * proxied to). Example: 127.0.0.1:38543. If you want to connect to a local
     * emulator via BIGTABLE_EMULATOR_HOST environment variable, you can use
     * "emulator" instead of "host:port" for this field.
     *
     * Generated from protobuf field <code>string data_target = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDataTarget($var)
    {
        GPBUtil::checkString($var, True);
        $this->data_target = $var;

        return $this;
    }

    /**
     * The project for all calls on this client.
     *
     * Generated from protobuf field <code>string project_id = 3;</code>
     * @return string
     */
    public function getProjectId()
    {
        return $this->project_id;
    }

    /**
     * The project for all calls on this client.
     *
     * Generated from protobuf field <code>string project_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setProjectId($var)
    {
        GPBUtil::checkString($var, True);
        $this->project_id = $var;

        return $this;
    }

    /**
     * The instance for all calls on this client.
     *
     * Generated from protobuf field <code>string instance_id = 4;</code>
     * @return string
     */
    public function getInstanceId()
    {
        return $this->instance_id;
    }

    /**
     * The instance for all calls on this client.
     *
     * Generated from protobuf field <code>string instance_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setInstanceId($var)
    {
        GPBUtil::checkString($var, True);
        $this->instance_id = $var;

        return $this;
    }

    /**
     * Optional app profile for all calls on this client.
     * Some client bindings allow specifying the app profile on a per-operation
     * basis. We don't yet support this in the proxy API, but may in the future.
     *
     * Generated from protobuf field <code>string app_profile_id = 5;</code>
     * @return string
     */
    public function getAppProfileId()
    {
        return $this->app_profile_id;
    }

    /**
     * Optional app profile for all calls on this client.
     * Some client bindings allow specifying the app profile on a per-operation
     * basis. We don't yet support this in the proxy API, but may in the future.
     *
     * Generated from protobuf field <code>string app_profile_id = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setAppProfileId($var)
    {
        GPBUtil::checkString($var, True);
        $this->app_profile_id = $var;

        return $this;
    }

    /**
     * If provided, a custom timeout will be set for each API call conducted by
     * the created client. Otherwise, the default timeout from the client library
     * will be used. Note that the override applies to all the methods.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration per_operation_timeout = 6;</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getPerOperationTimeout()
    {
        return $this->per_operation_timeout;
    }

    public function hasPerOperationTimeout()
    {
        return isset($this->per_operation_timeout);
    }

    public function clearPerOperationTimeout()
    {
        unset($this->per_operation_timeout);
    }

    /**
     * If provided, a custom timeout will be set for each API call conducted by
     * the created client. Otherwise, the default timeout from the client library
     * will be used. Note that the override applies to all the methods.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration per_operation_timeout = 6;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setPerOperationTimeout($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->per_operation_timeout = $var;

        return $this;
    }

    /**
     * Optional config that dictates how the optional features should be enabled
     * during the client creation. Please check the enum type's docstring above.
     *
     * Generated from protobuf field <code>.google.bigtable.testproxy.OptionalFeatureConfig optional_feature_config = 7;</code>
     * @return int
     */
    public function getOptionalFeatureConfig()
    {
        return $this->optional_feature_config;
    }

    /**
     * Optional config that dictates how the optional features should be enabled
     * during the client creation. Please check the enum type's docstring above.
     *
     * Generated from protobuf field <code>.google.bigtable.testproxy.OptionalFeatureConfig optional_feature_config = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setOptionalFeatureConfig($var)
    {
        GPBUtil::checkEnum($var, \Google\Bigtable\Testproxy\OptionalFeatureConfig::class);
        $this->optional_feature_config = $var;

        return $this;
    }

    /**
     * Options to allow connecting to backends with channel and/or call
     * credentials. This is needed internally by Cloud Bigtable's own testing
     * frameworks.It is not necessary to support these fields for client
     * conformance testing.
     * WARNING: this allows the proxy to connect to a real production
     * CBT backend with the right options, however, the proxy itself is insecure
     * so it is not recommended to use it with real credentials or outside testing
     * contexts.
     *
     * Generated from protobuf field <code>.google.bigtable.testproxy.CreateClientRequest.SecurityOptions security_options = 8;</code>
     * @return \Google\Bigtable\Testproxy\CreateClientRequest\SecurityOptions|null
     */
    public function getSecurityOptions()
    {
        return $this->security_options;
    }

    public function hasSecurityOptions()
    {
        return isset($this->security_options);
    }

    public function clearSecurityOptions()
    {
        unset($this->security_options);
    }

    /**
     * Options to allow connecting to backends with channel and/or call
     * credentials. This is needed internally by Cloud Bigtable's own testing
     * frameworks.It is not necessary to support these fields for client
     * conformance testing.
     * WARNING: this allows the proxy to connect to a real production
     * CBT backend with the right options, however, the proxy itself is insecure
     * so it is not recommended to use it with real credentials or outside testing
     * contexts.
     *
     * Generated from protobuf field <code>.google.bigtable.testproxy.CreateClientRequest.SecurityOptions security_options = 8;</code>
     * @param \Google\Bigtable\Testproxy\CreateClientRequest\SecurityOptions $var
     * @return $this
     */
    public function setSecurityOptions($var)
    {
        GPBUtil::checkMessage($var, \Google\Bigtable\Testproxy\CreateClientRequest\SecurityOptions::class);
        $this->security_options = $var;

        return $this;
    }

}

