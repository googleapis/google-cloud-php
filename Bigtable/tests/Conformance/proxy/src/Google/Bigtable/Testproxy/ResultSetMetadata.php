<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: google/bigtable/testproxy/test_proxy.proto

namespace Google\Bigtable\Testproxy;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Schema information for the query result.
 *
 * Generated from protobuf message <code>google.bigtable.testproxy.ResultSetMetadata</code>
 */
class ResultSetMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Column metadata for each column inthe query result.
     *
     * Generated from protobuf field <code>repeated .google.bigtable.v2.ColumnMetadata columns = 1;</code>
     */
    private $columns;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Google\Cloud\Bigtable\V2\ColumnMetadata>|\Google\Protobuf\Internal\RepeatedField $columns
     *           Column metadata for each column inthe query result.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Bigtable\Testproxy\TestProxy::initOnce();
        parent::__construct($data);
    }

    /**
     * Column metadata for each column inthe query result.
     *
     * Generated from protobuf field <code>repeated .google.bigtable.v2.ColumnMetadata columns = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getColumns()
    {
        return $this->columns;
    }

    /**
     * Column metadata for each column inthe query result.
     *
     * Generated from protobuf field <code>repeated .google.bigtable.v2.ColumnMetadata columns = 1;</code>
     * @param array<\Google\Cloud\Bigtable\V2\ColumnMetadata>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setColumns($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Bigtable\V2\ColumnMetadata::class);
        $this->columns = $arr;

        return $this;
    }

}

