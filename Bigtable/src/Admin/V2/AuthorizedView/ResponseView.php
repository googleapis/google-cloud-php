<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/bigtable/admin/v2/table.proto

namespace Google\Cloud\Bigtable\Admin\V2\AuthorizedView;

use UnexpectedValueException;

/**
 * Defines a subset of an AuthorizedView's fields.
 *
 * Protobuf type <code>google.bigtable.admin.v2.AuthorizedView.ResponseView</code>
 */
class ResponseView
{
    /**
     * Uses the default view for each method as documented in the request.
     *
     * Generated from protobuf enum <code>RESPONSE_VIEW_UNSPECIFIED = 0;</code>
     */
    const RESPONSE_VIEW_UNSPECIFIED = 0;
    /**
     * Only populates `name`.
     *
     * Generated from protobuf enum <code>NAME_ONLY = 1;</code>
     */
    const NAME_ONLY = 1;
    /**
     * Only populates the AuthorizedView's basic metadata. This includes:
     * name, deletion_protection, etag.
     *
     * Generated from protobuf enum <code>BASIC = 2;</code>
     */
    const BASIC = 2;
    /**
     * Populates every fields.
     *
     * Generated from protobuf enum <code>FULL = 3;</code>
     */
    const FULL = 3;

    private static $valueToName = [
        self::RESPONSE_VIEW_UNSPECIFIED => 'RESPONSE_VIEW_UNSPECIFIED',
        self::NAME_ONLY => 'NAME_ONLY',
        self::BASIC => 'BASIC',
        self::FULL => 'FULL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ResponseView::class, \Google\Cloud\Bigtable\Admin\V2\AuthorizedView_ResponseView::class);

