<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/bigtable/admin/v2/bigtable_instance_admin.proto

namespace Google\Cloud\Bigtable\Admin\V2\CreateClusterMetadata;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Progress info for copying a table's data to the new cluster.
 *
 * Generated from protobuf message <code>google.bigtable.admin.v2.CreateClusterMetadata.TableProgress</code>
 */
class TableProgress extends \Google\Protobuf\Internal\Message
{
    /**
     * Estimate of the size of the table to be copied.
     *
     * Generated from protobuf field <code>int64 estimated_size_bytes = 2;</code>
     */
    private $estimated_size_bytes = 0;
    /**
     * Estimate of the number of bytes copied so far for this table.
     * This will eventually reach 'estimated_size_bytes' unless the table copy
     * is CANCELLED.
     *
     * Generated from protobuf field <code>int64 estimated_copied_bytes = 3;</code>
     */
    private $estimated_copied_bytes = 0;
    /**
     * Generated from protobuf field <code>.google.bigtable.admin.v2.CreateClusterMetadata.TableProgress.State state = 4;</code>
     */
    private $state = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $estimated_size_bytes
     *           Estimate of the size of the table to be copied.
     *     @type int|string $estimated_copied_bytes
     *           Estimate of the number of bytes copied so far for this table.
     *           This will eventually reach 'estimated_size_bytes' unless the table copy
     *           is CANCELLED.
     *     @type int $state
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Bigtable\Admin\V2\BigtableInstanceAdmin::initOnce();
        parent::__construct($data);
    }

    /**
     * Estimate of the size of the table to be copied.
     *
     * Generated from protobuf field <code>int64 estimated_size_bytes = 2;</code>
     * @return int|string
     */
    public function getEstimatedSizeBytes()
    {
        return $this->estimated_size_bytes;
    }

    /**
     * Estimate of the size of the table to be copied.
     *
     * Generated from protobuf field <code>int64 estimated_size_bytes = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setEstimatedSizeBytes($var)
    {
        GPBUtil::checkInt64($var);
        $this->estimated_size_bytes = $var;

        return $this;
    }

    /**
     * Estimate of the number of bytes copied so far for this table.
     * This will eventually reach 'estimated_size_bytes' unless the table copy
     * is CANCELLED.
     *
     * Generated from protobuf field <code>int64 estimated_copied_bytes = 3;</code>
     * @return int|string
     */
    public function getEstimatedCopiedBytes()
    {
        return $this->estimated_copied_bytes;
    }

    /**
     * Estimate of the number of bytes copied so far for this table.
     * This will eventually reach 'estimated_size_bytes' unless the table copy
     * is CANCELLED.
     *
     * Generated from protobuf field <code>int64 estimated_copied_bytes = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setEstimatedCopiedBytes($var)
    {
        GPBUtil::checkInt64($var);
        $this->estimated_copied_bytes = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.bigtable.admin.v2.CreateClusterMetadata.TableProgress.State state = 4;</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * Generated from protobuf field <code>.google.bigtable.admin.v2.CreateClusterMetadata.TableProgress.State state = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Bigtable\Admin\V2\CreateClusterMetadata\TableProgress\State::class);
        $this->state = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(TableProgress::class, \Google\Cloud\Bigtable\Admin\V2\CreateClusterMetadata_TableProgress::class);

