<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/bigtable/admin/v2/types.proto

namespace Google\Cloud\Bigtable\Admin\V2\Type;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A value that combines incremental updates into a summarized value.
 * Data is never directly written or read using type `Aggregate`. Writes will
 * provide either the `input_type` or `state_type`, and reads will always
 * return the `state_type` .
 *
 * Generated from protobuf message <code>google.bigtable.admin.v2.Type.Aggregate</code>
 */
class Aggregate extends \Google\Protobuf\Internal\Message
{
    /**
     * Type of the inputs that are accumulated by this `Aggregate`, which must
     * specify a full encoding.
     * Use `AddInput` mutations to accumulate new inputs.
     *
     * Generated from protobuf field <code>.google.bigtable.admin.v2.Type input_type = 1;</code>
     */
    private $input_type = null;
    /**
     * Output only. Type that holds the internal accumulator state for the
     * `Aggregate`. This is a function of the `input_type` and `aggregator`
     * chosen, and will always specify a full encoding.
     *
     * Generated from protobuf field <code>.google.bigtable.admin.v2.Type state_type = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $state_type = null;
    protected $aggregator;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Bigtable\Admin\V2\Type $input_type
     *           Type of the inputs that are accumulated by this `Aggregate`, which must
     *           specify a full encoding.
     *           Use `AddInput` mutations to accumulate new inputs.
     *     @type \Google\Cloud\Bigtable\Admin\V2\Type $state_type
     *           Output only. Type that holds the internal accumulator state for the
     *           `Aggregate`. This is a function of the `input_type` and `aggregator`
     *           chosen, and will always specify a full encoding.
     *     @type \Google\Cloud\Bigtable\Admin\V2\Type\Aggregate\Sum $sum
     *           Sum aggregator.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Bigtable\Admin\V2\Types::initOnce();
        parent::__construct($data);
    }

    /**
     * Type of the inputs that are accumulated by this `Aggregate`, which must
     * specify a full encoding.
     * Use `AddInput` mutations to accumulate new inputs.
     *
     * Generated from protobuf field <code>.google.bigtable.admin.v2.Type input_type = 1;</code>
     * @return \Google\Cloud\Bigtable\Admin\V2\Type|null
     */
    public function getInputType()
    {
        return $this->input_type;
    }

    public function hasInputType()
    {
        return isset($this->input_type);
    }

    public function clearInputType()
    {
        unset($this->input_type);
    }

    /**
     * Type of the inputs that are accumulated by this `Aggregate`, which must
     * specify a full encoding.
     * Use `AddInput` mutations to accumulate new inputs.
     *
     * Generated from protobuf field <code>.google.bigtable.admin.v2.Type input_type = 1;</code>
     * @param \Google\Cloud\Bigtable\Admin\V2\Type $var
     * @return $this
     */
    public function setInputType($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Bigtable\Admin\V2\Type::class);
        $this->input_type = $var;

        return $this;
    }

    /**
     * Output only. Type that holds the internal accumulator state for the
     * `Aggregate`. This is a function of the `input_type` and `aggregator`
     * chosen, and will always specify a full encoding.
     *
     * Generated from protobuf field <code>.google.bigtable.admin.v2.Type state_type = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Cloud\Bigtable\Admin\V2\Type|null
     */
    public function getStateType()
    {
        return $this->state_type;
    }

    public function hasStateType()
    {
        return isset($this->state_type);
    }

    public function clearStateType()
    {
        unset($this->state_type);
    }

    /**
     * Output only. Type that holds the internal accumulator state for the
     * `Aggregate`. This is a function of the `input_type` and `aggregator`
     * chosen, and will always specify a full encoding.
     *
     * Generated from protobuf field <code>.google.bigtable.admin.v2.Type state_type = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Cloud\Bigtable\Admin\V2\Type $var
     * @return $this
     */
    public function setStateType($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Bigtable\Admin\V2\Type::class);
        $this->state_type = $var;

        return $this;
    }

    /**
     * Sum aggregator.
     *
     * Generated from protobuf field <code>.google.bigtable.admin.v2.Type.Aggregate.Sum sum = 4;</code>
     * @return \Google\Cloud\Bigtable\Admin\V2\Type\Aggregate\Sum|null
     */
    public function getSum()
    {
        return $this->readOneof(4);
    }

    public function hasSum()
    {
        return $this->hasOneof(4);
    }

    /**
     * Sum aggregator.
     *
     * Generated from protobuf field <code>.google.bigtable.admin.v2.Type.Aggregate.Sum sum = 4;</code>
     * @param \Google\Cloud\Bigtable\Admin\V2\Type\Aggregate\Sum $var
     * @return $this
     */
    public function setSum($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Bigtable\Admin\V2\Type\Aggregate\Sum::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getAggregator()
    {
        return $this->whichOneof("aggregator");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Aggregate::class, \Google\Cloud\Bigtable\Admin\V2\Type_Aggregate::class);

