<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/edgenetwork/v1/resources.proto

namespace Google\Cloud\EdgeNetwork\V1\InterconnectDiagnostics;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describing the status of a LACP link.
 *
 * Generated from protobuf message <code>google.cloud.edgenetwork.v1.InterconnectDiagnostics.LinkLACPStatus</code>
 */
class LinkLACPStatus extends \Google\Protobuf\Internal\Message
{
    /**
     * The state of a LACP link.
     *
     * Generated from protobuf field <code>.google.cloud.edgenetwork.v1.InterconnectDiagnostics.LinkLACPStatus.State state = 1;</code>
     */
    protected $state = 0;
    /**
     * System ID of the port on Google's side of the LACP exchange.
     *
     * Generated from protobuf field <code>string google_system_id = 2;</code>
     */
    protected $google_system_id = '';
    /**
     * System ID of the port on the neighbor's side of the LACP exchange.
     *
     * Generated from protobuf field <code>string neighbor_system_id = 3;</code>
     */
    protected $neighbor_system_id = '';
    /**
     * A true value indicates that the participant will allow the link to be
     * used as part of the aggregate.
     * A false value indicates the link should be used as an individual link.
     *
     * Generated from protobuf field <code>bool aggregatable = 4;</code>
     */
    protected $aggregatable = false;
    /**
     * If true, the participant is collecting incoming frames on the link,
     * otherwise false
     *
     * Generated from protobuf field <code>bool collecting = 5;</code>
     */
    protected $collecting = false;
    /**
     * When true, the participant is distributing outgoing frames; when false,
     * distribution is disabled
     *
     * Generated from protobuf field <code>bool distributing = 6;</code>
     */
    protected $distributing = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $state
     *           The state of a LACP link.
     *     @type string $google_system_id
     *           System ID of the port on Google's side of the LACP exchange.
     *     @type string $neighbor_system_id
     *           System ID of the port on the neighbor's side of the LACP exchange.
     *     @type bool $aggregatable
     *           A true value indicates that the participant will allow the link to be
     *           used as part of the aggregate.
     *           A false value indicates the link should be used as an individual link.
     *     @type bool $collecting
     *           If true, the participant is collecting incoming frames on the link,
     *           otherwise false
     *     @type bool $distributing
     *           When true, the participant is distributing outgoing frames; when false,
     *           distribution is disabled
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Edgenetwork\V1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * The state of a LACP link.
     *
     * Generated from protobuf field <code>.google.cloud.edgenetwork.v1.InterconnectDiagnostics.LinkLACPStatus.State state = 1;</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * The state of a LACP link.
     *
     * Generated from protobuf field <code>.google.cloud.edgenetwork.v1.InterconnectDiagnostics.LinkLACPStatus.State state = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\EdgeNetwork\V1\InterconnectDiagnostics\LinkLACPStatus\State::class);
        $this->state = $var;

        return $this;
    }

    /**
     * System ID of the port on Google's side of the LACP exchange.
     *
     * Generated from protobuf field <code>string google_system_id = 2;</code>
     * @return string
     */
    public function getGoogleSystemId()
    {
        return $this->google_system_id;
    }

    /**
     * System ID of the port on Google's side of the LACP exchange.
     *
     * Generated from protobuf field <code>string google_system_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setGoogleSystemId($var)
    {
        GPBUtil::checkString($var, True);
        $this->google_system_id = $var;

        return $this;
    }

    /**
     * System ID of the port on the neighbor's side of the LACP exchange.
     *
     * Generated from protobuf field <code>string neighbor_system_id = 3;</code>
     * @return string
     */
    public function getNeighborSystemId()
    {
        return $this->neighbor_system_id;
    }

    /**
     * System ID of the port on the neighbor's side of the LACP exchange.
     *
     * Generated from protobuf field <code>string neighbor_system_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setNeighborSystemId($var)
    {
        GPBUtil::checkString($var, True);
        $this->neighbor_system_id = $var;

        return $this;
    }

    /**
     * A true value indicates that the participant will allow the link to be
     * used as part of the aggregate.
     * A false value indicates the link should be used as an individual link.
     *
     * Generated from protobuf field <code>bool aggregatable = 4;</code>
     * @return bool
     */
    public function getAggregatable()
    {
        return $this->aggregatable;
    }

    /**
     * A true value indicates that the participant will allow the link to be
     * used as part of the aggregate.
     * A false value indicates the link should be used as an individual link.
     *
     * Generated from protobuf field <code>bool aggregatable = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setAggregatable($var)
    {
        GPBUtil::checkBool($var);
        $this->aggregatable = $var;

        return $this;
    }

    /**
     * If true, the participant is collecting incoming frames on the link,
     * otherwise false
     *
     * Generated from protobuf field <code>bool collecting = 5;</code>
     * @return bool
     */
    public function getCollecting()
    {
        return $this->collecting;
    }

    /**
     * If true, the participant is collecting incoming frames on the link,
     * otherwise false
     *
     * Generated from protobuf field <code>bool collecting = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setCollecting($var)
    {
        GPBUtil::checkBool($var);
        $this->collecting = $var;

        return $this;
    }

    /**
     * When true, the participant is distributing outgoing frames; when false,
     * distribution is disabled
     *
     * Generated from protobuf field <code>bool distributing = 6;</code>
     * @return bool
     */
    public function getDistributing()
    {
        return $this->distributing;
    }

    /**
     * When true, the participant is distributing outgoing frames; when false,
     * distribution is disabled
     *
     * Generated from protobuf field <code>bool distributing = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setDistributing($var)
    {
        GPBUtil::checkBool($var);
        $this->distributing = $var;

        return $this;
    }

}


