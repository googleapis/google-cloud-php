<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/edgenetwork/v1/resources.proto

namespace Google\Cloud\EdgeNetwork\V1\Router;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Router Interface defines the GDCE zone side layer-3 information for
 * building the BGP session.
 *
 * Generated from protobuf message <code>google.cloud.edgenetwork.v1.Router.Interface</code>
 */
class PBInterface extends \Google\Protobuf\Internal\Message
{
    /**
     * Name of this interface entry. Unique within the Zones resource.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * IP address and range of the interface.
     *
     * Generated from protobuf field <code>string ipv4_cidr = 3;</code>
     */
    protected $ipv4_cidr = '';
    /**
     * IPv6 address and range of the interface.
     *
     * Generated from protobuf field <code>string ipv6_cidr = 6;</code>
     */
    protected $ipv6_cidr = '';
    /**
     * The canonical name of the linked Interconnect attachment.
     *
     * Generated from protobuf field <code>string linked_interconnect_attachment = 2;</code>
     */
    protected $linked_interconnect_attachment = '';
    /**
     * The canonical name of the subnetwork resource that this interface
     * belongs to.
     *
     * Generated from protobuf field <code>string subnetwork = 4;</code>
     */
    protected $subnetwork = '';
    /**
     * Create loopback interface in the router when specified.
     * The number of IP addresses must match the number of TOR devices.
     *
     * Generated from protobuf field <code>repeated string loopback_ip_addresses = 5;</code>
     */
    private $loopback_ip_addresses;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Name of this interface entry. Unique within the Zones resource.
     *     @type string $ipv4_cidr
     *           IP address and range of the interface.
     *     @type string $ipv6_cidr
     *           IPv6 address and range of the interface.
     *     @type string $linked_interconnect_attachment
     *           The canonical name of the linked Interconnect attachment.
     *     @type string $subnetwork
     *           The canonical name of the subnetwork resource that this interface
     *           belongs to.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $loopback_ip_addresses
     *           Create loopback interface in the router when specified.
     *           The number of IP addresses must match the number of TOR devices.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Edgenetwork\V1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Name of this interface entry. Unique within the Zones resource.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Name of this interface entry. Unique within the Zones resource.
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * IP address and range of the interface.
     *
     * Generated from protobuf field <code>string ipv4_cidr = 3;</code>
     * @return string
     */
    public function getIpv4Cidr()
    {
        return $this->ipv4_cidr;
    }

    /**
     * IP address and range of the interface.
     *
     * Generated from protobuf field <code>string ipv4_cidr = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setIpv4Cidr($var)
    {
        GPBUtil::checkString($var, True);
        $this->ipv4_cidr = $var;

        return $this;
    }

    /**
     * IPv6 address and range of the interface.
     *
     * Generated from protobuf field <code>string ipv6_cidr = 6;</code>
     * @return string
     */
    public function getIpv6Cidr()
    {
        return $this->ipv6_cidr;
    }

    /**
     * IPv6 address and range of the interface.
     *
     * Generated from protobuf field <code>string ipv6_cidr = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setIpv6Cidr($var)
    {
        GPBUtil::checkString($var, True);
        $this->ipv6_cidr = $var;

        return $this;
    }

    /**
     * The canonical name of the linked Interconnect attachment.
     *
     * Generated from protobuf field <code>string linked_interconnect_attachment = 2;</code>
     * @return string
     */
    public function getLinkedInterconnectAttachment()
    {
        return $this->linked_interconnect_attachment;
    }

    /**
     * The canonical name of the linked Interconnect attachment.
     *
     * Generated from protobuf field <code>string linked_interconnect_attachment = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLinkedInterconnectAttachment($var)
    {
        GPBUtil::checkString($var, True);
        $this->linked_interconnect_attachment = $var;

        return $this;
    }

    /**
     * The canonical name of the subnetwork resource that this interface
     * belongs to.
     *
     * Generated from protobuf field <code>string subnetwork = 4;</code>
     * @return string
     */
    public function getSubnetwork()
    {
        return $this->subnetwork;
    }

    /**
     * The canonical name of the subnetwork resource that this interface
     * belongs to.
     *
     * Generated from protobuf field <code>string subnetwork = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setSubnetwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->subnetwork = $var;

        return $this;
    }

    /**
     * Create loopback interface in the router when specified.
     * The number of IP addresses must match the number of TOR devices.
     *
     * Generated from protobuf field <code>repeated string loopback_ip_addresses = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLoopbackIpAddresses()
    {
        return $this->loopback_ip_addresses;
    }

    /**
     * Create loopback interface in the router when specified.
     * The number of IP addresses must match the number of TOR devices.
     *
     * Generated from protobuf field <code>repeated string loopback_ip_addresses = 5;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setLoopbackIpAddresses($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->loopback_ip_addresses = $arr;

        return $this;
    }

}


