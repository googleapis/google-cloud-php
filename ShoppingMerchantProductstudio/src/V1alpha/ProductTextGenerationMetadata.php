<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/productstudio/v1alpha/textsuggestions.proto

namespace Google\Shopping\Merchant\Productstudio\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Wrapper data type for any metadata associated with text generation.
 *
 * Generated from protobuf message <code>google.shopping.merchant.productstudio.v1alpha.ProductTextGenerationMetadata</code>
 */
class ProductTextGenerationMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Metadata is a pretty loose concept. The data is modeled as a map here to
     * indicate that there is no guaranteed structure to the output past a simple
     * K:V association.
     * The first use-case is to track words added/removed/changed in generations.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct metadata = 1;</code>
     */
    protected $metadata = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Struct $metadata
     *           Metadata is a pretty loose concept. The data is modeled as a map here to
     *           indicate that there is no guaranteed structure to the output past a simple
     *           K:V association.
     *           The first use-case is to track words added/removed/changed in generations.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Merchant\Productstudio\V1Alpha\Textsuggestions::initOnce();
        parent::__construct($data);
    }

    /**
     * Metadata is a pretty loose concept. The data is modeled as a map here to
     * indicate that there is no guaranteed structure to the output past a simple
     * K:V association.
     * The first use-case is to track words added/removed/changed in generations.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct metadata = 1;</code>
     * @return \Google\Protobuf\Struct|null
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    public function hasMetadata()
    {
        return isset($this->metadata);
    }

    public function clearMetadata()
    {
        unset($this->metadata);
    }

    /**
     * Metadata is a pretty loose concept. The data is modeled as a map here to
     * indicate that there is no guaranteed structure to the output past a simple
     * K:V association.
     * The first use-case is to track words added/removed/changed in generations.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct metadata = 1;</code>
     * @param \Google\Protobuf\Struct $var
     * @return $this
     */
    public function setMetadata($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Struct::class);
        $this->metadata = $var;

        return $this;
    }

}

