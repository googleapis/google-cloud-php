<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/productstudio/v1alpha/textsuggestions.proto

namespace Google\Shopping\Merchant\Productstudio\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Available information about the product. Used to inform the genAI models.
 *
 * Generated from protobuf message <code>google.shopping.merchant.productstudio.v1alpha.ProductInfo</code>
 */
class ProductInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. A mapping of all available product attributes. This may include
     * title, description, brand, gender, color, size, etc.
     *
     * Generated from protobuf field <code>map<string, string> product_attributes = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $product_attributes;
    /**
     * Optional. Image associated with the product.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.productstudio.v1alpha.Image product_image = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $product_image = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array|\Google\Protobuf\Internal\MapField $product_attributes
     *           Required. A mapping of all available product attributes. This may include
     *           title, description, brand, gender, color, size, etc.
     *     @type \Google\Shopping\Merchant\Productstudio\V1alpha\Image $product_image
     *           Optional. Image associated with the product.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Merchant\Productstudio\V1Alpha\Textsuggestions::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. A mapping of all available product attributes. This may include
     * title, description, brand, gender, color, size, etc.
     *
     * Generated from protobuf field <code>map<string, string> product_attributes = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getProductAttributes()
    {
        return $this->product_attributes;
    }

    /**
     * Required. A mapping of all available product attributes. This may include
     * title, description, brand, gender, color, size, etc.
     *
     * Generated from protobuf field <code>map<string, string> product_attributes = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setProductAttributes($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->product_attributes = $arr;

        return $this;
    }

    /**
     * Optional. Image associated with the product.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.productstudio.v1alpha.Image product_image = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Shopping\Merchant\Productstudio\V1alpha\Image|null
     */
    public function getProductImage()
    {
        return $this->product_image;
    }

    public function hasProductImage()
    {
        return isset($this->product_image);
    }

    public function clearProductImage()
    {
        unset($this->product_image);
    }

    /**
     * Optional. Image associated with the product.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.productstudio.v1alpha.Image product_image = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Shopping\Merchant\Productstudio\V1alpha\Image $var
     * @return $this
     */
    public function setProductImage($var)
    {
        GPBUtil::checkMessage($var, \Google\Shopping\Merchant\Productstudio\V1alpha\Image::class);
        $this->product_image = $var;

        return $this;
    }

}

