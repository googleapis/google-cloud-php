<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/channel/v1/entitlement_changes.proto

namespace Google\Cloud\Channel\V1\EntitlementChange;

use UnexpectedValueException;

/**
 * Specifies the type of change action
 *
 * Protobuf type <code>google.cloud.channel.v1.EntitlementChange.ChangeType</code>
 */
class ChangeType
{
    /**
     * Not used.
     *
     * Generated from protobuf enum <code>CHANGE_TYPE_UNSPECIFIED = 0;</code>
     */
    const CHANGE_TYPE_UNSPECIFIED = 0;
    /**
     * New Entitlement was created.
     *
     * Generated from protobuf enum <code>CREATED = 1;</code>
     */
    const CREATED = 1;
    /**
     * Price plan associated with an Entitlement was changed.
     *
     * Generated from protobuf enum <code>PRICE_PLAN_SWITCHED = 3;</code>
     */
    const PRICE_PLAN_SWITCHED = 3;
    /**
     * Number of seats committed for a commitment Entitlement was changed.
     *
     * Generated from protobuf enum <code>COMMITMENT_CHANGED = 4;</code>
     */
    const COMMITMENT_CHANGED = 4;
    /**
     * An annual Entitlement was renewed.
     *
     * Generated from protobuf enum <code>RENEWED = 5;</code>
     */
    const RENEWED = 5;
    /**
     * Entitlement was suspended.
     *
     * Generated from protobuf enum <code>SUSPENDED = 6;</code>
     */
    const SUSPENDED = 6;
    /**
     * Entitlement was activated.
     *
     * Generated from protobuf enum <code>ACTIVATED = 7;</code>
     */
    const ACTIVATED = 7;
    /**
     * Entitlement was cancelled.
     *
     * Generated from protobuf enum <code>CANCELLED = 8;</code>
     */
    const CANCELLED = 8;
    /**
     * Entitlement was upgraded or downgraded for ex. from Google Workspace
     * Business Standard to Google Workspace Business Plus.
     *
     * Generated from protobuf enum <code>SKU_CHANGED = 9;</code>
     */
    const SKU_CHANGED = 9;
    /**
     * The settings for renewal of an Entitlement have changed.
     *
     * Generated from protobuf enum <code>RENEWAL_SETTING_CHANGED = 10;</code>
     */
    const RENEWAL_SETTING_CHANGED = 10;
    /**
     * Use for Google Workspace subscription.
     * Either a trial was converted to a paid subscription or a new subscription
     * with no trial is created.
     *
     * Generated from protobuf enum <code>PAID_SUBSCRIPTION_STARTED = 11;</code>
     */
    const PAID_SUBSCRIPTION_STARTED = 11;
    /**
     * License cap was changed for the entitlement.
     *
     * Generated from protobuf enum <code>LICENSE_CAP_CHANGED = 12;</code>
     */
    const LICENSE_CAP_CHANGED = 12;
    /**
     * The suspension details have changed (but it is still suspended).
     *
     * Generated from protobuf enum <code>SUSPENSION_DETAILS_CHANGED = 13;</code>
     */
    const SUSPENSION_DETAILS_CHANGED = 13;
    /**
     * The trial end date was extended.
     *
     * Generated from protobuf enum <code>TRIAL_END_DATE_EXTENDED = 14;</code>
     */
    const TRIAL_END_DATE_EXTENDED = 14;
    /**
     * Entitlement started trial.
     *
     * Generated from protobuf enum <code>TRIAL_STARTED = 15;</code>
     */
    const TRIAL_STARTED = 15;

    private static $valueToName = [
        self::CHANGE_TYPE_UNSPECIFIED => 'CHANGE_TYPE_UNSPECIFIED',
        self::CREATED => 'CREATED',
        self::PRICE_PLAN_SWITCHED => 'PRICE_PLAN_SWITCHED',
        self::COMMITMENT_CHANGED => 'COMMITMENT_CHANGED',
        self::RENEWED => 'RENEWED',
        self::SUSPENDED => 'SUSPENDED',
        self::ACTIVATED => 'ACTIVATED',
        self::CANCELLED => 'CANCELLED',
        self::SKU_CHANGED => 'SKU_CHANGED',
        self::RENEWAL_SETTING_CHANGED => 'RENEWAL_SETTING_CHANGED',
        self::PAID_SUBSCRIPTION_STARTED => 'PAID_SUBSCRIPTION_STARTED',
        self::LICENSE_CAP_CHANGED => 'LICENSE_CAP_CHANGED',
        self::SUSPENSION_DETAILS_CHANGED => 'SUSPENSION_DETAILS_CHANGED',
        self::TRIAL_END_DATE_EXTENDED => 'TRIAL_END_DATE_EXTENDED',
        self::TRIAL_STARTED => 'TRIAL_STARTED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


