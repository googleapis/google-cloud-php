<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/confidentialcomputing/v1/service.proto

namespace Google\Cloud\ConfidentialComputing\V1\VerifyConfidentialSpaceRequest;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Token options for Confidential Space attestation.
 *
 * Generated from protobuf message <code>google.cloud.confidentialcomputing.v1.VerifyConfidentialSpaceRequest.ConfidentialSpaceOptions</code>
 */
class ConfidentialSpaceOptions extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Optional string to issue the token with a custom audience
     * claim. Required if custom nonces are specified.
     *
     * Generated from protobuf field <code>string audience = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $audience = '';
    /**
     * Optional. Optional specification for token claims profile.
     *
     * Generated from protobuf field <code>.google.cloud.confidentialcomputing.v1.TokenProfile token_profile = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $token_profile = 0;
    /**
     * Optional. Optional parameter to place one or more nonces in the eat_nonce
     * claim in the output token. The minimum size for JSON-encoded EATs is 10
     * bytes and the maximum size is 74 bytes.
     *
     * Generated from protobuf field <code>repeated string nonce = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $nonce;
    /**
     * Optional. Optional specification for how to sign the attestation token.
     * Defaults to SIGNATURE_TYPE_OIDC if unspecified.
     *
     * Generated from protobuf field <code>.google.cloud.confidentialcomputing.v1.SignatureType signature_type = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $signature_type = 0;
    protected $token_profile_options;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\ConfidentialComputing\V1\AwsPrincipalTagsOptions $aws_principal_tags_options
     *           Optional. Options for the AWS token type.
     *     @type string $audience
     *           Optional. Optional string to issue the token with a custom audience
     *           claim. Required if custom nonces are specified.
     *     @type int $token_profile
     *           Optional. Optional specification for token claims profile.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $nonce
     *           Optional. Optional parameter to place one or more nonces in the eat_nonce
     *           claim in the output token. The minimum size for JSON-encoded EATs is 10
     *           bytes and the maximum size is 74 bytes.
     *     @type int $signature_type
     *           Optional. Optional specification for how to sign the attestation token.
     *           Defaults to SIGNATURE_TYPE_OIDC if unspecified.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Confidentialcomputing\V1\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Options for the AWS token type.
     *
     * Generated from protobuf field <code>.google.cloud.confidentialcomputing.v1.AwsPrincipalTagsOptions aws_principal_tags_options = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\ConfidentialComputing\V1\AwsPrincipalTagsOptions|null
     */
    public function getAwsPrincipalTagsOptions()
    {
        return $this->readOneof(5);
    }

    public function hasAwsPrincipalTagsOptions()
    {
        return $this->hasOneof(5);
    }

    /**
     * Optional. Options for the AWS token type.
     *
     * Generated from protobuf field <code>.google.cloud.confidentialcomputing.v1.AwsPrincipalTagsOptions aws_principal_tags_options = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\ConfidentialComputing\V1\AwsPrincipalTagsOptions $var
     * @return $this
     */
    public function setAwsPrincipalTagsOptions($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\ConfidentialComputing\V1\AwsPrincipalTagsOptions::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Optional. Optional string to issue the token with a custom audience
     * claim. Required if custom nonces are specified.
     *
     * Generated from protobuf field <code>string audience = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getAudience()
    {
        return $this->audience;
    }

    /**
     * Optional. Optional string to issue the token with a custom audience
     * claim. Required if custom nonces are specified.
     *
     * Generated from protobuf field <code>string audience = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setAudience($var)
    {
        GPBUtil::checkString($var, True);
        $this->audience = $var;

        return $this;
    }

    /**
     * Optional. Optional specification for token claims profile.
     *
     * Generated from protobuf field <code>.google.cloud.confidentialcomputing.v1.TokenProfile token_profile = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getTokenProfile()
    {
        return $this->token_profile;
    }

    /**
     * Optional. Optional specification for token claims profile.
     *
     * Generated from protobuf field <code>.google.cloud.confidentialcomputing.v1.TokenProfile token_profile = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setTokenProfile($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\ConfidentialComputing\V1\TokenProfile::class);
        $this->token_profile = $var;

        return $this;
    }

    /**
     * Optional. Optional parameter to place one or more nonces in the eat_nonce
     * claim in the output token. The minimum size for JSON-encoded EATs is 10
     * bytes and the maximum size is 74 bytes.
     *
     * Generated from protobuf field <code>repeated string nonce = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNonce()
    {
        return $this->nonce;
    }

    /**
     * Optional. Optional parameter to place one or more nonces in the eat_nonce
     * claim in the output token. The minimum size for JSON-encoded EATs is 10
     * bytes and the maximum size is 74 bytes.
     *
     * Generated from protobuf field <code>repeated string nonce = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNonce($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->nonce = $arr;

        return $this;
    }

    /**
     * Optional. Optional specification for how to sign the attestation token.
     * Defaults to SIGNATURE_TYPE_OIDC if unspecified.
     *
     * Generated from protobuf field <code>.google.cloud.confidentialcomputing.v1.SignatureType signature_type = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getSignatureType()
    {
        return $this->signature_type;
    }

    /**
     * Optional. Optional specification for how to sign the attestation token.
     * Defaults to SIGNATURE_TYPE_OIDC if unspecified.
     *
     * Generated from protobuf field <code>.google.cloud.confidentialcomputing.v1.SignatureType signature_type = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setSignatureType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\ConfidentialComputing\V1\SignatureType::class);
        $this->signature_type = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getTokenProfileOptions()
    {
        return $this->whichOneof("token_profile_options");
    }

}


