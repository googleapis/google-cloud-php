<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2\DataProfileAction\TagResources;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A value of a tag.
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2.DataProfileAction.TagResources.TagValue</code>
 */
class TagValue extends \Google\Protobuf\Internal\Message
{
    protected $format;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $namespaced_value
     *           The namespaced name for the tag value to attach to resources. Must be
     *           in the format `{parent_id}/{tag_key_short_name}/{short_name}`, for
     *           example, "123456/environment/prod".
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Privacy\Dlp\V2\Dlp::initOnce();
        parent::__construct($data);
    }

    /**
     * The namespaced name for the tag value to attach to resources. Must be
     * in the format `{parent_id}/{tag_key_short_name}/{short_name}`, for
     * example, "123456/environment/prod".
     *
     * Generated from protobuf field <code>string namespaced_value = 1;</code>
     * @return string
     */
    public function getNamespacedValue()
    {
        return $this->readOneof(1);
    }

    public function hasNamespacedValue()
    {
        return $this->hasOneof(1);
    }

    /**
     * The namespaced name for the tag value to attach to resources. Must be
     * in the format `{parent_id}/{tag_key_short_name}/{short_name}`, for
     * example, "123456/environment/prod".
     *
     * Generated from protobuf field <code>string namespaced_value = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setNamespacedValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getFormat()
    {
        return $this->whichOneof("format");
    }

}


