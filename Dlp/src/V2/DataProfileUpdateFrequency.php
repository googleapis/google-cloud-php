<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2;

use UnexpectedValueException;

/**
 * How frequently data profiles can be updated. New options can be added at a
 * later time.
 *
 * Protobuf type <code>google.privacy.dlp.v2.DataProfileUpdateFrequency</code>
 */
class DataProfileUpdateFrequency
{
    /**
     * Unspecified.
     *
     * Generated from protobuf enum <code>UPDATE_FREQUENCY_UNSPECIFIED = 0;</code>
     */
    const UPDATE_FREQUENCY_UNSPECIFIED = 0;
    /**
     * After the data profile is created, it will never be updated.
     *
     * Generated from protobuf enum <code>UPDATE_FREQUENCY_NEVER = 1;</code>
     */
    const UPDATE_FREQUENCY_NEVER = 1;
    /**
     * The data profile can be updated up to once every 24 hours.
     *
     * Generated from protobuf enum <code>UPDATE_FREQUENCY_DAILY = 2;</code>
     */
    const UPDATE_FREQUENCY_DAILY = 2;
    /**
     * The data profile can be updated up to once every 30 days. Default.
     *
     * Generated from protobuf enum <code>UPDATE_FREQUENCY_MONTHLY = 4;</code>
     */
    const UPDATE_FREQUENCY_MONTHLY = 4;

    private static $valueToName = [
        self::UPDATE_FREQUENCY_UNSPECIFIED => 'UPDATE_FREQUENCY_UNSPECIFIED',
        self::UPDATE_FREQUENCY_NEVER => 'UPDATE_FREQUENCY_NEVER',
        self::UPDATE_FREQUENCY_DAILY => 'UPDATE_FREQUENCY_DAILY',
        self::UPDATE_FREQUENCY_MONTHLY => 'UPDATE_FREQUENCY_MONTHLY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

