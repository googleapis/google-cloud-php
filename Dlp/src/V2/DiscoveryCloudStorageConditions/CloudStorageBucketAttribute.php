<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2\DiscoveryCloudStorageConditions;

use UnexpectedValueException;

/**
 * The attribute of a bucket.
 *
 * Protobuf type <code>google.privacy.dlp.v2.DiscoveryCloudStorageConditions.CloudStorageBucketAttribute</code>
 */
class CloudStorageBucketAttribute
{
    /**
     * Unused.
     *
     * Generated from protobuf enum <code>CLOUD_STORAGE_BUCKET_ATTRIBUTE_UNSPECIFIED = 0;</code>
     */
    const CLOUD_STORAGE_BUCKET_ATTRIBUTE_UNSPECIFIED = 0;
    /**
     * Scan buckets regardless of the attribute.
     *
     * Generated from protobuf enum <code>ALL_SUPPORTED_BUCKETS = 1;</code>
     */
    const ALL_SUPPORTED_BUCKETS = 1;
    /**
     * Buckets with autoclass disabled
     * (https://cloud.google.com/storage/docs/autoclass). Only one of
     * AUTOCLASS_DISABLED or AUTOCLASS_ENABLED should be set.
     *
     * Generated from protobuf enum <code>AUTOCLASS_DISABLED = 2;</code>
     */
    const AUTOCLASS_DISABLED = 2;
    /**
     * Buckets with autoclass enabled
     * (https://cloud.google.com/storage/docs/autoclass). Only one of
     * AUTOCLASS_DISABLED or AUTOCLASS_ENABLED should be set. Scanning
     * Autoclass-enabled buckets can affect object storage classes.
     *
     * Generated from protobuf enum <code>AUTOCLASS_ENABLED = 3;</code>
     */
    const AUTOCLASS_ENABLED = 3;

    private static $valueToName = [
        self::CLOUD_STORAGE_BUCKET_ATTRIBUTE_UNSPECIFIED => 'CLOUD_STORAGE_BUCKET_ATTRIBUTE_UNSPECIFIED',
        self::ALL_SUPPORTED_BUCKETS => 'ALL_SUPPORTED_BUCKETS',
        self::AUTOCLASS_DISABLED => 'AUTOCLASS_DISABLED',
        self::AUTOCLASS_ENABLED => 'AUTOCLASS_ENABLED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


