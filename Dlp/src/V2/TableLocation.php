<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Location of a finding within a table.
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2.TableLocation</code>
 */
class TableLocation extends \Google\Protobuf\Internal\Message
{
    /**
     * The zero-based index of the row where the finding is located. Only
     * populated for resources that have a natural ordering, not BigQuery. In
     * BigQuery, to identify the row a finding came from, populate
     * BigQueryOptions.identifying_fields with your primary key column names and
     * when you store the findings the value of those columns will be stored
     * inside of Finding.
     *
     * Generated from protobuf field <code>int64 row_index = 1;</code>
     */
    protected $row_index = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $row_index
     *           The zero-based index of the row where the finding is located. Only
     *           populated for resources that have a natural ordering, not BigQuery. In
     *           BigQuery, to identify the row a finding came from, populate
     *           BigQueryOptions.identifying_fields with your primary key column names and
     *           when you store the findings the value of those columns will be stored
     *           inside of Finding.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Privacy\Dlp\V2\Dlp::initOnce();
        parent::__construct($data);
    }

    /**
     * The zero-based index of the row where the finding is located. Only
     * populated for resources that have a natural ordering, not BigQuery. In
     * BigQuery, to identify the row a finding came from, populate
     * BigQueryOptions.identifying_fields with your primary key column names and
     * when you store the findings the value of those columns will be stored
     * inside of Finding.
     *
     * Generated from protobuf field <code>int64 row_index = 1;</code>
     * @return int|string
     */
    public function getRowIndex()
    {
        return $this->row_index;
    }

    /**
     * The zero-based index of the row where the finding is located. Only
     * populated for resources that have a natural ordering, not BigQuery. In
     * BigQuery, to identify the row a finding came from, populate
     * BigQueryOptions.identifying_fields with your primary key column names and
     * when you store the findings the value of those columns will be stored
     * inside of Finding.
     *
     * Generated from protobuf field <code>int64 row_index = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setRowIndex($var)
    {
        GPBUtil::checkInt64($var);
        $this->row_index = $var;

        return $this;
    }

}

