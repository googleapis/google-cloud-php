<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Target used to match against for discovery with BigQuery tables
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2.BigQueryDiscoveryTarget</code>
 */
class BigQueryDiscoveryTarget extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The tables the discovery cadence applies to. The first target
     * with a matching filter will be the one to apply to a table.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.DiscoveryBigQueryFilter filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $filter = null;
    /**
     * In addition to matching the filter, these conditions must be true
     * before a profile is generated.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.DiscoveryBigQueryConditions conditions = 2;</code>
     */
    private $conditions = null;
    protected $frequency;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Dlp\V2\DiscoveryBigQueryFilter $filter
     *           Required. The tables the discovery cadence applies to. The first target
     *           with a matching filter will be the one to apply to a table.
     *     @type \Google\Cloud\Dlp\V2\DiscoveryBigQueryConditions $conditions
     *           In addition to matching the filter, these conditions must be true
     *           before a profile is generated.
     *     @type \Google\Cloud\Dlp\V2\DiscoveryGenerationCadence $cadence
     *           How often and when to update profiles. New tables that match both the
     *           filter and conditions are scanned as quickly as possible depending on
     *           system capacity.
     *     @type \Google\Cloud\Dlp\V2\Disabled $disabled
     *           Tables that match this filter will not have profiles created.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Privacy\Dlp\V2\Dlp::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The tables the discovery cadence applies to. The first target
     * with a matching filter will be the one to apply to a table.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.DiscoveryBigQueryFilter filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\Dlp\V2\DiscoveryBigQueryFilter|null
     */
    public function getFilter()
    {
        return $this->filter;
    }

    public function hasFilter()
    {
        return isset($this->filter);
    }

    public function clearFilter()
    {
        unset($this->filter);
    }

    /**
     * Required. The tables the discovery cadence applies to. The first target
     * with a matching filter will be the one to apply to a table.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.DiscoveryBigQueryFilter filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Dlp\V2\DiscoveryBigQueryFilter $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2\DiscoveryBigQueryFilter::class);
        $this->filter = $var;

        return $this;
    }

    /**
     * In addition to matching the filter, these conditions must be true
     * before a profile is generated.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.DiscoveryBigQueryConditions conditions = 2;</code>
     * @return \Google\Cloud\Dlp\V2\DiscoveryBigQueryConditions|null
     */
    public function getConditions()
    {
        return $this->conditions;
    }

    public function hasConditions()
    {
        return isset($this->conditions);
    }

    public function clearConditions()
    {
        unset($this->conditions);
    }

    /**
     * In addition to matching the filter, these conditions must be true
     * before a profile is generated.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.DiscoveryBigQueryConditions conditions = 2;</code>
     * @param \Google\Cloud\Dlp\V2\DiscoveryBigQueryConditions $var
     * @return $this
     */
    public function setConditions($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2\DiscoveryBigQueryConditions::class);
        $this->conditions = $var;

        return $this;
    }

    /**
     * How often and when to update profiles. New tables that match both the
     * filter and conditions are scanned as quickly as possible depending on
     * system capacity.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.DiscoveryGenerationCadence cadence = 3;</code>
     * @return \Google\Cloud\Dlp\V2\DiscoveryGenerationCadence|null
     */
    public function getCadence()
    {
        return $this->readOneof(3);
    }

    public function hasCadence()
    {
        return $this->hasOneof(3);
    }

    /**
     * How often and when to update profiles. New tables that match both the
     * filter and conditions are scanned as quickly as possible depending on
     * system capacity.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.DiscoveryGenerationCadence cadence = 3;</code>
     * @param \Google\Cloud\Dlp\V2\DiscoveryGenerationCadence $var
     * @return $this
     */
    public function setCadence($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2\DiscoveryGenerationCadence::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Tables that match this filter will not have profiles created.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.Disabled disabled = 4;</code>
     * @return \Google\Cloud\Dlp\V2\Disabled|null
     */
    public function getDisabled()
    {
        return $this->readOneof(4);
    }

    public function hasDisabled()
    {
        return $this->hasOneof(4);
    }

    /**
     * Tables that match this filter will not have profiles created.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.Disabled disabled = 4;</code>
     * @param \Google\Cloud\Dlp\V2\Disabled $var
     * @return $this
     */
    public function setDisabled($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2\Disabled::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getFrequency()
    {
        return $this->whichOneof("frequency");
    }

}

