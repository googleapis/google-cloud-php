<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2\AmazonS3BucketConditions;

use UnexpectedValueException;

/**
 * Supported Amazon S3 object storage classes.
 * Defaults to ALL_SUPPORTED_CLASSES.
 *
 * Protobuf type <code>google.privacy.dlp.v2.AmazonS3BucketConditions.ObjectStorageClass</code>
 */
class ObjectStorageClass
{
    /**
     * Unused.
     *
     * Generated from protobuf enum <code>UNSPECIFIED = 0;</code>
     */
    const UNSPECIFIED = 0;
    /**
     * All supported classes.
     *
     * Generated from protobuf enum <code>ALL_SUPPORTED_CLASSES = 1;</code>
     */
    const ALL_SUPPORTED_CLASSES = 1;
    /**
     * Standard object class.
     *
     * Generated from protobuf enum <code>STANDARD = 2;</code>
     */
    const STANDARD = 2;
    /**
     * Standard - infrequent access object class.
     *
     * Generated from protobuf enum <code>STANDARD_INFREQUENT_ACCESS = 4;</code>
     */
    const STANDARD_INFREQUENT_ACCESS = 4;
    /**
     * Glacier - instant retrieval object class.
     *
     * Generated from protobuf enum <code>GLACIER_INSTANT_RETRIEVAL = 6;</code>
     */
    const GLACIER_INSTANT_RETRIEVAL = 6;
    /**
     * Objects in the S3 Intelligent-Tiering access tiers.
     *
     * Generated from protobuf enum <code>INTELLIGENT_TIERING = 7;</code>
     */
    const INTELLIGENT_TIERING = 7;

    private static $valueToName = [
        self::UNSPECIFIED => 'UNSPECIFIED',
        self::ALL_SUPPORTED_CLASSES => 'ALL_SUPPORTED_CLASSES',
        self::STANDARD => 'STANDARD',
        self::STANDARD_INFREQUENT_ACCESS => 'STANDARD_INFREQUENT_ACCESS',
        self::GLACIER_INSTANT_RETRIEVAL => 'GLACIER_INSTANT_RETRIEVAL',
        self::INTELLIGENT_TIERING => 'INTELLIGENT_TIERING',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


