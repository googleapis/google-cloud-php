<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2\AmazonS3BucketConditions;

use UnexpectedValueException;

/**
 * Supported Amazon S3 bucket types.
 * Defaults to TYPE_ALL_SUPPORTED.
 *
 * Protobuf type <code>google.privacy.dlp.v2.AmazonS3BucketConditions.BucketType</code>
 */
class BucketType
{
    /**
     * Unused.
     *
     * Generated from protobuf enum <code>TYPE_UNSPECIFIED = 0;</code>
     */
    const TYPE_UNSPECIFIED = 0;
    /**
     * All supported classes.
     *
     * Generated from protobuf enum <code>TYPE_ALL_SUPPORTED = 1;</code>
     */
    const TYPE_ALL_SUPPORTED = 1;
    /**
     * A general purpose Amazon S3 bucket.
     *
     * Generated from protobuf enum <code>TYPE_GENERAL_PURPOSE = 2;</code>
     */
    const TYPE_GENERAL_PURPOSE = 2;

    private static $valueToName = [
        self::TYPE_UNSPECIFIED => 'TYPE_UNSPECIFIED',
        self::TYPE_ALL_SUPPORTED => 'TYPE_ALL_SUPPORTED',
        self::TYPE_GENERAL_PURPOSE => 'TYPE_GENERAL_PURPOSE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


