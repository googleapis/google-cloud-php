<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A pattern to match against one or more file stores.
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2.FileStoreRegex</code>
 */
class FileStoreRegex extends \Google\Protobuf\Internal\Message
{
    protected $resource_regex;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Dlp\V2\CloudStorageRegex $cloud_storage_regex
     *           Optional. Regex for Cloud Storage.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Privacy\Dlp\V2\Dlp::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Regex for Cloud Storage.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.CloudStorageRegex cloud_storage_regex = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\Dlp\V2\CloudStorageRegex|null
     */
    public function getCloudStorageRegex()
    {
        return $this->readOneof(1);
    }

    public function hasCloudStorageRegex()
    {
        return $this->hasOneof(1);
    }

    /**
     * Optional. Regex for Cloud Storage.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.CloudStorageRegex cloud_storage_regex = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\Dlp\V2\CloudStorageRegex $var
     * @return $this
     */
    public function setCloudStorageRegex($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2\CloudStorageRegex::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getResourceRegex()
    {
        return $this->whichOneof("resource_regex");
    }

}

