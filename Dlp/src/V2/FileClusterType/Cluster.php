<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2\FileClusterType;

use UnexpectedValueException;

/**
 * Cluster type. Each cluster corresponds to a set of file types.
 * Over time, new types may be added and files may move between clusters.
 *
 * Protobuf type <code>google.privacy.dlp.v2.FileClusterType.Cluster</code>
 */
class Cluster
{
    /**
     * Unused.
     *
     * Generated from protobuf enum <code>CLUSTER_UNSPECIFIED = 0;</code>
     */
    const CLUSTER_UNSPECIFIED = 0;
    /**
     * Unsupported files.
     *
     * Generated from protobuf enum <code>CLUSTER_UNKNOWN = 1;</code>
     */
    const CLUSTER_UNKNOWN = 1;
    /**
     * Plain text.
     *
     * Generated from protobuf enum <code>CLUSTER_TEXT = 2;</code>
     */
    const CLUSTER_TEXT = 2;
    /**
     * Structured data like CSV, TSV etc.
     *
     * Generated from protobuf enum <code>CLUSTER_STRUCTURED_DATA = 3;</code>
     */
    const CLUSTER_STRUCTURED_DATA = 3;
    /**
     * Source code.
     *
     * Generated from protobuf enum <code>CLUSTER_SOURCE_CODE = 4;</code>
     */
    const CLUSTER_SOURCE_CODE = 4;
    /**
     * Rich document like docx, xlsx etc.
     *
     * Generated from protobuf enum <code>CLUSTER_RICH_DOCUMENT = 5;</code>
     */
    const CLUSTER_RICH_DOCUMENT = 5;
    /**
     * Images like jpeg, bmp.
     *
     * Generated from protobuf enum <code>CLUSTER_IMAGE = 6;</code>
     */
    const CLUSTER_IMAGE = 6;
    /**
     * Archives and containers like .zip, .tar etc.
     *
     * Generated from protobuf enum <code>CLUSTER_ARCHIVE = 7;</code>
     */
    const CLUSTER_ARCHIVE = 7;
    /**
     * Multimedia like .mp4, .avi etc.
     *
     * Generated from protobuf enum <code>CLUSTER_MULTIMEDIA = 8;</code>
     */
    const CLUSTER_MULTIMEDIA = 8;
    /**
     * Executable files like .exe, .class, .apk etc.
     *
     * Generated from protobuf enum <code>CLUSTER_EXECUTABLE = 9;</code>
     */
    const CLUSTER_EXECUTABLE = 9;

    private static $valueToName = [
        self::CLUSTER_UNSPECIFIED => 'CLUSTER_UNSPECIFIED',
        self::CLUSTER_UNKNOWN => 'CLUSTER_UNKNOWN',
        self::CLUSTER_TEXT => 'CLUSTER_TEXT',
        self::CLUSTER_STRUCTURED_DATA => 'CLUSTER_STRUCTURED_DATA',
        self::CLUSTER_SOURCE_CODE => 'CLUSTER_SOURCE_CODE',
        self::CLUSTER_RICH_DOCUMENT => 'CLUSTER_RICH_DOCUMENT',
        self::CLUSTER_IMAGE => 'CLUSTER_IMAGE',
        self::CLUSTER_ARCHIVE => 'CLUSTER_ARCHIVE',
        self::CLUSTER_MULTIMEDIA => 'CLUSTER_MULTIMEDIA',
        self::CLUSTER_EXECUTABLE => 'CLUSTER_EXECUTABLE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


