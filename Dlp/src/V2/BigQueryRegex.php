<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A pattern to match against one or more tables, datasets, or projects that
 * contain BigQuery tables. At least one pattern must be specified.
 * Regular expressions use RE2
 * [syntax](https://github.com/google/re2/wiki/Syntax); a guide can be found
 * under the google/re2 repository on GitHub.
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2.BigQueryRegex</code>
 */
class BigQueryRegex extends \Google\Protobuf\Internal\Message
{
    /**
     * For organizations, if unset, will match all projects. Has no effect
     * for data profile configurations created within a project.
     *
     * Generated from protobuf field <code>string project_id_regex = 1;</code>
     */
    private $project_id_regex = '';
    /**
     * If unset, this property matches all datasets.
     *
     * Generated from protobuf field <code>string dataset_id_regex = 2;</code>
     */
    private $dataset_id_regex = '';
    /**
     * If unset, this property matches all tables.
     *
     * Generated from protobuf field <code>string table_id_regex = 3;</code>
     */
    private $table_id_regex = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $project_id_regex
     *           For organizations, if unset, will match all projects. Has no effect
     *           for data profile configurations created within a project.
     *     @type string $dataset_id_regex
     *           If unset, this property matches all datasets.
     *     @type string $table_id_regex
     *           If unset, this property matches all tables.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Privacy\Dlp\V2\Dlp::initOnce();
        parent::__construct($data);
    }

    /**
     * For organizations, if unset, will match all projects. Has no effect
     * for data profile configurations created within a project.
     *
     * Generated from protobuf field <code>string project_id_regex = 1;</code>
     * @return string
     */
    public function getProjectIdRegex()
    {
        return $this->project_id_regex;
    }

    /**
     * For organizations, if unset, will match all projects. Has no effect
     * for data profile configurations created within a project.
     *
     * Generated from protobuf field <code>string project_id_regex = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setProjectIdRegex($var)
    {
        GPBUtil::checkString($var, True);
        $this->project_id_regex = $var;

        return $this;
    }

    /**
     * If unset, this property matches all datasets.
     *
     * Generated from protobuf field <code>string dataset_id_regex = 2;</code>
     * @return string
     */
    public function getDatasetIdRegex()
    {
        return $this->dataset_id_regex;
    }

    /**
     * If unset, this property matches all datasets.
     *
     * Generated from protobuf field <code>string dataset_id_regex = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDatasetIdRegex($var)
    {
        GPBUtil::checkString($var, True);
        $this->dataset_id_regex = $var;

        return $this;
    }

    /**
     * If unset, this property matches all tables.
     *
     * Generated from protobuf field <code>string table_id_regex = 3;</code>
     * @return string
     */
    public function getTableIdRegex()
    {
        return $this->table_id_regex;
    }

    /**
     * If unset, this property matches all tables.
     *
     * Generated from protobuf field <code>string table_id_regex = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTableIdRegex($var)
    {
        GPBUtil::checkString($var, True);
        $this->table_id_regex = $var;

        return $this;
    }

}

