<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Determines which resources from the other cloud will have profiles generated.
 * Includes the ability to filter by resource names.
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2.DiscoveryOtherCloudFilter</code>
 */
class DiscoveryOtherCloudFilter extends \Google\Protobuf\Internal\Message
{
    protected $filter;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Dlp\V2\OtherCloudResourceCollection $collection
     *           A collection of resources for this filter to apply to.
     *     @type \Google\Cloud\Dlp\V2\OtherCloudSingleResourceReference $single_resource
     *           The resource to scan. Configs using this filter can only have one target
     *           (the target with this single resource reference).
     *     @type \Google\Cloud\Dlp\V2\AllOtherResources $others
     *           Optional. Catch-all. This should always be the last target in the list
     *           because anything above it will apply first. Should only appear once in a
     *           configuration. If none is specified, a default one will be added
     *           automatically.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Privacy\Dlp\V2\Dlp::initOnce();
        parent::__construct($data);
    }

    /**
     * A collection of resources for this filter to apply to.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.OtherCloudResourceCollection collection = 1;</code>
     * @return \Google\Cloud\Dlp\V2\OtherCloudResourceCollection|null
     */
    public function getCollection()
    {
        return $this->readOneof(1);
    }

    public function hasCollection()
    {
        return $this->hasOneof(1);
    }

    /**
     * A collection of resources for this filter to apply to.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.OtherCloudResourceCollection collection = 1;</code>
     * @param \Google\Cloud\Dlp\V2\OtherCloudResourceCollection $var
     * @return $this
     */
    public function setCollection($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2\OtherCloudResourceCollection::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * The resource to scan. Configs using this filter can only have one target
     * (the target with this single resource reference).
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.OtherCloudSingleResourceReference single_resource = 2;</code>
     * @return \Google\Cloud\Dlp\V2\OtherCloudSingleResourceReference|null
     */
    public function getSingleResource()
    {
        return $this->readOneof(2);
    }

    public function hasSingleResource()
    {
        return $this->hasOneof(2);
    }

    /**
     * The resource to scan. Configs using this filter can only have one target
     * (the target with this single resource reference).
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.OtherCloudSingleResourceReference single_resource = 2;</code>
     * @param \Google\Cloud\Dlp\V2\OtherCloudSingleResourceReference $var
     * @return $this
     */
    public function setSingleResource($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2\OtherCloudSingleResourceReference::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Optional. Catch-all. This should always be the last target in the list
     * because anything above it will apply first. Should only appear once in a
     * configuration. If none is specified, a default one will be added
     * automatically.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.AllOtherResources others = 100 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\Dlp\V2\AllOtherResources|null
     */
    public function getOthers()
    {
        return $this->readOneof(100);
    }

    public function hasOthers()
    {
        return $this->hasOneof(100);
    }

    /**
     * Optional. Catch-all. This should always be the last target in the list
     * because anything above it will apply first. Should only appear once in a
     * configuration. If none is specified, a default one will be added
     * automatically.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.AllOtherResources others = 100 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\Dlp\V2\AllOtherResources $var
     * @return $this
     */
    public function setOthers($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2\AllOtherResources::class);
        $this->writeOneof(100, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getFilter()
    {
        return $this->whichOneof("filter");
    }

}

