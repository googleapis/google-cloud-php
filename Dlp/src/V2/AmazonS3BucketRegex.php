<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Amazon S3 bucket regex.
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2.AmazonS3BucketRegex</code>
 */
class AmazonS3BucketRegex extends \Google\Protobuf\Internal\Message
{
    /**
     * The AWS account regex.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.AwsAccountRegex aws_account_regex = 1;</code>
     */
    protected $aws_account_regex = null;
    /**
     * Optional. Regex to test the bucket name against.
     * If empty, all buckets match.
     *
     * Generated from protobuf field <code>string bucket_name_regex = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $bucket_name_regex = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Dlp\V2\AwsAccountRegex $aws_account_regex
     *           The AWS account regex.
     *     @type string $bucket_name_regex
     *           Optional. Regex to test the bucket name against.
     *           If empty, all buckets match.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Privacy\Dlp\V2\Dlp::initOnce();
        parent::__construct($data);
    }

    /**
     * The AWS account regex.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.AwsAccountRegex aws_account_regex = 1;</code>
     * @return \Google\Cloud\Dlp\V2\AwsAccountRegex|null
     */
    public function getAwsAccountRegex()
    {
        return $this->aws_account_regex;
    }

    public function hasAwsAccountRegex()
    {
        return isset($this->aws_account_regex);
    }

    public function clearAwsAccountRegex()
    {
        unset($this->aws_account_regex);
    }

    /**
     * The AWS account regex.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.AwsAccountRegex aws_account_regex = 1;</code>
     * @param \Google\Cloud\Dlp\V2\AwsAccountRegex $var
     * @return $this
     */
    public function setAwsAccountRegex($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2\AwsAccountRegex::class);
        $this->aws_account_regex = $var;

        return $this;
    }

    /**
     * Optional. Regex to test the bucket name against.
     * If empty, all buckets match.
     *
     * Generated from protobuf field <code>string bucket_name_regex = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getBucketNameRegex()
    {
        return $this->bucket_name_regex;
    }

    /**
     * Optional. Regex to test the bucket name against.
     * If empty, all buckets match.
     *
     * Generated from protobuf field <code>string bucket_name_regex = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setBucketNameRegex($var)
    {
        GPBUtil::checkString($var, True);
        $this->bucket_name_regex = $var;

        return $this;
    }

}

