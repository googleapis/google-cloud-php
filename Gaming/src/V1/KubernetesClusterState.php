<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/gaming/v1/game_server_clusters.proto

namespace Google\Cloud\Gaming\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The state of the Kubernetes cluster.
 *
 * Generated from protobuf message <code>google.cloud.gaming.v1.KubernetesClusterState</code>
 */
class KubernetesClusterState extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. The version of Agones currently installed in the registered Kubernetes
     * cluster.
     *
     * Generated from protobuf field <code>string agones_version_installed = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $agones_version_installed = '';
    /**
     * Output only. The version of Kubernetes that is currently used in the registered
     * Kubernetes cluster (as detected by the Cloud Game Servers service).
     *
     * Generated from protobuf field <code>string kubernetes_version_installed = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $kubernetes_version_installed = '';
    /**
     * Output only. The state for the installed versions of Agones/Kubernetes.
     *
     * Generated from protobuf field <code>.google.cloud.gaming.v1.KubernetesClusterState.InstallationState installation_state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $installation_state = 0;
    /**
     * Output only. The detailed error message for the installed versions of Agones/Kubernetes.
     *
     * Generated from protobuf field <code>string version_installed_error_message = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $version_installed_error_message = '';
    /**
     * Output only. The cloud provider type reported by the first node's providerID in the list
     * of nodes on the Kubernetes endpoint. On Kubernetes platforms that support
     * zero-node clusters (like GKE-on-GCP), the provider type will be empty.
     *
     * Generated from protobuf field <code>string provider = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $provider = '';
    /**
     * Output only. The version of Agones that is targeted to be installed in the cluster.
     *
     * Generated from protobuf field <code>string agones_version_targeted = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $agones_version_targeted = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $agones_version_installed
     *           Output only. The version of Agones currently installed in the registered Kubernetes
     *           cluster.
     *     @type string $kubernetes_version_installed
     *           Output only. The version of Kubernetes that is currently used in the registered
     *           Kubernetes cluster (as detected by the Cloud Game Servers service).
     *     @type int $installation_state
     *           Output only. The state for the installed versions of Agones/Kubernetes.
     *     @type string $version_installed_error_message
     *           Output only. The detailed error message for the installed versions of Agones/Kubernetes.
     *     @type string $provider
     *           Output only. The cloud provider type reported by the first node's providerID in the list
     *           of nodes on the Kubernetes endpoint. On Kubernetes platforms that support
     *           zero-node clusters (like GKE-on-GCP), the provider type will be empty.
     *     @type string $agones_version_targeted
     *           Output only. The version of Agones that is targeted to be installed in the cluster.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Gaming\V1\GameServerClusters::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. The version of Agones currently installed in the registered Kubernetes
     * cluster.
     *
     * Generated from protobuf field <code>string agones_version_installed = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getAgonesVersionInstalled()
    {
        return $this->agones_version_installed;
    }

    /**
     * Output only. The version of Agones currently installed in the registered Kubernetes
     * cluster.
     *
     * Generated from protobuf field <code>string agones_version_installed = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setAgonesVersionInstalled($var)
    {
        GPBUtil::checkString($var, True);
        $this->agones_version_installed = $var;

        return $this;
    }

    /**
     * Output only. The version of Kubernetes that is currently used in the registered
     * Kubernetes cluster (as detected by the Cloud Game Servers service).
     *
     * Generated from protobuf field <code>string kubernetes_version_installed = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getKubernetesVersionInstalled()
    {
        return $this->kubernetes_version_installed;
    }

    /**
     * Output only. The version of Kubernetes that is currently used in the registered
     * Kubernetes cluster (as detected by the Cloud Game Servers service).
     *
     * Generated from protobuf field <code>string kubernetes_version_installed = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setKubernetesVersionInstalled($var)
    {
        GPBUtil::checkString($var, True);
        $this->kubernetes_version_installed = $var;

        return $this;
    }

    /**
     * Output only. The state for the installed versions of Agones/Kubernetes.
     *
     * Generated from protobuf field <code>.google.cloud.gaming.v1.KubernetesClusterState.InstallationState installation_state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getInstallationState()
    {
        return $this->installation_state;
    }

    /**
     * Output only. The state for the installed versions of Agones/Kubernetes.
     *
     * Generated from protobuf field <code>.google.cloud.gaming.v1.KubernetesClusterState.InstallationState installation_state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setInstallationState($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Gaming\V1\KubernetesClusterState\InstallationState::class);
        $this->installation_state = $var;

        return $this;
    }

    /**
     * Output only. The detailed error message for the installed versions of Agones/Kubernetes.
     *
     * Generated from protobuf field <code>string version_installed_error_message = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getVersionInstalledErrorMessage()
    {
        return $this->version_installed_error_message;
    }

    /**
     * Output only. The detailed error message for the installed versions of Agones/Kubernetes.
     *
     * Generated from protobuf field <code>string version_installed_error_message = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setVersionInstalledErrorMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->version_installed_error_message = $var;

        return $this;
    }

    /**
     * Output only. The cloud provider type reported by the first node's providerID in the list
     * of nodes on the Kubernetes endpoint. On Kubernetes platforms that support
     * zero-node clusters (like GKE-on-GCP), the provider type will be empty.
     *
     * Generated from protobuf field <code>string provider = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getProvider()
    {
        return $this->provider;
    }

    /**
     * Output only. The cloud provider type reported by the first node's providerID in the list
     * of nodes on the Kubernetes endpoint. On Kubernetes platforms that support
     * zero-node clusters (like GKE-on-GCP), the provider type will be empty.
     *
     * Generated from protobuf field <code>string provider = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setProvider($var)
    {
        GPBUtil::checkString($var, True);
        $this->provider = $var;

        return $this;
    }

    /**
     * Output only. The version of Agones that is targeted to be installed in the cluster.
     *
     * Generated from protobuf field <code>string agones_version_targeted = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getAgonesVersionTargeted()
    {
        return $this->agones_version_targeted;
    }

    /**
     * Output only. The version of Agones that is targeted to be installed in the cluster.
     *
     * Generated from protobuf field <code>string agones_version_targeted = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setAgonesVersionTargeted($var)
    {
        GPBUtil::checkString($var, True);
        $this->agones_version_targeted = $var;

        return $this;
    }

}

