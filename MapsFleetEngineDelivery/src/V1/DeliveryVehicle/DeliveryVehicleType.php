<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/fleetengine/delivery/v1/delivery_vehicles.proto

namespace Google\Maps\FleetEngine\Delivery\V1\DeliveryVehicle;

use UnexpectedValueException;

/**
 * The type of delivery vehicle.
 *
 * Protobuf type <code>maps.fleetengine.delivery.v1.DeliveryVehicle.DeliveryVehicleType</code>
 */
class DeliveryVehicleType
{
    /**
     * The value is unused.
     *
     * Generated from protobuf enum <code>DELIVERY_VEHICLE_TYPE_UNSPECIFIED = 0;</code>
     */
    const DELIVERY_VEHICLE_TYPE_UNSPECIFIED = 0;
    /**
     * An automobile.
     *
     * Generated from protobuf enum <code>AUTO = 1;</code>
     */
    const AUTO = 1;
    /**
     * A motorcycle, moped, or other two-wheeled vehicle
     *
     * Generated from protobuf enum <code>TWO_WHEELER = 2;</code>
     */
    const TWO_WHEELER = 2;
    /**
     * Human-powered transport.
     *
     * Generated from protobuf enum <code>BICYCLE = 3;</code>
     */
    const BICYCLE = 3;
    /**
     * A human transporter, typically walking or running, traveling along
     * pedestrian pathways.
     *
     * Generated from protobuf enum <code>PEDESTRIAN = 4;</code>
     */
    const PEDESTRIAN = 4;

    private static $valueToName = [
        self::DELIVERY_VEHICLE_TYPE_UNSPECIFIED => 'DELIVERY_VEHICLE_TYPE_UNSPECIFIED',
        self::AUTO => 'AUTO',
        self::TWO_WHEELER => 'TWO_WHEELER',
        self::BICYCLE => 'BICYCLE',
        self::PEDESTRIAN => 'PEDESTRIAN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


