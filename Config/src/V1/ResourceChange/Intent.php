<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/config/v1/config.proto

namespace Google\Cloud\Config\V1\ResourceChange;

use UnexpectedValueException;

/**
 * Possible intent of the resource change.
 *
 * Protobuf type <code>google.cloud.config.v1.ResourceChange.Intent</code>
 */
class Intent
{
    /**
     * The default value.
     *
     * Generated from protobuf enum <code>INTENT_UNSPECIFIED = 0;</code>
     */
    const INTENT_UNSPECIFIED = 0;
    /**
     * The resource will be created.
     *
     * Generated from protobuf enum <code>CREATE = 1;</code>
     */
    const CREATE = 1;
    /**
     * The resource will be updated.
     *
     * Generated from protobuf enum <code>UPDATE = 2;</code>
     */
    const UPDATE = 2;
    /**
     * The resource will be deleted.
     *
     * Generated from protobuf enum <code>DELETE = 3;</code>
     */
    const DELETE = 3;
    /**
     * The resource will be recreated.
     *
     * Generated from protobuf enum <code>RECREATE = 4;</code>
     */
    const RECREATE = 4;
    /**
     * The resource will be untouched.
     *
     * Generated from protobuf enum <code>UNCHANGED = 5;</code>
     */
    const UNCHANGED = 5;

    private static $valueToName = [
        self::INTENT_UNSPECIFIED => 'INTENT_UNSPECIFIED',
        self::CREATE => 'CREATE',
        self::UPDATE => 'UPDATE',
        self::DELETE => 'DELETE',
        self::RECREATE => 'RECREATE',
        self::UNCHANGED => 'UNCHANGED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


