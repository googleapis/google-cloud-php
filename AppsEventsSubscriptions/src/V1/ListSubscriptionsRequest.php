<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/apps/events/subscriptions/v1/subscriptions_service.proto

namespace Google\Apps\Events\Subscriptions\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The request message for
 * [SubscriptionsService.ListSubscriptions][google.apps.events.subscriptions.v1.SubscriptionsService.ListSubscriptions].
 *
 * Generated from protobuf message <code>google.apps.events.subscriptions.v1.ListSubscriptionsRequest</code>
 */
class ListSubscriptionsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The maximum number of subscriptions to return. The service might
     * return fewer than this value.
     * If unspecified or set to `0`, up to 50 subscriptions are returned.
     * The maximum value is 100. If you specify a value more than 100, the system
     * only returns 100 subscriptions.
     *
     * Generated from protobuf field <code>int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $page_size = 0;
    /**
     * Optional. A page token, received from a previous list subscriptions call.
     * Provide this parameter to retrieve the subsequent page.
     * When paginating, the filter value should match the call that provided the
     * page token. Passing a different value might lead to unexpected results.
     *
     * Generated from protobuf field <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $page_token = '';
    /**
     * Required. A query filter.
     * You can filter subscriptions by event type (`event_types`)
     * and target resource (`target_resource`).
     * You must specify at least one event type in your query. To filter for
     * multiple event types, use the `OR` operator.
     * To filter by both event type and target resource, use the `AND` operator
     * and specify the full resource name, such as
     * `//chat.googleapis.com/spaces/{space}`.
     * For example, the following queries are valid:
     * ```
     * event_types:"google.workspace.chat.membership.v1.updated" OR
     *   event_types:"google.workspace.chat.message.v1.created"
     * event_types:"google.workspace.chat.message.v1.created" AND
     *   target_resource="//chat.googleapis.com/spaces/{space}"
     * ( event_types:"google.workspace.chat.membership.v1.updated" OR
     *   event_types:"google.workspace.chat.message.v1.created" ) AND
     *   target_resource="//chat.googleapis.com/spaces/{space}"
     * ```
     * The server rejects invalid queries with an `INVALID_ARGUMENT`
     * error.
     *
     * Generated from protobuf field <code>string filter = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $filter = '';

    /**
     * @param string $filter Required. A query filter.
     *
     *                       You can filter subscriptions by event type (`event_types`)
     *                       and target resource (`target_resource`).
     *
     *                       You must specify at least one event type in your query. To filter for
     *                       multiple event types, use the `OR` operator.
     *
     *                       To filter by both event type and target resource, use the `AND` operator
     *                       and specify the full resource name, such as
     *                       `//chat.googleapis.com/spaces/{space}`.
     *
     *                       For example, the following queries are valid:
     *
     *                       ```
     *                       event_types:"google.workspace.chat.membership.v1.updated" OR
     *                       event_types:"google.workspace.chat.message.v1.created"
     *
     *                       event_types:"google.workspace.chat.message.v1.created" AND
     *                       target_resource="//chat.googleapis.com/spaces/{space}"
     *
     *                       ( event_types:"google.workspace.chat.membership.v1.updated" OR
     *                       event_types:"google.workspace.chat.message.v1.created" ) AND
     *                       target_resource="//chat.googleapis.com/spaces/{space}"
     *                       ```
     *
     *                       The server rejects invalid queries with an `INVALID_ARGUMENT`
     *                       error.
     *
     * @return \Google\Apps\Events\Subscriptions\V1\ListSubscriptionsRequest
     *
     * @experimental
     */
    public static function build(string $filter): self
    {
        return (new self())
            ->setFilter($filter);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $page_size
     *           Optional. The maximum number of subscriptions to return. The service might
     *           return fewer than this value.
     *           If unspecified or set to `0`, up to 50 subscriptions are returned.
     *           The maximum value is 100. If you specify a value more than 100, the system
     *           only returns 100 subscriptions.
     *     @type string $page_token
     *           Optional. A page token, received from a previous list subscriptions call.
     *           Provide this parameter to retrieve the subsequent page.
     *           When paginating, the filter value should match the call that provided the
     *           page token. Passing a different value might lead to unexpected results.
     *     @type string $filter
     *           Required. A query filter.
     *           You can filter subscriptions by event type (`event_types`)
     *           and target resource (`target_resource`).
     *           You must specify at least one event type in your query. To filter for
     *           multiple event types, use the `OR` operator.
     *           To filter by both event type and target resource, use the `AND` operator
     *           and specify the full resource name, such as
     *           `//chat.googleapis.com/spaces/{space}`.
     *           For example, the following queries are valid:
     *           ```
     *           event_types:"google.workspace.chat.membership.v1.updated" OR
     *             event_types:"google.workspace.chat.message.v1.created"
     *           event_types:"google.workspace.chat.message.v1.created" AND
     *             target_resource="//chat.googleapis.com/spaces/{space}"
     *           ( event_types:"google.workspace.chat.membership.v1.updated" OR
     *             event_types:"google.workspace.chat.message.v1.created" ) AND
     *             target_resource="//chat.googleapis.com/spaces/{space}"
     *           ```
     *           The server rejects invalid queries with an `INVALID_ARGUMENT`
     *           error.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Apps\Events\Subscriptions\V1\SubscriptionsService::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The maximum number of subscriptions to return. The service might
     * return fewer than this value.
     * If unspecified or set to `0`, up to 50 subscriptions are returned.
     * The maximum value is 100. If you specify a value more than 100, the system
     * only returns 100 subscriptions.
     *
     * Generated from protobuf field <code>int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * Optional. The maximum number of subscriptions to return. The service might
     * return fewer than this value.
     * If unspecified or set to `0`, up to 50 subscriptions are returned.
     * The maximum value is 100. If you specify a value more than 100, the system
     * only returns 100 subscriptions.
     *
     * Generated from protobuf field <code>int32 page_size = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * Optional. A page token, received from a previous list subscriptions call.
     * Provide this parameter to retrieve the subsequent page.
     * When paginating, the filter value should match the call that provided the
     * page token. Passing a different value might lead to unexpected results.
     *
     * Generated from protobuf field <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * Optional. A page token, received from a previous list subscriptions call.
     * Provide this parameter to retrieve the subsequent page.
     * When paginating, the filter value should match the call that provided the
     * page token. Passing a different value might lead to unexpected results.
     *
     * Generated from protobuf field <code>string page_token = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

    /**
     * Required. A query filter.
     * You can filter subscriptions by event type (`event_types`)
     * and target resource (`target_resource`).
     * You must specify at least one event type in your query. To filter for
     * multiple event types, use the `OR` operator.
     * To filter by both event type and target resource, use the `AND` operator
     * and specify the full resource name, such as
     * `//chat.googleapis.com/spaces/{space}`.
     * For example, the following queries are valid:
     * ```
     * event_types:"google.workspace.chat.membership.v1.updated" OR
     *   event_types:"google.workspace.chat.message.v1.created"
     * event_types:"google.workspace.chat.message.v1.created" AND
     *   target_resource="//chat.googleapis.com/spaces/{space}"
     * ( event_types:"google.workspace.chat.membership.v1.updated" OR
     *   event_types:"google.workspace.chat.message.v1.created" ) AND
     *   target_resource="//chat.googleapis.com/spaces/{space}"
     * ```
     * The server rejects invalid queries with an `INVALID_ARGUMENT`
     * error.
     *
     * Generated from protobuf field <code>string filter = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Required. A query filter.
     * You can filter subscriptions by event type (`event_types`)
     * and target resource (`target_resource`).
     * You must specify at least one event type in your query. To filter for
     * multiple event types, use the `OR` operator.
     * To filter by both event type and target resource, use the `AND` operator
     * and specify the full resource name, such as
     * `//chat.googleapis.com/spaces/{space}`.
     * For example, the following queries are valid:
     * ```
     * event_types:"google.workspace.chat.membership.v1.updated" OR
     *   event_types:"google.workspace.chat.message.v1.created"
     * event_types:"google.workspace.chat.message.v1.created" AND
     *   target_resource="//chat.googleapis.com/spaces/{space}"
     * ( event_types:"google.workspace.chat.membership.v1.updated" OR
     *   event_types:"google.workspace.chat.message.v1.created" ) AND
     *   target_resource="//chat.googleapis.com/spaces/{space}"
     * ```
     * The server rejects invalid queries with an `INVALID_ARGUMENT`
     * error.
     *
     * Generated from protobuf field <code>string filter = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

}

