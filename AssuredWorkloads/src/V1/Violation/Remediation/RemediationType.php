<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/assuredworkloads/v1/assuredworkloads.proto

namespace Google\Cloud\AssuredWorkloads\V1\Violation\Remediation;

use UnexpectedValueException;

/**
 * Classifying remediation into various types based on the kind of
 * violation. For example, violations caused due to changes in boolean org
 * policy requires different remediation instructions compared to violation
 * caused due to changes in allowed values of list org policy.
 *
 * Protobuf type <code>google.cloud.assuredworkloads.v1.Violation.Remediation.RemediationType</code>
 */
class RemediationType
{
    /**
     * Unspecified remediation type
     *
     * Generated from protobuf enum <code>REMEDIATION_TYPE_UNSPECIFIED = 0;</code>
     */
    const REMEDIATION_TYPE_UNSPECIFIED = 0;
    /**
     * Remediation type for boolean org policy
     *
     * Generated from protobuf enum <code>REMEDIATION_BOOLEAN_ORG_POLICY_VIOLATION = 1;</code>
     */
    const REMEDIATION_BOOLEAN_ORG_POLICY_VIOLATION = 1;
    /**
     * Remediation type for list org policy which have allowed values in the
     * monitoring rule
     *
     * Generated from protobuf enum <code>REMEDIATION_LIST_ALLOWED_VALUES_ORG_POLICY_VIOLATION = 2;</code>
     */
    const REMEDIATION_LIST_ALLOWED_VALUES_ORG_POLICY_VIOLATION = 2;
    /**
     * Remediation type for list org policy which have denied values in the
     * monitoring rule
     *
     * Generated from protobuf enum <code>REMEDIATION_LIST_DENIED_VALUES_ORG_POLICY_VIOLATION = 3;</code>
     */
    const REMEDIATION_LIST_DENIED_VALUES_ORG_POLICY_VIOLATION = 3;
    /**
     * Remediation type for gcp.restrictCmekCryptoKeyProjects
     *
     * Generated from protobuf enum <code>REMEDIATION_RESTRICT_CMEK_CRYPTO_KEY_PROJECTS_ORG_POLICY_VIOLATION = 4;</code>
     */
    const REMEDIATION_RESTRICT_CMEK_CRYPTO_KEY_PROJECTS_ORG_POLICY_VIOLATION = 4;

    private static $valueToName = [
        self::REMEDIATION_TYPE_UNSPECIFIED => 'REMEDIATION_TYPE_UNSPECIFIED',
        self::REMEDIATION_BOOLEAN_ORG_POLICY_VIOLATION => 'REMEDIATION_BOOLEAN_ORG_POLICY_VIOLATION',
        self::REMEDIATION_LIST_ALLOWED_VALUES_ORG_POLICY_VIOLATION => 'REMEDIATION_LIST_ALLOWED_VALUES_ORG_POLICY_VIOLATION',
        self::REMEDIATION_LIST_DENIED_VALUES_ORG_POLICY_VIOLATION => 'REMEDIATION_LIST_DENIED_VALUES_ORG_POLICY_VIOLATION',
        self::REMEDIATION_RESTRICT_CMEK_CRYPTO_KEY_PROJECTS_ORG_POLICY_VIOLATION => 'REMEDIATION_RESTRICT_CMEK_CRYPTO_KEY_PROJECTS_ORG_POLICY_VIOLATION',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(RemediationType::class, \Google\Cloud\AssuredWorkloads\V1\Violation_Remediation_RemediationType::class);

