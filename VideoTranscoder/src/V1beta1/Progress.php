<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/video/transcoder/v1beta1/resources.proto

namespace Google\Cloud\Video\Transcoder\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Estimated fractional progress for each step, from `0` to `1`.
 *
 * Generated from protobuf message <code>google.cloud.video.transcoder.v1beta1.Progress</code>
 */
class Progress extends \Google\Protobuf\Internal\Message
{
    /**
     * Estimated fractional progress for `analyzing` step.
     *
     * Generated from protobuf field <code>double analyzed = 1;</code>
     */
    private $analyzed = 0.0;
    /**
     * Estimated fractional progress for `encoding` step.
     *
     * Generated from protobuf field <code>double encoded = 2;</code>
     */
    private $encoded = 0.0;
    /**
     * Estimated fractional progress for `uploading` step.
     *
     * Generated from protobuf field <code>double uploaded = 3;</code>
     */
    private $uploaded = 0.0;
    /**
     * Estimated fractional progress for `notifying` step.
     *
     * Generated from protobuf field <code>double notified = 4;</code>
     */
    private $notified = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type float $analyzed
     *           Estimated fractional progress for `analyzing` step.
     *     @type float $encoded
     *           Estimated fractional progress for `encoding` step.
     *     @type float $uploaded
     *           Estimated fractional progress for `uploading` step.
     *     @type float $notified
     *           Estimated fractional progress for `notifying` step.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Video\Transcoder\V1Beta1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Estimated fractional progress for `analyzing` step.
     *
     * Generated from protobuf field <code>double analyzed = 1;</code>
     * @return float
     */
    public function getAnalyzed()
    {
        return $this->analyzed;
    }

    /**
     * Estimated fractional progress for `analyzing` step.
     *
     * Generated from protobuf field <code>double analyzed = 1;</code>
     * @param float $var
     * @return $this
     */
    public function setAnalyzed($var)
    {
        GPBUtil::checkDouble($var);
        $this->analyzed = $var;

        return $this;
    }

    /**
     * Estimated fractional progress for `encoding` step.
     *
     * Generated from protobuf field <code>double encoded = 2;</code>
     * @return float
     */
    public function getEncoded()
    {
        return $this->encoded;
    }

    /**
     * Estimated fractional progress for `encoding` step.
     *
     * Generated from protobuf field <code>double encoded = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setEncoded($var)
    {
        GPBUtil::checkDouble($var);
        $this->encoded = $var;

        return $this;
    }

    /**
     * Estimated fractional progress for `uploading` step.
     *
     * Generated from protobuf field <code>double uploaded = 3;</code>
     * @return float
     */
    public function getUploaded()
    {
        return $this->uploaded;
    }

    /**
     * Estimated fractional progress for `uploading` step.
     *
     * Generated from protobuf field <code>double uploaded = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setUploaded($var)
    {
        GPBUtil::checkDouble($var);
        $this->uploaded = $var;

        return $this;
    }

    /**
     * Estimated fractional progress for `notifying` step.
     *
     * Generated from protobuf field <code>double notified = 4;</code>
     * @return float
     */
    public function getNotified()
    {
        return $this->notified;
    }

    /**
     * Estimated fractional progress for `notifying` step.
     *
     * Generated from protobuf field <code>double notified = 4;</code>
     * @param float $var
     * @return $this
     */
    public function setNotified($var)
    {
        GPBUtil::checkDouble($var);
        $this->notified = $var;

        return $this;
    }

}

