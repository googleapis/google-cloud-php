<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/networkmanagement/v1/vpc_flow_logs_config.proto

namespace Google\Cloud\NetworkManagement\V1\EffectiveVpcFlowLogsConfig;

use UnexpectedValueException;

/**
 * The scope for this flow log configuration.
 *
 * Protobuf type <code>google.cloud.networkmanagement.v1.EffectiveVpcFlowLogsConfig.Scope</code>
 */
class Scope
{
    /**
     * Scope is unspecified.
     *
     * Generated from protobuf enum <code>SCOPE_UNSPECIFIED = 0;</code>
     */
    const SCOPE_UNSPECIFIED = 0;
    /**
     * Target resource is a subnet (Network Management API).
     *
     * Generated from protobuf enum <code>SUBNET = 1;</code>
     */
    const SUBNET = 1;
    /**
     * Target resource is a subnet, and the config originates from the Compute
     * API.
     *
     * Generated from protobuf enum <code>COMPUTE_API_SUBNET = 2;</code>
     */
    const COMPUTE_API_SUBNET = 2;
    /**
     * Target resource is a network.
     *
     * Generated from protobuf enum <code>NETWORK = 3;</code>
     */
    const NETWORK = 3;
    /**
     * Target resource is a VPN tunnel.
     *
     * Generated from protobuf enum <code>VPN_TUNNEL = 4;</code>
     */
    const VPN_TUNNEL = 4;
    /**
     * Target resource is an interconnect attachment.
     *
     * Generated from protobuf enum <code>INTERCONNECT_ATTACHMENT = 5;</code>
     */
    const INTERCONNECT_ATTACHMENT = 5;
    /**
     * Configuration applies to an entire organization.
     *
     * Generated from protobuf enum <code>ORGANIZATION = 6;</code>
     */
    const ORGANIZATION = 6;

    private static $valueToName = [
        self::SCOPE_UNSPECIFIED => 'SCOPE_UNSPECIFIED',
        self::SUBNET => 'SUBNET',
        self::COMPUTE_API_SUBNET => 'COMPUTE_API_SUBNET',
        self::NETWORK => 'NETWORK',
        self::VPN_TUNNEL => 'VPN_TUNNEL',
        self::INTERCONNECT_ATTACHMENT => 'INTERCONNECT_ATTACHMENT',
        self::ORGANIZATION => 'ORGANIZATION',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


