<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/networkmanagement/v1/trace.proto

namespace Google\Cloud\NetworkManagement\V1\LoadBalancerBackendInfo;

use UnexpectedValueException;

/**
 * Health check firewalls configuration state enum.
 *
 * Protobuf type <code>google.cloud.networkmanagement.v1.LoadBalancerBackendInfo.HealthCheckFirewallsConfigState</code>
 */
class HealthCheckFirewallsConfigState
{
    /**
     * Configuration state unspecified. It usually means that the backend has
     * no health check attached, or there was an unexpected configuration error
     * preventing Connectivity tests from verifying health check configuration.
     *
     * Generated from protobuf enum <code>HEALTH_CHECK_FIREWALLS_CONFIG_STATE_UNSPECIFIED = 0;</code>
     */
    const HEALTH_CHECK_FIREWALLS_CONFIG_STATE_UNSPECIFIED = 0;
    /**
     * Firewall rules (policies) allowing health check traffic from all required
     * IP ranges to the backend are configured.
     *
     * Generated from protobuf enum <code>FIREWALLS_CONFIGURED = 1;</code>
     */
    const FIREWALLS_CONFIGURED = 1;
    /**
     * Firewall rules (policies) allow health check traffic only from a part of
     * required IP ranges.
     *
     * Generated from protobuf enum <code>FIREWALLS_PARTIALLY_CONFIGURED = 2;</code>
     */
    const FIREWALLS_PARTIALLY_CONFIGURED = 2;
    /**
     * Firewall rules (policies) deny health check traffic from all required
     * IP ranges to the backend.
     *
     * Generated from protobuf enum <code>FIREWALLS_NOT_CONFIGURED = 3;</code>
     */
    const FIREWALLS_NOT_CONFIGURED = 3;
    /**
     * The network contains firewall rules of unsupported types, so Connectivity
     * tests were not able to verify health check configuration status. Please
     * refer to the documentation for the list of unsupported configurations:
     * https://cloud.google.com/network-intelligence-center/docs/connectivity-tests/concepts/overview#unsupported-configs
     *
     * Generated from protobuf enum <code>FIREWALLS_UNSUPPORTED = 4;</code>
     */
    const FIREWALLS_UNSUPPORTED = 4;

    private static $valueToName = [
        self::HEALTH_CHECK_FIREWALLS_CONFIG_STATE_UNSPECIFIED => 'HEALTH_CHECK_FIREWALLS_CONFIG_STATE_UNSPECIFIED',
        self::FIREWALLS_CONFIGURED => 'FIREWALLS_CONFIGURED',
        self::FIREWALLS_PARTIALLY_CONFIGURED => 'FIREWALLS_PARTIALLY_CONFIGURED',
        self::FIREWALLS_NOT_CONFIGURED => 'FIREWALLS_NOT_CONFIGURED',
        self::FIREWALLS_UNSUPPORTED => 'FIREWALLS_UNSUPPORTED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


