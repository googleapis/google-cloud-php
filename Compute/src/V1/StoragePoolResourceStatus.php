<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * [Output Only] Contains output only fields.
 *
 * Generated from protobuf message <code>google.cloud.compute.v1.StoragePoolResourceStatus</code>
 */
class StoragePoolResourceStatus extends \Google\Protobuf\Internal\Message
{
    /**
     * [Output Only] Number of disks used.
     *
     * Generated from protobuf field <code>optional int64 disk_count = 182933485;</code>
     */
    private $disk_count = null;
    /**
     * [Output Only] Timestamp of the last successful resize in RFC3339 text format.
     *
     * Generated from protobuf field <code>optional string last_resize_timestamp = 500825556;</code>
     */
    private $last_resize_timestamp = null;
    /**
     * [Output Only] Maximum allowed aggregate disk size in gigabytes.
     *
     * Generated from protobuf field <code>optional int64 max_total_provisioned_disk_capacity_gb = 165818207;</code>
     */
    private $max_total_provisioned_disk_capacity_gb = null;
    /**
     * [Output Only] Space used by data stored in disks within the storage pool (in bytes). This will reflect the total number of bytes written to the disks in the pool, in contrast to the capacity of those disks.
     *
     * Generated from protobuf field <code>optional int64 pool_used_capacity_bytes = 510407877;</code>
     */
    private $pool_used_capacity_bytes = null;
    /**
     * [Output Only] Sum of all the disks' provisioned IOPS, minus some amount that is allowed per disk that is not counted towards pool's IOPS capacity. For more information, see https://cloud.google.com/compute/docs/disks/storage-pools.
     *
     * Generated from protobuf field <code>optional int64 pool_used_iops = 99558536;</code>
     */
    private $pool_used_iops = null;
    /**
     * [Output Only] Sum of all the disks' provisioned throughput in MB/s.
     *
     * Generated from protobuf field <code>optional int64 pool_used_throughput = 206130633;</code>
     */
    private $pool_used_throughput = null;
    /**
     * [Output Only] Amount of data written into the pool, before it is compacted.
     *
     * Generated from protobuf field <code>optional int64 pool_user_written_bytes = 228964050;</code>
     */
    private $pool_user_written_bytes = null;
    /**
     * [Output Only] Sum of all the capacity provisioned in disks in this storage pool. A disk's provisioned capacity is the same as its total capacity.
     *
     * Generated from protobuf field <code>optional int64 total_provisioned_disk_capacity_gb = 520930980;</code>
     */
    private $total_provisioned_disk_capacity_gb = null;
    /**
     * [Output Only] Sum of all the disks' provisioned IOPS.
     *
     * Generated from protobuf field <code>optional int64 total_provisioned_disk_iops = 32812549;</code>
     */
    private $total_provisioned_disk_iops = null;
    /**
     * [Output Only] Sum of all the disks' provisioned throughput in MB/s, minus some amount that is allowed per disk that is not counted towards pool's throughput capacity.
     *
     * Generated from protobuf field <code>optional int64 total_provisioned_disk_throughput = 447677830;</code>
     */
    private $total_provisioned_disk_throughput = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $disk_count
     *           [Output Only] Number of disks used.
     *     @type string $last_resize_timestamp
     *           [Output Only] Timestamp of the last successful resize in RFC3339 text format.
     *     @type int|string $max_total_provisioned_disk_capacity_gb
     *           [Output Only] Maximum allowed aggregate disk size in gigabytes.
     *     @type int|string $pool_used_capacity_bytes
     *           [Output Only] Space used by data stored in disks within the storage pool (in bytes). This will reflect the total number of bytes written to the disks in the pool, in contrast to the capacity of those disks.
     *     @type int|string $pool_used_iops
     *           [Output Only] Sum of all the disks' provisioned IOPS, minus some amount that is allowed per disk that is not counted towards pool's IOPS capacity. For more information, see https://cloud.google.com/compute/docs/disks/storage-pools.
     *     @type int|string $pool_used_throughput
     *           [Output Only] Sum of all the disks' provisioned throughput in MB/s.
     *     @type int|string $pool_user_written_bytes
     *           [Output Only] Amount of data written into the pool, before it is compacted.
     *     @type int|string $total_provisioned_disk_capacity_gb
     *           [Output Only] Sum of all the capacity provisioned in disks in this storage pool. A disk's provisioned capacity is the same as its total capacity.
     *     @type int|string $total_provisioned_disk_iops
     *           [Output Only] Sum of all the disks' provisioned IOPS.
     *     @type int|string $total_provisioned_disk_throughput
     *           [Output Only] Sum of all the disks' provisioned throughput in MB/s, minus some amount that is allowed per disk that is not counted towards pool's throughput capacity.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Compute\V1\Compute::initOnce();
        parent::__construct($data);
    }

    /**
     * [Output Only] Number of disks used.
     *
     * Generated from protobuf field <code>optional int64 disk_count = 182933485;</code>
     * @return int|string
     */
    public function getDiskCount()
    {
        return isset($this->disk_count) ? $this->disk_count : 0;
    }

    public function hasDiskCount()
    {
        return isset($this->disk_count);
    }

    public function clearDiskCount()
    {
        unset($this->disk_count);
    }

    /**
     * [Output Only] Number of disks used.
     *
     * Generated from protobuf field <code>optional int64 disk_count = 182933485;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDiskCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->disk_count = $var;

        return $this;
    }

    /**
     * [Output Only] Timestamp of the last successful resize in RFC3339 text format.
     *
     * Generated from protobuf field <code>optional string last_resize_timestamp = 500825556;</code>
     * @return string
     */
    public function getLastResizeTimestamp()
    {
        return isset($this->last_resize_timestamp) ? $this->last_resize_timestamp : '';
    }

    public function hasLastResizeTimestamp()
    {
        return isset($this->last_resize_timestamp);
    }

    public function clearLastResizeTimestamp()
    {
        unset($this->last_resize_timestamp);
    }

    /**
     * [Output Only] Timestamp of the last successful resize in RFC3339 text format.
     *
     * Generated from protobuf field <code>optional string last_resize_timestamp = 500825556;</code>
     * @param string $var
     * @return $this
     */
    public function setLastResizeTimestamp($var)
    {
        GPBUtil::checkString($var, True);
        $this->last_resize_timestamp = $var;

        return $this;
    }

    /**
     * [Output Only] Maximum allowed aggregate disk size in gigabytes.
     *
     * Generated from protobuf field <code>optional int64 max_total_provisioned_disk_capacity_gb = 165818207;</code>
     * @return int|string
     */
    public function getMaxTotalProvisionedDiskCapacityGb()
    {
        return isset($this->max_total_provisioned_disk_capacity_gb) ? $this->max_total_provisioned_disk_capacity_gb : 0;
    }

    public function hasMaxTotalProvisionedDiskCapacityGb()
    {
        return isset($this->max_total_provisioned_disk_capacity_gb);
    }

    public function clearMaxTotalProvisionedDiskCapacityGb()
    {
        unset($this->max_total_provisioned_disk_capacity_gb);
    }

    /**
     * [Output Only] Maximum allowed aggregate disk size in gigabytes.
     *
     * Generated from protobuf field <code>optional int64 max_total_provisioned_disk_capacity_gb = 165818207;</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxTotalProvisionedDiskCapacityGb($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_total_provisioned_disk_capacity_gb = $var;

        return $this;
    }

    /**
     * [Output Only] Space used by data stored in disks within the storage pool (in bytes). This will reflect the total number of bytes written to the disks in the pool, in contrast to the capacity of those disks.
     *
     * Generated from protobuf field <code>optional int64 pool_used_capacity_bytes = 510407877;</code>
     * @return int|string
     */
    public function getPoolUsedCapacityBytes()
    {
        return isset($this->pool_used_capacity_bytes) ? $this->pool_used_capacity_bytes : 0;
    }

    public function hasPoolUsedCapacityBytes()
    {
        return isset($this->pool_used_capacity_bytes);
    }

    public function clearPoolUsedCapacityBytes()
    {
        unset($this->pool_used_capacity_bytes);
    }

    /**
     * [Output Only] Space used by data stored in disks within the storage pool (in bytes). This will reflect the total number of bytes written to the disks in the pool, in contrast to the capacity of those disks.
     *
     * Generated from protobuf field <code>optional int64 pool_used_capacity_bytes = 510407877;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPoolUsedCapacityBytes($var)
    {
        GPBUtil::checkInt64($var);
        $this->pool_used_capacity_bytes = $var;

        return $this;
    }

    /**
     * [Output Only] Sum of all the disks' provisioned IOPS, minus some amount that is allowed per disk that is not counted towards pool's IOPS capacity. For more information, see https://cloud.google.com/compute/docs/disks/storage-pools.
     *
     * Generated from protobuf field <code>optional int64 pool_used_iops = 99558536;</code>
     * @return int|string
     */
    public function getPoolUsedIops()
    {
        return isset($this->pool_used_iops) ? $this->pool_used_iops : 0;
    }

    public function hasPoolUsedIops()
    {
        return isset($this->pool_used_iops);
    }

    public function clearPoolUsedIops()
    {
        unset($this->pool_used_iops);
    }

    /**
     * [Output Only] Sum of all the disks' provisioned IOPS, minus some amount that is allowed per disk that is not counted towards pool's IOPS capacity. For more information, see https://cloud.google.com/compute/docs/disks/storage-pools.
     *
     * Generated from protobuf field <code>optional int64 pool_used_iops = 99558536;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPoolUsedIops($var)
    {
        GPBUtil::checkInt64($var);
        $this->pool_used_iops = $var;

        return $this;
    }

    /**
     * [Output Only] Sum of all the disks' provisioned throughput in MB/s.
     *
     * Generated from protobuf field <code>optional int64 pool_used_throughput = 206130633;</code>
     * @return int|string
     */
    public function getPoolUsedThroughput()
    {
        return isset($this->pool_used_throughput) ? $this->pool_used_throughput : 0;
    }

    public function hasPoolUsedThroughput()
    {
        return isset($this->pool_used_throughput);
    }

    public function clearPoolUsedThroughput()
    {
        unset($this->pool_used_throughput);
    }

    /**
     * [Output Only] Sum of all the disks' provisioned throughput in MB/s.
     *
     * Generated from protobuf field <code>optional int64 pool_used_throughput = 206130633;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPoolUsedThroughput($var)
    {
        GPBUtil::checkInt64($var);
        $this->pool_used_throughput = $var;

        return $this;
    }

    /**
     * [Output Only] Amount of data written into the pool, before it is compacted.
     *
     * Generated from protobuf field <code>optional int64 pool_user_written_bytes = 228964050;</code>
     * @return int|string
     */
    public function getPoolUserWrittenBytes()
    {
        return isset($this->pool_user_written_bytes) ? $this->pool_user_written_bytes : 0;
    }

    public function hasPoolUserWrittenBytes()
    {
        return isset($this->pool_user_written_bytes);
    }

    public function clearPoolUserWrittenBytes()
    {
        unset($this->pool_user_written_bytes);
    }

    /**
     * [Output Only] Amount of data written into the pool, before it is compacted.
     *
     * Generated from protobuf field <code>optional int64 pool_user_written_bytes = 228964050;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPoolUserWrittenBytes($var)
    {
        GPBUtil::checkInt64($var);
        $this->pool_user_written_bytes = $var;

        return $this;
    }

    /**
     * [Output Only] Sum of all the capacity provisioned in disks in this storage pool. A disk's provisioned capacity is the same as its total capacity.
     *
     * Generated from protobuf field <code>optional int64 total_provisioned_disk_capacity_gb = 520930980;</code>
     * @return int|string
     */
    public function getTotalProvisionedDiskCapacityGb()
    {
        return isset($this->total_provisioned_disk_capacity_gb) ? $this->total_provisioned_disk_capacity_gb : 0;
    }

    public function hasTotalProvisionedDiskCapacityGb()
    {
        return isset($this->total_provisioned_disk_capacity_gb);
    }

    public function clearTotalProvisionedDiskCapacityGb()
    {
        unset($this->total_provisioned_disk_capacity_gb);
    }

    /**
     * [Output Only] Sum of all the capacity provisioned in disks in this storage pool. A disk's provisioned capacity is the same as its total capacity.
     *
     * Generated from protobuf field <code>optional int64 total_provisioned_disk_capacity_gb = 520930980;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTotalProvisionedDiskCapacityGb($var)
    {
        GPBUtil::checkInt64($var);
        $this->total_provisioned_disk_capacity_gb = $var;

        return $this;
    }

    /**
     * [Output Only] Sum of all the disks' provisioned IOPS.
     *
     * Generated from protobuf field <code>optional int64 total_provisioned_disk_iops = 32812549;</code>
     * @return int|string
     */
    public function getTotalProvisionedDiskIops()
    {
        return isset($this->total_provisioned_disk_iops) ? $this->total_provisioned_disk_iops : 0;
    }

    public function hasTotalProvisionedDiskIops()
    {
        return isset($this->total_provisioned_disk_iops);
    }

    public function clearTotalProvisionedDiskIops()
    {
        unset($this->total_provisioned_disk_iops);
    }

    /**
     * [Output Only] Sum of all the disks' provisioned IOPS.
     *
     * Generated from protobuf field <code>optional int64 total_provisioned_disk_iops = 32812549;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTotalProvisionedDiskIops($var)
    {
        GPBUtil::checkInt64($var);
        $this->total_provisioned_disk_iops = $var;

        return $this;
    }

    /**
     * [Output Only] Sum of all the disks' provisioned throughput in MB/s, minus some amount that is allowed per disk that is not counted towards pool's throughput capacity.
     *
     * Generated from protobuf field <code>optional int64 total_provisioned_disk_throughput = 447677830;</code>
     * @return int|string
     */
    public function getTotalProvisionedDiskThroughput()
    {
        return isset($this->total_provisioned_disk_throughput) ? $this->total_provisioned_disk_throughput : 0;
    }

    public function hasTotalProvisionedDiskThroughput()
    {
        return isset($this->total_provisioned_disk_throughput);
    }

    public function clearTotalProvisionedDiskThroughput()
    {
        unset($this->total_provisioned_disk_throughput);
    }

    /**
     * [Output Only] Sum of all the disks' provisioned throughput in MB/s, minus some amount that is allowed per disk that is not counted towards pool's throughput capacity.
     *
     * Generated from protobuf field <code>optional int64 total_provisioned_disk_throughput = 447677830;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTotalProvisionedDiskThroughput($var)
    {
        GPBUtil::checkInt64($var);
        $this->total_provisioned_disk_throughput = $var;

        return $this;
    }

}

