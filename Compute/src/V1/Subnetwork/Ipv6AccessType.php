<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1\Subnetwork;

use UnexpectedValueException;

/**
 * The access type of IPv6 address this subnet holds. It's immutable and can only be specified during creation or the first time the subnet is updated into IPV4_IPV6 dual stack. If the ipv6_type is EXTERNAL then this subnet cannot enable direct path.
 *
 * Protobuf type <code>google.cloud.compute.v1.Subnetwork.Ipv6AccessType</code>
 */
class Ipv6AccessType
{
    /**
     * A value indicating that the enum field is not set.
     *
     * Generated from protobuf enum <code>UNDEFINED_IPV6_ACCESS_TYPE = 0;</code>
     */
    const UNDEFINED_IPV6_ACCESS_TYPE = 0;
    /**
     * VMs on this subnet will be assigned IPv6 addresses that are accesible via the Internet, as well as the VPC network.
     *
     * Generated from protobuf enum <code>EXTERNAL = 35607499;</code>
     */
    const EXTERNAL = 35607499;
    /**
     * IPv6 access type not set. Means this subnet hasn't been turned on IPv6 yet.
     *
     * Generated from protobuf enum <code>UNSPECIFIED_IPV6_ACCESS_TYPE = 313080613;</code>
     */
    const UNSPECIFIED_IPV6_ACCESS_TYPE = 313080613;

    private static $valueToName = [
        self::UNDEFINED_IPV6_ACCESS_TYPE => 'UNDEFINED_IPV6_ACCESS_TYPE',
        self::EXTERNAL => 'EXTERNAL',
        self::UNSPECIFIED_IPV6_ACCESS_TYPE => 'UNSPECIFIED_IPV6_ACCESS_TYPE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


