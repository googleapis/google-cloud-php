<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1\InterconnectRemoteLocation;

use UnexpectedValueException;

/**
 * [Output Only] Link Aggregation Control Protocol (LACP) constraints, which can take one of the following values: LACP_SUPPORTED, LACP_UNSUPPORTED
 *
 * Protobuf type <code>google.cloud.compute.v1.InterconnectRemoteLocation.Lacp</code>
 */
class Lacp
{
    /**
     * A value indicating that the enum field is not set.
     *
     * Generated from protobuf enum <code>UNDEFINED_LACP = 0;</code>
     */
    const UNDEFINED_LACP = 0;
    /**
     * LACP_SUPPORTED: LACP is supported, and enabled by default on the Cross-Cloud Interconnect.
     *
     * Generated from protobuf enum <code>LACP_SUPPORTED = 339576113;</code>
     */
    const LACP_SUPPORTED = 339576113;
    /**
     * LACP_UNSUPPORTED: LACP is not supported and is not be enabled on this port. GetDiagnostics shows bundleAggregationType as "static". GCP does not support LAGs without LACP, so requestedLinkCount must be 1.
     *
     * Generated from protobuf enum <code>LACP_UNSUPPORTED = 203930104;</code>
     */
    const LACP_UNSUPPORTED = 203930104;

    private static $valueToName = [
        self::UNDEFINED_LACP => 'UNDEFINED_LACP',
        self::LACP_SUPPORTED => 'LACP_SUPPORTED',
        self::LACP_UNSUPPORTED => 'LACP_UNSUPPORTED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


