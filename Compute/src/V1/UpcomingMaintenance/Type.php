<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1\UpcomingMaintenance;

use UnexpectedValueException;

/**
 * Defines the type of maintenance.
 *
 * Protobuf type <code>google.cloud.compute.v1.UpcomingMaintenance.Type</code>
 */
class Type
{
    /**
     * A value indicating that the enum field is not set.
     *
     * Generated from protobuf enum <code>UNDEFINED_TYPE = 0;</code>
     */
    const UNDEFINED_TYPE = 0;
    /**
     * Scheduled maintenance (e.g. maintenance after uptime guarantee is complete).
     *
     * Generated from protobuf enum <code>SCHEDULED = 478400653;</code>
     */
    const SCHEDULED = 478400653;
    /**
     * No type specified. Do not use this value.
     *
     * Generated from protobuf enum <code>UNKNOWN_TYPE = 490705455;</code>
     */
    const UNKNOWN_TYPE = 490705455;
    /**
     * Unscheduled maintenance (e.g. emergency maintenance during uptime guarantee).
     *
     * Generated from protobuf enum <code>UNSCHEDULED = 450077204;</code>
     */
    const UNSCHEDULED = 450077204;

    private static $valueToName = [
        self::UNDEFINED_TYPE => 'UNDEFINED_TYPE',
        self::SCHEDULED => 'SCHEDULED',
        self::UNKNOWN_TYPE => 'UNKNOWN_TYPE',
        self::UNSCHEDULED => 'UNSCHEDULED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


