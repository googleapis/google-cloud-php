<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *
 * Generated from protobuf message <code>google.cloud.compute.v1.NetworkProfileNetworkFeatures</code>
 */
class NetworkProfileNetworkFeatures extends \Google\Protobuf\Internal\Message
{
    /**
     * Specifies what address purposes are supported. If empty, all address purposes are supported.
     * Check the AddressPurposes enum for the list of possible values.
     *
     * Generated from protobuf field <code>repeated string address_purposes = 433024768;</code>
     */
    private $address_purposes;
    /**
     * Specifies whether alias IP ranges (and secondary address ranges) are allowed.
     * Check the AllowAliasIpRanges enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_alias_ip_ranges = 457984201;</code>
     */
    private $allow_alias_ip_ranges = null;
    /**
     * Specifies whether auto mode subnet creation is allowed.
     * Check the AllowAutoModeSubnet enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_auto_mode_subnet = 152191263;</code>
     */
    private $allow_auto_mode_subnet = null;
    /**
     * Specifies whether firewalls for Class D address ranges are supported.
     * Check the AllowClassDFirewalls enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_class_d_firewalls = 131608987;</code>
     */
    private $allow_class_d_firewalls = null;
    /**
     * Specifies whether cloud NAT creation is allowed.
     * Check the AllowCloudNat enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_cloud_nat = 254831265;</code>
     */
    private $allow_cloud_nat = null;
    /**
     * Specifies whether cloud router creation is allowed.
     * Check the AllowCloudRouter enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_cloud_router = 451110345;</code>
     */
    private $allow_cloud_router = null;
    /**
     * Specifies whether VMs are allowed to have external IP access on network interfaces connected to this VPC.
     * Check the AllowExternalIpAccess enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_external_ip_access = 131538110;</code>
     */
    private $allow_external_ip_access = null;
    /**
     * Specifies whether Cloud Interconnect creation is allowed.
     * Check the AllowInterconnect enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_interconnect = 280512964;</code>
     */
    private $allow_interconnect = null;
    /**
     * Specifies whether cloud load balancing is allowed.
     * Check the AllowLoadBalancing enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_load_balancing = 223366198;</code>
     */
    private $allow_load_balancing = null;
    /**
     * Specifies whether multi-nic in the same network is allowed.
     * Check the AllowMultiNicInSameNetwork enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_multi_nic_in_same_network = 88251004;</code>
     */
    private $allow_multi_nic_in_same_network = null;
    /**
     * Specifies whether Packet Mirroring 1.0 is supported.
     * Check the AllowPacketMirroring enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_packet_mirroring = 512227074;</code>
     */
    private $allow_packet_mirroring = null;
    /**
     * Specifies whether private Google access is allowed.
     * Check the AllowPrivateGoogleAccess enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_private_google_access = 374702072;</code>
     */
    private $allow_private_google_access = null;
    /**
     * Specifies whether PSC creation is allowed.
     * Check the AllowPsc enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_psc = 372357322;</code>
     */
    private $allow_psc = null;
    /**
     * Specifies whether unicast within the same network is allowed.
     * Check the AllowSameNetworkUnicast enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_same_network_unicast = 167531643;</code>
     */
    private $allow_same_network_unicast = null;
    /**
     * Specifies whether static route creation is allowed.
     * Check the AllowStaticRoutes enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_static_routes = 185257925;</code>
     */
    private $allow_static_routes = null;
    /**
     * Specifies whether sub interfaces are allowed.
     * Check the AllowSubInterfaces enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_sub_interfaces = 247208303;</code>
     */
    private $allow_sub_interfaces = null;
    /**
     * Specifies whether VPC peering is allowed.
     * Check the AllowVpcPeering enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_vpc_peering = 115402228;</code>
     */
    private $allow_vpc_peering = null;
    /**
     * Specifies whether VPN creation is allowed.
     * Check the AllowVpn enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_vpn = 372363006;</code>
     */
    private $allow_vpn = null;
    /**
     * If set, limits the interface types that the network supports. If empty, all interface types are supported.
     * Check the InterfaceTypes enum for the list of possible values.
     *
     * Generated from protobuf field <code>repeated string interface_types = 157981171;</code>
     */
    private $interface_types;
    /**
     * Specifies which subnetwork purposes are supported.
     * Check the SubnetPurposes enum for the list of possible values.
     *
     * Generated from protobuf field <code>repeated string subnet_purposes = 301338039;</code>
     */
    private $subnet_purposes;
    /**
     * Specifies which subnetwork stack types are supported.
     * Check the SubnetStackTypes enum for the list of possible values.
     *
     * Generated from protobuf field <code>repeated string subnet_stack_types = 521008672;</code>
     */
    private $subnet_stack_types;
    /**
     * Specifies which type of unicast is supported.
     * Check the Unicast enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string unicast = 249841711;</code>
     */
    private $unicast = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $address_purposes
     *           Specifies what address purposes are supported. If empty, all address purposes are supported.
     *           Check the AddressPurposes enum for the list of possible values.
     *     @type string $allow_alias_ip_ranges
     *           Specifies whether alias IP ranges (and secondary address ranges) are allowed.
     *           Check the AllowAliasIpRanges enum for the list of possible values.
     *     @type string $allow_auto_mode_subnet
     *           Specifies whether auto mode subnet creation is allowed.
     *           Check the AllowAutoModeSubnet enum for the list of possible values.
     *     @type string $allow_class_d_firewalls
     *           Specifies whether firewalls for Class D address ranges are supported.
     *           Check the AllowClassDFirewalls enum for the list of possible values.
     *     @type string $allow_cloud_nat
     *           Specifies whether cloud NAT creation is allowed.
     *           Check the AllowCloudNat enum for the list of possible values.
     *     @type string $allow_cloud_router
     *           Specifies whether cloud router creation is allowed.
     *           Check the AllowCloudRouter enum for the list of possible values.
     *     @type string $allow_external_ip_access
     *           Specifies whether VMs are allowed to have external IP access on network interfaces connected to this VPC.
     *           Check the AllowExternalIpAccess enum for the list of possible values.
     *     @type string $allow_interconnect
     *           Specifies whether Cloud Interconnect creation is allowed.
     *           Check the AllowInterconnect enum for the list of possible values.
     *     @type string $allow_load_balancing
     *           Specifies whether cloud load balancing is allowed.
     *           Check the AllowLoadBalancing enum for the list of possible values.
     *     @type string $allow_multi_nic_in_same_network
     *           Specifies whether multi-nic in the same network is allowed.
     *           Check the AllowMultiNicInSameNetwork enum for the list of possible values.
     *     @type string $allow_packet_mirroring
     *           Specifies whether Packet Mirroring 1.0 is supported.
     *           Check the AllowPacketMirroring enum for the list of possible values.
     *     @type string $allow_private_google_access
     *           Specifies whether private Google access is allowed.
     *           Check the AllowPrivateGoogleAccess enum for the list of possible values.
     *     @type string $allow_psc
     *           Specifies whether PSC creation is allowed.
     *           Check the AllowPsc enum for the list of possible values.
     *     @type string $allow_same_network_unicast
     *           Specifies whether unicast within the same network is allowed.
     *           Check the AllowSameNetworkUnicast enum for the list of possible values.
     *     @type string $allow_static_routes
     *           Specifies whether static route creation is allowed.
     *           Check the AllowStaticRoutes enum for the list of possible values.
     *     @type string $allow_sub_interfaces
     *           Specifies whether sub interfaces are allowed.
     *           Check the AllowSubInterfaces enum for the list of possible values.
     *     @type string $allow_vpc_peering
     *           Specifies whether VPC peering is allowed.
     *           Check the AllowVpcPeering enum for the list of possible values.
     *     @type string $allow_vpn
     *           Specifies whether VPN creation is allowed.
     *           Check the AllowVpn enum for the list of possible values.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $interface_types
     *           If set, limits the interface types that the network supports. If empty, all interface types are supported.
     *           Check the InterfaceTypes enum for the list of possible values.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $subnet_purposes
     *           Specifies which subnetwork purposes are supported.
     *           Check the SubnetPurposes enum for the list of possible values.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $subnet_stack_types
     *           Specifies which subnetwork stack types are supported.
     *           Check the SubnetStackTypes enum for the list of possible values.
     *     @type string $unicast
     *           Specifies which type of unicast is supported.
     *           Check the Unicast enum for the list of possible values.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Compute\V1\Compute::initOnce();
        parent::__construct($data);
    }

    /**
     * Specifies what address purposes are supported. If empty, all address purposes are supported.
     * Check the AddressPurposes enum for the list of possible values.
     *
     * Generated from protobuf field <code>repeated string address_purposes = 433024768;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAddressPurposes()
    {
        return $this->address_purposes;
    }

    /**
     * Specifies what address purposes are supported. If empty, all address purposes are supported.
     * Check the AddressPurposes enum for the list of possible values.
     *
     * Generated from protobuf field <code>repeated string address_purposes = 433024768;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAddressPurposes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->address_purposes = $arr;

        return $this;
    }

    /**
     * Specifies whether alias IP ranges (and secondary address ranges) are allowed.
     * Check the AllowAliasIpRanges enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_alias_ip_ranges = 457984201;</code>
     * @return string
     */
    public function getAllowAliasIpRanges()
    {
        return isset($this->allow_alias_ip_ranges) ? $this->allow_alias_ip_ranges : '';
    }

    public function hasAllowAliasIpRanges()
    {
        return isset($this->allow_alias_ip_ranges);
    }

    public function clearAllowAliasIpRanges()
    {
        unset($this->allow_alias_ip_ranges);
    }

    /**
     * Specifies whether alias IP ranges (and secondary address ranges) are allowed.
     * Check the AllowAliasIpRanges enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_alias_ip_ranges = 457984201;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowAliasIpRanges($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_alias_ip_ranges = $var;

        return $this;
    }

    /**
     * Specifies whether auto mode subnet creation is allowed.
     * Check the AllowAutoModeSubnet enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_auto_mode_subnet = 152191263;</code>
     * @return string
     */
    public function getAllowAutoModeSubnet()
    {
        return isset($this->allow_auto_mode_subnet) ? $this->allow_auto_mode_subnet : '';
    }

    public function hasAllowAutoModeSubnet()
    {
        return isset($this->allow_auto_mode_subnet);
    }

    public function clearAllowAutoModeSubnet()
    {
        unset($this->allow_auto_mode_subnet);
    }

    /**
     * Specifies whether auto mode subnet creation is allowed.
     * Check the AllowAutoModeSubnet enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_auto_mode_subnet = 152191263;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowAutoModeSubnet($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_auto_mode_subnet = $var;

        return $this;
    }

    /**
     * Specifies whether firewalls for Class D address ranges are supported.
     * Check the AllowClassDFirewalls enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_class_d_firewalls = 131608987;</code>
     * @return string
     */
    public function getAllowClassDFirewalls()
    {
        return isset($this->allow_class_d_firewalls) ? $this->allow_class_d_firewalls : '';
    }

    public function hasAllowClassDFirewalls()
    {
        return isset($this->allow_class_d_firewalls);
    }

    public function clearAllowClassDFirewalls()
    {
        unset($this->allow_class_d_firewalls);
    }

    /**
     * Specifies whether firewalls for Class D address ranges are supported.
     * Check the AllowClassDFirewalls enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_class_d_firewalls = 131608987;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowClassDFirewalls($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_class_d_firewalls = $var;

        return $this;
    }

    /**
     * Specifies whether cloud NAT creation is allowed.
     * Check the AllowCloudNat enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_cloud_nat = 254831265;</code>
     * @return string
     */
    public function getAllowCloudNat()
    {
        return isset($this->allow_cloud_nat) ? $this->allow_cloud_nat : '';
    }

    public function hasAllowCloudNat()
    {
        return isset($this->allow_cloud_nat);
    }

    public function clearAllowCloudNat()
    {
        unset($this->allow_cloud_nat);
    }

    /**
     * Specifies whether cloud NAT creation is allowed.
     * Check the AllowCloudNat enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_cloud_nat = 254831265;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowCloudNat($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_cloud_nat = $var;

        return $this;
    }

    /**
     * Specifies whether cloud router creation is allowed.
     * Check the AllowCloudRouter enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_cloud_router = 451110345;</code>
     * @return string
     */
    public function getAllowCloudRouter()
    {
        return isset($this->allow_cloud_router) ? $this->allow_cloud_router : '';
    }

    public function hasAllowCloudRouter()
    {
        return isset($this->allow_cloud_router);
    }

    public function clearAllowCloudRouter()
    {
        unset($this->allow_cloud_router);
    }

    /**
     * Specifies whether cloud router creation is allowed.
     * Check the AllowCloudRouter enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_cloud_router = 451110345;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowCloudRouter($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_cloud_router = $var;

        return $this;
    }

    /**
     * Specifies whether VMs are allowed to have external IP access on network interfaces connected to this VPC.
     * Check the AllowExternalIpAccess enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_external_ip_access = 131538110;</code>
     * @return string
     */
    public function getAllowExternalIpAccess()
    {
        return isset($this->allow_external_ip_access) ? $this->allow_external_ip_access : '';
    }

    public function hasAllowExternalIpAccess()
    {
        return isset($this->allow_external_ip_access);
    }

    public function clearAllowExternalIpAccess()
    {
        unset($this->allow_external_ip_access);
    }

    /**
     * Specifies whether VMs are allowed to have external IP access on network interfaces connected to this VPC.
     * Check the AllowExternalIpAccess enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_external_ip_access = 131538110;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowExternalIpAccess($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_external_ip_access = $var;

        return $this;
    }

    /**
     * Specifies whether Cloud Interconnect creation is allowed.
     * Check the AllowInterconnect enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_interconnect = 280512964;</code>
     * @return string
     */
    public function getAllowInterconnect()
    {
        return isset($this->allow_interconnect) ? $this->allow_interconnect : '';
    }

    public function hasAllowInterconnect()
    {
        return isset($this->allow_interconnect);
    }

    public function clearAllowInterconnect()
    {
        unset($this->allow_interconnect);
    }

    /**
     * Specifies whether Cloud Interconnect creation is allowed.
     * Check the AllowInterconnect enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_interconnect = 280512964;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowInterconnect($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_interconnect = $var;

        return $this;
    }

    /**
     * Specifies whether cloud load balancing is allowed.
     * Check the AllowLoadBalancing enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_load_balancing = 223366198;</code>
     * @return string
     */
    public function getAllowLoadBalancing()
    {
        return isset($this->allow_load_balancing) ? $this->allow_load_balancing : '';
    }

    public function hasAllowLoadBalancing()
    {
        return isset($this->allow_load_balancing);
    }

    public function clearAllowLoadBalancing()
    {
        unset($this->allow_load_balancing);
    }

    /**
     * Specifies whether cloud load balancing is allowed.
     * Check the AllowLoadBalancing enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_load_balancing = 223366198;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowLoadBalancing($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_load_balancing = $var;

        return $this;
    }

    /**
     * Specifies whether multi-nic in the same network is allowed.
     * Check the AllowMultiNicInSameNetwork enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_multi_nic_in_same_network = 88251004;</code>
     * @return string
     */
    public function getAllowMultiNicInSameNetwork()
    {
        return isset($this->allow_multi_nic_in_same_network) ? $this->allow_multi_nic_in_same_network : '';
    }

    public function hasAllowMultiNicInSameNetwork()
    {
        return isset($this->allow_multi_nic_in_same_network);
    }

    public function clearAllowMultiNicInSameNetwork()
    {
        unset($this->allow_multi_nic_in_same_network);
    }

    /**
     * Specifies whether multi-nic in the same network is allowed.
     * Check the AllowMultiNicInSameNetwork enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_multi_nic_in_same_network = 88251004;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowMultiNicInSameNetwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_multi_nic_in_same_network = $var;

        return $this;
    }

    /**
     * Specifies whether Packet Mirroring 1.0 is supported.
     * Check the AllowPacketMirroring enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_packet_mirroring = 512227074;</code>
     * @return string
     */
    public function getAllowPacketMirroring()
    {
        return isset($this->allow_packet_mirroring) ? $this->allow_packet_mirroring : '';
    }

    public function hasAllowPacketMirroring()
    {
        return isset($this->allow_packet_mirroring);
    }

    public function clearAllowPacketMirroring()
    {
        unset($this->allow_packet_mirroring);
    }

    /**
     * Specifies whether Packet Mirroring 1.0 is supported.
     * Check the AllowPacketMirroring enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_packet_mirroring = 512227074;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowPacketMirroring($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_packet_mirroring = $var;

        return $this;
    }

    /**
     * Specifies whether private Google access is allowed.
     * Check the AllowPrivateGoogleAccess enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_private_google_access = 374702072;</code>
     * @return string
     */
    public function getAllowPrivateGoogleAccess()
    {
        return isset($this->allow_private_google_access) ? $this->allow_private_google_access : '';
    }

    public function hasAllowPrivateGoogleAccess()
    {
        return isset($this->allow_private_google_access);
    }

    public function clearAllowPrivateGoogleAccess()
    {
        unset($this->allow_private_google_access);
    }

    /**
     * Specifies whether private Google access is allowed.
     * Check the AllowPrivateGoogleAccess enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_private_google_access = 374702072;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowPrivateGoogleAccess($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_private_google_access = $var;

        return $this;
    }

    /**
     * Specifies whether PSC creation is allowed.
     * Check the AllowPsc enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_psc = 372357322;</code>
     * @return string
     */
    public function getAllowPsc()
    {
        return isset($this->allow_psc) ? $this->allow_psc : '';
    }

    public function hasAllowPsc()
    {
        return isset($this->allow_psc);
    }

    public function clearAllowPsc()
    {
        unset($this->allow_psc);
    }

    /**
     * Specifies whether PSC creation is allowed.
     * Check the AllowPsc enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_psc = 372357322;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowPsc($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_psc = $var;

        return $this;
    }

    /**
     * Specifies whether unicast within the same network is allowed.
     * Check the AllowSameNetworkUnicast enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_same_network_unicast = 167531643;</code>
     * @return string
     */
    public function getAllowSameNetworkUnicast()
    {
        return isset($this->allow_same_network_unicast) ? $this->allow_same_network_unicast : '';
    }

    public function hasAllowSameNetworkUnicast()
    {
        return isset($this->allow_same_network_unicast);
    }

    public function clearAllowSameNetworkUnicast()
    {
        unset($this->allow_same_network_unicast);
    }

    /**
     * Specifies whether unicast within the same network is allowed.
     * Check the AllowSameNetworkUnicast enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_same_network_unicast = 167531643;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowSameNetworkUnicast($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_same_network_unicast = $var;

        return $this;
    }

    /**
     * Specifies whether static route creation is allowed.
     * Check the AllowStaticRoutes enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_static_routes = 185257925;</code>
     * @return string
     */
    public function getAllowStaticRoutes()
    {
        return isset($this->allow_static_routes) ? $this->allow_static_routes : '';
    }

    public function hasAllowStaticRoutes()
    {
        return isset($this->allow_static_routes);
    }

    public function clearAllowStaticRoutes()
    {
        unset($this->allow_static_routes);
    }

    /**
     * Specifies whether static route creation is allowed.
     * Check the AllowStaticRoutes enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_static_routes = 185257925;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowStaticRoutes($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_static_routes = $var;

        return $this;
    }

    /**
     * Specifies whether sub interfaces are allowed.
     * Check the AllowSubInterfaces enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_sub_interfaces = 247208303;</code>
     * @return string
     */
    public function getAllowSubInterfaces()
    {
        return isset($this->allow_sub_interfaces) ? $this->allow_sub_interfaces : '';
    }

    public function hasAllowSubInterfaces()
    {
        return isset($this->allow_sub_interfaces);
    }

    public function clearAllowSubInterfaces()
    {
        unset($this->allow_sub_interfaces);
    }

    /**
     * Specifies whether sub interfaces are allowed.
     * Check the AllowSubInterfaces enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_sub_interfaces = 247208303;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowSubInterfaces($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_sub_interfaces = $var;

        return $this;
    }

    /**
     * Specifies whether VPC peering is allowed.
     * Check the AllowVpcPeering enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_vpc_peering = 115402228;</code>
     * @return string
     */
    public function getAllowVpcPeering()
    {
        return isset($this->allow_vpc_peering) ? $this->allow_vpc_peering : '';
    }

    public function hasAllowVpcPeering()
    {
        return isset($this->allow_vpc_peering);
    }

    public function clearAllowVpcPeering()
    {
        unset($this->allow_vpc_peering);
    }

    /**
     * Specifies whether VPC peering is allowed.
     * Check the AllowVpcPeering enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_vpc_peering = 115402228;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowVpcPeering($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_vpc_peering = $var;

        return $this;
    }

    /**
     * Specifies whether VPN creation is allowed.
     * Check the AllowVpn enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_vpn = 372363006;</code>
     * @return string
     */
    public function getAllowVpn()
    {
        return isset($this->allow_vpn) ? $this->allow_vpn : '';
    }

    public function hasAllowVpn()
    {
        return isset($this->allow_vpn);
    }

    public function clearAllowVpn()
    {
        unset($this->allow_vpn);
    }

    /**
     * Specifies whether VPN creation is allowed.
     * Check the AllowVpn enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string allow_vpn = 372363006;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowVpn($var)
    {
        GPBUtil::checkString($var, True);
        $this->allow_vpn = $var;

        return $this;
    }

    /**
     * If set, limits the interface types that the network supports. If empty, all interface types are supported.
     * Check the InterfaceTypes enum for the list of possible values.
     *
     * Generated from protobuf field <code>repeated string interface_types = 157981171;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInterfaceTypes()
    {
        return $this->interface_types;
    }

    /**
     * If set, limits the interface types that the network supports. If empty, all interface types are supported.
     * Check the InterfaceTypes enum for the list of possible values.
     *
     * Generated from protobuf field <code>repeated string interface_types = 157981171;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInterfaceTypes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->interface_types = $arr;

        return $this;
    }

    /**
     * Specifies which subnetwork purposes are supported.
     * Check the SubnetPurposes enum for the list of possible values.
     *
     * Generated from protobuf field <code>repeated string subnet_purposes = 301338039;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSubnetPurposes()
    {
        return $this->subnet_purposes;
    }

    /**
     * Specifies which subnetwork purposes are supported.
     * Check the SubnetPurposes enum for the list of possible values.
     *
     * Generated from protobuf field <code>repeated string subnet_purposes = 301338039;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSubnetPurposes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->subnet_purposes = $arr;

        return $this;
    }

    /**
     * Specifies which subnetwork stack types are supported.
     * Check the SubnetStackTypes enum for the list of possible values.
     *
     * Generated from protobuf field <code>repeated string subnet_stack_types = 521008672;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSubnetStackTypes()
    {
        return $this->subnet_stack_types;
    }

    /**
     * Specifies which subnetwork stack types are supported.
     * Check the SubnetStackTypes enum for the list of possible values.
     *
     * Generated from protobuf field <code>repeated string subnet_stack_types = 521008672;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSubnetStackTypes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->subnet_stack_types = $arr;

        return $this;
    }

    /**
     * Specifies which type of unicast is supported.
     * Check the Unicast enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string unicast = 249841711;</code>
     * @return string
     */
    public function getUnicast()
    {
        return isset($this->unicast) ? $this->unicast : '';
    }

    public function hasUnicast()
    {
        return isset($this->unicast);
    }

    public function clearUnicast()
    {
        unset($this->unicast);
    }

    /**
     * Specifies which type of unicast is supported.
     * Check the Unicast enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string unicast = 249841711;</code>
     * @param string $var
     * @return $this
     */
    public function setUnicast($var)
    {
        GPBUtil::checkString($var, True);
        $this->unicast = $var;

        return $this;
    }

}

