<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Contains information of a NAT IP.
 *
 * Generated from protobuf message <code>google.cloud.compute.v1.NatIpInfoNatIpInfoMapping</code>
 */
class NatIpInfoNatIpInfoMapping extends \Google\Protobuf\Internal\Message
{
    /**
     * Specifies whether NAT IP is auto or manual.
     * Check the Mode enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string mode = 3357091;</code>
     */
    private $mode = null;
    /**
     * NAT IP address. For example: 203.0.113.11.
     *
     * Generated from protobuf field <code>optional string nat_ip = 21113093;</code>
     */
    private $nat_ip = null;
    /**
     * Specifies whether NAT IP is currently serving at least one endpoint or not.
     * Check the Usage enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string usage = 111574433;</code>
     */
    private $usage = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $mode
     *           Specifies whether NAT IP is auto or manual.
     *           Check the Mode enum for the list of possible values.
     *     @type string $nat_ip
     *           NAT IP address. For example: 203.0.113.11.
     *     @type string $usage
     *           Specifies whether NAT IP is currently serving at least one endpoint or not.
     *           Check the Usage enum for the list of possible values.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Compute\V1\Compute::initOnce();
        parent::__construct($data);
    }

    /**
     * Specifies whether NAT IP is auto or manual.
     * Check the Mode enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string mode = 3357091;</code>
     * @return string
     */
    public function getMode()
    {
        return isset($this->mode) ? $this->mode : '';
    }

    public function hasMode()
    {
        return isset($this->mode);
    }

    public function clearMode()
    {
        unset($this->mode);
    }

    /**
     * Specifies whether NAT IP is auto or manual.
     * Check the Mode enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string mode = 3357091;</code>
     * @param string $var
     * @return $this
     */
    public function setMode($var)
    {
        GPBUtil::checkString($var, True);
        $this->mode = $var;

        return $this;
    }

    /**
     * NAT IP address. For example: 203.0.113.11.
     *
     * Generated from protobuf field <code>optional string nat_ip = 21113093;</code>
     * @return string
     */
    public function getNatIp()
    {
        return isset($this->nat_ip) ? $this->nat_ip : '';
    }

    public function hasNatIp()
    {
        return isset($this->nat_ip);
    }

    public function clearNatIp()
    {
        unset($this->nat_ip);
    }

    /**
     * NAT IP address. For example: 203.0.113.11.
     *
     * Generated from protobuf field <code>optional string nat_ip = 21113093;</code>
     * @param string $var
     * @return $this
     */
    public function setNatIp($var)
    {
        GPBUtil::checkString($var, True);
        $this->nat_ip = $var;

        return $this;
    }

    /**
     * Specifies whether NAT IP is currently serving at least one endpoint or not.
     * Check the Usage enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string usage = 111574433;</code>
     * @return string
     */
    public function getUsage()
    {
        return isset($this->usage) ? $this->usage : '';
    }

    public function hasUsage()
    {
        return isset($this->usage);
    }

    public function clearUsage()
    {
        unset($this->usage);
    }

    /**
     * Specifies whether NAT IP is currently serving at least one endpoint or not.
     * Check the Usage enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string usage = 111574433;</code>
     * @param string $var
     * @return $this
     */
    public function setUsage($var)
    {
        GPBUtil::checkString($var, True);
        $this->usage = $var;

        return $this;
    }

}

