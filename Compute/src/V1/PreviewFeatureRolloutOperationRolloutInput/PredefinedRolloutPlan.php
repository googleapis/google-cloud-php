<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1\PreviewFeatureRolloutOperationRolloutInput;

use UnexpectedValueException;

/**
 * Predefined rollout plan.
 *
 * Protobuf type <code>google.cloud.compute.v1.PreviewFeatureRolloutOperationRolloutInput.PredefinedRolloutPlan</code>
 */
class PredefinedRolloutPlan
{
    /**
     * A value indicating that the enum field is not set.
     *
     * Generated from protobuf enum <code>UNDEFINED_PREDEFINED_ROLLOUT_PLAN = 0;</code>
     */
    const UNDEFINED_PREDEFINED_ROLLOUT_PLAN = 0;
    /**
     * Generated from protobuf enum <code>ROLLOUT_PLAN_FAST_ROLLOUT = 167808726;</code>
     */
    const ROLLOUT_PLAN_FAST_ROLLOUT = 167808726;
    /**
     * Generated from protobuf enum <code>ROLLOUT_PLAN_TWO_DAY_ROLLOUT = 349866771;</code>
     */
    const ROLLOUT_PLAN_TWO_DAY_ROLLOUT = 349866771;
    /**
     * Generated from protobuf enum <code>ROLLOUT_PLAN_UNSPECIFIED = 144511983;</code>
     */
    const ROLLOUT_PLAN_UNSPECIFIED = 144511983;

    private static $valueToName = [
        self::UNDEFINED_PREDEFINED_ROLLOUT_PLAN => 'UNDEFINED_PREDEFINED_ROLLOUT_PLAN',
        self::ROLLOUT_PLAN_FAST_ROLLOUT => 'ROLLOUT_PLAN_FAST_ROLLOUT',
        self::ROLLOUT_PLAN_TWO_DAY_ROLLOUT => 'ROLLOUT_PLAN_TWO_DAY_ROLLOUT',
        self::ROLLOUT_PLAN_UNSPECIFIED => 'ROLLOUT_PLAN_UNSPECIFIED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


