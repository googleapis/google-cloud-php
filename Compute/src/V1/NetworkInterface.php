<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A network interface resource attached to an instance.
 *
 * Generated from protobuf message <code>google.cloud.compute.v1.NetworkInterface</code>
 */
class NetworkInterface extends \Google\Protobuf\Internal\Message
{
    /**
     * An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
     *
     * Generated from protobuf field <code>repeated .google.cloud.compute.v1.AccessConfig access_configs = 111058326;</code>
     */
    private $access_configs;
    /**
     * An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks.
     *
     * Generated from protobuf field <code>repeated .google.cloud.compute.v1.AliasIpRange alias_ip_ranges = 165085631;</code>
     */
    private $alias_ip_ranges;
    /**
     * Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface. The request will fail with error 400 Bad Request if the fingerprint is not provided, or 412 Precondition Failed if the fingerprint is out of date.
     *
     * Generated from protobuf field <code>string fingerprint = 234678500;</code>
     */
    private $fingerprint = null;
    /**
     * [Output Only] An IPv6 internal network address for this network interface.
     *
     * Generated from protobuf field <code>string ipv6_address = 341563804;</code>
     */
    private $ipv6_address = null;
    /**
     * [Output Only] Type of the resource. Always compute#networkInterface for network interfaces.
     *
     * Generated from protobuf field <code>string kind = 3292052;</code>
     */
    private $kind = null;
    /**
     * [Output Only] The name of the network interface, which is generated by the server. For network devices, these are eth0, eth1, etc.
     *
     * Generated from protobuf field <code>string name = 3373707;</code>
     */
    private $name = null;
    /**
     * URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred.
     * If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:
     * - https://www.googleapis.com/compute/v1/projects/project/global/networks/network
     * - projects/project/global/networks/network
     * - global/networks/default
     *
     * Generated from protobuf field <code>string network = 232872494;</code>
     */
    private $network = null;
    /**
     * An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
     *
     * Generated from protobuf field <code>string network_i_p = 207181961;</code>
     */
    private $network_i_p = null;
    /**
     * The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
     *
     * Generated from protobuf field <code>.google.cloud.compute.v1.NetworkInterface.NicType nic_type = 59810577;</code>
     */
    private $nic_type = null;
    /**
     * The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not specify this field. If the network is in auto subnet mode, specifying the subnetwork is optional. If the network is in custom subnet mode, specifying the subnetwork is required. If you specify this field, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs:
     * - https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork
     * - regions/region/subnetworks/subnetwork
     *
     * Generated from protobuf field <code>string subnetwork = 307827694;</code>
     */
    private $subnetwork = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Compute\V1\AccessConfig[]|\Google\Protobuf\Internal\RepeatedField $access_configs
     *           An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
     *     @type \Google\Cloud\Compute\V1\AliasIpRange[]|\Google\Protobuf\Internal\RepeatedField $alias_ip_ranges
     *           An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks.
     *     @type string $fingerprint
     *           Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface. The request will fail with error 400 Bad Request if the fingerprint is not provided, or 412 Precondition Failed if the fingerprint is out of date.
     *     @type string $ipv6_address
     *           [Output Only] An IPv6 internal network address for this network interface.
     *     @type string $kind
     *           [Output Only] Type of the resource. Always compute#networkInterface for network interfaces.
     *     @type string $name
     *           [Output Only] The name of the network interface, which is generated by the server. For network devices, these are eth0, eth1, etc.
     *     @type string $network
     *           URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred.
     *           If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:
     *           - https://www.googleapis.com/compute/v1/projects/project/global/networks/network
     *           - projects/project/global/networks/network
     *           - global/networks/default
     *     @type string $network_i_p
     *           An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
     *     @type int $nic_type
     *           The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
     *     @type string $subnetwork
     *           The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not specify this field. If the network is in auto subnet mode, specifying the subnetwork is optional. If the network is in custom subnet mode, specifying the subnetwork is required. If you specify this field, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs:
     *           - https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork
     *           - regions/region/subnetworks/subnetwork
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Compute\V1\Compute::initOnce();
        parent::__construct($data);
    }

    /**
     * An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
     *
     * Generated from protobuf field <code>repeated .google.cloud.compute.v1.AccessConfig access_configs = 111058326;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAccessConfigs()
    {
        return $this->access_configs;
    }

    /**
     * An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
     *
     * Generated from protobuf field <code>repeated .google.cloud.compute.v1.AccessConfig access_configs = 111058326;</code>
     * @param \Google\Cloud\Compute\V1\AccessConfig[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAccessConfigs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Compute\V1\AccessConfig::class);
        $this->access_configs = $arr;

        return $this;
    }

    /**
     * An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks.
     *
     * Generated from protobuf field <code>repeated .google.cloud.compute.v1.AliasIpRange alias_ip_ranges = 165085631;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAliasIpRanges()
    {
        return $this->alias_ip_ranges;
    }

    /**
     * An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks.
     *
     * Generated from protobuf field <code>repeated .google.cloud.compute.v1.AliasIpRange alias_ip_ranges = 165085631;</code>
     * @param \Google\Cloud\Compute\V1\AliasIpRange[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAliasIpRanges($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Compute\V1\AliasIpRange::class);
        $this->alias_ip_ranges = $arr;

        return $this;
    }

    /**
     * Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface. The request will fail with error 400 Bad Request if the fingerprint is not provided, or 412 Precondition Failed if the fingerprint is out of date.
     *
     * Generated from protobuf field <code>string fingerprint = 234678500;</code>
     * @return string
     */
    public function getFingerprint()
    {
        return isset($this->fingerprint) ? $this->fingerprint : '';
    }

    public function hasFingerprint()
    {
        return isset($this->fingerprint);
    }

    public function clearFingerprint()
    {
        unset($this->fingerprint);
    }

    /**
     * Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface. The request will fail with error 400 Bad Request if the fingerprint is not provided, or 412 Precondition Failed if the fingerprint is out of date.
     *
     * Generated from protobuf field <code>string fingerprint = 234678500;</code>
     * @param string $var
     * @return $this
     */
    public function setFingerprint($var)
    {
        GPBUtil::checkString($var, True);
        $this->fingerprint = $var;

        return $this;
    }

    /**
     * [Output Only] An IPv6 internal network address for this network interface.
     *
     * Generated from protobuf field <code>string ipv6_address = 341563804;</code>
     * @return string
     */
    public function getIpv6Address()
    {
        return isset($this->ipv6_address) ? $this->ipv6_address : '';
    }

    public function hasIpv6Address()
    {
        return isset($this->ipv6_address);
    }

    public function clearIpv6Address()
    {
        unset($this->ipv6_address);
    }

    /**
     * [Output Only] An IPv6 internal network address for this network interface.
     *
     * Generated from protobuf field <code>string ipv6_address = 341563804;</code>
     * @param string $var
     * @return $this
     */
    public function setIpv6Address($var)
    {
        GPBUtil::checkString($var, True);
        $this->ipv6_address = $var;

        return $this;
    }

    /**
     * [Output Only] Type of the resource. Always compute#networkInterface for network interfaces.
     *
     * Generated from protobuf field <code>string kind = 3292052;</code>
     * @return string
     */
    public function getKind()
    {
        return isset($this->kind) ? $this->kind : '';
    }

    public function hasKind()
    {
        return isset($this->kind);
    }

    public function clearKind()
    {
        unset($this->kind);
    }

    /**
     * [Output Only] Type of the resource. Always compute#networkInterface for network interfaces.
     *
     * Generated from protobuf field <code>string kind = 3292052;</code>
     * @param string $var
     * @return $this
     */
    public function setKind($var)
    {
        GPBUtil::checkString($var, True);
        $this->kind = $var;

        return $this;
    }

    /**
     * [Output Only] The name of the network interface, which is generated by the server. For network devices, these are eth0, eth1, etc.
     *
     * Generated from protobuf field <code>string name = 3373707;</code>
     * @return string
     */
    public function getName()
    {
        return isset($this->name) ? $this->name : '';
    }

    public function hasName()
    {
        return isset($this->name);
    }

    public function clearName()
    {
        unset($this->name);
    }

    /**
     * [Output Only] The name of the network interface, which is generated by the server. For network devices, these are eth0, eth1, etc.
     *
     * Generated from protobuf field <code>string name = 3373707;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred.
     * If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:
     * - https://www.googleapis.com/compute/v1/projects/project/global/networks/network
     * - projects/project/global/networks/network
     * - global/networks/default
     *
     * Generated from protobuf field <code>string network = 232872494;</code>
     * @return string
     */
    public function getNetwork()
    {
        return isset($this->network) ? $this->network : '';
    }

    public function hasNetwork()
    {
        return isset($this->network);
    }

    public function clearNetwork()
    {
        unset($this->network);
    }

    /**
     * URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred.
     * If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:
     * - https://www.googleapis.com/compute/v1/projects/project/global/networks/network
     * - projects/project/global/networks/network
     * - global/networks/default
     *
     * Generated from protobuf field <code>string network = 232872494;</code>
     * @param string $var
     * @return $this
     */
    public function setNetwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->network = $var;

        return $this;
    }

    /**
     * An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
     *
     * Generated from protobuf field <code>string network_i_p = 207181961;</code>
     * @return string
     */
    public function getNetworkIP()
    {
        return isset($this->network_i_p) ? $this->network_i_p : '';
    }

    public function hasNetworkIP()
    {
        return isset($this->network_i_p);
    }

    public function clearNetworkIP()
    {
        unset($this->network_i_p);
    }

    /**
     * An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
     *
     * Generated from protobuf field <code>string network_i_p = 207181961;</code>
     * @param string $var
     * @return $this
     */
    public function setNetworkIP($var)
    {
        GPBUtil::checkString($var, True);
        $this->network_i_p = $var;

        return $this;
    }

    /**
     * The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
     *
     * Generated from protobuf field <code>.google.cloud.compute.v1.NetworkInterface.NicType nic_type = 59810577;</code>
     * @return int
     */
    public function getNicType()
    {
        return isset($this->nic_type) ? $this->nic_type : 0;
    }

    public function hasNicType()
    {
        return isset($this->nic_type);
    }

    public function clearNicType()
    {
        unset($this->nic_type);
    }

    /**
     * The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
     *
     * Generated from protobuf field <code>.google.cloud.compute.v1.NetworkInterface.NicType nic_type = 59810577;</code>
     * @param int $var
     * @return $this
     */
    public function setNicType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Compute\V1\NetworkInterface\NicType::class);
        $this->nic_type = $var;

        return $this;
    }

    /**
     * The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not specify this field. If the network is in auto subnet mode, specifying the subnetwork is optional. If the network is in custom subnet mode, specifying the subnetwork is required. If you specify this field, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs:
     * - https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork
     * - regions/region/subnetworks/subnetwork
     *
     * Generated from protobuf field <code>string subnetwork = 307827694;</code>
     * @return string
     */
    public function getSubnetwork()
    {
        return isset($this->subnetwork) ? $this->subnetwork : '';
    }

    public function hasSubnetwork()
    {
        return isset($this->subnetwork);
    }

    public function clearSubnetwork()
    {
        unset($this->subnetwork);
    }

    /**
     * The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not specify this field. If the network is in auto subnet mode, specifying the subnetwork is optional. If the network is in custom subnet mode, specifying the subnetwork is required. If you specify this field, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs:
     * - https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork
     * - regions/region/subnetworks/subnetwork
     *
     * Generated from protobuf field <code>string subnetwork = 307827694;</code>
     * @param string $var
     * @return $this
     */
    public function setSubnetwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->subnetwork = $var;

        return $this;
    }

}

