<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *
 * Generated from protobuf message <code>google.cloud.compute.v1.SecurityPolicyUserDefinedField</code>
 */
class SecurityPolicyUserDefinedField extends \Google\Protobuf\Internal\Message
{
    /**
     * The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
     * Check the Base enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string base = 3016401;</code>
     */
    private $base = null;
    /**
     * If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
     *
     * Generated from protobuf field <code>optional string mask = 3344108;</code>
     */
    private $mask = null;
    /**
     * The name of this field. Must be unique within the policy.
     *
     * Generated from protobuf field <code>optional string name = 3373707;</code>
     */
    private $name = null;
    /**
     * Offset of the first byte of the field (in network byte order) relative to 'base'.
     *
     * Generated from protobuf field <code>optional int32 offset = 53961875;</code>
     */
    private $offset = null;
    /**
     * Size of the field in bytes. Valid values: 1-4.
     *
     * Generated from protobuf field <code>optional int32 size = 3530753;</code>
     */
    private $size = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $base
     *           The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
     *           Check the Base enum for the list of possible values.
     *     @type string $mask
     *           If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
     *     @type string $name
     *           The name of this field. Must be unique within the policy.
     *     @type int $offset
     *           Offset of the first byte of the field (in network byte order) relative to 'base'.
     *     @type int $size
     *           Size of the field in bytes. Valid values: 1-4.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Compute\V1\Compute::initOnce();
        parent::__construct($data);
    }

    /**
     * The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
     * Check the Base enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string base = 3016401;</code>
     * @return string
     */
    public function getBase()
    {
        return isset($this->base) ? $this->base : '';
    }

    public function hasBase()
    {
        return isset($this->base);
    }

    public function clearBase()
    {
        unset($this->base);
    }

    /**
     * The base relative to which 'offset' is measured. Possible values are: - IPV4: Points to the beginning of the IPv4 header. - IPV6: Points to the beginning of the IPv6 header. - TCP: Points to the beginning of the TCP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. - UDP: Points to the beginning of the UDP header, skipping over any IPv4 options or IPv6 extension headers. Not present for non-first fragments. required
     * Check the Base enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string base = 3016401;</code>
     * @param string $var
     * @return $this
     */
    public function setBase($var)
    {
        GPBUtil::checkString($var, True);
        $this->base = $var;

        return $this;
    }

    /**
     * If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
     *
     * Generated from protobuf field <code>optional string mask = 3344108;</code>
     * @return string
     */
    public function getMask()
    {
        return isset($this->mask) ? $this->mask : '';
    }

    public function hasMask()
    {
        return isset($this->mask);
    }

    public function clearMask()
    {
        unset($this->mask);
    }

    /**
     * If specified, apply this mask (bitwise AND) to the field to ignore bits before matching. Encoded as a hexadecimal number (starting with "0x"). The last byte of the field (in network byte order) corresponds to the least significant byte of the mask.
     *
     * Generated from protobuf field <code>optional string mask = 3344108;</code>
     * @param string $var
     * @return $this
     */
    public function setMask($var)
    {
        GPBUtil::checkString($var, True);
        $this->mask = $var;

        return $this;
    }

    /**
     * The name of this field. Must be unique within the policy.
     *
     * Generated from protobuf field <code>optional string name = 3373707;</code>
     * @return string
     */
    public function getName()
    {
        return isset($this->name) ? $this->name : '';
    }

    public function hasName()
    {
        return isset($this->name);
    }

    public function clearName()
    {
        unset($this->name);
    }

    /**
     * The name of this field. Must be unique within the policy.
     *
     * Generated from protobuf field <code>optional string name = 3373707;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Offset of the first byte of the field (in network byte order) relative to 'base'.
     *
     * Generated from protobuf field <code>optional int32 offset = 53961875;</code>
     * @return int
     */
    public function getOffset()
    {
        return isset($this->offset) ? $this->offset : 0;
    }

    public function hasOffset()
    {
        return isset($this->offset);
    }

    public function clearOffset()
    {
        unset($this->offset);
    }

    /**
     * Offset of the first byte of the field (in network byte order) relative to 'base'.
     *
     * Generated from protobuf field <code>optional int32 offset = 53961875;</code>
     * @param int $var
     * @return $this
     */
    public function setOffset($var)
    {
        GPBUtil::checkInt32($var);
        $this->offset = $var;

        return $this;
    }

    /**
     * Size of the field in bytes. Valid values: 1-4.
     *
     * Generated from protobuf field <code>optional int32 size = 3530753;</code>
     * @return int
     */
    public function getSize()
    {
        return isset($this->size) ? $this->size : 0;
    }

    public function hasSize()
    {
        return isset($this->size);
    }

    public function clearSize()
    {
        unset($this->size);
    }

    /**
     * Size of the field in bytes. Valid values: 1-4.
     *
     * Generated from protobuf field <code>optional int32 size = 3530753;</code>
     * @param int $var
     * @return $this
     */
    public function setSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->size = $var;

        return $this;
    }

}

