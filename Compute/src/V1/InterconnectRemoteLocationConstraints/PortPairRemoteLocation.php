<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1\InterconnectRemoteLocationConstraints;

use UnexpectedValueException;

/**
 * [Output Only] Port pair remote location constraints, which can take one of the following values: PORT_PAIR_UNCONSTRAINED_REMOTE_LOCATION, PORT_PAIR_MATCHING_REMOTE_LOCATION. GCP's API refers only to individual ports, but the UI uses this field when ordering a pair of ports, to prevent users from accidentally ordering something that is incompatible with their cloud provider. Specifically, when ordering a redundant pair of Cross-Cloud Interconnect ports, and one of them uses a remote location with portPairMatchingRemoteLocation set to matching, the UI requires that both ports use the same remote location.
 *
 * Protobuf type <code>google.cloud.compute.v1.InterconnectRemoteLocationConstraints.PortPairRemoteLocation</code>
 */
class PortPairRemoteLocation
{
    /**
     * A value indicating that the enum field is not set.
     *
     * Generated from protobuf enum <code>UNDEFINED_PORT_PAIR_REMOTE_LOCATION = 0;</code>
     */
    const UNDEFINED_PORT_PAIR_REMOTE_LOCATION = 0;
    /**
     * If PORT_PAIR_MATCHING_REMOTE_LOCATION, the remote cloud provider allocates ports in pairs, and the user should choose the same remote location for both ports.
     *
     * Generated from protobuf enum <code>PORT_PAIR_MATCHING_REMOTE_LOCATION = 207291859;</code>
     */
    const PORT_PAIR_MATCHING_REMOTE_LOCATION = 207291859;
    /**
     * If PORT_PAIR_UNCONSTRAINED_REMOTE_LOCATION, a user may opt to provision a redundant pair of Cross-Cloud Interconnects using two different remote locations in the same city.
     *
     * Generated from protobuf enum <code>PORT_PAIR_UNCONSTRAINED_REMOTE_LOCATION = 60609829;</code>
     */
    const PORT_PAIR_UNCONSTRAINED_REMOTE_LOCATION = 60609829;

    private static $valueToName = [
        self::UNDEFINED_PORT_PAIR_REMOTE_LOCATION => 'UNDEFINED_PORT_PAIR_REMOTE_LOCATION',
        self::PORT_PAIR_MATCHING_REMOTE_LOCATION => 'PORT_PAIR_MATCHING_REMOTE_LOCATION',
        self::PORT_PAIR_UNCONSTRAINED_REMOTE_LOCATION => 'PORT_PAIR_UNCONSTRAINED_REMOTE_LOCATION',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


