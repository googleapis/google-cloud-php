<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * [Output Only] Describes the state of a peering connection, not just the local peering. This field provides information about the effective settings for the connection as a whole, including pending delete/update requests for CONSENSUS peerings.
 *
 * Generated from protobuf message <code>google.cloud.compute.v1.NetworkPeeringConnectionStatus</code>
 */
class NetworkPeeringConnectionStatus extends \Google\Protobuf\Internal\Message
{
    /**
     * The consensus state contains information about the status of update and delete for a consensus peering connection.
     *
     * Generated from protobuf field <code>optional .google.cloud.compute.v1.NetworkPeeringConnectionStatusConsensusState consensus_state = 379772617;</code>
     */
    private $consensus_state = null;
    /**
     * The active connectivity settings for the peering connection based on the settings of the network peerings.
     *
     * Generated from protobuf field <code>optional .google.cloud.compute.v1.NetworkPeeringConnectionStatusTrafficConfiguration traffic_configuration = 133016116;</code>
     */
    private $traffic_configuration = null;
    /**
     * The update strategy determines the update/delete semantics for this peering connection.
     * Check the UpdateStrategy enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string update_strategy = 6123049;</code>
     */
    private $update_strategy = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Compute\V1\NetworkPeeringConnectionStatusConsensusState $consensus_state
     *           The consensus state contains information about the status of update and delete for a consensus peering connection.
     *     @type \Google\Cloud\Compute\V1\NetworkPeeringConnectionStatusTrafficConfiguration $traffic_configuration
     *           The active connectivity settings for the peering connection based on the settings of the network peerings.
     *     @type string $update_strategy
     *           The update strategy determines the update/delete semantics for this peering connection.
     *           Check the UpdateStrategy enum for the list of possible values.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Compute\V1\Compute::initOnce();
        parent::__construct($data);
    }

    /**
     * The consensus state contains information about the status of update and delete for a consensus peering connection.
     *
     * Generated from protobuf field <code>optional .google.cloud.compute.v1.NetworkPeeringConnectionStatusConsensusState consensus_state = 379772617;</code>
     * @return \Google\Cloud\Compute\V1\NetworkPeeringConnectionStatusConsensusState|null
     */
    public function getConsensusState()
    {
        return $this->consensus_state;
    }

    public function hasConsensusState()
    {
        return isset($this->consensus_state);
    }

    public function clearConsensusState()
    {
        unset($this->consensus_state);
    }

    /**
     * The consensus state contains information about the status of update and delete for a consensus peering connection.
     *
     * Generated from protobuf field <code>optional .google.cloud.compute.v1.NetworkPeeringConnectionStatusConsensusState consensus_state = 379772617;</code>
     * @param \Google\Cloud\Compute\V1\NetworkPeeringConnectionStatusConsensusState $var
     * @return $this
     */
    public function setConsensusState($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Compute\V1\NetworkPeeringConnectionStatusConsensusState::class);
        $this->consensus_state = $var;

        return $this;
    }

    /**
     * The active connectivity settings for the peering connection based on the settings of the network peerings.
     *
     * Generated from protobuf field <code>optional .google.cloud.compute.v1.NetworkPeeringConnectionStatusTrafficConfiguration traffic_configuration = 133016116;</code>
     * @return \Google\Cloud\Compute\V1\NetworkPeeringConnectionStatusTrafficConfiguration|null
     */
    public function getTrafficConfiguration()
    {
        return $this->traffic_configuration;
    }

    public function hasTrafficConfiguration()
    {
        return isset($this->traffic_configuration);
    }

    public function clearTrafficConfiguration()
    {
        unset($this->traffic_configuration);
    }

    /**
     * The active connectivity settings for the peering connection based on the settings of the network peerings.
     *
     * Generated from protobuf field <code>optional .google.cloud.compute.v1.NetworkPeeringConnectionStatusTrafficConfiguration traffic_configuration = 133016116;</code>
     * @param \Google\Cloud\Compute\V1\NetworkPeeringConnectionStatusTrafficConfiguration $var
     * @return $this
     */
    public function setTrafficConfiguration($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Compute\V1\NetworkPeeringConnectionStatusTrafficConfiguration::class);
        $this->traffic_configuration = $var;

        return $this;
    }

    /**
     * The update strategy determines the update/delete semantics for this peering connection.
     * Check the UpdateStrategy enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string update_strategy = 6123049;</code>
     * @return string
     */
    public function getUpdateStrategy()
    {
        return isset($this->update_strategy) ? $this->update_strategy : '';
    }

    public function hasUpdateStrategy()
    {
        return isset($this->update_strategy);
    }

    public function clearUpdateStrategy()
    {
        unset($this->update_strategy);
    }

    /**
     * The update strategy determines the update/delete semantics for this peering connection.
     * Check the UpdateStrategy enum for the list of possible values.
     *
     * Generated from protobuf field <code>optional string update_strategy = 6123049;</code>
     * @param string $var
     * @return $this
     */
    public function setUpdateStrategy($var)
    {
        GPBUtil::checkString($var, True);
        $this->update_strategy = $var;

        return $this;
    }

}

