<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1\NetworkInterface;

use UnexpectedValueException;

/**
 * [Output Only] One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet. This field is always inherited from its subnetwork. Valid only if stackType is IPV4_IPV6.
 *
 * Protobuf type <code>google.cloud.compute.v1.NetworkInterface.Ipv6AccessType</code>
 */
class Ipv6AccessType
{
    /**
     * A value indicating that the enum field is not set.
     *
     * Generated from protobuf enum <code>UNDEFINED_IPV6_ACCESS_TYPE = 0;</code>
     */
    const UNDEFINED_IPV6_ACCESS_TYPE = 0;
    /**
     * This network interface can have external IPv6.
     *
     * Generated from protobuf enum <code>EXTERNAL = 35607499;</code>
     */
    const EXTERNAL = 35607499;
    /**
     * This network interface can have internal IPv6.
     *
     * Generated from protobuf enum <code>INTERNAL = 279295677;</code>
     */
    const INTERNAL = 279295677;
    /**
     * Generated from protobuf enum <code>UNSPECIFIED_IPV6_ACCESS_TYPE = 313080613;</code>
     */
    const UNSPECIFIED_IPV6_ACCESS_TYPE = 313080613;

    private static $valueToName = [
        self::UNDEFINED_IPV6_ACCESS_TYPE => 'UNDEFINED_IPV6_ACCESS_TYPE',
        self::EXTERNAL => 'EXTERNAL',
        self::INTERNAL => 'INTERNAL',
        self::UNSPECIFIED_IPV6_ACCESS_TYPE => 'UNSPECIFIED_IPV6_ACCESS_TYPE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


