<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1\InstanceGroupManagerInstanceLifecyclePolicy;

use UnexpectedValueException;

/**
 * A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair. 
 *
 * Protobuf type <code>google.cloud.compute.v1.InstanceGroupManagerInstanceLifecyclePolicy.ForceUpdateOnRepair</code>
 */
class ForceUpdateOnRepair
{
    /**
     * A value indicating that the enum field is not set.
     *
     * Generated from protobuf enum <code>UNDEFINED_FORCE_UPDATE_ON_REPAIR = 0;</code>
     */
    const UNDEFINED_FORCE_UPDATE_ON_REPAIR = 0;
    /**
     * Generated from protobuf enum <code>NO = 2497;</code>
     */
    const NO = 2497;
    /**
     * Generated from protobuf enum <code>YES = 87751;</code>
     */
    const YES = 87751;

    private static $valueToName = [
        self::UNDEFINED_FORCE_UPDATE_ON_REPAIR => 'UNDEFINED_FORCE_UPDATE_ON_REPAIR',
        self::NO => 'NO',
        self::YES => 'YES',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


