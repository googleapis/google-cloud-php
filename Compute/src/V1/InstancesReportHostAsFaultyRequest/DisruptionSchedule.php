<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1\InstancesReportHostAsFaultyRequest;

use UnexpectedValueException;

/**
 * The disruption schedule for the VM. Required field, only allows IMMEDIATE.
 *
 * Protobuf type <code>google.cloud.compute.v1.InstancesReportHostAsFaultyRequest.DisruptionSchedule</code>
 */
class DisruptionSchedule
{
    /**
     * A value indicating that the enum field is not set.
     *
     * Generated from protobuf enum <code>UNDEFINED_DISRUPTION_SCHEDULE = 0;</code>
     */
    const UNDEFINED_DISRUPTION_SCHEDULE = 0;
    /**
     * Not used. Required as per aip/126.
     *
     * Generated from protobuf enum <code>DISRUPTION_SCHEDULE_UNSPECIFIED = 332543835;</code>
     */
    const DISRUPTION_SCHEDULE_UNSPECIFIED = 332543835;
    /**
     * Delay disruption for caller control. Will be default soon.
     *
     * Generated from protobuf enum <code>FUTURE = 474513859;</code>
     */
    const FUTURE = 474513859;
    /**
     * Default value. Disrupt the VM immediately.
     *
     * Generated from protobuf enum <code>IMMEDIATE = 152881041;</code>
     */
    const IMMEDIATE = 152881041;

    private static $valueToName = [
        self::UNDEFINED_DISRUPTION_SCHEDULE => 'UNDEFINED_DISRUPTION_SCHEDULE',
        self::DISRUPTION_SCHEDULE_UNSPECIFIED => 'DISRUPTION_SCHEDULE_UNSPECIFIED',
        self::FUTURE => 'FUTURE',
        self::IMMEDIATE => 'IMMEDIATE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


