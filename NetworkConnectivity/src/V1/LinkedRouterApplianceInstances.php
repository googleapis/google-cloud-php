<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/networkconnectivity/v1/hub.proto

namespace Google\Cloud\NetworkConnectivity\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A collection of router appliance instances. If you have multiple router
 * appliance instances connected to the same site, they should all be attached
 * to the same spoke.
 *
 * Generated from protobuf message <code>google.cloud.networkconnectivity.v1.LinkedRouterApplianceInstances</code>
 */
class LinkedRouterApplianceInstances extends \Google\Protobuf\Internal\Message
{
    /**
     * The list of router appliance instances.
     *
     * Generated from protobuf field <code>repeated .google.cloud.networkconnectivity.v1.RouterApplianceInstance instances = 1;</code>
     */
    private $instances;
    /**
     * A value that controls whether site-to-site data transfer is enabled for
     * these resources. This field is set to false by default, but you must set it
     * to true. Note that data transfer is available only in supported locations.
     *
     * Generated from protobuf field <code>bool site_to_site_data_transfer = 2;</code>
     */
    private $site_to_site_data_transfer = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\NetworkConnectivity\V1\RouterApplianceInstance[]|\Google\Protobuf\Internal\RepeatedField $instances
     *           The list of router appliance instances.
     *     @type bool $site_to_site_data_transfer
     *           A value that controls whether site-to-site data transfer is enabled for
     *           these resources. This field is set to false by default, but you must set it
     *           to true. Note that data transfer is available only in supported locations.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Networkconnectivity\V1\Hub::initOnce();
        parent::__construct($data);
    }

    /**
     * The list of router appliance instances.
     *
     * Generated from protobuf field <code>repeated .google.cloud.networkconnectivity.v1.RouterApplianceInstance instances = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInstances()
    {
        return $this->instances;
    }

    /**
     * The list of router appliance instances.
     *
     * Generated from protobuf field <code>repeated .google.cloud.networkconnectivity.v1.RouterApplianceInstance instances = 1;</code>
     * @param \Google\Cloud\NetworkConnectivity\V1\RouterApplianceInstance[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInstances($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\NetworkConnectivity\V1\RouterApplianceInstance::class);
        $this->instances = $arr;

        return $this;
    }

    /**
     * A value that controls whether site-to-site data transfer is enabled for
     * these resources. This field is set to false by default, but you must set it
     * to true. Note that data transfer is available only in supported locations.
     *
     * Generated from protobuf field <code>bool site_to_site_data_transfer = 2;</code>
     * @return bool
     */
    public function getSiteToSiteDataTransfer()
    {
        return $this->site_to_site_data_transfer;
    }

    /**
     * A value that controls whether site-to-site data transfer is enabled for
     * these resources. This field is set to false by default, but you must set it
     * to true. Note that data transfer is available only in supported locations.
     *
     * Generated from protobuf field <code>bool site_to_site_data_transfer = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setSiteToSiteDataTransfer($var)
    {
        GPBUtil::checkBool($var);
        $this->site_to_site_data_transfer = $var;

        return $this;
    }

}

