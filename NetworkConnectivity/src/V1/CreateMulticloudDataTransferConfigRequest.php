<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/networkconnectivity/v1/data_transfer.proto

namespace Google\Cloud\NetworkConnectivity\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message to create a `MulticloudDataTransferConfig` resource.
 *
 * Generated from protobuf message <code>google.cloud.networkconnectivity.v1.CreateMulticloudDataTransferConfigRequest</code>
 */
class CreateMulticloudDataTransferConfigRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the parent resource.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Required. The ID to use for the `MulticloudDataTransferConfig` resource,
     * which becomes the final component of the `MulticloudDataTransferConfig`
     * resource name.
     *
     * Generated from protobuf field <code>string multicloud_data_transfer_config_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $multicloud_data_transfer_config_id = '';
    /**
     * Required. The `MulticloudDataTransferConfig` resource to create.
     *
     * Generated from protobuf field <code>.google.cloud.networkconnectivity.v1.MulticloudDataTransferConfig multicloud_data_transfer_config = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $multicloud_data_transfer_config = null;
    /**
     * Optional. A request ID to identify requests. Specify a unique request ID
     * so that if you must retry your request, the server can ignore
     * the request if it has already been completed. The server waits
     * for at least 60 minutes since the first request.
     * For example, consider a situation where you make an initial request and
     * the request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, can ignore the second request. This prevents
     * clients from accidentally creating duplicate `MulticloudDataTransferConfig`
     * resources.
     * The request ID must be a valid UUID with the exception that zero UUID
     * (00000000-0000-0000-0000-000000000000) isn't supported.
     *
     * Generated from protobuf field <code>string request_id = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     */
    protected $request_id = '';

    /**
     * @param string                                                            $parent                         Required. The name of the parent resource. Please see
     *                                                                                                          {@see DataTransferServiceClient::locationName()} for help formatting this field.
     * @param \Google\Cloud\NetworkConnectivity\V1\MulticloudDataTransferConfig $multicloudDataTransferConfig   Required. The `MulticloudDataTransferConfig` resource to create.
     * @param string                                                            $multicloudDataTransferConfigId Required. The ID to use for the `MulticloudDataTransferConfig` resource,
     *                                                                                                          which becomes the final component of the `MulticloudDataTransferConfig`
     *                                                                                                          resource name.
     *
     * @return \Google\Cloud\NetworkConnectivity\V1\CreateMulticloudDataTransferConfigRequest
     *
     * @experimental
     */
    public static function build(string $parent, \Google\Cloud\NetworkConnectivity\V1\MulticloudDataTransferConfig $multicloudDataTransferConfig, string $multicloudDataTransferConfigId): self
    {
        return (new self())
            ->setParent($parent)
            ->setMulticloudDataTransferConfig($multicloudDataTransferConfig)
            ->setMulticloudDataTransferConfigId($multicloudDataTransferConfigId);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The name of the parent resource.
     *     @type string $multicloud_data_transfer_config_id
     *           Required. The ID to use for the `MulticloudDataTransferConfig` resource,
     *           which becomes the final component of the `MulticloudDataTransferConfig`
     *           resource name.
     *     @type \Google\Cloud\NetworkConnectivity\V1\MulticloudDataTransferConfig $multicloud_data_transfer_config
     *           Required. The `MulticloudDataTransferConfig` resource to create.
     *     @type string $request_id
     *           Optional. A request ID to identify requests. Specify a unique request ID
     *           so that if you must retry your request, the server can ignore
     *           the request if it has already been completed. The server waits
     *           for at least 60 minutes since the first request.
     *           For example, consider a situation where you make an initial request and
     *           the request times out. If you make the request again with the same request
     *           ID, the server can check if original operation with the same request ID
     *           was received, and if so, can ignore the second request. This prevents
     *           clients from accidentally creating duplicate `MulticloudDataTransferConfig`
     *           resources.
     *           The request ID must be a valid UUID with the exception that zero UUID
     *           (00000000-0000-0000-0000-000000000000) isn't supported.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Networkconnectivity\V1\DataTransfer::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The name of the parent resource.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The name of the parent resource.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Required. The ID to use for the `MulticloudDataTransferConfig` resource,
     * which becomes the final component of the `MulticloudDataTransferConfig`
     * resource name.
     *
     * Generated from protobuf field <code>string multicloud_data_transfer_config_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getMulticloudDataTransferConfigId()
    {
        return $this->multicloud_data_transfer_config_id;
    }

    /**
     * Required. The ID to use for the `MulticloudDataTransferConfig` resource,
     * which becomes the final component of the `MulticloudDataTransferConfig`
     * resource name.
     *
     * Generated from protobuf field <code>string multicloud_data_transfer_config_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setMulticloudDataTransferConfigId($var)
    {
        GPBUtil::checkString($var, True);
        $this->multicloud_data_transfer_config_id = $var;

        return $this;
    }

    /**
     * Required. The `MulticloudDataTransferConfig` resource to create.
     *
     * Generated from protobuf field <code>.google.cloud.networkconnectivity.v1.MulticloudDataTransferConfig multicloud_data_transfer_config = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\NetworkConnectivity\V1\MulticloudDataTransferConfig|null
     */
    public function getMulticloudDataTransferConfig()
    {
        return $this->multicloud_data_transfer_config;
    }

    public function hasMulticloudDataTransferConfig()
    {
        return isset($this->multicloud_data_transfer_config);
    }

    public function clearMulticloudDataTransferConfig()
    {
        unset($this->multicloud_data_transfer_config);
    }

    /**
     * Required. The `MulticloudDataTransferConfig` resource to create.
     *
     * Generated from protobuf field <code>.google.cloud.networkconnectivity.v1.MulticloudDataTransferConfig multicloud_data_transfer_config = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\NetworkConnectivity\V1\MulticloudDataTransferConfig $var
     * @return $this
     */
    public function setMulticloudDataTransferConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\NetworkConnectivity\V1\MulticloudDataTransferConfig::class);
        $this->multicloud_data_transfer_config = $var;

        return $this;
    }

    /**
     * Optional. A request ID to identify requests. Specify a unique request ID
     * so that if you must retry your request, the server can ignore
     * the request if it has already been completed. The server waits
     * for at least 60 minutes since the first request.
     * For example, consider a situation where you make an initial request and
     * the request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, can ignore the second request. This prevents
     * clients from accidentally creating duplicate `MulticloudDataTransferConfig`
     * resources.
     * The request ID must be a valid UUID with the exception that zero UUID
     * (00000000-0000-0000-0000-000000000000) isn't supported.
     *
     * Generated from protobuf field <code>string request_id = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Optional. A request ID to identify requests. Specify a unique request ID
     * so that if you must retry your request, the server can ignore
     * the request if it has already been completed. The server waits
     * for at least 60 minutes since the first request.
     * For example, consider a situation where you make an initial request and
     * the request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, can ignore the second request. This prevents
     * clients from accidentally creating duplicate `MulticloudDataTransferConfig`
     * resources.
     * The request ID must be a valid UUID with the exception that zero UUID
     * (00000000-0000-0000-0000-000000000000) isn't supported.
     *
     * Generated from protobuf field <code>string request_id = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

}

