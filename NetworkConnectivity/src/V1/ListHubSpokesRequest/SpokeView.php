<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/networkconnectivity/v1/hub.proto

namespace Google\Cloud\NetworkConnectivity\V1\ListHubSpokesRequest;

use UnexpectedValueException;

/**
 * Enum that controls which spoke fields are included in the response.
 *
 * Protobuf type <code>google.cloud.networkconnectivity.v1.ListHubSpokesRequest.SpokeView</code>
 */
class SpokeView
{
    /**
     * The spoke view is unspecified. When the spoke view is unspecified, the
     * API returns the same fields as the `BASIC` view.
     *
     * Generated from protobuf enum <code>SPOKE_VIEW_UNSPECIFIED = 0;</code>
     */
    const SPOKE_VIEW_UNSPECIFIED = 0;
    /**
     * Includes `name`, `create_time`, `hub`, `unique_id`, `state`, `reasons`,
     * and `spoke_type`. This is the default value.
     *
     * Generated from protobuf enum <code>BASIC = 1;</code>
     */
    const BASIC = 1;
    /**
     * Includes all spoke fields except `labels`.
     * You can use the `DETAILED` view only when you set the `spoke_locations`
     * field to `[global]`.
     *
     * Generated from protobuf enum <code>DETAILED = 2;</code>
     */
    const DETAILED = 2;

    private static $valueToName = [
        self::SPOKE_VIEW_UNSPECIFIED => 'SPOKE_VIEW_UNSPECIFIED',
        self::BASIC => 'BASIC',
        self::DETAILED => 'DETAILED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


