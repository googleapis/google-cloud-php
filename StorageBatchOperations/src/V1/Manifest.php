<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/storagebatchoperations/v1/storage_batch_operations_types.proto

namespace Google\Cloud\StorageBatchOperations\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describes list of objects to be transformed.
 *
 * Generated from protobuf message <code>google.cloud.storagebatchoperations.v1.Manifest</code>
 */
class Manifest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. `manifest_location` must contain the manifest source file that is
     * a CSV file in a Google Cloud Storage bucket. Each row in the file must
     * include the object details i.e. BucketId and Name. Generation may
     * optionally be specified. When it is not specified the live object is acted
     * upon.
     *  `manifest_location` should either be
     * 1) An absolute path to the object in the format of
     * `gs://bucket_name/path/file_name.csv`.
     * 2) An absolute path with a single wildcard character in the file name, for
     * example `gs://bucket_name/path/file_name*.csv`.
     * If manifest location is specified with a wildcard, objects in all manifest
     * files matching the pattern will be acted upon.
     *
     * Generated from protobuf field <code>string manifest_location = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $manifest_location = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $manifest_location
     *           Required. `manifest_location` must contain the manifest source file that is
     *           a CSV file in a Google Cloud Storage bucket. Each row in the file must
     *           include the object details i.e. BucketId and Name. Generation may
     *           optionally be specified. When it is not specified the live object is acted
     *           upon.
     *            `manifest_location` should either be
     *           1) An absolute path to the object in the format of
     *           `gs://bucket_name/path/file_name.csv`.
     *           2) An absolute path with a single wildcard character in the file name, for
     *           example `gs://bucket_name/path/file_name*.csv`.
     *           If manifest location is specified with a wildcard, objects in all manifest
     *           files matching the pattern will be acted upon.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Storagebatchoperations\V1\StorageBatchOperationsTypes::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. `manifest_location` must contain the manifest source file that is
     * a CSV file in a Google Cloud Storage bucket. Each row in the file must
     * include the object details i.e. BucketId and Name. Generation may
     * optionally be specified. When it is not specified the live object is acted
     * upon.
     *  `manifest_location` should either be
     * 1) An absolute path to the object in the format of
     * `gs://bucket_name/path/file_name.csv`.
     * 2) An absolute path with a single wildcard character in the file name, for
     * example `gs://bucket_name/path/file_name*.csv`.
     * If manifest location is specified with a wildcard, objects in all manifest
     * files matching the pattern will be acted upon.
     *
     * Generated from protobuf field <code>string manifest_location = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getManifestLocation()
    {
        return $this->manifest_location;
    }

    /**
     * Required. `manifest_location` must contain the manifest source file that is
     * a CSV file in a Google Cloud Storage bucket. Each row in the file must
     * include the object details i.e. BucketId and Name. Generation may
     * optionally be specified. When it is not specified the live object is acted
     * upon.
     *  `manifest_location` should either be
     * 1) An absolute path to the object in the format of
     * `gs://bucket_name/path/file_name.csv`.
     * 2) An absolute path with a single wildcard character in the file name, for
     * example `gs://bucket_name/path/file_name*.csv`.
     * If manifest location is specified with a wildcard, objects in all manifest
     * files matching the pattern will be acted upon.
     *
     * Generated from protobuf field <code>string manifest_location = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setManifestLocation($var)
    {
        GPBUtil::checkString($var, True);
        $this->manifest_location = $var;

        return $this;
    }

}

