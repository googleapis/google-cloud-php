<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/storagebatchoperations/v1/storage_batch_operations_types.proto

namespace Google\Cloud\StorageBatchOperations\V1\BucketList;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describes configuration of a single bucket and its objects to be
 * transformed.
 *
 * Generated from protobuf message <code>google.cloud.storagebatchoperations.v1.BucketList.Bucket</code>
 */
class Bucket extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Bucket name for the objects to be transformed.
     *
     * Generated from protobuf field <code>string bucket = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $bucket = '';
    protected $object_configuration;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $bucket
     *           Required. Bucket name for the objects to be transformed.
     *     @type \Google\Cloud\StorageBatchOperations\V1\PrefixList $prefix_list
     *           Specifies objects matching a prefix set.
     *     @type \Google\Cloud\StorageBatchOperations\V1\Manifest $manifest
     *           Specifies objects in a manifest file.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Storagebatchoperations\V1\StorageBatchOperationsTypes::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Bucket name for the objects to be transformed.
     *
     * Generated from protobuf field <code>string bucket = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getBucket()
    {
        return $this->bucket;
    }

    /**
     * Required. Bucket name for the objects to be transformed.
     *
     * Generated from protobuf field <code>string bucket = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setBucket($var)
    {
        GPBUtil::checkString($var, True);
        $this->bucket = $var;

        return $this;
    }

    /**
     * Specifies objects matching a prefix set.
     *
     * Generated from protobuf field <code>.google.cloud.storagebatchoperations.v1.PrefixList prefix_list = 2;</code>
     * @return \Google\Cloud\StorageBatchOperations\V1\PrefixList|null
     */
    public function getPrefixList()
    {
        return $this->readOneof(2);
    }

    public function hasPrefixList()
    {
        return $this->hasOneof(2);
    }

    /**
     * Specifies objects matching a prefix set.
     *
     * Generated from protobuf field <code>.google.cloud.storagebatchoperations.v1.PrefixList prefix_list = 2;</code>
     * @param \Google\Cloud\StorageBatchOperations\V1\PrefixList $var
     * @return $this
     */
    public function setPrefixList($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\StorageBatchOperations\V1\PrefixList::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Specifies objects in a manifest file.
     *
     * Generated from protobuf field <code>.google.cloud.storagebatchoperations.v1.Manifest manifest = 3;</code>
     * @return \Google\Cloud\StorageBatchOperations\V1\Manifest|null
     */
    public function getManifest()
    {
        return $this->readOneof(3);
    }

    public function hasManifest()
    {
        return $this->hasOneof(3);
    }

    /**
     * Specifies objects in a manifest file.
     *
     * Generated from protobuf field <code>.google.cloud.storagebatchoperations.v1.Manifest manifest = 3;</code>
     * @param \Google\Cloud\StorageBatchOperations\V1\Manifest $var
     * @return $this
     */
    public function setManifest($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\StorageBatchOperations\V1\Manifest::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getObjectConfiguration()
    {
        return $this->whichOneof("object_configuration");
    }

}


