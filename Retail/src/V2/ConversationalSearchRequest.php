<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/retail/v2/conversational_search_service.proto

namespace Google\Cloud\Retail\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [ConversationalSearchService.ConversationalSearch][google.cloud.retail.v2.ConversationalSearchService.ConversationalSearch]
 * method.
 *
 * Generated from protobuf message <code>google.cloud.retail.v2.ConversationalSearchRequest</code>
 */
class ConversationalSearchRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The resource name of the search engine placement, such as
     * `projects/&#42;&#47;locations/global/catalogs/default_catalog/placements/default_search`
     * or
     * `projects/&#42;&#47;locations/global/catalogs/default_catalog/servingConfigs/default_serving_config`
     * This field is used to identify the serving config name and the set
     * of models that will be used to make the search.
     *
     * Generated from protobuf field <code>string placement = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $placement = '';
    /**
     * Required. The branch resource name, such as
     * `projects/&#42;&#47;locations/global/catalogs/default_catalog/branches/0`.
     * Use "default_branch" as the branch ID or leave this field empty, to search
     * products under the default branch.
     *
     * Generated from protobuf field <code>string branch = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $branch = '';
    /**
     * Optional. Raw search query to be searched for.
     * If this field is empty, the request is considered a category browsing
     * request.
     *
     * Generated from protobuf field <code>string query = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $query = '';
    /**
     * Optional. The categories associated with a category page. Must be set for
     * category navigation queries to achieve good search quality. The format
     * should be the same as
     * [UserEvent.page_categories][google.cloud.retail.v2.UserEvent.page_categories];
     * To represent full path of category, use '>' sign to separate different
     * hierarchies. If '>' is part of the category name, replace it with
     * other character(s).
     * Category pages include special pages such as sales or promotions. For
     * instance, a special sale page may have the category hierarchy:
     * "pageCategories" : ["Sales > 2017 Black Friday Deals"].
     *
     * Generated from protobuf field <code>repeated string page_categories = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $page_categories;
    /**
     * Optional. This field specifies the conversation id, which maintains the
     * state of the conversation between client side and server side. Use the
     * value from the previous
     * [ConversationalSearchResponse.conversation_id][google.cloud.retail.v2.ConversationalSearchResponse.conversation_id].
     * For the initial request, this should be empty.
     *
     * Generated from protobuf field <code>string conversation_id = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $conversation_id = '';
    /**
     * Optional. Search parameters.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.ConversationalSearchRequest.SearchParams search_params = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $search_params = null;
    /**
     * Required. A unique identifier for tracking visitors. For example, this
     * could be implemented with an HTTP cookie, which should be able to uniquely
     * identify a visitor on a single device. This unique identifier should not
     * change if the visitor logs in or out of the website.
     * This should be the same identifier as
     * [UserEvent.visitor_id][google.cloud.retail.v2.UserEvent.visitor_id].
     * The field must be a UTF-8 encoded string with a length limit of 128
     * characters. Otherwise, an INVALID_ARGUMENT error is returned.
     *
     * Generated from protobuf field <code>string visitor_id = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $visitor_id = '';
    /**
     * Optional. User information.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.UserInfo user_info = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $user_info = null;
    /**
     * Optional. This field specifies all conversational filtering related
     * parameters.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.ConversationalSearchRequest.ConversationalFilteringSpec conversational_filtering_spec = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $conversational_filtering_spec = null;
    /**
     * Optional. The user labels applied to a resource must meet the following
     * requirements:
     * * Each resource can have multiple labels, up to a maximum of 64.
     * * Each label must be a key-value pair.
     * * Keys have a minimum length of 1 character and a maximum length of 63
     *   characters and cannot be empty. Values can be empty and have a maximum
     *   length of 63 characters.
     * * Keys and values can contain only lowercase letters, numeric characters,
     *   underscores, and dashes. All characters must use UTF-8 encoding, and
     *   international characters are allowed.
     * * The key portion of a label must be unique. However, you can use the same
     *   key with multiple resources.
     * * Keys must start with a lowercase letter or international character.
     * See [Google Cloud
     * Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
     * for more details.
     *
     * Generated from protobuf field <code>map<string, string> user_labels = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $user_labels;
    /**
     * Optional. The safety settings to be applied to the generated content.
     *
     * Generated from protobuf field <code>repeated .google.cloud.retail.v2.SafetySetting safety_settings = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $safety_settings;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $placement
     *           Required. The resource name of the search engine placement, such as
     *           `projects/&#42;&#47;locations/global/catalogs/default_catalog/placements/default_search`
     *           or
     *           `projects/&#42;&#47;locations/global/catalogs/default_catalog/servingConfigs/default_serving_config`
     *           This field is used to identify the serving config name and the set
     *           of models that will be used to make the search.
     *     @type string $branch
     *           Required. The branch resource name, such as
     *           `projects/&#42;&#47;locations/global/catalogs/default_catalog/branches/0`.
     *           Use "default_branch" as the branch ID or leave this field empty, to search
     *           products under the default branch.
     *     @type string $query
     *           Optional. Raw search query to be searched for.
     *           If this field is empty, the request is considered a category browsing
     *           request.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $page_categories
     *           Optional. The categories associated with a category page. Must be set for
     *           category navigation queries to achieve good search quality. The format
     *           should be the same as
     *           [UserEvent.page_categories][google.cloud.retail.v2.UserEvent.page_categories];
     *           To represent full path of category, use '>' sign to separate different
     *           hierarchies. If '>' is part of the category name, replace it with
     *           other character(s).
     *           Category pages include special pages such as sales or promotions. For
     *           instance, a special sale page may have the category hierarchy:
     *           "pageCategories" : ["Sales > 2017 Black Friday Deals"].
     *     @type string $conversation_id
     *           Optional. This field specifies the conversation id, which maintains the
     *           state of the conversation between client side and server side. Use the
     *           value from the previous
     *           [ConversationalSearchResponse.conversation_id][google.cloud.retail.v2.ConversationalSearchResponse.conversation_id].
     *           For the initial request, this should be empty.
     *     @type \Google\Cloud\Retail\V2\ConversationalSearchRequest\SearchParams $search_params
     *           Optional. Search parameters.
     *     @type string $visitor_id
     *           Required. A unique identifier for tracking visitors. For example, this
     *           could be implemented with an HTTP cookie, which should be able to uniquely
     *           identify a visitor on a single device. This unique identifier should not
     *           change if the visitor logs in or out of the website.
     *           This should be the same identifier as
     *           [UserEvent.visitor_id][google.cloud.retail.v2.UserEvent.visitor_id].
     *           The field must be a UTF-8 encoded string with a length limit of 128
     *           characters. Otherwise, an INVALID_ARGUMENT error is returned.
     *     @type \Google\Cloud\Retail\V2\UserInfo $user_info
     *           Optional. User information.
     *     @type \Google\Cloud\Retail\V2\ConversationalSearchRequest\ConversationalFilteringSpec $conversational_filtering_spec
     *           Optional. This field specifies all conversational filtering related
     *           parameters.
     *     @type array|\Google\Protobuf\Internal\MapField $user_labels
     *           Optional. The user labels applied to a resource must meet the following
     *           requirements:
     *           * Each resource can have multiple labels, up to a maximum of 64.
     *           * Each label must be a key-value pair.
     *           * Keys have a minimum length of 1 character and a maximum length of 63
     *             characters and cannot be empty. Values can be empty and have a maximum
     *             length of 63 characters.
     *           * Keys and values can contain only lowercase letters, numeric characters,
     *             underscores, and dashes. All characters must use UTF-8 encoding, and
     *             international characters are allowed.
     *           * The key portion of a label must be unique. However, you can use the same
     *             key with multiple resources.
     *           * Keys must start with a lowercase letter or international character.
     *           See [Google Cloud
     *           Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
     *           for more details.
     *     @type array<\Google\Cloud\Retail\V2\SafetySetting>|\Google\Protobuf\Internal\RepeatedField $safety_settings
     *           Optional. The safety settings to be applied to the generated content.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Retail\V2\ConversationalSearchService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The resource name of the search engine placement, such as
     * `projects/&#42;&#47;locations/global/catalogs/default_catalog/placements/default_search`
     * or
     * `projects/&#42;&#47;locations/global/catalogs/default_catalog/servingConfigs/default_serving_config`
     * This field is used to identify the serving config name and the set
     * of models that will be used to make the search.
     *
     * Generated from protobuf field <code>string placement = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getPlacement()
    {
        return $this->placement;
    }

    /**
     * Required. The resource name of the search engine placement, such as
     * `projects/&#42;&#47;locations/global/catalogs/default_catalog/placements/default_search`
     * or
     * `projects/&#42;&#47;locations/global/catalogs/default_catalog/servingConfigs/default_serving_config`
     * This field is used to identify the serving config name and the set
     * of models that will be used to make the search.
     *
     * Generated from protobuf field <code>string placement = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setPlacement($var)
    {
        GPBUtil::checkString($var, True);
        $this->placement = $var;

        return $this;
    }

    /**
     * Required. The branch resource name, such as
     * `projects/&#42;&#47;locations/global/catalogs/default_catalog/branches/0`.
     * Use "default_branch" as the branch ID or leave this field empty, to search
     * products under the default branch.
     *
     * Generated from protobuf field <code>string branch = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getBranch()
    {
        return $this->branch;
    }

    /**
     * Required. The branch resource name, such as
     * `projects/&#42;&#47;locations/global/catalogs/default_catalog/branches/0`.
     * Use "default_branch" as the branch ID or leave this field empty, to search
     * products under the default branch.
     *
     * Generated from protobuf field <code>string branch = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setBranch($var)
    {
        GPBUtil::checkString($var, True);
        $this->branch = $var;

        return $this;
    }

    /**
     * Optional. Raw search query to be searched for.
     * If this field is empty, the request is considered a category browsing
     * request.
     *
     * Generated from protobuf field <code>string query = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getQuery()
    {
        return $this->query;
    }

    /**
     * Optional. Raw search query to be searched for.
     * If this field is empty, the request is considered a category browsing
     * request.
     *
     * Generated from protobuf field <code>string query = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setQuery($var)
    {
        GPBUtil::checkString($var, True);
        $this->query = $var;

        return $this;
    }

    /**
     * Optional. The categories associated with a category page. Must be set for
     * category navigation queries to achieve good search quality. The format
     * should be the same as
     * [UserEvent.page_categories][google.cloud.retail.v2.UserEvent.page_categories];
     * To represent full path of category, use '>' sign to separate different
     * hierarchies. If '>' is part of the category name, replace it with
     * other character(s).
     * Category pages include special pages such as sales or promotions. For
     * instance, a special sale page may have the category hierarchy:
     * "pageCategories" : ["Sales > 2017 Black Friday Deals"].
     *
     * Generated from protobuf field <code>repeated string page_categories = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPageCategories()
    {
        return $this->page_categories;
    }

    /**
     * Optional. The categories associated with a category page. Must be set for
     * category navigation queries to achieve good search quality. The format
     * should be the same as
     * [UserEvent.page_categories][google.cloud.retail.v2.UserEvent.page_categories];
     * To represent full path of category, use '>' sign to separate different
     * hierarchies. If '>' is part of the category name, replace it with
     * other character(s).
     * Category pages include special pages such as sales or promotions. For
     * instance, a special sale page may have the category hierarchy:
     * "pageCategories" : ["Sales > 2017 Black Friday Deals"].
     *
     * Generated from protobuf field <code>repeated string page_categories = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPageCategories($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->page_categories = $arr;

        return $this;
    }

    /**
     * Optional. This field specifies the conversation id, which maintains the
     * state of the conversation between client side and server side. Use the
     * value from the previous
     * [ConversationalSearchResponse.conversation_id][google.cloud.retail.v2.ConversationalSearchResponse.conversation_id].
     * For the initial request, this should be empty.
     *
     * Generated from protobuf field <code>string conversation_id = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getConversationId()
    {
        return $this->conversation_id;
    }

    /**
     * Optional. This field specifies the conversation id, which maintains the
     * state of the conversation between client side and server side. Use the
     * value from the previous
     * [ConversationalSearchResponse.conversation_id][google.cloud.retail.v2.ConversationalSearchResponse.conversation_id].
     * For the initial request, this should be empty.
     *
     * Generated from protobuf field <code>string conversation_id = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setConversationId($var)
    {
        GPBUtil::checkString($var, True);
        $this->conversation_id = $var;

        return $this;
    }

    /**
     * Optional. Search parameters.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.ConversationalSearchRequest.SearchParams search_params = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\Retail\V2\ConversationalSearchRequest\SearchParams|null
     */
    public function getSearchParams()
    {
        return $this->search_params;
    }

    public function hasSearchParams()
    {
        return isset($this->search_params);
    }

    public function clearSearchParams()
    {
        unset($this->search_params);
    }

    /**
     * Optional. Search parameters.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.ConversationalSearchRequest.SearchParams search_params = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\Retail\V2\ConversationalSearchRequest\SearchParams $var
     * @return $this
     */
    public function setSearchParams($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Retail\V2\ConversationalSearchRequest\SearchParams::class);
        $this->search_params = $var;

        return $this;
    }

    /**
     * Required. A unique identifier for tracking visitors. For example, this
     * could be implemented with an HTTP cookie, which should be able to uniquely
     * identify a visitor on a single device. This unique identifier should not
     * change if the visitor logs in or out of the website.
     * This should be the same identifier as
     * [UserEvent.visitor_id][google.cloud.retail.v2.UserEvent.visitor_id].
     * The field must be a UTF-8 encoded string with a length limit of 128
     * characters. Otherwise, an INVALID_ARGUMENT error is returned.
     *
     * Generated from protobuf field <code>string visitor_id = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getVisitorId()
    {
        return $this->visitor_id;
    }

    /**
     * Required. A unique identifier for tracking visitors. For example, this
     * could be implemented with an HTTP cookie, which should be able to uniquely
     * identify a visitor on a single device. This unique identifier should not
     * change if the visitor logs in or out of the website.
     * This should be the same identifier as
     * [UserEvent.visitor_id][google.cloud.retail.v2.UserEvent.visitor_id].
     * The field must be a UTF-8 encoded string with a length limit of 128
     * characters. Otherwise, an INVALID_ARGUMENT error is returned.
     *
     * Generated from protobuf field <code>string visitor_id = 9 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setVisitorId($var)
    {
        GPBUtil::checkString($var, True);
        $this->visitor_id = $var;

        return $this;
    }

    /**
     * Optional. User information.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.UserInfo user_info = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\Retail\V2\UserInfo|null
     */
    public function getUserInfo()
    {
        return $this->user_info;
    }

    public function hasUserInfo()
    {
        return isset($this->user_info);
    }

    public function clearUserInfo()
    {
        unset($this->user_info);
    }

    /**
     * Optional. User information.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.UserInfo user_info = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\Retail\V2\UserInfo $var
     * @return $this
     */
    public function setUserInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Retail\V2\UserInfo::class);
        $this->user_info = $var;

        return $this;
    }

    /**
     * Optional. This field specifies all conversational filtering related
     * parameters.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.ConversationalSearchRequest.ConversationalFilteringSpec conversational_filtering_spec = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\Retail\V2\ConversationalSearchRequest\ConversationalFilteringSpec|null
     */
    public function getConversationalFilteringSpec()
    {
        return $this->conversational_filtering_spec;
    }

    public function hasConversationalFilteringSpec()
    {
        return isset($this->conversational_filtering_spec);
    }

    public function clearConversationalFilteringSpec()
    {
        unset($this->conversational_filtering_spec);
    }

    /**
     * Optional. This field specifies all conversational filtering related
     * parameters.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.ConversationalSearchRequest.ConversationalFilteringSpec conversational_filtering_spec = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\Retail\V2\ConversationalSearchRequest\ConversationalFilteringSpec $var
     * @return $this
     */
    public function setConversationalFilteringSpec($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Retail\V2\ConversationalSearchRequest\ConversationalFilteringSpec::class);
        $this->conversational_filtering_spec = $var;

        return $this;
    }

    /**
     * Optional. The user labels applied to a resource must meet the following
     * requirements:
     * * Each resource can have multiple labels, up to a maximum of 64.
     * * Each label must be a key-value pair.
     * * Keys have a minimum length of 1 character and a maximum length of 63
     *   characters and cannot be empty. Values can be empty and have a maximum
     *   length of 63 characters.
     * * Keys and values can contain only lowercase letters, numeric characters,
     *   underscores, and dashes. All characters must use UTF-8 encoding, and
     *   international characters are allowed.
     * * The key portion of a label must be unique. However, you can use the same
     *   key with multiple resources.
     * * Keys must start with a lowercase letter or international character.
     * See [Google Cloud
     * Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
     * for more details.
     *
     * Generated from protobuf field <code>map<string, string> user_labels = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getUserLabels()
    {
        return $this->user_labels;
    }

    /**
     * Optional. The user labels applied to a resource must meet the following
     * requirements:
     * * Each resource can have multiple labels, up to a maximum of 64.
     * * Each label must be a key-value pair.
     * * Keys have a minimum length of 1 character and a maximum length of 63
     *   characters and cannot be empty. Values can be empty and have a maximum
     *   length of 63 characters.
     * * Keys and values can contain only lowercase letters, numeric characters,
     *   underscores, and dashes. All characters must use UTF-8 encoding, and
     *   international characters are allowed.
     * * The key portion of a label must be unique. However, you can use the same
     *   key with multiple resources.
     * * Keys must start with a lowercase letter or international character.
     * See [Google Cloud
     * Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
     * for more details.
     *
     * Generated from protobuf field <code>map<string, string> user_labels = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setUserLabels($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->user_labels = $arr;

        return $this;
    }

    /**
     * Optional. The safety settings to be applied to the generated content.
     *
     * Generated from protobuf field <code>repeated .google.cloud.retail.v2.SafetySetting safety_settings = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSafetySettings()
    {
        return $this->safety_settings;
    }

    /**
     * Optional. The safety settings to be applied to the generated content.
     *
     * Generated from protobuf field <code>repeated .google.cloud.retail.v2.SafetySetting safety_settings = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Cloud\Retail\V2\SafetySetting>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSafetySettings($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Retail\V2\SafetySetting::class);
        $this->safety_settings = $arr;

        return $this;
    }

}

