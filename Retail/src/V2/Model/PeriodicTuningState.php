<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/retail/v2/model.proto

namespace Google\Cloud\Retail\V2\Model;

use UnexpectedValueException;

/**
 * Describes whether periodic tuning is enabled for this model
 * or not. Periodic tuning is scheduled at most every three months. You can
 * start a tuning process manually by using the `TuneModel`
 * method, which starts a tuning process immediately and resets the quarterly
 * schedule. Enabling or disabling periodic tuning does not affect any
 * current tuning processes.
 *
 * Protobuf type <code>google.cloud.retail.v2.Model.PeriodicTuningState</code>
 */
class PeriodicTuningState
{
    /**
     * Unspecified default value, should never be explicitly set.
     *
     * Generated from protobuf enum <code>PERIODIC_TUNING_STATE_UNSPECIFIED = 0;</code>
     */
    const PERIODIC_TUNING_STATE_UNSPECIFIED = 0;
    /**
     * The model has periodic tuning disabled. Tuning
     * can be reenabled by calling the `EnableModelPeriodicTuning`
     * method or by calling the `TuneModel` method.
     *
     * Generated from protobuf enum <code>PERIODIC_TUNING_DISABLED = 1;</code>
     */
    const PERIODIC_TUNING_DISABLED = 1;
    /**
     * The model cannot be tuned with periodic tuning OR the
     * `TuneModel` method. Hide the options in customer UI and
     * reject any requests through the backend self serve API.
     *
     * Generated from protobuf enum <code>ALL_TUNING_DISABLED = 3;</code>
     */
    const ALL_TUNING_DISABLED = 3;
    /**
     * The model has periodic tuning enabled. Tuning
     * can be disabled by calling the `DisableModelPeriodicTuning`
     * method.
     *
     * Generated from protobuf enum <code>PERIODIC_TUNING_ENABLED = 2;</code>
     */
    const PERIODIC_TUNING_ENABLED = 2;

    private static $valueToName = [
        self::PERIODIC_TUNING_STATE_UNSPECIFIED => 'PERIODIC_TUNING_STATE_UNSPECIFIED',
        self::PERIODIC_TUNING_DISABLED => 'PERIODIC_TUNING_DISABLED',
        self::ALL_TUNING_DISABLED => 'ALL_TUNING_DISABLED',
        self::PERIODIC_TUNING_ENABLED => 'PERIODIC_TUNING_ENABLED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


