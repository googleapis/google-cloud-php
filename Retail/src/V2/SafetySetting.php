<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/retail/v2/safety.proto

namespace Google\Cloud\Retail\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Safety settings.
 *
 * Generated from protobuf message <code>google.cloud.retail.v2.SafetySetting</code>
 */
class SafetySetting extends \Google\Protobuf\Internal\Message
{
    /**
     * Harm category.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.HarmCategory category = 1;</code>
     */
    protected $category = 0;
    /**
     * The harm block threshold.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.SafetySetting.HarmBlockThreshold threshold = 2;</code>
     */
    protected $threshold = 0;
    /**
     * Optional. Specify if the threshold is used for probability or severity
     * score. If not specified, the threshold is used for probability score.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.SafetySetting.HarmBlockMethod method = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $method = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $category
     *           Harm category.
     *     @type int $threshold
     *           The harm block threshold.
     *     @type int $method
     *           Optional. Specify if the threshold is used for probability or severity
     *           score. If not specified, the threshold is used for probability score.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Retail\V2\Safety::initOnce();
        parent::__construct($data);
    }

    /**
     * Harm category.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.HarmCategory category = 1;</code>
     * @return int
     */
    public function getCategory()
    {
        return $this->category;
    }

    /**
     * Harm category.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.HarmCategory category = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setCategory($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Retail\V2\HarmCategory::class);
        $this->category = $var;

        return $this;
    }

    /**
     * The harm block threshold.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.SafetySetting.HarmBlockThreshold threshold = 2;</code>
     * @return int
     */
    public function getThreshold()
    {
        return $this->threshold;
    }

    /**
     * The harm block threshold.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.SafetySetting.HarmBlockThreshold threshold = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setThreshold($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Retail\V2\SafetySetting\HarmBlockThreshold::class);
        $this->threshold = $var;

        return $this;
    }

    /**
     * Optional. Specify if the threshold is used for probability or severity
     * score. If not specified, the threshold is used for probability score.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.SafetySetting.HarmBlockMethod method = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getMethod()
    {
        return $this->method;
    }

    /**
     * Optional. Specify if the threshold is used for probability or severity
     * score. If not specified, the threshold is used for probability score.
     *
     * Generated from protobuf field <code>.google.cloud.retail.v2.SafetySetting.HarmBlockMethod method = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setMethod($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Retail\V2\SafetySetting\HarmBlockMethod::class);
        $this->method = $var;

        return $this;
    }

}

