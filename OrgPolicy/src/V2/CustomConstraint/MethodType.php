<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/orgpolicy/v2/constraint.proto

namespace Google\Cloud\OrgPolicy\V2\CustomConstraint;

use UnexpectedValueException;

/**
 * The operation for which this constraint will be applied. To apply this
 * constraint only when creating new VMs, the `method_types` should be
 * `CREATE` only. To apply this constraint when creating or deleting
 * VMs, the `method_types` should be `CREATE` and `DELETE`.
 * `UPDATE` only custom constraints are not supported. Use `CREATE` or
 * `CREATE, UPDATE`.
 *
 * Protobuf type <code>google.cloud.orgpolicy.v2.CustomConstraint.MethodType</code>
 */
class MethodType
{
    /**
     * Unspecified. Results in an error.
     *
     * Generated from protobuf enum <code>METHOD_TYPE_UNSPECIFIED = 0;</code>
     */
    const METHOD_TYPE_UNSPECIFIED = 0;
    /**
     * Constraint applied when creating the resource.
     *
     * Generated from protobuf enum <code>CREATE = 1;</code>
     */
    const CREATE = 1;
    /**
     * Constraint applied when updating the resource.
     *
     * Generated from protobuf enum <code>UPDATE = 2;</code>
     */
    const UPDATE = 2;
    /**
     * Constraint applied when deleting the resource.
     * Not supported yet.
     *
     * Generated from protobuf enum <code>DELETE = 3;</code>
     */
    const DELETE = 3;

    private static $valueToName = [
        self::METHOD_TYPE_UNSPECIFIED => 'METHOD_TYPE_UNSPECIFIED',
        self::CREATE => 'CREATE',
        self::UPDATE => 'UPDATE',
        self::DELETE => 'DELETE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(MethodType::class, \Google\Cloud\OrgPolicy\V2\CustomConstraint_MethodType::class);

