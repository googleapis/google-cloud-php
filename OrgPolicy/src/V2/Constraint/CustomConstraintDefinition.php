<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/orgpolicy/v2/constraint.proto

namespace Google\Cloud\OrgPolicy\V2\Constraint;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Custom constraint definition. Defines this as a managed constraint.
 *
 * Generated from protobuf message <code>google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition</code>
 */
class CustomConstraintDefinition extends \Google\Protobuf\Internal\Message
{
    /**
     * The resource instance type on which this policy applies. Format will be
     * of the form : `<service name>/<type>` Example:
     *  * `compute.googleapis.com/Instance`.
     *
     * Generated from protobuf field <code>repeated string resource_types = 1;</code>
     */
    private $resource_types;
    /**
     * All the operations being applied for this constraint.
     *
     * Generated from protobuf field <code>repeated .google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.MethodType method_types = 2;</code>
     */
    private $method_types;
    /**
     * Org policy condition/expression. For example:
     * `resource.instanceName.matches("[production|test]_.*_(\d)+")` or,
     * `resource.management.auto_upgrade == true`
     * The max length of the condition is 1000 characters.
     *
     * Generated from protobuf field <code>string condition = 3;</code>
     */
    protected $condition = '';
    /**
     * Allow or deny type.
     *
     * Generated from protobuf field <code>.google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.ActionType action_type = 4;</code>
     */
    protected $action_type = 0;
    /**
     * Stores the structure of
     * [`Parameters`][google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.Parameter]
     * used by the constraint condition. The key of `map` represents the name of
     * the parameter.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.Parameter> parameters = 5;</code>
     */
    private $parameters;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $resource_types
     *           The resource instance type on which this policy applies. Format will be
     *           of the form : `<service name>/<type>` Example:
     *            * `compute.googleapis.com/Instance`.
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $method_types
     *           All the operations being applied for this constraint.
     *     @type string $condition
     *           Org policy condition/expression. For example:
     *           `resource.instanceName.matches("[production|test]_.*_(\d)+")` or,
     *           `resource.management.auto_upgrade == true`
     *           The max length of the condition is 1000 characters.
     *     @type int $action_type
     *           Allow or deny type.
     *     @type array|\Google\Protobuf\Internal\MapField $parameters
     *           Stores the structure of
     *           [`Parameters`][google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.Parameter]
     *           used by the constraint condition. The key of `map` represents the name of
     *           the parameter.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Orgpolicy\V2\Constraint::initOnce();
        parent::__construct($data);
    }

    /**
     * The resource instance type on which this policy applies. Format will be
     * of the form : `<service name>/<type>` Example:
     *  * `compute.googleapis.com/Instance`.
     *
     * Generated from protobuf field <code>repeated string resource_types = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getResourceTypes()
    {
        return $this->resource_types;
    }

    /**
     * The resource instance type on which this policy applies. Format will be
     * of the form : `<service name>/<type>` Example:
     *  * `compute.googleapis.com/Instance`.
     *
     * Generated from protobuf field <code>repeated string resource_types = 1;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setResourceTypes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->resource_types = $arr;

        return $this;
    }

    /**
     * All the operations being applied for this constraint.
     *
     * Generated from protobuf field <code>repeated .google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.MethodType method_types = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMethodTypes()
    {
        return $this->method_types;
    }

    /**
     * All the operations being applied for this constraint.
     *
     * Generated from protobuf field <code>repeated .google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.MethodType method_types = 2;</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMethodTypes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Google\Cloud\OrgPolicy\V2\Constraint\CustomConstraintDefinition\MethodType::class);
        $this->method_types = $arr;

        return $this;
    }

    /**
     * Org policy condition/expression. For example:
     * `resource.instanceName.matches("[production|test]_.*_(\d)+")` or,
     * `resource.management.auto_upgrade == true`
     * The max length of the condition is 1000 characters.
     *
     * Generated from protobuf field <code>string condition = 3;</code>
     * @return string
     */
    public function getCondition()
    {
        return $this->condition;
    }

    /**
     * Org policy condition/expression. For example:
     * `resource.instanceName.matches("[production|test]_.*_(\d)+")` or,
     * `resource.management.auto_upgrade == true`
     * The max length of the condition is 1000 characters.
     *
     * Generated from protobuf field <code>string condition = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setCondition($var)
    {
        GPBUtil::checkString($var, True);
        $this->condition = $var;

        return $this;
    }

    /**
     * Allow or deny type.
     *
     * Generated from protobuf field <code>.google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.ActionType action_type = 4;</code>
     * @return int
     */
    public function getActionType()
    {
        return $this->action_type;
    }

    /**
     * Allow or deny type.
     *
     * Generated from protobuf field <code>.google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.ActionType action_type = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setActionType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\OrgPolicy\V2\Constraint\CustomConstraintDefinition\ActionType::class);
        $this->action_type = $var;

        return $this;
    }

    /**
     * Stores the structure of
     * [`Parameters`][google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.Parameter]
     * used by the constraint condition. The key of `map` represents the name of
     * the parameter.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.Parameter> parameters = 5;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getParameters()
    {
        return $this->parameters;
    }

    /**
     * Stores the structure of
     * [`Parameters`][google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.Parameter]
     * used by the constraint condition. The key of `map` represents the name of
     * the parameter.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.orgpolicy.v2.Constraint.CustomConstraintDefinition.Parameter> parameters = 5;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setParameters($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\OrgPolicy\V2\Constraint\CustomConstraintDefinition\Parameter::class);
        $this->parameters = $arr;

        return $this;
    }

}


