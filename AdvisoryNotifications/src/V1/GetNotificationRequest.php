<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/advisorynotifications/v1/service.proto

namespace Google\Cloud\AdvisoryNotifications\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for fetching a notification.
 *
 * Generated from protobuf message <code>google.cloud.advisorynotifications.v1.GetNotificationRequest</code>
 */
class GetNotificationRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. A name of the notification to retrieve.
     * Format:
     * organizations/{organization}/locations/{location}/notifications/{notification}.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $name = '';
    /**
     * ISO code for requested localization language. If unset, will be
     * interpereted as "en". If the requested language is valid, but not supported
     * for this notification, English will be returned with an "Not applicable"
     * LocalizationState. If the ISO code is invalid (i.e. not a real language),
     * this RPC will throw an error.
     *
     * Generated from protobuf field <code>string language_code = 5;</code>
     */
    protected $language_code = '';

    /**
     * @param string $name Required. A name of the notification to retrieve.
     *                     Format:
     *                     organizations/{organization}/locations/{location}/notifications/{notification}. Please see
     *                     {@see AdvisoryNotificationsServiceClient::notificationName()} for help formatting this field.
     *
     * @return \Google\Cloud\AdvisoryNotifications\V1\GetNotificationRequest
     *
     * @experimental
     */
    public static function build(string $name): self
    {
        return (new self())
            ->setName($name);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. A name of the notification to retrieve.
     *           Format:
     *           organizations/{organization}/locations/{location}/notifications/{notification}.
     *     @type string $language_code
     *           ISO code for requested localization language. If unset, will be
     *           interpereted as "en". If the requested language is valid, but not supported
     *           for this notification, English will be returned with an "Not applicable"
     *           LocalizationState. If the ISO code is invalid (i.e. not a real language),
     *           this RPC will throw an error.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Advisorynotifications\V1\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. A name of the notification to retrieve.
     * Format:
     * organizations/{organization}/locations/{location}/notifications/{notification}.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. A name of the notification to retrieve.
     * Format:
     * organizations/{organization}/locations/{location}/notifications/{notification}.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * ISO code for requested localization language. If unset, will be
     * interpereted as "en". If the requested language is valid, but not supported
     * for this notification, English will be returned with an "Not applicable"
     * LocalizationState. If the ISO code is invalid (i.e. not a real language),
     * this RPC will throw an error.
     *
     * Generated from protobuf field <code>string language_code = 5;</code>
     * @return string
     */
    public function getLanguageCode()
    {
        return $this->language_code;
    }

    /**
     * ISO code for requested localization language. If unset, will be
     * interpereted as "en". If the requested language is valid, but not supported
     * for this notification, English will be returned with an "Not applicable"
     * LocalizationState. If the ISO code is invalid (i.e. not a real language),
     * this RPC will throw an error.
     *
     * Generated from protobuf field <code>string language_code = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setLanguageCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->language_code = $var;

        return $this;
    }

}

