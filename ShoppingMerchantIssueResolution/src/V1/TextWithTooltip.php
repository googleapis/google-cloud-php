<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/issueresolution/v1/issueresolution.proto

namespace Google\Shopping\Merchant\IssueResolution\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Block of text that may contain a tooltip with more information.
 *
 * Generated from protobuf message <code>google.shopping.merchant.issueresolution.v1.TextWithTooltip</code>
 */
class TextWithTooltip extends \Google\Protobuf\Internal\Message
{
    /**
     * The suggested type of an icon for tooltip, if a tooltip is present.
     *
     * Generated from protobuf field <code>.google.shopping.merchant.issueresolution.v1.TextWithTooltip.TooltipIconStyle tooltip_icon_style = 3;</code>
     */
    protected $tooltip_icon_style = 0;
    protected $value;
    protected $tooltip_value;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $simple_value
     *           Value of the message as a simple text.
     *     @type string $simple_tooltip_value
     *           Value of the tooltip as a simple text.
     *     @type int $tooltip_icon_style
     *           The suggested type of an icon for tooltip, if a tooltip is present.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Merchant\Issueresolution\V1\Issueresolution::initOnce();
        parent::__construct($data);
    }

    /**
     * Value of the message as a simple text.
     *
     * Generated from protobuf field <code>string simple_value = 1;</code>
     * @return string
     */
    public function getSimpleValue()
    {
        return $this->readOneof(1);
    }

    public function hasSimpleValue()
    {
        return $this->hasOneof(1);
    }

    /**
     * Value of the message as a simple text.
     *
     * Generated from protobuf field <code>string simple_value = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSimpleValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Value of the tooltip as a simple text.
     *
     * Generated from protobuf field <code>string simple_tooltip_value = 2;</code>
     * @return string
     */
    public function getSimpleTooltipValue()
    {
        return $this->readOneof(2);
    }

    public function hasSimpleTooltipValue()
    {
        return $this->hasOneof(2);
    }

    /**
     * Value of the tooltip as a simple text.
     *
     * Generated from protobuf field <code>string simple_tooltip_value = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSimpleTooltipValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * The suggested type of an icon for tooltip, if a tooltip is present.
     *
     * Generated from protobuf field <code>.google.shopping.merchant.issueresolution.v1.TextWithTooltip.TooltipIconStyle tooltip_icon_style = 3;</code>
     * @return int
     */
    public function getTooltipIconStyle()
    {
        return $this->tooltip_icon_style;
    }

    /**
     * The suggested type of an icon for tooltip, if a tooltip is present.
     *
     * Generated from protobuf field <code>.google.shopping.merchant.issueresolution.v1.TextWithTooltip.TooltipIconStyle tooltip_icon_style = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setTooltipIconStyle($var)
    {
        GPBUtil::checkEnum($var, \Google\Shopping\Merchant\IssueResolution\V1\TextWithTooltip\TooltipIconStyle::class);
        $this->tooltip_icon_style = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getValue()
    {
        return $this->whichOneof("value");
    }

    /**
     * @return string
     */
    public function getTooltipValue()
    {
        return $this->whichOneof("tooltip_value");
    }

}

