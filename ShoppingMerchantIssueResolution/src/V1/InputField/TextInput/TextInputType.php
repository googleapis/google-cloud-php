<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/issueresolution/v1/issueresolution.proto

namespace Google\Shopping\Merchant\IssueResolution\V1\InputField\TextInput;

use UnexpectedValueException;

/**
 * Enum specifying the type of the text input and how it should be rendered.
 *
 * Protobuf type <code>google.shopping.merchant.issueresolution.v1.InputField.TextInput.TextInputType</code>
 */
class TextInputType
{
    /**
     * Default value. Will never be provided by the API.
     *
     * Generated from protobuf enum <code>TEXT_INPUT_TYPE_UNSPECIFIED = 0;</code>
     */
    const TEXT_INPUT_TYPE_UNSPECIFIED = 0;
    /**
     * Used when a short text is expected. The field can be rendered as a
     * [text
     * field](https://www.w3.org/TR/2012/WD-html-markup-20121025/input.text.html#input.text).
     *
     * Generated from protobuf enum <code>GENERIC_SHORT_TEXT = 1;</code>
     */
    const GENERIC_SHORT_TEXT = 1;
    /**
     * Used when a longer text is expected. The field should be rendered as a
     * [textarea](https://www.w3.org/TR/2012/WD-html-markup-20121025/textarea.html#textarea).
     *
     * Generated from protobuf enum <code>GENERIC_LONG_TEXT = 2;</code>
     */
    const GENERIC_LONG_TEXT = 2;

    private static $valueToName = [
        self::TEXT_INPUT_TYPE_UNSPECIFIED => 'TEXT_INPUT_TYPE_UNSPECIFIED',
        self::GENERIC_SHORT_TEXT => 'GENERIC_SHORT_TEXT',
        self::GENERIC_LONG_TEXT => 'GENERIC_LONG_TEXT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


