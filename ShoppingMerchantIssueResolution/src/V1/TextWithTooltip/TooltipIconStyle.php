<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/issueresolution/v1/issueresolution.proto

namespace Google\Shopping\Merchant\IssueResolution\V1\TextWithTooltip;

use UnexpectedValueException;

/**
 * Enum specifying the type of an icon that is being used to display a
 * corresponding tooltip in the Merchant Center.
 *
 * Protobuf type <code>google.shopping.merchant.issueresolution.v1.TextWithTooltip.TooltipIconStyle</code>
 */
class TooltipIconStyle
{
    /**
     * Default value. Will never be provided by the API.
     *
     * Generated from protobuf enum <code>TOOLTIP_ICON_STYLE_UNSPECIFIED = 0;</code>
     */
    const TOOLTIP_ICON_STYLE_UNSPECIFIED = 0;
    /**
     * Used when the tooltip adds additional information to the context,
     * the 'i' can be used as an icon.
     *
     * Generated from protobuf enum <code>INFO = 1;</code>
     */
    const INFO = 1;
    /**
     * Used when the tooltip shows helpful information, the '?' can be used as
     * an icon.
     *
     * Generated from protobuf enum <code>QUESTION = 2;</code>
     */
    const QUESTION = 2;

    private static $valueToName = [
        self::TOOLTIP_ICON_STYLE_UNSPECIFIED => 'TOOLTIP_ICON_STYLE_UNSPECIFIED',
        self::INFO => 'INFO',
        self::QUESTION => 'QUESTION',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


