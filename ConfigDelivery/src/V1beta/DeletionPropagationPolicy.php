<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/configdelivery/v1beta/config_delivery.proto

namespace Google\Cloud\ConfigDelivery\V1beta;

use UnexpectedValueException;

/**
 * Deletion Propagation Policy determines what happens to the underlying
 * Kubernetes resources on a cluster when the `FleetPackage` managing
 * those resources no longer targets the cluster or is deleted.
 *
 * Protobuf type <code>google.cloud.configdelivery.v1beta.DeletionPropagationPolicy</code>
 */
class DeletionPropagationPolicy
{
    /**
     * Unspecified deletion propagation policy. Defaults to FOREGROUND.
     *
     * Generated from protobuf enum <code>DELETION_PROPAGATION_POLICY_UNSPECIFIED = 0;</code>
     */
    const DELETION_PROPAGATION_POLICY_UNSPECIFIED = 0;
    /**
     * Foreground deletion propagation policy. Any resources synced to the cluster
     * will be deleted.
     *
     * Generated from protobuf enum <code>FOREGROUND = 1;</code>
     */
    const FOREGROUND = 1;
    /**
     * Orphan deletion propagation policy. Any resources synced to the cluster
     * will be abandoned.
     *
     * Generated from protobuf enum <code>ORPHAN = 2;</code>
     */
    const ORPHAN = 2;

    private static $valueToName = [
        self::DELETION_PROPAGATION_POLICY_UNSPECIFIED => 'DELETION_PROPAGATION_POLICY_UNSPECIFIED',
        self::FOREGROUND => 'FOREGROUND',
        self::ORPHAN => 'ORPHAN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

