<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/configdelivery/v1beta/config_delivery.proto

namespace Google\Cloud\ConfigDelivery\V1beta\Release;

use UnexpectedValueException;

/**
 * Lifecycle indicates the state of the `Release`. A published release is
 * immutable.
 *
 * Protobuf type <code>google.cloud.configdelivery.v1beta.Release.Lifecycle</code>
 */
class Lifecycle
{
    /**
     * indicates lifecycle has not been specified.
     *
     * Generated from protobuf enum <code>LIFECYCLE_UNSPECIFIED = 0;</code>
     */
    const LIFECYCLE_UNSPECIFIED = 0;
    /**
     * indicates that the `Release` is being edited.
     *
     * Generated from protobuf enum <code>DRAFT = 1;</code>
     */
    const DRAFT = 1;
    /**
     * indicates that the `Release` is now published (or released) and
     * immutable.
     *
     * Generated from protobuf enum <code>PUBLISHED = 2;</code>
     */
    const PUBLISHED = 2;

    private static $valueToName = [
        self::LIFECYCLE_UNSPECIFIED => 'LIFECYCLE_UNSPECIFIED',
        self::DRAFT => 'DRAFT',
        self::PUBLISHED => 'PUBLISHED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


