<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dialogflow/v2/conversation_profile.proto

namespace Google\Cloud\Dialogflow\V2\HumanAgentAssistantConfig;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Configuration for analyses to run on each conversation message.
 *
 * Generated from protobuf message <code>google.cloud.dialogflow.v2.HumanAgentAssistantConfig.MessageAnalysisConfig</code>
 */
class MessageAnalysisConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Enable entity extraction in conversation messages on [agent assist
     * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages).
     * If unspecified, defaults to false.
     * Currently, this feature is not general available, please contact Google
     * to get access.
     *
     * Generated from protobuf field <code>bool enable_entity_extraction = 2;</code>
     */
    private $enable_entity_extraction = false;
    /**
     * Enable sentiment analysis in conversation messages on [agent assist
     * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages).
     * If unspecified, defaults to false. Sentiment analysis inspects user input
     * and identifies the prevailing subjective opinion, especially to determine
     * a user's attitude as positive, negative, or neutral:
     * https://cloud.google.com/natural-language/docs/basics#sentiment_analysis
     * For
     * [Participants.StreamingAnalyzeContent][google.cloud.dialogflow.v2.Participants.StreamingAnalyzeContent]
     * method, result will be in
     * [StreamingAnalyzeContentResponse.message.SentimentAnalysisResult][google.cloud.dialogflow.v2.StreamingAnalyzeContentResponse.message].
     * For
     * [Participants.AnalyzeContent][google.cloud.dialogflow.v2.Participants.AnalyzeContent]
     * method, result will be in
     * [AnalyzeContentResponse.message.SentimentAnalysisResult][google.cloud.dialogflow.v2.AnalyzeContentResponse.message]
     * For
     * [Conversations.ListMessages][google.cloud.dialogflow.v2.Conversations.ListMessages]
     * method, result will be in
     * [ListMessagesResponse.messages.SentimentAnalysisResult][google.cloud.dialogflow.v2.ListMessagesResponse.messages]
     * If Pub/Sub notification is configured, result will be in
     * [ConversationEvent.new_message_payload.SentimentAnalysisResult][google.cloud.dialogflow.v2.ConversationEvent.new_message_payload].
     *
     * Generated from protobuf field <code>bool enable_sentiment_analysis = 3;</code>
     */
    private $enable_sentiment_analysis = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enable_entity_extraction
     *           Enable entity extraction in conversation messages on [agent assist
     *           stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages).
     *           If unspecified, defaults to false.
     *           Currently, this feature is not general available, please contact Google
     *           to get access.
     *     @type bool $enable_sentiment_analysis
     *           Enable sentiment analysis in conversation messages on [agent assist
     *           stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages).
     *           If unspecified, defaults to false. Sentiment analysis inspects user input
     *           and identifies the prevailing subjective opinion, especially to determine
     *           a user's attitude as positive, negative, or neutral:
     *           https://cloud.google.com/natural-language/docs/basics#sentiment_analysis
     *           For
     *           [Participants.StreamingAnalyzeContent][google.cloud.dialogflow.v2.Participants.StreamingAnalyzeContent]
     *           method, result will be in
     *           [StreamingAnalyzeContentResponse.message.SentimentAnalysisResult][google.cloud.dialogflow.v2.StreamingAnalyzeContentResponse.message].
     *           For
     *           [Participants.AnalyzeContent][google.cloud.dialogflow.v2.Participants.AnalyzeContent]
     *           method, result will be in
     *           [AnalyzeContentResponse.message.SentimentAnalysisResult][google.cloud.dialogflow.v2.AnalyzeContentResponse.message]
     *           For
     *           [Conversations.ListMessages][google.cloud.dialogflow.v2.Conversations.ListMessages]
     *           method, result will be in
     *           [ListMessagesResponse.messages.SentimentAnalysisResult][google.cloud.dialogflow.v2.ListMessagesResponse.messages]
     *           If Pub/Sub notification is configured, result will be in
     *           [ConversationEvent.new_message_payload.SentimentAnalysisResult][google.cloud.dialogflow.v2.ConversationEvent.new_message_payload].
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dialogflow\V2\ConversationProfile::initOnce();
        parent::__construct($data);
    }

    /**
     * Enable entity extraction in conversation messages on [agent assist
     * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages).
     * If unspecified, defaults to false.
     * Currently, this feature is not general available, please contact Google
     * to get access.
     *
     * Generated from protobuf field <code>bool enable_entity_extraction = 2;</code>
     * @return bool
     */
    public function getEnableEntityExtraction()
    {
        return $this->enable_entity_extraction;
    }

    /**
     * Enable entity extraction in conversation messages on [agent assist
     * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages).
     * If unspecified, defaults to false.
     * Currently, this feature is not general available, please contact Google
     * to get access.
     *
     * Generated from protobuf field <code>bool enable_entity_extraction = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableEntityExtraction($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_entity_extraction = $var;

        return $this;
    }

    /**
     * Enable sentiment analysis in conversation messages on [agent assist
     * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages).
     * If unspecified, defaults to false. Sentiment analysis inspects user input
     * and identifies the prevailing subjective opinion, especially to determine
     * a user's attitude as positive, negative, or neutral:
     * https://cloud.google.com/natural-language/docs/basics#sentiment_analysis
     * For
     * [Participants.StreamingAnalyzeContent][google.cloud.dialogflow.v2.Participants.StreamingAnalyzeContent]
     * method, result will be in
     * [StreamingAnalyzeContentResponse.message.SentimentAnalysisResult][google.cloud.dialogflow.v2.StreamingAnalyzeContentResponse.message].
     * For
     * [Participants.AnalyzeContent][google.cloud.dialogflow.v2.Participants.AnalyzeContent]
     * method, result will be in
     * [AnalyzeContentResponse.message.SentimentAnalysisResult][google.cloud.dialogflow.v2.AnalyzeContentResponse.message]
     * For
     * [Conversations.ListMessages][google.cloud.dialogflow.v2.Conversations.ListMessages]
     * method, result will be in
     * [ListMessagesResponse.messages.SentimentAnalysisResult][google.cloud.dialogflow.v2.ListMessagesResponse.messages]
     * If Pub/Sub notification is configured, result will be in
     * [ConversationEvent.new_message_payload.SentimentAnalysisResult][google.cloud.dialogflow.v2.ConversationEvent.new_message_payload].
     *
     * Generated from protobuf field <code>bool enable_sentiment_analysis = 3;</code>
     * @return bool
     */
    public function getEnableSentimentAnalysis()
    {
        return $this->enable_sentiment_analysis;
    }

    /**
     * Enable sentiment analysis in conversation messages on [agent assist
     * stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages).
     * If unspecified, defaults to false. Sentiment analysis inspects user input
     * and identifies the prevailing subjective opinion, especially to determine
     * a user's attitude as positive, negative, or neutral:
     * https://cloud.google.com/natural-language/docs/basics#sentiment_analysis
     * For
     * [Participants.StreamingAnalyzeContent][google.cloud.dialogflow.v2.Participants.StreamingAnalyzeContent]
     * method, result will be in
     * [StreamingAnalyzeContentResponse.message.SentimentAnalysisResult][google.cloud.dialogflow.v2.StreamingAnalyzeContentResponse.message].
     * For
     * [Participants.AnalyzeContent][google.cloud.dialogflow.v2.Participants.AnalyzeContent]
     * method, result will be in
     * [AnalyzeContentResponse.message.SentimentAnalysisResult][google.cloud.dialogflow.v2.AnalyzeContentResponse.message]
     * For
     * [Conversations.ListMessages][google.cloud.dialogflow.v2.Conversations.ListMessages]
     * method, result will be in
     * [ListMessagesResponse.messages.SentimentAnalysisResult][google.cloud.dialogflow.v2.ListMessagesResponse.messages]
     * If Pub/Sub notification is configured, result will be in
     * [ConversationEvent.new_message_payload.SentimentAnalysisResult][google.cloud.dialogflow.v2.ConversationEvent.new_message_payload].
     *
     * Generated from protobuf field <code>bool enable_sentiment_analysis = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableSentimentAnalysis($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_sentiment_analysis = $var;

        return $this;
    }

}


