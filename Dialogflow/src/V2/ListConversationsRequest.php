<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dialogflow/v2/conversation.proto

namespace Google\Cloud\Dialogflow\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The request message for
 * [Conversations.ListConversations][google.cloud.dialogflow.v2.Conversations.ListConversations].
 *
 * Generated from protobuf message <code>google.cloud.dialogflow.v2.ListConversationsRequest</code>
 */
class ListConversationsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The project from which to list all conversation.
     * Format: `projects/<Project ID>/locations/<Location ID>`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    private $parent = '';
    /**
     * Optional. The maximum number of items to return in a single page. By
     * default 100 and at most 1000.
     *
     * Generated from protobuf field <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $page_size = 0;
    /**
     * Optional. The next_page_token value returned from a previous list request.
     *
     * Generated from protobuf field <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $page_token = '';
    /**
     * A filter expression that filters conversations listed in the response. In
     * general, the expression must specify the field name, a comparison operator,
     * and the value to use for filtering:
     * <ul>
     *   <li>The value must be a string, a number, or a boolean.</li>
     *   <li>The comparison operator must be either `=`,`!=`, `>`, or `<`.</li>
     *   <li>To filter on multiple expressions, separate the
     *       expressions with `AND` or `OR` (omitting both implies `AND`).</li>
     *   <li>For clarity, expressions can be enclosed in parentheses.</li>
     * </ul>
     * Only `lifecycle_state` can be filtered on in this way. For example,
     * the following expression only returns `COMPLETED` conversations:
     * `lifecycle_state = "COMPLETED"`
     * For more information about filtering, see
     * [API Filtering](https://aip.dev/160).
     *
     * Generated from protobuf field <code>string filter = 4;</code>
     */
    private $filter = '';

    /**
     * @param string $parent Required. The project from which to list all conversation.
     *                       Format: `projects/<Project ID>/locations/<Location ID>`. Please see
     *                       {@see ConversationsClient::projectName()} for help formatting this field.
     *
     * @return \Google\Cloud\Dialogflow\V2\ListConversationsRequest
     *
     * @experimental
     */
    public static function build(string $parent): self
    {
        return (new self())
            ->setParent($parent);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The project from which to list all conversation.
     *           Format: `projects/<Project ID>/locations/<Location ID>`.
     *     @type int $page_size
     *           Optional. The maximum number of items to return in a single page. By
     *           default 100 and at most 1000.
     *     @type string $page_token
     *           Optional. The next_page_token value returned from a previous list request.
     *     @type string $filter
     *           A filter expression that filters conversations listed in the response. In
     *           general, the expression must specify the field name, a comparison operator,
     *           and the value to use for filtering:
     *           <ul>
     *             <li>The value must be a string, a number, or a boolean.</li>
     *             <li>The comparison operator must be either `=`,`!=`, `>`, or `<`.</li>
     *             <li>To filter on multiple expressions, separate the
     *                 expressions with `AND` or `OR` (omitting both implies `AND`).</li>
     *             <li>For clarity, expressions can be enclosed in parentheses.</li>
     *           </ul>
     *           Only `lifecycle_state` can be filtered on in this way. For example,
     *           the following expression only returns `COMPLETED` conversations:
     *           `lifecycle_state = "COMPLETED"`
     *           For more information about filtering, see
     *           [API Filtering](https://aip.dev/160).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dialogflow\V2\Conversation::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The project from which to list all conversation.
     * Format: `projects/<Project ID>/locations/<Location ID>`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The project from which to list all conversation.
     * Format: `projects/<Project ID>/locations/<Location ID>`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Optional. The maximum number of items to return in a single page. By
     * default 100 and at most 1000.
     *
     * Generated from protobuf field <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * Optional. The maximum number of items to return in a single page. By
     * default 100 and at most 1000.
     *
     * Generated from protobuf field <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * Optional. The next_page_token value returned from a previous list request.
     *
     * Generated from protobuf field <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * Optional. The next_page_token value returned from a previous list request.
     *
     * Generated from protobuf field <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

    /**
     * A filter expression that filters conversations listed in the response. In
     * general, the expression must specify the field name, a comparison operator,
     * and the value to use for filtering:
     * <ul>
     *   <li>The value must be a string, a number, or a boolean.</li>
     *   <li>The comparison operator must be either `=`,`!=`, `>`, or `<`.</li>
     *   <li>To filter on multiple expressions, separate the
     *       expressions with `AND` or `OR` (omitting both implies `AND`).</li>
     *   <li>For clarity, expressions can be enclosed in parentheses.</li>
     * </ul>
     * Only `lifecycle_state` can be filtered on in this way. For example,
     * the following expression only returns `COMPLETED` conversations:
     * `lifecycle_state = "COMPLETED"`
     * For more information about filtering, see
     * [API Filtering](https://aip.dev/160).
     *
     * Generated from protobuf field <code>string filter = 4;</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * A filter expression that filters conversations listed in the response. In
     * general, the expression must specify the field name, a comparison operator,
     * and the value to use for filtering:
     * <ul>
     *   <li>The value must be a string, a number, or a boolean.</li>
     *   <li>The comparison operator must be either `=`,`!=`, `>`, or `<`.</li>
     *   <li>To filter on multiple expressions, separate the
     *       expressions with `AND` or `OR` (omitting both implies `AND`).</li>
     *   <li>For clarity, expressions can be enclosed in parentheses.</li>
     * </ul>
     * Only `lifecycle_state` can be filtered on in this way. For example,
     * the following expression only returns `COMPLETED` conversations:
     * `lifecycle_state = "COMPLETED"`
     * For more information about filtering, see
     * [API Filtering](https://aip.dev/160).
     *
     * Generated from protobuf field <code>string filter = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

}

