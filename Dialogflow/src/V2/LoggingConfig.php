<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dialogflow/v2/conversation_profile.proto

namespace Google\Cloud\Dialogflow\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Defines logging behavior for conversation lifecycle events.
 *
 * Generated from protobuf message <code>google.cloud.dialogflow.v2.LoggingConfig</code>
 */
class LoggingConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Whether to log conversation events like
     * [CONVERSATION_STARTED][google.cloud.dialogflow.v2.ConversationEvent.Type.CONVERSATION_STARTED]
     * to Stackdriver in the conversation project as JSON format
     * [ConversationEvent][google.cloud.dialogflow.v2.ConversationEvent] protos.
     *
     * Generated from protobuf field <code>bool enable_stackdriver_logging = 3;</code>
     */
    private $enable_stackdriver_logging = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enable_stackdriver_logging
     *           Whether to log conversation events like
     *           [CONVERSATION_STARTED][google.cloud.dialogflow.v2.ConversationEvent.Type.CONVERSATION_STARTED]
     *           to Stackdriver in the conversation project as JSON format
     *           [ConversationEvent][google.cloud.dialogflow.v2.ConversationEvent] protos.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dialogflow\V2\ConversationProfile::initOnce();
        parent::__construct($data);
    }

    /**
     * Whether to log conversation events like
     * [CONVERSATION_STARTED][google.cloud.dialogflow.v2.ConversationEvent.Type.CONVERSATION_STARTED]
     * to Stackdriver in the conversation project as JSON format
     * [ConversationEvent][google.cloud.dialogflow.v2.ConversationEvent] protos.
     *
     * Generated from protobuf field <code>bool enable_stackdriver_logging = 3;</code>
     * @return bool
     */
    public function getEnableStackdriverLogging()
    {
        return $this->enable_stackdriver_logging;
    }

    /**
     * Whether to log conversation events like
     * [CONVERSATION_STARTED][google.cloud.dialogflow.v2.ConversationEvent.Type.CONVERSATION_STARTED]
     * to Stackdriver in the conversation project as JSON format
     * [ConversationEvent][google.cloud.dialogflow.v2.ConversationEvent] protos.
     *
     * Generated from protobuf field <code>bool enable_stackdriver_logging = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableStackdriverLogging($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_stackdriver_logging = $var;

        return $this;
    }

}

