<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dialogflow/v2/conversation.proto

namespace Google\Cloud\Dialogflow\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The request message for
 * [Conversations.SearchKnowledge][google.cloud.dialogflow.v2.Conversations.SearchKnowledge].
 *
 * Generated from protobuf message <code>google.cloud.dialogflow.v2.SearchKnowledgeRequest</code>
 */
class SearchKnowledgeRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The parent resource contains the conversation profile
     * Format: 'projects/<Project ID>' or `projects/<Project
     * ID>/locations/<Location ID>`.
     *
     * Generated from protobuf field <code>string parent = 6;</code>
     */
    private $parent = '';
    /**
     * Required. The natural language text query for knowledge search.
     *
     * Generated from protobuf field <code>.google.cloud.dialogflow.v2.TextInput query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $query = null;
    /**
     * Required. The conversation profile used to configure the search.
     * Format: `projects/<Project ID>/locations/<Location
     * ID>/conversationProfiles/<Conversation Profile ID>`.
     *
     * Generated from protobuf field <code>string conversation_profile = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    private $conversation_profile = '';
    /**
     * The ID of the search session.
     * The session_id can be combined with Dialogflow V3 Agent ID retrieved from
     * conversation profile or on its own to identify a search session. The search
     * history of the same session will impact the search result. It's up to the
     * API caller to choose an appropriate `Session ID`. It can be a random number
     * or some type of session identifiers (preferably hashed). The length must
     * not exceed 36 characters.
     *
     * Generated from protobuf field <code>string session_id = 3;</code>
     */
    private $session_id = '';
    /**
     * The conversation (between human agent and end user) where the search
     * request is triggered. Format: `projects/<Project ID>/locations/<Location
     * ID>/conversations/<Conversation ID>`.
     *
     * Generated from protobuf field <code>string conversation = 4 [(.google.api.resource_reference) = {</code>
     */
    private $conversation = '';
    /**
     * The name of the latest conversation message when the request is
     * triggered.
     * Format: `projects/<Project ID>/locations/<Location
     * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
     *
     * Generated from protobuf field <code>string latest_message = 5 [(.google.api.resource_reference) = {</code>
     */
    private $latest_message = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           The parent resource contains the conversation profile
     *           Format: 'projects/<Project ID>' or `projects/<Project
     *           ID>/locations/<Location ID>`.
     *     @type \Google\Cloud\Dialogflow\V2\TextInput $query
     *           Required. The natural language text query for knowledge search.
     *     @type string $conversation_profile
     *           Required. The conversation profile used to configure the search.
     *           Format: `projects/<Project ID>/locations/<Location
     *           ID>/conversationProfiles/<Conversation Profile ID>`.
     *     @type string $session_id
     *           The ID of the search session.
     *           The session_id can be combined with Dialogflow V3 Agent ID retrieved from
     *           conversation profile or on its own to identify a search session. The search
     *           history of the same session will impact the search result. It's up to the
     *           API caller to choose an appropriate `Session ID`. It can be a random number
     *           or some type of session identifiers (preferably hashed). The length must
     *           not exceed 36 characters.
     *     @type string $conversation
     *           The conversation (between human agent and end user) where the search
     *           request is triggered. Format: `projects/<Project ID>/locations/<Location
     *           ID>/conversations/<Conversation ID>`.
     *     @type string $latest_message
     *           The name of the latest conversation message when the request is
     *           triggered.
     *           Format: `projects/<Project ID>/locations/<Location
     *           ID>/conversations/<Conversation ID>/messages/<Message ID>`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dialogflow\V2\Conversation::initOnce();
        parent::__construct($data);
    }

    /**
     * The parent resource contains the conversation profile
     * Format: 'projects/<Project ID>' or `projects/<Project
     * ID>/locations/<Location ID>`.
     *
     * Generated from protobuf field <code>string parent = 6;</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * The parent resource contains the conversation profile
     * Format: 'projects/<Project ID>' or `projects/<Project
     * ID>/locations/<Location ID>`.
     *
     * Generated from protobuf field <code>string parent = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Required. The natural language text query for knowledge search.
     *
     * Generated from protobuf field <code>.google.cloud.dialogflow.v2.TextInput query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\Dialogflow\V2\TextInput|null
     */
    public function getQuery()
    {
        return $this->query;
    }

    public function hasQuery()
    {
        return isset($this->query);
    }

    public function clearQuery()
    {
        unset($this->query);
    }

    /**
     * Required. The natural language text query for knowledge search.
     *
     * Generated from protobuf field <code>.google.cloud.dialogflow.v2.TextInput query = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Dialogflow\V2\TextInput $var
     * @return $this
     */
    public function setQuery($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dialogflow\V2\TextInput::class);
        $this->query = $var;

        return $this;
    }

    /**
     * Required. The conversation profile used to configure the search.
     * Format: `projects/<Project ID>/locations/<Location
     * ID>/conversationProfiles/<Conversation Profile ID>`.
     *
     * Generated from protobuf field <code>string conversation_profile = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getConversationProfile()
    {
        return $this->conversation_profile;
    }

    /**
     * Required. The conversation profile used to configure the search.
     * Format: `projects/<Project ID>/locations/<Location
     * ID>/conversationProfiles/<Conversation Profile ID>`.
     *
     * Generated from protobuf field <code>string conversation_profile = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setConversationProfile($var)
    {
        GPBUtil::checkString($var, True);
        $this->conversation_profile = $var;

        return $this;
    }

    /**
     * The ID of the search session.
     * The session_id can be combined with Dialogflow V3 Agent ID retrieved from
     * conversation profile or on its own to identify a search session. The search
     * history of the same session will impact the search result. It's up to the
     * API caller to choose an appropriate `Session ID`. It can be a random number
     * or some type of session identifiers (preferably hashed). The length must
     * not exceed 36 characters.
     *
     * Generated from protobuf field <code>string session_id = 3;</code>
     * @return string
     */
    public function getSessionId()
    {
        return $this->session_id;
    }

    /**
     * The ID of the search session.
     * The session_id can be combined with Dialogflow V3 Agent ID retrieved from
     * conversation profile or on its own to identify a search session. The search
     * history of the same session will impact the search result. It's up to the
     * API caller to choose an appropriate `Session ID`. It can be a random number
     * or some type of session identifiers (preferably hashed). The length must
     * not exceed 36 characters.
     *
     * Generated from protobuf field <code>string session_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setSessionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->session_id = $var;

        return $this;
    }

    /**
     * The conversation (between human agent and end user) where the search
     * request is triggered. Format: `projects/<Project ID>/locations/<Location
     * ID>/conversations/<Conversation ID>`.
     *
     * Generated from protobuf field <code>string conversation = 4 [(.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getConversation()
    {
        return $this->conversation;
    }

    /**
     * The conversation (between human agent and end user) where the search
     * request is triggered. Format: `projects/<Project ID>/locations/<Location
     * ID>/conversations/<Conversation ID>`.
     *
     * Generated from protobuf field <code>string conversation = 4 [(.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setConversation($var)
    {
        GPBUtil::checkString($var, True);
        $this->conversation = $var;

        return $this;
    }

    /**
     * The name of the latest conversation message when the request is
     * triggered.
     * Format: `projects/<Project ID>/locations/<Location
     * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
     *
     * Generated from protobuf field <code>string latest_message = 5 [(.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getLatestMessage()
    {
        return $this->latest_message;
    }

    /**
     * The name of the latest conversation message when the request is
     * triggered.
     * Format: `projects/<Project ID>/locations/<Location
     * ID>/conversations/<Conversation ID>/messages/<Message ID>`.
     *
     * Generated from protobuf field <code>string latest_message = 5 [(.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setLatestMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->latest_message = $var;

        return $this;
    }

}

