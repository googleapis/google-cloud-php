<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/developerconnect/v1/developer_connect.proto

namespace Google\Cloud\DeveloperConnect\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message for updating a AccountConnector
 *
 * Generated from protobuf message <code>google.cloud.developerconnect.v1.UpdateAccountConnectorRequest</code>
 */
class UpdateAccountConnectorRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The list of fields to be updated.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $update_mask = null;
    /**
     * Required. The AccountConnector to update.
     *
     * Generated from protobuf field <code>.google.cloud.developerconnect.v1.AccountConnector account_connector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $account_connector = null;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique
     * request ID so that if you must retry your request, the server will know to
     * ignore the request if it has already been completed. The server will
     * guarantee that for at least 60 minutes since the first request.
     * For example, consider a situation where you make an initial request and the
     * request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, will ignore the second request. This prevents
     * clients from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     */
    protected $request_id = '';
    /**
     * Optional. If set to true, and the accountConnector is not found a new
     * accountConnector will be created. In this situation `update_mask` is
     * ignored. The creation will succeed only if the input accountConnector has
     * all the necessary
     *
     * Generated from protobuf field <code>bool allow_missing = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $allow_missing = false;
    /**
     * Optional. If set, validate the request, but do not actually post it.
     *
     * Generated from protobuf field <code>bool validate_only = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $validate_only = false;

    /**
     * @param \Google\Cloud\DeveloperConnect\V1\AccountConnector $accountConnector Required. The AccountConnector to update.
     * @param \Google\Protobuf\FieldMask                         $updateMask       Optional. The list of fields to be updated.
     *
     * @return \Google\Cloud\DeveloperConnect\V1\UpdateAccountConnectorRequest
     *
     * @experimental
     */
    public static function build(\Google\Cloud\DeveloperConnect\V1\AccountConnector $accountConnector, \Google\Protobuf\FieldMask $updateMask): self
    {
        return (new self())
            ->setAccountConnector($accountConnector)
            ->setUpdateMask($updateMask);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           Optional. The list of fields to be updated.
     *     @type \Google\Cloud\DeveloperConnect\V1\AccountConnector $account_connector
     *           Required. The AccountConnector to update.
     *     @type string $request_id
     *           Optional. An optional request ID to identify requests. Specify a unique
     *           request ID so that if you must retry your request, the server will know to
     *           ignore the request if it has already been completed. The server will
     *           guarantee that for at least 60 minutes since the first request.
     *           For example, consider a situation where you make an initial request and the
     *           request times out. If you make the request again with the same request
     *           ID, the server can check if original operation with the same request ID
     *           was received, and if so, will ignore the second request. This prevents
     *           clients from accidentally creating duplicate commitments.
     *           The request ID must be a valid UUID with the exception that zero UUID is
     *           not supported (00000000-0000-0000-0000-000000000000).
     *     @type bool $allow_missing
     *           Optional. If set to true, and the accountConnector is not found a new
     *           accountConnector will be created. In this situation `update_mask` is
     *           ignored. The creation will succeed only if the input accountConnector has
     *           all the necessary
     *     @type bool $validate_only
     *           Optional. If set, validate the request, but do not actually post it.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Developerconnect\V1\DeveloperConnect::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The list of fields to be updated.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * Optional. The list of fields to be updated.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

    /**
     * Required. The AccountConnector to update.
     *
     * Generated from protobuf field <code>.google.cloud.developerconnect.v1.AccountConnector account_connector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\DeveloperConnect\V1\AccountConnector|null
     */
    public function getAccountConnector()
    {
        return $this->account_connector;
    }

    public function hasAccountConnector()
    {
        return isset($this->account_connector);
    }

    public function clearAccountConnector()
    {
        unset($this->account_connector);
    }

    /**
     * Required. The AccountConnector to update.
     *
     * Generated from protobuf field <code>.google.cloud.developerconnect.v1.AccountConnector account_connector = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\DeveloperConnect\V1\AccountConnector $var
     * @return $this
     */
    public function setAccountConnector($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DeveloperConnect\V1\AccountConnector::class);
        $this->account_connector = $var;

        return $this;
    }

    /**
     * Optional. An optional request ID to identify requests. Specify a unique
     * request ID so that if you must retry your request, the server will know to
     * ignore the request if it has already been completed. The server will
     * guarantee that for at least 60 minutes since the first request.
     * For example, consider a situation where you make an initial request and the
     * request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, will ignore the second request. This prevents
     * clients from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Optional. An optional request ID to identify requests. Specify a unique
     * request ID so that if you must retry your request, the server will know to
     * ignore the request if it has already been completed. The server will
     * guarantee that for at least 60 minutes since the first request.
     * For example, consider a situation where you make an initial request and the
     * request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, will ignore the second request. This prevents
     * clients from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

    /**
     * Optional. If set to true, and the accountConnector is not found a new
     * accountConnector will be created. In this situation `update_mask` is
     * ignored. The creation will succeed only if the input accountConnector has
     * all the necessary
     *
     * Generated from protobuf field <code>bool allow_missing = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getAllowMissing()
    {
        return $this->allow_missing;
    }

    /**
     * Optional. If set to true, and the accountConnector is not found a new
     * accountConnector will be created. In this situation `update_mask` is
     * ignored. The creation will succeed only if the input accountConnector has
     * all the necessary
     *
     * Generated from protobuf field <code>bool allow_missing = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setAllowMissing($var)
    {
        GPBUtil::checkBool($var);
        $this->allow_missing = $var;

        return $this;
    }

    /**
     * Optional. If set, validate the request, but do not actually post it.
     *
     * Generated from protobuf field <code>bool validate_only = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getValidateOnly()
    {
        return $this->validate_only;
    }

    /**
     * Optional. If set, validate the request, but do not actually post it.
     *
     * Generated from protobuf field <code>bool validate_only = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setValidateOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->validate_only = $var;

        return $this;
    }

}

