<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/developerconnect/v1/developer_connect.proto

namespace Google\Cloud\DeveloperConnect\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>google.cloud.developerconnect.v1.CreateAccountConnectorRequest</code>
 */
class CreateAccountConnectorRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Location resource name as the account_connector’s parent.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Required. The ID to use for the AccountConnector, which will become the
     * final component of the AccountConnector's resource name. Its format should
     * adhere to https://google.aip.dev/122#resource-id-segments Names must be
     * unique per-project per-location.
     *
     * Generated from protobuf field <code>string account_connector_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $account_connector_id = '';
    /**
     * Required. The AccountConnector to create.
     *
     * Generated from protobuf field <code>.google.cloud.developerconnect.v1.AccountConnector account_connector = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $account_connector = null;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique
     * request ID so that if you must retry your request, the server will know to
     * ignore the request if it has already been completed. The server will
     * guarantee that for at least 60 minutes since the first request.
     * For example, consider a situation where you make an initial request and the
     * request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, will ignore the second request. This prevents
     * clients from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     */
    protected $request_id = '';
    /**
     * Optional. If set, validate the request, but do not actually post it.
     *
     * Generated from protobuf field <code>bool validate_only = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $validate_only = false;

    /**
     * @param string                                             $parent             Required. Location resource name as the account_connector’s parent. Please see
     *                                                                               {@see DeveloperConnectClient::locationName()} for help formatting this field.
     * @param \Google\Cloud\DeveloperConnect\V1\AccountConnector $accountConnector   Required. The AccountConnector to create.
     * @param string                                             $accountConnectorId Required. The ID to use for the AccountConnector, which will become the
     *                                                                               final component of the AccountConnector's resource name. Its format should
     *                                                                               adhere to https://google.aip.dev/122#resource-id-segments Names must be
     *                                                                               unique per-project per-location.
     *
     * @return \Google\Cloud\DeveloperConnect\V1\CreateAccountConnectorRequest
     *
     * @experimental
     */
    public static function build(string $parent, \Google\Cloud\DeveloperConnect\V1\AccountConnector $accountConnector, string $accountConnectorId): self
    {
        return (new self())
            ->setParent($parent)
            ->setAccountConnector($accountConnector)
            ->setAccountConnectorId($accountConnectorId);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. Location resource name as the account_connector’s parent.
     *     @type string $account_connector_id
     *           Required. The ID to use for the AccountConnector, which will become the
     *           final component of the AccountConnector's resource name. Its format should
     *           adhere to https://google.aip.dev/122#resource-id-segments Names must be
     *           unique per-project per-location.
     *     @type \Google\Cloud\DeveloperConnect\V1\AccountConnector $account_connector
     *           Required. The AccountConnector to create.
     *     @type string $request_id
     *           Optional. An optional request ID to identify requests. Specify a unique
     *           request ID so that if you must retry your request, the server will know to
     *           ignore the request if it has already been completed. The server will
     *           guarantee that for at least 60 minutes since the first request.
     *           For example, consider a situation where you make an initial request and the
     *           request times out. If you make the request again with the same request
     *           ID, the server can check if original operation with the same request ID
     *           was received, and if so, will ignore the second request. This prevents
     *           clients from accidentally creating duplicate commitments.
     *           The request ID must be a valid UUID with the exception that zero UUID is
     *           not supported (00000000-0000-0000-0000-000000000000).
     *     @type bool $validate_only
     *           Optional. If set, validate the request, but do not actually post it.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Developerconnect\V1\DeveloperConnect::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Location resource name as the account_connector’s parent.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. Location resource name as the account_connector’s parent.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Required. The ID to use for the AccountConnector, which will become the
     * final component of the AccountConnector's resource name. Its format should
     * adhere to https://google.aip.dev/122#resource-id-segments Names must be
     * unique per-project per-location.
     *
     * Generated from protobuf field <code>string account_connector_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getAccountConnectorId()
    {
        return $this->account_connector_id;
    }

    /**
     * Required. The ID to use for the AccountConnector, which will become the
     * final component of the AccountConnector's resource name. Its format should
     * adhere to https://google.aip.dev/122#resource-id-segments Names must be
     * unique per-project per-location.
     *
     * Generated from protobuf field <code>string account_connector_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setAccountConnectorId($var)
    {
        GPBUtil::checkString($var, True);
        $this->account_connector_id = $var;

        return $this;
    }

    /**
     * Required. The AccountConnector to create.
     *
     * Generated from protobuf field <code>.google.cloud.developerconnect.v1.AccountConnector account_connector = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\DeveloperConnect\V1\AccountConnector|null
     */
    public function getAccountConnector()
    {
        return $this->account_connector;
    }

    public function hasAccountConnector()
    {
        return isset($this->account_connector);
    }

    public function clearAccountConnector()
    {
        unset($this->account_connector);
    }

    /**
     * Required. The AccountConnector to create.
     *
     * Generated from protobuf field <code>.google.cloud.developerconnect.v1.AccountConnector account_connector = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\DeveloperConnect\V1\AccountConnector $var
     * @return $this
     */
    public function setAccountConnector($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DeveloperConnect\V1\AccountConnector::class);
        $this->account_connector = $var;

        return $this;
    }

    /**
     * Optional. An optional request ID to identify requests. Specify a unique
     * request ID so that if you must retry your request, the server will know to
     * ignore the request if it has already been completed. The server will
     * guarantee that for at least 60 minutes since the first request.
     * For example, consider a situation where you make an initial request and the
     * request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, will ignore the second request. This prevents
     * clients from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Optional. An optional request ID to identify requests. Specify a unique
     * request ID so that if you must retry your request, the server will know to
     * ignore the request if it has already been completed. The server will
     * guarantee that for at least 60 minutes since the first request.
     * For example, consider a situation where you make an initial request and the
     * request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, will ignore the second request. This prevents
     * clients from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

    /**
     * Optional. If set, validate the request, but do not actually post it.
     *
     * Generated from protobuf field <code>bool validate_only = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getValidateOnly()
    {
        return $this->validate_only;
    }

    /**
     * Optional. If set, validate the request, but do not actually post it.
     *
     * Generated from protobuf field <code>bool validate_only = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setValidateOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->validate_only = $var;

        return $this;
    }

}

