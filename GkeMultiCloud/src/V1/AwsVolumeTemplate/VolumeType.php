<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/gkemulticloud/v1/aws_resources.proto

namespace Google\Cloud\GkeMultiCloud\V1\AwsVolumeTemplate;

use UnexpectedValueException;

/**
 * Types of supported EBS volumes. We currently only support GP2 or GP3
 * volumes.
 * See https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html
 * for more information.
 *
 * Protobuf type <code>google.cloud.gkemulticloud.v1.AwsVolumeTemplate.VolumeType</code>
 */
class VolumeType
{
    /**
     * Not set.
     *
     * Generated from protobuf enum <code>VOLUME_TYPE_UNSPECIFIED = 0;</code>
     */
    const VOLUME_TYPE_UNSPECIFIED = 0;
    /**
     * GP2 (General Purpose SSD volume type).
     *
     * Generated from protobuf enum <code>GP2 = 1;</code>
     */
    const GP2 = 1;
    /**
     * GP3 (General Purpose SSD volume type).
     *
     * Generated from protobuf enum <code>GP3 = 2;</code>
     */
    const GP3 = 2;

    private static $valueToName = [
        self::VOLUME_TYPE_UNSPECIFIED => 'VOLUME_TYPE_UNSPECIFIED',
        self::GP2 => 'GP2',
        self::GP3 => 'GP3',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


