<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/capacityplanner/v1beta/usage_service.proto

namespace Google\Cloud\CapacityPlanner\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A BigQuery destination for exporting assets to.
 *
 * Generated from protobuf message <code>google.cloud.capacityplanner.v1beta.BigQueryDestination</code>
 */
class BigQueryDestination extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The BigQuery dataset in format
     * "projects/{projectId}/datasets/{datasetId}", to which the snapshot result
     * should be exported. If this dataset does not exist, the export call returns
     * an INVALID_ARGUMENT error.
     *
     * Generated from protobuf field <code>string dataset = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $dataset = '';
    /**
     * Required. The BigQuery table to which the snapshot result should be
     * written.
     *
     * Generated from protobuf field <code>string table = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $table = '';
    /**
     * Optional. The partition key for BigQuery partitioned table.
     *
     * Generated from protobuf field <code>.google.cloud.capacityplanner.v1beta.BigQueryDestination.PartitionKey partition_key = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $partition_key = 0;
    /**
     * Optional. Specifies the action that occurs if the destination table or
     * partition already exists.
     *
     * Generated from protobuf field <code>.google.cloud.capacityplanner.v1beta.BigQueryDestination.WriteDisposition write_disposition = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $write_disposition = 0;
    /**
     * Optional. Specifies the action that occurs if the destination table does
     * not exist
     *
     * Generated from protobuf field <code>.google.cloud.capacityplanner.v1beta.BigQueryDestination.CreateDisposition create_disposition = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $create_disposition = 0;
    /**
     * Optional. Specifies the Cloud Storage location.
     * Users can choose to provide a location for Cloud Storage bucket to store
     * the exported data. (as it is possible that some locations are restricted
     * via org policy for that project) Temporary Cloud Storage bucket creation is
     * an interim step for BigQuery upload. If no value is provided, the default
     * location used will be 'US'.
     *
     * Generated from protobuf field <code>string gcs_location = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $gcs_location = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $dataset
     *           Required. The BigQuery dataset in format
     *           "projects/{projectId}/datasets/{datasetId}", to which the snapshot result
     *           should be exported. If this dataset does not exist, the export call returns
     *           an INVALID_ARGUMENT error.
     *     @type string $table
     *           Required. The BigQuery table to which the snapshot result should be
     *           written.
     *     @type int $partition_key
     *           Optional. The partition key for BigQuery partitioned table.
     *     @type int $write_disposition
     *           Optional. Specifies the action that occurs if the destination table or
     *           partition already exists.
     *     @type int $create_disposition
     *           Optional. Specifies the action that occurs if the destination table does
     *           not exist
     *     @type string $gcs_location
     *           Optional. Specifies the Cloud Storage location.
     *           Users can choose to provide a location for Cloud Storage bucket to store
     *           the exported data. (as it is possible that some locations are restricted
     *           via org policy for that project) Temporary Cloud Storage bucket creation is
     *           an interim step for BigQuery upload. If no value is provided, the default
     *           location used will be 'US'.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Capacityplanner\V1Beta\UsageService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The BigQuery dataset in format
     * "projects/{projectId}/datasets/{datasetId}", to which the snapshot result
     * should be exported. If this dataset does not exist, the export call returns
     * an INVALID_ARGUMENT error.
     *
     * Generated from protobuf field <code>string dataset = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getDataset()
    {
        return $this->dataset;
    }

    /**
     * Required. The BigQuery dataset in format
     * "projects/{projectId}/datasets/{datasetId}", to which the snapshot result
     * should be exported. If this dataset does not exist, the export call returns
     * an INVALID_ARGUMENT error.
     *
     * Generated from protobuf field <code>string dataset = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setDataset($var)
    {
        GPBUtil::checkString($var, True);
        $this->dataset = $var;

        return $this;
    }

    /**
     * Required. The BigQuery table to which the snapshot result should be
     * written.
     *
     * Generated from protobuf field <code>string table = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getTable()
    {
        return $this->table;
    }

    /**
     * Required. The BigQuery table to which the snapshot result should be
     * written.
     *
     * Generated from protobuf field <code>string table = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setTable($var)
    {
        GPBUtil::checkString($var, True);
        $this->table = $var;

        return $this;
    }

    /**
     * Optional. The partition key for BigQuery partitioned table.
     *
     * Generated from protobuf field <code>.google.cloud.capacityplanner.v1beta.BigQueryDestination.PartitionKey partition_key = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getPartitionKey()
    {
        return $this->partition_key;
    }

    /**
     * Optional. The partition key for BigQuery partitioned table.
     *
     * Generated from protobuf field <code>.google.cloud.capacityplanner.v1beta.BigQueryDestination.PartitionKey partition_key = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setPartitionKey($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\CapacityPlanner\V1beta\BigQueryDestination\PartitionKey::class);
        $this->partition_key = $var;

        return $this;
    }

    /**
     * Optional. Specifies the action that occurs if the destination table or
     * partition already exists.
     *
     * Generated from protobuf field <code>.google.cloud.capacityplanner.v1beta.BigQueryDestination.WriteDisposition write_disposition = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getWriteDisposition()
    {
        return $this->write_disposition;
    }

    /**
     * Optional. Specifies the action that occurs if the destination table or
     * partition already exists.
     *
     * Generated from protobuf field <code>.google.cloud.capacityplanner.v1beta.BigQueryDestination.WriteDisposition write_disposition = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setWriteDisposition($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\CapacityPlanner\V1beta\BigQueryDestination\WriteDisposition::class);
        $this->write_disposition = $var;

        return $this;
    }

    /**
     * Optional. Specifies the action that occurs if the destination table does
     * not exist
     *
     * Generated from protobuf field <code>.google.cloud.capacityplanner.v1beta.BigQueryDestination.CreateDisposition create_disposition = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getCreateDisposition()
    {
        return $this->create_disposition;
    }

    /**
     * Optional. Specifies the action that occurs if the destination table does
     * not exist
     *
     * Generated from protobuf field <code>.google.cloud.capacityplanner.v1beta.BigQueryDestination.CreateDisposition create_disposition = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setCreateDisposition($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\CapacityPlanner\V1beta\BigQueryDestination\CreateDisposition::class);
        $this->create_disposition = $var;

        return $this;
    }

    /**
     * Optional. Specifies the Cloud Storage location.
     * Users can choose to provide a location for Cloud Storage bucket to store
     * the exported data. (as it is possible that some locations are restricted
     * via org policy for that project) Temporary Cloud Storage bucket creation is
     * an interim step for BigQuery upload. If no value is provided, the default
     * location used will be 'US'.
     *
     * Generated from protobuf field <code>string gcs_location = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getGcsLocation()
    {
        return $this->gcs_location;
    }

    /**
     * Optional. Specifies the Cloud Storage location.
     * Users can choose to provide a location for Cloud Storage bucket to store
     * the exported data. (as it is possible that some locations are restricted
     * via org policy for that project) Temporary Cloud Storage bucket creation is
     * an interim step for BigQuery upload. If no value is provided, the default
     * location used will be 'US'.
     *
     * Generated from protobuf field <code>string gcs_location = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setGcsLocation($var)
    {
        GPBUtil::checkString($var, True);
        $this->gcs_location = $var;

        return $this;
    }

}

