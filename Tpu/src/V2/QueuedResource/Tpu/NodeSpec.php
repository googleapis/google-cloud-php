<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/tpu/v2/cloud_tpu.proto

namespace Google\Cloud\Tpu\V2\QueuedResource\Tpu;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details of the TPU node(s) being requested. Users can request either a
 * single node or multiple nodes.
 * NodeSpec provides the specification for node(s) to be created.
 *
 * Generated from protobuf message <code>google.cloud.tpu.v2.QueuedResource.Tpu.NodeSpec</code>
 */
class NodeSpec extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The parent resource name.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Required. The node.
     *
     * Generated from protobuf field <code>.google.cloud.tpu.v2.Node node = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $node = null;
    protected $name_strategy;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The parent resource name.
     *     @type string $node_id
     *           Optional. The unqualified resource name. Should follow the
     *           `^[A-Za-z0-9_.~+%-]+$` regex format. This is only specified when
     *           requesting a single node. In case of multislice requests,
     *           multislice_params must be populated instead.
     *     @type \Google\Cloud\Tpu\V2\QueuedResource\Tpu\NodeSpec\MultisliceParams $multislice_params
     *           Optional. Fields to specify in case of multislice request.
     *     @type \Google\Cloud\Tpu\V2\Node $node
     *           Required. The node.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Tpu\V2\CloudTpu::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The parent resource name.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The parent resource name.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Optional. The unqualified resource name. Should follow the
     * `^[A-Za-z0-9_.~+%-]+$` regex format. This is only specified when
     * requesting a single node. In case of multislice requests,
     * multislice_params must be populated instead.
     *
     * Generated from protobuf field <code>string node_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getNodeId()
    {
        return $this->readOneof(2);
    }

    public function hasNodeId()
    {
        return $this->hasOneof(2);
    }

    /**
     * Optional. The unqualified resource name. Should follow the
     * `^[A-Za-z0-9_.~+%-]+$` regex format. This is only specified when
     * requesting a single node. In case of multislice requests,
     * multislice_params must be populated instead.
     *
     * Generated from protobuf field <code>string node_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setNodeId($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Optional. Fields to specify in case of multislice request.
     *
     * Generated from protobuf field <code>.google.cloud.tpu.v2.QueuedResource.Tpu.NodeSpec.MultisliceParams multislice_params = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\Tpu\V2\QueuedResource\Tpu\NodeSpec\MultisliceParams|null
     */
    public function getMultisliceParams()
    {
        return $this->readOneof(3);
    }

    public function hasMultisliceParams()
    {
        return $this->hasOneof(3);
    }

    /**
     * Optional. Fields to specify in case of multislice request.
     *
     * Generated from protobuf field <code>.google.cloud.tpu.v2.QueuedResource.Tpu.NodeSpec.MultisliceParams multislice_params = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\Tpu\V2\QueuedResource\Tpu\NodeSpec\MultisliceParams $var
     * @return $this
     */
    public function setMultisliceParams($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Tpu\V2\QueuedResource\Tpu\NodeSpec\MultisliceParams::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Required. The node.
     *
     * Generated from protobuf field <code>.google.cloud.tpu.v2.Node node = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\Tpu\V2\Node|null
     */
    public function getNode()
    {
        return $this->node;
    }

    public function hasNode()
    {
        return isset($this->node);
    }

    public function clearNode()
    {
        unset($this->node);
    }

    /**
     * Required. The node.
     *
     * Generated from protobuf field <code>.google.cloud.tpu.v2.Node node = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Tpu\V2\Node $var
     * @return $this
     */
    public function setNode($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Tpu\V2\Node::class);
        $this->node = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getNameStrategy()
    {
        return $this->whichOneof("name_strategy");
    }

}


