<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/tpu/v2/cloud_tpu.proto

namespace Google\Cloud\Tpu\V2\AttachedDisk;

use UnexpectedValueException;

/**
 * The different mode of the attached disk.
 *
 * Protobuf type <code>google.cloud.tpu.v2.AttachedDisk.DiskMode</code>
 */
class DiskMode
{
    /**
     * The disk mode is not known/set.
     *
     * Generated from protobuf enum <code>DISK_MODE_UNSPECIFIED = 0;</code>
     */
    const DISK_MODE_UNSPECIFIED = 0;
    /**
     * Attaches the disk in read-write mode. Only one TPU node can attach a disk
     * in read-write mode at a time.
     *
     * Generated from protobuf enum <code>READ_WRITE = 1;</code>
     */
    const READ_WRITE = 1;
    /**
     * Attaches the disk in read-only mode. Multiple TPU nodes can attach
     * a disk in read-only mode at a time.
     *
     * Generated from protobuf enum <code>READ_ONLY = 2;</code>
     */
    const READ_ONLY = 2;

    private static $valueToName = [
        self::DISK_MODE_UNSPECIFIED => 'DISK_MODE_UNSPECIFIED',
        self::READ_WRITE => 'READ_WRITE',
        self::READ_ONLY => 'READ_ONLY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


