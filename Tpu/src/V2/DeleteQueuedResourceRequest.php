<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/tpu/v2/cloud_tpu.proto

namespace Google\Cloud\Tpu\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for
 * [DeleteQueuedResource][google.cloud.tpu.v2.Tpu.DeleteQueuedResource].
 *
 * Generated from protobuf message <code>google.cloud.tpu.v2.DeleteQueuedResourceRequest</code>
 */
class DeleteQueuedResourceRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The resource name.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $name = '';
    /**
     * Optional. Idempotent request UUID.
     *
     * Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $request_id = '';
    /**
     * Optional. If set to true, all running nodes belonging to this queued
     * resource will be deleted first and then the queued resource will be
     * deleted. Otherwise (i.e. force=false), the queued resource will only be
     * deleted if its nodes have already been deleted or the queued resource is in
     * the ACCEPTED, FAILED, or SUSPENDED state.
     *
     * Generated from protobuf field <code>bool force = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $force = false;

    /**
     * @param string $name Required. The resource name. Please see
     *                     {@see TpuClient::queuedResourceName()} for help formatting this field.
     *
     * @return \Google\Cloud\Tpu\V2\DeleteQueuedResourceRequest
     *
     * @experimental
     */
    public static function build(string $name): self
    {
        return (new self())
            ->setName($name);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The resource name.
     *     @type string $request_id
     *           Optional. Idempotent request UUID.
     *     @type bool $force
     *           Optional. If set to true, all running nodes belonging to this queued
     *           resource will be deleted first and then the queued resource will be
     *           deleted. Otherwise (i.e. force=false), the queued resource will only be
     *           deleted if its nodes have already been deleted or the queued resource is in
     *           the ACCEPTED, FAILED, or SUSPENDED state.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Tpu\V2\CloudTpu::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The resource name.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The resource name.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. Idempotent request UUID.
     *
     * Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Optional. Idempotent request UUID.
     *
     * Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

    /**
     * Optional. If set to true, all running nodes belonging to this queued
     * resource will be deleted first and then the queued resource will be
     * deleted. Otherwise (i.e. force=false), the queued resource will only be
     * deleted if its nodes have already been deleted or the queued resource is in
     * the ACCEPTED, FAILED, or SUSPENDED state.
     *
     * Generated from protobuf field <code>bool force = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getForce()
    {
        return $this->force;
    }

    /**
     * Optional. If set to true, all running nodes belonging to this queued
     * resource will be deleted first and then the queued resource will be
     * deleted. Otherwise (i.e. force=false), the queued resource will only be
     * deleted if its nodes have already been deleted or the queued resource is in
     * the ACCEPTED, FAILED, or SUSPENDED state.
     *
     * Generated from protobuf field <code>bool force = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setForce($var)
    {
        GPBUtil::checkBool($var);
        $this->force = $var;

        return $this;
    }

}

