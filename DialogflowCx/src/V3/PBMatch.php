<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dialogflow/cx/v3/session.proto

namespace Google\Cloud\Dialogflow\Cx\V3;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents one match result of [MatchIntent][].
 *
 * Generated from protobuf message <code>google.cloud.dialogflow.cx.v3.Match</code>
 */
class PBMatch extends \Google\Protobuf\Internal\Message
{
    /**
     * The [Intent][google.cloud.dialogflow.cx.v3.Intent] that matched the query.
     * Some, not all fields are filled in this message, including but not limited
     * to: `name` and `display_name`. Only filled for
     * [`INTENT`][google.cloud.dialogflow.cx.v3.Match.MatchType] match type.
     *
     * Generated from protobuf field <code>.google.cloud.dialogflow.cx.v3.Intent intent = 1;</code>
     */
    protected $intent = null;
    /**
     * The event that matched the query. Filled for
     * [`EVENT`][google.cloud.dialogflow.cx.v3.Match.MatchType],
     * [`NO_MATCH`][google.cloud.dialogflow.cx.v3.Match.MatchType] and
     * [`NO_INPUT`][google.cloud.dialogflow.cx.v3.Match.MatchType] match types.
     *
     * Generated from protobuf field <code>string event = 6;</code>
     */
    protected $event = '';
    /**
     * The collection of parameters extracted from the query.
     * Depending on your protocol or client library language, this is a
     * map, associative array, symbol table, dictionary, or JSON object
     * composed of a collection of (MapKey, MapValue) pairs:
     * * MapKey type: string
     * * MapKey value: parameter name
     * * MapValue type: If parameter's entity type is a composite entity then use
     * map, otherwise, depending on the parameter value type, it could be one of
     * string, number, boolean, null, list or map.
     * * MapValue value: If parameter's entity type is a composite entity then use
     * map from composite entity property names to property values, otherwise,
     * use parameter value.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct parameters = 2;</code>
     */
    protected $parameters = null;
    /**
     * Final text input which was matched during MatchIntent. This value can be
     * different from original input sent in request because of spelling
     * correction or other processing.
     *
     * Generated from protobuf field <code>string resolved_input = 3;</code>
     */
    protected $resolved_input = '';
    /**
     * Type of this [Match][google.cloud.dialogflow.cx.v3.Match].
     *
     * Generated from protobuf field <code>.google.cloud.dialogflow.cx.v3.Match.MatchType match_type = 4;</code>
     */
    protected $match_type = 0;
    /**
     * The confidence of this match. Values range from 0.0 (completely uncertain)
     * to 1.0 (completely certain).
     * This value is for informational purpose only and is only used to help match
     * the best intent within the classification threshold. This value may change
     * for the same end-user expression at any time due to a model retraining or
     * change in implementation.
     *
     * Generated from protobuf field <code>float confidence = 5;</code>
     */
    protected $confidence = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Dialogflow\Cx\V3\Intent $intent
     *           The [Intent][google.cloud.dialogflow.cx.v3.Intent] that matched the query.
     *           Some, not all fields are filled in this message, including but not limited
     *           to: `name` and `display_name`. Only filled for
     *           [`INTENT`][google.cloud.dialogflow.cx.v3.Match.MatchType] match type.
     *     @type string $event
     *           The event that matched the query. Filled for
     *           [`EVENT`][google.cloud.dialogflow.cx.v3.Match.MatchType],
     *           [`NO_MATCH`][google.cloud.dialogflow.cx.v3.Match.MatchType] and
     *           [`NO_INPUT`][google.cloud.dialogflow.cx.v3.Match.MatchType] match types.
     *     @type \Google\Protobuf\Struct $parameters
     *           The collection of parameters extracted from the query.
     *           Depending on your protocol or client library language, this is a
     *           map, associative array, symbol table, dictionary, or JSON object
     *           composed of a collection of (MapKey, MapValue) pairs:
     *           * MapKey type: string
     *           * MapKey value: parameter name
     *           * MapValue type: If parameter's entity type is a composite entity then use
     *           map, otherwise, depending on the parameter value type, it could be one of
     *           string, number, boolean, null, list or map.
     *           * MapValue value: If parameter's entity type is a composite entity then use
     *           map from composite entity property names to property values, otherwise,
     *           use parameter value.
     *     @type string $resolved_input
     *           Final text input which was matched during MatchIntent. This value can be
     *           different from original input sent in request because of spelling
     *           correction or other processing.
     *     @type int $match_type
     *           Type of this [Match][google.cloud.dialogflow.cx.v3.Match].
     *     @type float $confidence
     *           The confidence of this match. Values range from 0.0 (completely uncertain)
     *           to 1.0 (completely certain).
     *           This value is for informational purpose only and is only used to help match
     *           the best intent within the classification threshold. This value may change
     *           for the same end-user expression at any time due to a model retraining or
     *           change in implementation.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dialogflow\Cx\V3\Session::initOnce();
        parent::__construct($data);
    }

    /**
     * The [Intent][google.cloud.dialogflow.cx.v3.Intent] that matched the query.
     * Some, not all fields are filled in this message, including but not limited
     * to: `name` and `display_name`. Only filled for
     * [`INTENT`][google.cloud.dialogflow.cx.v3.Match.MatchType] match type.
     *
     * Generated from protobuf field <code>.google.cloud.dialogflow.cx.v3.Intent intent = 1;</code>
     * @return \Google\Cloud\Dialogflow\Cx\V3\Intent|null
     */
    public function getIntent()
    {
        return $this->intent;
    }

    public function hasIntent()
    {
        return isset($this->intent);
    }

    public function clearIntent()
    {
        unset($this->intent);
    }

    /**
     * The [Intent][google.cloud.dialogflow.cx.v3.Intent] that matched the query.
     * Some, not all fields are filled in this message, including but not limited
     * to: `name` and `display_name`. Only filled for
     * [`INTENT`][google.cloud.dialogflow.cx.v3.Match.MatchType] match type.
     *
     * Generated from protobuf field <code>.google.cloud.dialogflow.cx.v3.Intent intent = 1;</code>
     * @param \Google\Cloud\Dialogflow\Cx\V3\Intent $var
     * @return $this
     */
    public function setIntent($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dialogflow\Cx\V3\Intent::class);
        $this->intent = $var;

        return $this;
    }

    /**
     * The event that matched the query. Filled for
     * [`EVENT`][google.cloud.dialogflow.cx.v3.Match.MatchType],
     * [`NO_MATCH`][google.cloud.dialogflow.cx.v3.Match.MatchType] and
     * [`NO_INPUT`][google.cloud.dialogflow.cx.v3.Match.MatchType] match types.
     *
     * Generated from protobuf field <code>string event = 6;</code>
     * @return string
     */
    public function getEvent()
    {
        return $this->event;
    }

    /**
     * The event that matched the query. Filled for
     * [`EVENT`][google.cloud.dialogflow.cx.v3.Match.MatchType],
     * [`NO_MATCH`][google.cloud.dialogflow.cx.v3.Match.MatchType] and
     * [`NO_INPUT`][google.cloud.dialogflow.cx.v3.Match.MatchType] match types.
     *
     * Generated from protobuf field <code>string event = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setEvent($var)
    {
        GPBUtil::checkString($var, True);
        $this->event = $var;

        return $this;
    }

    /**
     * The collection of parameters extracted from the query.
     * Depending on your protocol or client library language, this is a
     * map, associative array, symbol table, dictionary, or JSON object
     * composed of a collection of (MapKey, MapValue) pairs:
     * * MapKey type: string
     * * MapKey value: parameter name
     * * MapValue type: If parameter's entity type is a composite entity then use
     * map, otherwise, depending on the parameter value type, it could be one of
     * string, number, boolean, null, list or map.
     * * MapValue value: If parameter's entity type is a composite entity then use
     * map from composite entity property names to property values, otherwise,
     * use parameter value.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct parameters = 2;</code>
     * @return \Google\Protobuf\Struct|null
     */
    public function getParameters()
    {
        return $this->parameters;
    }

    public function hasParameters()
    {
        return isset($this->parameters);
    }

    public function clearParameters()
    {
        unset($this->parameters);
    }

    /**
     * The collection of parameters extracted from the query.
     * Depending on your protocol or client library language, this is a
     * map, associative array, symbol table, dictionary, or JSON object
     * composed of a collection of (MapKey, MapValue) pairs:
     * * MapKey type: string
     * * MapKey value: parameter name
     * * MapValue type: If parameter's entity type is a composite entity then use
     * map, otherwise, depending on the parameter value type, it could be one of
     * string, number, boolean, null, list or map.
     * * MapValue value: If parameter's entity type is a composite entity then use
     * map from composite entity property names to property values, otherwise,
     * use parameter value.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct parameters = 2;</code>
     * @param \Google\Protobuf\Struct $var
     * @return $this
     */
    public function setParameters($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Struct::class);
        $this->parameters = $var;

        return $this;
    }

    /**
     * Final text input which was matched during MatchIntent. This value can be
     * different from original input sent in request because of spelling
     * correction or other processing.
     *
     * Generated from protobuf field <code>string resolved_input = 3;</code>
     * @return string
     */
    public function getResolvedInput()
    {
        return $this->resolved_input;
    }

    /**
     * Final text input which was matched during MatchIntent. This value can be
     * different from original input sent in request because of spelling
     * correction or other processing.
     *
     * Generated from protobuf field <code>string resolved_input = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setResolvedInput($var)
    {
        GPBUtil::checkString($var, True);
        $this->resolved_input = $var;

        return $this;
    }

    /**
     * Type of this [Match][google.cloud.dialogflow.cx.v3.Match].
     *
     * Generated from protobuf field <code>.google.cloud.dialogflow.cx.v3.Match.MatchType match_type = 4;</code>
     * @return int
     */
    public function getMatchType()
    {
        return $this->match_type;
    }

    /**
     * Type of this [Match][google.cloud.dialogflow.cx.v3.Match].
     *
     * Generated from protobuf field <code>.google.cloud.dialogflow.cx.v3.Match.MatchType match_type = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setMatchType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Dialogflow\Cx\V3\PBMatch\MatchType::class);
        $this->match_type = $var;

        return $this;
    }

    /**
     * The confidence of this match. Values range from 0.0 (completely uncertain)
     * to 1.0 (completely certain).
     * This value is for informational purpose only and is only used to help match
     * the best intent within the classification threshold. This value may change
     * for the same end-user expression at any time due to a model retraining or
     * change in implementation.
     *
     * Generated from protobuf field <code>float confidence = 5;</code>
     * @return float
     */
    public function getConfidence()
    {
        return $this->confidence;
    }

    /**
     * The confidence of this match. Values range from 0.0 (completely uncertain)
     * to 1.0 (completely certain).
     * This value is for informational purpose only and is only used to help match
     * the best intent within the classification threshold. This value may change
     * for the same end-user expression at any time due to a model retraining or
     * change in implementation.
     *
     * Generated from protobuf field <code>float confidence = 5;</code>
     * @param float $var
     * @return $this
     */
    public function setConfidence($var)
    {
        GPBUtil::checkFloat($var);
        $this->confidence = $var;

        return $this;
    }

}

