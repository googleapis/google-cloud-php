<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/chat/v1/history_state.proto

namespace Google\Apps\Chat\V1;

use UnexpectedValueException;

/**
 * The history state for messages and spaces. Specifies how long messages and
 * conversation threads are kept after creation.
 *
 * Protobuf type <code>google.chat.v1.HistoryState</code>
 */
class HistoryState
{
    /**
     * Default value. Do not use.
     *
     * Generated from protobuf enum <code>HISTORY_STATE_UNSPECIFIED = 0;</code>
     */
    const HISTORY_STATE_UNSPECIFIED = 0;
    /**
     * History off. [Messages and threads are kept for 24
     * hours](https://support.google.com/chat/answer/7664687).
     *
     * Generated from protobuf enum <code>HISTORY_OFF = 1;</code>
     */
    const HISTORY_OFF = 1;
    /**
     * History on. The organization's [Vault retention
     * rules](https://support.google.com/vault/answer/7657597) specify for
     * how long messages and threads are kept.
     *
     * Generated from protobuf enum <code>HISTORY_ON = 2;</code>
     */
    const HISTORY_ON = 2;

    private static $valueToName = [
        self::HISTORY_STATE_UNSPECIFIED => 'HISTORY_STATE_UNSPECIFIED',
        self::HISTORY_OFF => 'HISTORY_OFF',
        self::HISTORY_ON => 'HISTORY_ON',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

