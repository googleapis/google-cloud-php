<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/chat/v1/annotation.proto

namespace Google\Apps\Chat\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Data for Chat space links.
 *
 * Generated from protobuf message <code>google.chat.v1.ChatSpaceLinkData</code>
 */
class ChatSpaceLinkData extends \Google\Protobuf\Internal\Message
{
    /**
     * The space of the linked Chat space resource.
     * Format: `spaces/{space}`
     *
     * Generated from protobuf field <code>string space = 1 [(.google.api.resource_reference) = {</code>
     */
    protected $space = '';
    /**
     * The thread of the linked Chat space resource.
     * Format: `spaces/{space}/threads/{thread}`
     *
     * Generated from protobuf field <code>string thread = 2 [(.google.api.resource_reference) = {</code>
     */
    protected $thread = '';
    /**
     * The message of the linked Chat space resource.
     * Format: `spaces/{space}/messages/{message}`
     *
     * Generated from protobuf field <code>string message = 3 [(.google.api.resource_reference) = {</code>
     */
    protected $message = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $space
     *           The space of the linked Chat space resource.
     *           Format: `spaces/{space}`
     *     @type string $thread
     *           The thread of the linked Chat space resource.
     *           Format: `spaces/{space}/threads/{thread}`
     *     @type string $message
     *           The message of the linked Chat space resource.
     *           Format: `spaces/{space}/messages/{message}`
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Chat\V1\Annotation::initOnce();
        parent::__construct($data);
    }

    /**
     * The space of the linked Chat space resource.
     * Format: `spaces/{space}`
     *
     * Generated from protobuf field <code>string space = 1 [(.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getSpace()
    {
        return $this->space;
    }

    /**
     * The space of the linked Chat space resource.
     * Format: `spaces/{space}`
     *
     * Generated from protobuf field <code>string space = 1 [(.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setSpace($var)
    {
        GPBUtil::checkString($var, True);
        $this->space = $var;

        return $this;
    }

    /**
     * The thread of the linked Chat space resource.
     * Format: `spaces/{space}/threads/{thread}`
     *
     * Generated from protobuf field <code>string thread = 2 [(.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getThread()
    {
        return $this->thread;
    }

    /**
     * The thread of the linked Chat space resource.
     * Format: `spaces/{space}/threads/{thread}`
     *
     * Generated from protobuf field <code>string thread = 2 [(.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setThread($var)
    {
        GPBUtil::checkString($var, True);
        $this->thread = $var;

        return $this;
    }

    /**
     * The message of the linked Chat space resource.
     * Format: `spaces/{space}/messages/{message}`
     *
     * Generated from protobuf field <code>string message = 3 [(.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * The message of the linked Chat space resource.
     * Format: `spaces/{space}/messages/{message}`
     *
     * Generated from protobuf field <code>string message = 3 [(.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->message = $var;

        return $this;
    }

}

