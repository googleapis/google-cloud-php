<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/chat/v1/space.proto

namespace Google\Apps\Chat\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A request to update a single space.
 *
 * Generated from protobuf message <code>google.chat.v1.UpdateSpaceRequest</code>
 */
class UpdateSpaceRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Space with fields to be updated. `Space.name` must be
     * populated in the form of `spaces/{space}`. Only fields
     * specified by `update_mask` are updated.
     *
     * Generated from protobuf field <code>.google.chat.v1.Space space = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $space = null;
    /**
     * Required. The updated field paths, comma separated if there are
     * multiple.
     * Currently supported field paths:
     * - `display_name` (Only supports changing the display name of a space with
     * the `SPACE` type, or when also including the `space_type` mask to change a
     * `GROUP_CHAT` space type to `SPACE`. Trying to update the display name of a
     * `GROUP_CHAT` or a `DIRECT_MESSAGE` space results in an invalid argument
     * error. If you receive the error message `ALREADY_EXISTS` when updating the
     * `displayName`, try a different `displayName`. An existing space within the
     * Google Workspace organization might already use this display name.)
     * - `space_type` (Only supports changing a `GROUP_CHAT` space type to
     * `SPACE`. Include `display_name` together
     * with `space_type` in the update mask and ensure that the specified space
     * has a non-empty display name and the `SPACE` space type. Including the
     * `space_type` mask and the `SPACE` type in the specified space when updating
     * the display name is optional if the existing space already has the `SPACE`
     * type. Trying to update the space type in other ways results in an invalid
     * argument error).
     * - `space_details`
     * - `space_history_state` (Supports [turning history on or off for the
     * space](https://support.google.com/chat/answer/7664687) if [the organization
     * allows users to change their history
     * setting](https://support.google.com/a/answer/7664184).
     * Warning: mutually exclusive with all other field paths.)
     * - Developer Preview: `access_settings.audience` (Supports changing the
     * [access setting](https://support.google.com/chat/answer/11971020) of a
     * space. If no audience is specified in the access setting, the space's
     * access setting is updated to restricted. Warning: mutually exclusive with
     * all other field paths.)
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     */
    protected $update_mask = null;

    /**
     * @param \Google\Apps\Chat\V1\Space $space      Required. Space with fields to be updated. `Space.name` must be
     *                                               populated in the form of `spaces/{space}`. Only fields
     *                                               specified by `update_mask` are updated.
     * @param \Google\Protobuf\FieldMask $updateMask Required. The updated field paths, comma separated if there are
     *                                               multiple.
     *
     *                                               Currently supported field paths:
     *
     *                                               - `display_name` (Only supports changing the display name of a space with
     *                                               the `SPACE` type, or when also including the `space_type` mask to change a
     *                                               `GROUP_CHAT` space type to `SPACE`. Trying to update the display name of a
     *                                               `GROUP_CHAT` or a `DIRECT_MESSAGE` space results in an invalid argument
     *                                               error. If you receive the error message `ALREADY_EXISTS` when updating the
     *                                               `displayName`, try a different `displayName`. An existing space within the
     *                                               Google Workspace organization might already use this display name.)
     *
     *                                               - `space_type` (Only supports changing a `GROUP_CHAT` space type to
     *                                               `SPACE`. Include `display_name` together
     *                                               with `space_type` in the update mask and ensure that the specified space
     *                                               has a non-empty display name and the `SPACE` space type. Including the
     *                                               `space_type` mask and the `SPACE` type in the specified space when updating
     *                                               the display name is optional if the existing space already has the `SPACE`
     *                                               type. Trying to update the space type in other ways results in an invalid
     *                                               argument error).
     *
     *                                               - `space_details`
     *
     *                                               - `space_history_state` (Supports [turning history on or off for the
     *                                               space](https://support.google.com/chat/answer/7664687) if [the organization
     *                                               allows users to change their history
     *                                               setting](https://support.google.com/a/answer/7664184).
     *                                               Warning: mutually exclusive with all other field paths.)
     *
     *                                               - Developer Preview: `access_settings.audience` (Supports changing the
     *                                               [access setting](https://support.google.com/chat/answer/11971020) of a
     *                                               space. If no audience is specified in the access setting, the space's
     *                                               access setting is updated to restricted. Warning: mutually exclusive with
     *                                               all other field paths.)
     *
     * @return \Google\Apps\Chat\V1\UpdateSpaceRequest
     *
     * @experimental
     */
    public static function build(\Google\Apps\Chat\V1\Space $space, \Google\Protobuf\FieldMask $updateMask): self
    {
        return (new self())
            ->setSpace($space)
            ->setUpdateMask($updateMask);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Apps\Chat\V1\Space $space
     *           Required. Space with fields to be updated. `Space.name` must be
     *           populated in the form of `spaces/{space}`. Only fields
     *           specified by `update_mask` are updated.
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           Required. The updated field paths, comma separated if there are
     *           multiple.
     *           Currently supported field paths:
     *           - `display_name` (Only supports changing the display name of a space with
     *           the `SPACE` type, or when also including the `space_type` mask to change a
     *           `GROUP_CHAT` space type to `SPACE`. Trying to update the display name of a
     *           `GROUP_CHAT` or a `DIRECT_MESSAGE` space results in an invalid argument
     *           error. If you receive the error message `ALREADY_EXISTS` when updating the
     *           `displayName`, try a different `displayName`. An existing space within the
     *           Google Workspace organization might already use this display name.)
     *           - `space_type` (Only supports changing a `GROUP_CHAT` space type to
     *           `SPACE`. Include `display_name` together
     *           with `space_type` in the update mask and ensure that the specified space
     *           has a non-empty display name and the `SPACE` space type. Including the
     *           `space_type` mask and the `SPACE` type in the specified space when updating
     *           the display name is optional if the existing space already has the `SPACE`
     *           type. Trying to update the space type in other ways results in an invalid
     *           argument error).
     *           - `space_details`
     *           - `space_history_state` (Supports [turning history on or off for the
     *           space](https://support.google.com/chat/answer/7664687) if [the organization
     *           allows users to change their history
     *           setting](https://support.google.com/a/answer/7664184).
     *           Warning: mutually exclusive with all other field paths.)
     *           - Developer Preview: `access_settings.audience` (Supports changing the
     *           [access setting](https://support.google.com/chat/answer/11971020) of a
     *           space. If no audience is specified in the access setting, the space's
     *           access setting is updated to restricted. Warning: mutually exclusive with
     *           all other field paths.)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Chat\V1\Space::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Space with fields to be updated. `Space.name` must be
     * populated in the form of `spaces/{space}`. Only fields
     * specified by `update_mask` are updated.
     *
     * Generated from protobuf field <code>.google.chat.v1.Space space = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Apps\Chat\V1\Space|null
     */
    public function getSpace()
    {
        return $this->space;
    }

    public function hasSpace()
    {
        return isset($this->space);
    }

    public function clearSpace()
    {
        unset($this->space);
    }

    /**
     * Required. Space with fields to be updated. `Space.name` must be
     * populated in the form of `spaces/{space}`. Only fields
     * specified by `update_mask` are updated.
     *
     * Generated from protobuf field <code>.google.chat.v1.Space space = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Apps\Chat\V1\Space $var
     * @return $this
     */
    public function setSpace($var)
    {
        GPBUtil::checkMessage($var, \Google\Apps\Chat\V1\Space::class);
        $this->space = $var;

        return $this;
    }

    /**
     * Required. The updated field paths, comma separated if there are
     * multiple.
     * Currently supported field paths:
     * - `display_name` (Only supports changing the display name of a space with
     * the `SPACE` type, or when also including the `space_type` mask to change a
     * `GROUP_CHAT` space type to `SPACE`. Trying to update the display name of a
     * `GROUP_CHAT` or a `DIRECT_MESSAGE` space results in an invalid argument
     * error. If you receive the error message `ALREADY_EXISTS` when updating the
     * `displayName`, try a different `displayName`. An existing space within the
     * Google Workspace organization might already use this display name.)
     * - `space_type` (Only supports changing a `GROUP_CHAT` space type to
     * `SPACE`. Include `display_name` together
     * with `space_type` in the update mask and ensure that the specified space
     * has a non-empty display name and the `SPACE` space type. Including the
     * `space_type` mask and the `SPACE` type in the specified space when updating
     * the display name is optional if the existing space already has the `SPACE`
     * type. Trying to update the space type in other ways results in an invalid
     * argument error).
     * - `space_details`
     * - `space_history_state` (Supports [turning history on or off for the
     * space](https://support.google.com/chat/answer/7664687) if [the organization
     * allows users to change their history
     * setting](https://support.google.com/a/answer/7664184).
     * Warning: mutually exclusive with all other field paths.)
     * - Developer Preview: `access_settings.audience` (Supports changing the
     * [access setting](https://support.google.com/chat/answer/11971020) of a
     * space. If no audience is specified in the access setting, the space's
     * access setting is updated to restricted. Warning: mutually exclusive with
     * all other field paths.)
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * Required. The updated field paths, comma separated if there are
     * multiple.
     * Currently supported field paths:
     * - `display_name` (Only supports changing the display name of a space with
     * the `SPACE` type, or when also including the `space_type` mask to change a
     * `GROUP_CHAT` space type to `SPACE`. Trying to update the display name of a
     * `GROUP_CHAT` or a `DIRECT_MESSAGE` space results in an invalid argument
     * error. If you receive the error message `ALREADY_EXISTS` when updating the
     * `displayName`, try a different `displayName`. An existing space within the
     * Google Workspace organization might already use this display name.)
     * - `space_type` (Only supports changing a `GROUP_CHAT` space type to
     * `SPACE`. Include `display_name` together
     * with `space_type` in the update mask and ensure that the specified space
     * has a non-empty display name and the `SPACE` space type. Including the
     * `space_type` mask and the `SPACE` type in the specified space when updating
     * the display name is optional if the existing space already has the `SPACE`
     * type. Trying to update the space type in other ways results in an invalid
     * argument error).
     * - `space_details`
     * - `space_history_state` (Supports [turning history on or off for the
     * space](https://support.google.com/chat/answer/7664687) if [the organization
     * allows users to change their history
     * setting](https://support.google.com/a/answer/7664184).
     * Warning: mutually exclusive with all other field paths.)
     * - Developer Preview: `access_settings.audience` (Supports changing the
     * [access setting](https://support.google.com/chat/answer/11971020) of a
     * space. If no audience is specified in the access setting, the space's
     * access setting is updated to restricted. Warning: mutually exclusive with
     * all other field paths.)
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

}

