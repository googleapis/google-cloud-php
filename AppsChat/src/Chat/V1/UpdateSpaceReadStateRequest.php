<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/chat/v1/space_read_state.proto

namespace Google\Apps\Chat\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for UpdateSpaceReadState API.
 *
 * Generated from protobuf message <code>google.chat.v1.UpdateSpaceReadStateRequest</code>
 */
class UpdateSpaceReadStateRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The space read state and fields to update.
     * Only supports updating read state for the calling user.
     * To refer to the calling user, set one of the following:
     * - The `me` alias. For example, `users/me/spaces/{space}/spaceReadState`.
     * - Their Workspace email address. For example,
     * `users/user&#64;example.com/spaces/{space}/spaceReadState`.
     * - Their user id. For example,
     * `users/123456789/spaces/{space}/spaceReadState`.
     * Format: users/{user}/spaces/{space}/spaceReadState
     *
     * Generated from protobuf field <code>.google.chat.v1.SpaceReadState space_read_state = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $space_read_state = null;
    /**
     * Required. The field paths to update. Currently supported field paths:
     * - `last_read_time`
     * When the `last_read_time` is before the latest message create time, the
     * space appears as unread in the UI.
     * To mark the space as read, set `last_read_time` to any value later (larger)
     * than the latest message create time. The `last_read_time` is coerced to
     * match the latest message create time. Note that the space read state only
     * affects the read state of messages that are visible in the space's
     * top-level conversation. Replies in threads are unaffected by this
     * timestamp, and instead rely on the thread read state.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $update_mask = null;

    /**
     * @param \Google\Apps\Chat\V1\SpaceReadState $spaceReadState Required. The space read state and fields to update.
     *
     *                                                            Only supports updating read state for the calling user.
     *
     *                                                            To refer to the calling user, set one of the following:
     *
     *                                                            - The `me` alias. For example, `users/me/spaces/{space}/spaceReadState`.
     *
     *                                                            - Their Workspace email address. For example,
     *                                                            `users/user&#64;example.com/spaces/{space}/spaceReadState`.
     *
     *                                                            - Their user id. For example,
     *                                                            `users/123456789/spaces/{space}/spaceReadState`.
     *
     *                                                            Format: users/{user}/spaces/{space}/spaceReadState
     * @param \Google\Protobuf\FieldMask          $updateMask     Required. The field paths to update. Currently supported field paths:
     *
     *                                                            - `last_read_time`
     *
     *                                                            When the `last_read_time` is before the latest message create time, the
     *                                                            space appears as unread in the UI.
     *
     *                                                            To mark the space as read, set `last_read_time` to any value later (larger)
     *                                                            than the latest message create time. The `last_read_time` is coerced to
     *                                                            match the latest message create time. Note that the space read state only
     *                                                            affects the read state of messages that are visible in the space's
     *                                                            top-level conversation. Replies in threads are unaffected by this
     *                                                            timestamp, and instead rely on the thread read state.
     *
     * @return \Google\Apps\Chat\V1\UpdateSpaceReadStateRequest
     *
     * @experimental
     */
    public static function build(\Google\Apps\Chat\V1\SpaceReadState $spaceReadState, \Google\Protobuf\FieldMask $updateMask): self
    {
        return (new self())
            ->setSpaceReadState($spaceReadState)
            ->setUpdateMask($updateMask);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Apps\Chat\V1\SpaceReadState $space_read_state
     *           Required. The space read state and fields to update.
     *           Only supports updating read state for the calling user.
     *           To refer to the calling user, set one of the following:
     *           - The `me` alias. For example, `users/me/spaces/{space}/spaceReadState`.
     *           - Their Workspace email address. For example,
     *           `users/user&#64;example.com/spaces/{space}/spaceReadState`.
     *           - Their user id. For example,
     *           `users/123456789/spaces/{space}/spaceReadState`.
     *           Format: users/{user}/spaces/{space}/spaceReadState
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           Required. The field paths to update. Currently supported field paths:
     *           - `last_read_time`
     *           When the `last_read_time` is before the latest message create time, the
     *           space appears as unread in the UI.
     *           To mark the space as read, set `last_read_time` to any value later (larger)
     *           than the latest message create time. The `last_read_time` is coerced to
     *           match the latest message create time. Note that the space read state only
     *           affects the read state of messages that are visible in the space's
     *           top-level conversation. Replies in threads are unaffected by this
     *           timestamp, and instead rely on the thread read state.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Chat\V1\SpaceReadState::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The space read state and fields to update.
     * Only supports updating read state for the calling user.
     * To refer to the calling user, set one of the following:
     * - The `me` alias. For example, `users/me/spaces/{space}/spaceReadState`.
     * - Their Workspace email address. For example,
     * `users/user&#64;example.com/spaces/{space}/spaceReadState`.
     * - Their user id. For example,
     * `users/123456789/spaces/{space}/spaceReadState`.
     * Format: users/{user}/spaces/{space}/spaceReadState
     *
     * Generated from protobuf field <code>.google.chat.v1.SpaceReadState space_read_state = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Apps\Chat\V1\SpaceReadState|null
     */
    public function getSpaceReadState()
    {
        return $this->space_read_state;
    }

    public function hasSpaceReadState()
    {
        return isset($this->space_read_state);
    }

    public function clearSpaceReadState()
    {
        unset($this->space_read_state);
    }

    /**
     * Required. The space read state and fields to update.
     * Only supports updating read state for the calling user.
     * To refer to the calling user, set one of the following:
     * - The `me` alias. For example, `users/me/spaces/{space}/spaceReadState`.
     * - Their Workspace email address. For example,
     * `users/user&#64;example.com/spaces/{space}/spaceReadState`.
     * - Their user id. For example,
     * `users/123456789/spaces/{space}/spaceReadState`.
     * Format: users/{user}/spaces/{space}/spaceReadState
     *
     * Generated from protobuf field <code>.google.chat.v1.SpaceReadState space_read_state = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Apps\Chat\V1\SpaceReadState $var
     * @return $this
     */
    public function setSpaceReadState($var)
    {
        GPBUtil::checkMessage($var, \Google\Apps\Chat\V1\SpaceReadState::class);
        $this->space_read_state = $var;

        return $this;
    }

    /**
     * Required. The field paths to update. Currently supported field paths:
     * - `last_read_time`
     * When the `last_read_time` is before the latest message create time, the
     * space appears as unread in the UI.
     * To mark the space as read, set `last_read_time` to any value later (larger)
     * than the latest message create time. The `last_read_time` is coerced to
     * match the latest message create time. Note that the space read state only
     * affects the read state of messages that are visible in the space's
     * top-level conversation. Replies in threads are unaffected by this
     * timestamp, and instead rely on the thread read state.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * Required. The field paths to update. Currently supported field paths:
     * - `last_read_time`
     * When the `last_read_time` is before the latest message create time, the
     * space appears as unread in the UI.
     * To mark the space as read, set `last_read_time` to any value later (larger)
     * than the latest message create time. The `last_read_time` is coerced to
     * match the latest message create time. Note that the space read state only
     * affects the read state of messages that are visible in the space's
     * top-level conversation. Replies in threads are unaffected by this
     * timestamp, and instead rely on the thread read state.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

}

