<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/chat/v1/space.proto

namespace Google\Apps\Chat\V1\Space;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details about the space including description and rules.
 *
 * Generated from protobuf message <code>google.chat.v1.Space.SpaceDetails</code>
 */
class SpaceDetails extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. A description of the space. For example, describe the space's
     * discussion topic, functional purpose, or participants.
     * Supports up to 150 characters.
     *
     * Generated from protobuf field <code>string description = 1;</code>
     */
    protected $description = '';
    /**
     * Optional. The space's rules, expectations, and etiquette.
     * Supports up to 5,000 characters.
     *
     * Generated from protobuf field <code>string guidelines = 2;</code>
     */
    protected $guidelines = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $description
     *           Optional. A description of the space. For example, describe the space's
     *           discussion topic, functional purpose, or participants.
     *           Supports up to 150 characters.
     *     @type string $guidelines
     *           Optional. The space's rules, expectations, and etiquette.
     *           Supports up to 5,000 characters.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Chat\V1\Space::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. A description of the space. For example, describe the space's
     * discussion topic, functional purpose, or participants.
     * Supports up to 150 characters.
     *
     * Generated from protobuf field <code>string description = 1;</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Optional. A description of the space. For example, describe the space's
     * discussion topic, functional purpose, or participants.
     * Supports up to 150 characters.
     *
     * Generated from protobuf field <code>string description = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Optional. The space's rules, expectations, and etiquette.
     * Supports up to 5,000 characters.
     *
     * Generated from protobuf field <code>string guidelines = 2;</code>
     * @return string
     */
    public function getGuidelines()
    {
        return $this->guidelines;
    }

    /**
     * Optional. The space's rules, expectations, and etiquette.
     * Supports up to 5,000 characters.
     *
     * Generated from protobuf field <code>string guidelines = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setGuidelines($var)
    {
        GPBUtil::checkString($var, True);
        $this->guidelines = $var;

        return $this;
    }

}


