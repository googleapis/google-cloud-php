<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/apps/card/v1/card.proto

namespace Google\Apps\Card\V1\Columns\Column;

use UnexpectedValueException;

/**
 * Specifies how a column fills the width of the card. The width of each
 * column depends on both the `HorizontalSizeStyle` and the width of the
 * widgets within the column.
 * [Google Workspace Add-ons and Chat
 * apps](https://developers.google.com/workspace/extend):
 * Columns for Google Workspace Add-ons are in
 * Developer Preview.
 *
 * Protobuf type <code>google.apps.card.v1.Columns.Column.HorizontalSizeStyle</code>
 */
class HorizontalSizeStyle
{
    /**
     * Don't use. Unspecified.
     *
     * Generated from protobuf enum <code>HORIZONTAL_SIZE_STYLE_UNSPECIFIED = 0;</code>
     */
    const HORIZONTAL_SIZE_STYLE_UNSPECIFIED = 0;
    /**
     * Default value. Column fills the available space, up to 70% of the
     * card's width. If both columns are set to `FILL_AVAILABLE_SPACE`, each
     * column fills 50% of the space.
     *
     * Generated from protobuf enum <code>FILL_AVAILABLE_SPACE = 1;</code>
     */
    const FILL_AVAILABLE_SPACE = 1;
    /**
     * Column fills the least amount of space possible and no more than 30% of
     * the card's width.
     *
     * Generated from protobuf enum <code>FILL_MINIMUM_SPACE = 2;</code>
     */
    const FILL_MINIMUM_SPACE = 2;

    private static $valueToName = [
        self::HORIZONTAL_SIZE_STYLE_UNSPECIFIED => 'HORIZONTAL_SIZE_STYLE_UNSPECIFIED',
        self::FILL_AVAILABLE_SPACE => 'FILL_AVAILABLE_SPACE',
        self::FILL_MINIMUM_SPACE => 'FILL_MINIMUM_SPACE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


