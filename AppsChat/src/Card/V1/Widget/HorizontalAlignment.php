<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/apps/card/v1/card.proto

namespace Google\Apps\Card\V1\Widget;

use UnexpectedValueException;

/**
 * Specifies whether widgets align to the left, right, or center of a column.
 * [Google Chat apps](https://developers.google.com/workspace/chat):
 *
 * Protobuf type <code>google.apps.card.v1.Widget.HorizontalAlignment</code>
 */
class HorizontalAlignment
{
    /**
     * Don't use. Unspecified.
     *
     * Generated from protobuf enum <code>HORIZONTAL_ALIGNMENT_UNSPECIFIED = 0;</code>
     */
    const HORIZONTAL_ALIGNMENT_UNSPECIFIED = 0;
    /**
     * Default value. Aligns widgets to the start position of the column. For
     * left-to-right layouts, aligns to the left. For right-to-left layouts,
     * aligns to the right.
     *
     * Generated from protobuf enum <code>START = 1;</code>
     */
    const START = 1;
    /**
     * Aligns widgets to the center of the column.
     *
     * Generated from protobuf enum <code>CENTER = 2;</code>
     */
    const CENTER = 2;
    /**
     * Aligns widgets to the end position of the column. For left-to-right
     * layouts, aligns widgets to the right. For right-to-left layouts, aligns
     * widgets to the left.
     *
     * Generated from protobuf enum <code>END = 3;</code>
     */
    const END = 3;

    private static $valueToName = [
        self::HORIZONTAL_ALIGNMENT_UNSPECIFIED => 'HORIZONTAL_ALIGNMENT_UNSPECIFIED',
        self::START => 'START',
        self::CENTER => 'CENTER',
        self::END => 'END',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


