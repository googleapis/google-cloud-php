<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/apps/card/v1/card.proto

namespace Google\Apps\Card\V1\SelectionInput;

use UnexpectedValueException;

/**
 * The format for the items that users can select. Different options support
 * different types of interactions. For example, users can select multiple
 * checkboxes, but can only select one item from a dropdown menu.
 * Each selection input supports one type of selection. Mixing checkboxes
 * and switches, for example, isn't supported.
 * [Google Workspace Add-ons and Chat
 * apps](https://developers.google.com/workspace/extend):
 *
 * Protobuf type <code>google.apps.card.v1.SelectionInput.SelectionType</code>
 */
class SelectionType
{
    /**
     * A set of checkboxes. Users can select one or more checkboxes.
     *
     * Generated from protobuf enum <code>CHECK_BOX = 0;</code>
     */
    const CHECK_BOX = 0;
    /**
     * A set of radio buttons. Users can select one radio button.
     *
     * Generated from protobuf enum <code>RADIO_BUTTON = 1;</code>
     */
    const RADIO_BUTTON = 1;
    /**
     * A set of switches. Users can turn on one or more switches.
     *
     * Generated from protobuf enum <code>SWITCH = 2;</code>
     */
    const PBSWITCH = 2;
    /**
     * A dropdown menu. Users can select one item from the menu.
     *
     * Generated from protobuf enum <code>DROPDOWN = 3;</code>
     */
    const DROPDOWN = 3;
    /**
     * A multiselect menu for static or dynamic data. From the menu bar,
     * users select one or more items. Users can also input values to populate
     * dynamic data. For example, users can start typing the name of a Google
     * Chat space and the widget autosuggests the space.
     * To populate items for a multiselect menu, you can use one of the
     * following types of data sources:
     *  * Static data: Items are specified as `SelectionItem` objects in the
     *    widget. Up to 100 items.
     *  * Google Workspace data: Items are populated using data from Google
     *    Workspace, such as Google Workspace users or Google Chat spaces.
     *  * External data: Items are populated from an external data
     *    source outside of Google Workspace.
     * For examples of how to implement multiselect menus, see
     * [Add a multiselect
     * menu](https://developers.google.com/workspace/chat/design-interactive-card-dialog#multiselect-menu).
     * [Google Workspace Add-ons and Chat
     * apps](https://developers.google.com/workspace/extend):
     * Multiselect for Google Workspace Add-ons are in
     * Developer Preview.
     *
     * Generated from protobuf enum <code>MULTI_SELECT = 4;</code>
     */
    const MULTI_SELECT = 4;

    private static $valueToName = [
        self::CHECK_BOX => 'CHECK_BOX',
        self::RADIO_BUTTON => 'RADIO_BUTTON',
        self::PBSWITCH => 'SWITCH',
        self::DROPDOWN => 'DROPDOWN',
        self::MULTI_SELECT => 'MULTI_SELECT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            $pbconst =  __CLASS__. '::PB' . strtoupper($name);
            if (!defined($pbconst)) {
                throw new UnexpectedValueException(sprintf(
                        'Enum %s has no value defined for name %s', __CLASS__, $name));
            }
            return constant($pbconst);
        }
        return constant($const);
    }
}


