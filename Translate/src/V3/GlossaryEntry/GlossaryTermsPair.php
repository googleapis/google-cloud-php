<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/translate/v3/common.proto

namespace Google\Cloud\Translate\V3\GlossaryEntry;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents a single entry for an unidirectional glossary.
 *
 * Generated from protobuf message <code>google.cloud.translation.v3.GlossaryEntry.GlossaryTermsPair</code>
 */
class GlossaryTermsPair extends \Google\Protobuf\Internal\Message
{
    /**
     * The source term is the term that will get match in the text,
     *
     * Generated from protobuf field <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
     */
    private $source_term = null;
    /**
     * The term that will replace the match source term.
     *
     * Generated from protobuf field <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
     */
    private $target_term = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Translate\V3\GlossaryTerm $source_term
     *           The source term is the term that will get match in the text,
     *     @type \Google\Cloud\Translate\V3\GlossaryTerm $target_term
     *           The term that will replace the match source term.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Translate\V3\Common::initOnce();
        parent::__construct($data);
    }

    /**
     * The source term is the term that will get match in the text,
     *
     * Generated from protobuf field <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
     * @return \Google\Cloud\Translate\V3\GlossaryTerm|null
     */
    public function getSourceTerm()
    {
        return $this->source_term;
    }

    public function hasSourceTerm()
    {
        return isset($this->source_term);
    }

    public function clearSourceTerm()
    {
        unset($this->source_term);
    }

    /**
     * The source term is the term that will get match in the text,
     *
     * Generated from protobuf field <code>.google.cloud.translation.v3.GlossaryTerm source_term = 1;</code>
     * @param \Google\Cloud\Translate\V3\GlossaryTerm $var
     * @return $this
     */
    public function setSourceTerm($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Translate\V3\GlossaryTerm::class);
        $this->source_term = $var;

        return $this;
    }

    /**
     * The term that will replace the match source term.
     *
     * Generated from protobuf field <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
     * @return \Google\Cloud\Translate\V3\GlossaryTerm|null
     */
    public function getTargetTerm()
    {
        return $this->target_term;
    }

    public function hasTargetTerm()
    {
        return isset($this->target_term);
    }

    public function clearTargetTerm()
    {
        unset($this->target_term);
    }

    /**
     * The term that will replace the match source term.
     *
     * Generated from protobuf field <code>.google.cloud.translation.v3.GlossaryTerm target_term = 2;</code>
     * @param \Google\Cloud\Translate\V3\GlossaryTerm $var
     * @return $this
     */
    public function setTargetTerm($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Translate\V3\GlossaryTerm::class);
        $this->target_term = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(GlossaryTermsPair::class, \Google\Cloud\Translate\V3\GlossaryEntry_GlossaryTermsPair::class);

