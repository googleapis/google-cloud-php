<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/beyondcorp/appconnectors/v1/app_connectors_service.proto

namespace Google\Cloud\BeyondCorp\AppConnectors\V1\AppConnector;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * PrincipalInfo represents an Identity oneof.
 *
 * Generated from protobuf message <code>google.cloud.beyondcorp.appconnectors.v1.AppConnector.PrincipalInfo</code>
 */
class PrincipalInfo extends \Google\Protobuf\Internal\Message
{
    protected $type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\BeyondCorp\AppConnectors\V1\AppConnector\PrincipalInfo\ServiceAccount $service_account
     *           A GCP service account.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Beyondcorp\Appconnectors\V1\AppConnectorsService::initOnce();
        parent::__construct($data);
    }

    /**
     * A GCP service account.
     *
     * Generated from protobuf field <code>.google.cloud.beyondcorp.appconnectors.v1.AppConnector.PrincipalInfo.ServiceAccount service_account = 1;</code>
     * @return \Google\Cloud\BeyondCorp\AppConnectors\V1\AppConnector\PrincipalInfo\ServiceAccount|null
     */
    public function getServiceAccount()
    {
        return $this->readOneof(1);
    }

    public function hasServiceAccount()
    {
        return $this->hasOneof(1);
    }

    /**
     * A GCP service account.
     *
     * Generated from protobuf field <code>.google.cloud.beyondcorp.appconnectors.v1.AppConnector.PrincipalInfo.ServiceAccount service_account = 1;</code>
     * @param \Google\Cloud\BeyondCorp\AppConnectors\V1\AppConnector\PrincipalInfo\ServiceAccount $var
     * @return $this
     */
    public function setServiceAccount($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\BeyondCorp\AppConnectors\V1\AppConnector\PrincipalInfo\ServiceAccount::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getType()
    {
        return $this->whichOneof("type");
    }

}


