<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/fleetengine/v1/vehicles.proto

namespace Google\Maps\FleetEngine\V1\Vehicle\VehicleType;

use UnexpectedValueException;

/**
 * Vehicle type categories
 *
 * Protobuf type <code>maps.fleetengine.v1.Vehicle.VehicleType.Category</code>
 */
class Category
{
    /**
     * Default, used for unspecified or unrecognized vehicle categories.
     *
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * An automobile.
     *
     * Generated from protobuf enum <code>AUTO = 1;</code>
     */
    const AUTO = 1;
    /**
     * Any vehicle that acts as a taxi (typically licensed or regulated).
     *
     * Generated from protobuf enum <code>TAXI = 2;</code>
     */
    const TAXI = 2;
    /**
     * Generally, a vehicle with a large storage capacity.
     *
     * Generated from protobuf enum <code>TRUCK = 3;</code>
     */
    const TRUCK = 3;
    /**
     * A motorcycle, moped, or other two-wheeled vehicle
     *
     * Generated from protobuf enum <code>TWO_WHEELER = 4;</code>
     */
    const TWO_WHEELER = 4;
    /**
     * Human-powered transport.
     *
     * Generated from protobuf enum <code>BICYCLE = 5;</code>
     */
    const BICYCLE = 5;
    /**
     * A human transporter, typically walking or running, traveling along
     * pedestrian pathways.
     *
     * Generated from protobuf enum <code>PEDESTRIAN = 6;</code>
     */
    const PEDESTRIAN = 6;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::AUTO => 'AUTO',
        self::TAXI => 'TAXI',
        self::TRUCK => 'TRUCK',
        self::TWO_WHEELER => 'TWO_WHEELER',
        self::BICYCLE => 'BICYCLE',
        self::PEDESTRIAN => 'PEDESTRIAN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


