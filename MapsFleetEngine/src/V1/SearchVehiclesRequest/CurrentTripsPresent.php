<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/fleetengine/v1/vehicle_api.proto

namespace Google\Maps\FleetEngine\V1\SearchVehiclesRequest;

use UnexpectedValueException;

/**
 * Specifies the types of restrictions on a vehicle's current trips.
 *
 * Protobuf type <code>maps.fleetengine.v1.SearchVehiclesRequest.CurrentTripsPresent</code>
 */
class CurrentTripsPresent
{
    /**
     * The availability of vehicles with trips present is governed by the
     * `include_back_to_back` field.
     *
     * Generated from protobuf enum <code>CURRENT_TRIPS_PRESENT_UNSPECIFIED = 0;</code>
     */
    const CURRENT_TRIPS_PRESENT_UNSPECIFIED = 0;
    /**
     * Vehicles without trips can appear in search results. When this value is
     * used, `include_back_to_back` cannot be `true`.
     *
     * Generated from protobuf enum <code>NONE = 1;</code>
     */
    const NONE = 1;
    /**
     * Vehicles with at most 5 current trips and 10 waypoints are included
     * in the search results. When this value is used, `include_back_to_back`
     * cannot be `true`.
     *
     * Generated from protobuf enum <code>ANY = 2;</code>
     */
    const ANY = 2;

    private static $valueToName = [
        self::CURRENT_TRIPS_PRESENT_UNSPECIFIED => 'CURRENT_TRIPS_PRESENT_UNSPECIFIED',
        self::NONE => 'NONE',
        self::ANY => 'ANY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


