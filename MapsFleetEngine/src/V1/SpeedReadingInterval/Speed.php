<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/fleetengine/v1/traffic.proto

namespace Google\Maps\FleetEngine\V1\SpeedReadingInterval;

use UnexpectedValueException;

/**
 * The classification of polyline speed based on traffic data.
 *
 * Protobuf type <code>maps.fleetengine.v1.SpeedReadingInterval.Speed</code>
 */
class Speed
{
    /**
     * Default value. This value is unused.
     *
     * Generated from protobuf enum <code>SPEED_UNSPECIFIED = 0;</code>
     */
    const SPEED_UNSPECIFIED = 0;
    /**
     * Normal speed, no slowdown is detected.
     *
     * Generated from protobuf enum <code>NORMAL = 1;</code>
     */
    const NORMAL = 1;
    /**
     * Slowdown detected, but no traffic jam formed.
     *
     * Generated from protobuf enum <code>SLOW = 2;</code>
     */
    const SLOW = 2;
    /**
     * Traffic jam detected.
     *
     * Generated from protobuf enum <code>TRAFFIC_JAM = 3;</code>
     */
    const TRAFFIC_JAM = 3;

    private static $valueToName = [
        self::SPEED_UNSPECIFIED => 'SPEED_UNSPECIFIED',
        self::NORMAL => 'NORMAL',
        self::SLOW => 'SLOW',
        self::TRAFFIC_JAM => 'TRAFFIC_JAM',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


