<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/fleetengine/v1/vehicle_api.proto

namespace Google\Maps\FleetEngine\V1\VehicleMatch;

use UnexpectedValueException;

/**
 * Type of vehicle match.
 *
 * Protobuf type <code>maps.fleetengine.v1.VehicleMatch.VehicleMatchType</code>
 */
class VehicleMatchType
{
    /**
     * Unknown vehicle match type
     *
     * Generated from protobuf enum <code>UNKNOWN = 0;</code>
     */
    const UNKNOWN = 0;
    /**
     * The vehicle currently has no trip assigned to it and can proceed to the
     * pickup point.
     *
     * Generated from protobuf enum <code>EXCLUSIVE = 1;</code>
     */
    const EXCLUSIVE = 1;
    /**
     * The vehicle is currently assigned to a trip, but can proceed to the
     * pickup point after completing the in-progress trip.  ETA and distance
     * calculations take the existing trip into account.
     *
     * Generated from protobuf enum <code>BACK_TO_BACK = 2;</code>
     */
    const BACK_TO_BACK = 2;
    /**
     * The vehicle has sufficient capacity for a shared ride.
     *
     * Generated from protobuf enum <code>CARPOOL = 3;</code>
     */
    const CARPOOL = 3;
    /**
     * The vehicle will finish its current, active trip before proceeding to the
     * pickup point.  ETA and distance calculations take the existing trip into
     * account.
     *
     * Generated from protobuf enum <code>CARPOOL_BACK_TO_BACK = 4;</code>
     */
    const CARPOOL_BACK_TO_BACK = 4;

    private static $valueToName = [
        self::UNKNOWN => 'UNKNOWN',
        self::EXCLUSIVE => 'EXCLUSIVE',
        self::BACK_TO_BACK => 'BACK_TO_BACK',
        self::CARPOOL => 'CARPOOL',
        self::CARPOOL_BACK_TO_BACK => 'CARPOOL_BACK_TO_BACK',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


