<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/fleetengine/v1/trip_api.proto

namespace Google\Maps\FleetEngine\V1\ReportBillableTripRequest;

use UnexpectedValueException;

/**
 * Selector for different solution types of a reported trip.
 *
 * Protobuf type <code>maps.fleetengine.v1.ReportBillableTripRequest.SolutionType</code>
 */
class SolutionType
{
    /**
     * The default value. For backwards-compatibility, the API will use
     * `ON_DEMAND_RIDESHARING_AND_DELIVERIES` by default which is the first
     * supported solution type.
     *
     * Generated from protobuf enum <code>SOLUTION_TYPE_UNSPECIFIED = 0;</code>
     */
    const SOLUTION_TYPE_UNSPECIFIED = 0;
    /**
     * The solution is an on-demand ridesharing and deliveries trip.
     *
     * Generated from protobuf enum <code>ON_DEMAND_RIDESHARING_AND_DELIVERIES = 1;</code>
     */
    const ON_DEMAND_RIDESHARING_AND_DELIVERIES = 1;

    private static $valueToName = [
        self::SOLUTION_TYPE_UNSPECIFIED => 'SOLUTION_TYPE_UNSPECIFIED',
        self::ON_DEMAND_RIDESHARING_AND_DELIVERIES => 'ON_DEMAND_RIDESHARING_AND_DELIVERIES',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


