<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/alloydb/v1/resources.proto

namespace Google\Cloud\AlloyDb\V1\MaintenanceUpdatePolicy;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * DenyMaintenancePeriod definition. Excepting emergencies, maintenance
 * will not be scheduled to start within this deny period. The start_date must
 * be less than the end_date.
 *
 * Generated from protobuf message <code>google.cloud.alloydb.v1.MaintenanceUpdatePolicy.DenyMaintenancePeriod</code>
 */
class DenyMaintenancePeriod extends \Google\Protobuf\Internal\Message
{
    /**
     * Deny period start date.
     * This can be:
     * * A full date, with non-zero year, month and day values OR
     * * A month and day value, with a zero year for recurring
     *
     * Generated from protobuf field <code>.google.type.Date start_date = 1;</code>
     */
    protected $start_date = null;
    /**
     * Deny period end date.
     * This can be:
     * * A full date, with non-zero year, month and day values OR
     * * A month and day value, with a zero year for recurring
     *
     * Generated from protobuf field <code>.google.type.Date end_date = 2;</code>
     */
    protected $end_date = null;
    /**
     * Time in UTC when the deny period starts on start_date and ends on
     * end_date. This can be:
     * * Full time OR
     * * All zeros for 00:00:00 UTC
     *
     * Generated from protobuf field <code>.google.type.TimeOfDay time = 3;</code>
     */
    protected $time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Type\Date $start_date
     *           Deny period start date.
     *           This can be:
     *           * A full date, with non-zero year, month and day values OR
     *           * A month and day value, with a zero year for recurring
     *     @type \Google\Type\Date $end_date
     *           Deny period end date.
     *           This can be:
     *           * A full date, with non-zero year, month and day values OR
     *           * A month and day value, with a zero year for recurring
     *     @type \Google\Type\TimeOfDay $time
     *           Time in UTC when the deny period starts on start_date and ends on
     *           end_date. This can be:
     *           * Full time OR
     *           * All zeros for 00:00:00 UTC
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Alloydb\V1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Deny period start date.
     * This can be:
     * * A full date, with non-zero year, month and day values OR
     * * A month and day value, with a zero year for recurring
     *
     * Generated from protobuf field <code>.google.type.Date start_date = 1;</code>
     * @return \Google\Type\Date|null
     */
    public function getStartDate()
    {
        return $this->start_date;
    }

    public function hasStartDate()
    {
        return isset($this->start_date);
    }

    public function clearStartDate()
    {
        unset($this->start_date);
    }

    /**
     * Deny period start date.
     * This can be:
     * * A full date, with non-zero year, month and day values OR
     * * A month and day value, with a zero year for recurring
     *
     * Generated from protobuf field <code>.google.type.Date start_date = 1;</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setStartDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->start_date = $var;

        return $this;
    }

    /**
     * Deny period end date.
     * This can be:
     * * A full date, with non-zero year, month and day values OR
     * * A month and day value, with a zero year for recurring
     *
     * Generated from protobuf field <code>.google.type.Date end_date = 2;</code>
     * @return \Google\Type\Date|null
     */
    public function getEndDate()
    {
        return $this->end_date;
    }

    public function hasEndDate()
    {
        return isset($this->end_date);
    }

    public function clearEndDate()
    {
        unset($this->end_date);
    }

    /**
     * Deny period end date.
     * This can be:
     * * A full date, with non-zero year, month and day values OR
     * * A month and day value, with a zero year for recurring
     *
     * Generated from protobuf field <code>.google.type.Date end_date = 2;</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setEndDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->end_date = $var;

        return $this;
    }

    /**
     * Time in UTC when the deny period starts on start_date and ends on
     * end_date. This can be:
     * * Full time OR
     * * All zeros for 00:00:00 UTC
     *
     * Generated from protobuf field <code>.google.type.TimeOfDay time = 3;</code>
     * @return \Google\Type\TimeOfDay|null
     */
    public function getTime()
    {
        return $this->time;
    }

    public function hasTime()
    {
        return isset($this->time);
    }

    public function clearTime()
    {
        unset($this->time);
    }

    /**
     * Time in UTC when the deny period starts on start_date and ends on
     * end_date. This can be:
     * * Full time OR
     * * All zeros for 00:00:00 UTC
     *
     * Generated from protobuf field <code>.google.type.TimeOfDay time = 3;</code>
     * @param \Google\Type\TimeOfDay $var
     * @return $this
     */
    public function setTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\TimeOfDay::class);
        $this->time = $var;

        return $this;
    }

}


