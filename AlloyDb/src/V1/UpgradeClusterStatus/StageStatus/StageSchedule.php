<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/alloydb/v1/service.proto

namespace Google\Cloud\AlloyDb\V1\UpgradeClusterStatus\StageStatus;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Timing information for the stage execution.
 *
 * Generated from protobuf message <code>google.cloud.alloydb.v1.UpgradeClusterStatus.StageStatus.StageSchedule</code>
 */
class StageSchedule extends \Google\Protobuf\Internal\Message
{
    /**
     * When the stage is expected to start. Set only if the stage has not
     * started yet.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp estimated_start_time = 1;</code>
     */
    protected $estimated_start_time = null;
    /**
     * Actual start time of the stage. Set only if the stage has started.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp actual_start_time = 2;</code>
     */
    protected $actual_start_time = null;
    /**
     * When the stage is expected to end. Set only if the stage has not
     * completed yet.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp estimated_end_time = 3;</code>
     */
    protected $estimated_end_time = null;
    /**
     * Actual end time of the stage. Set only if the stage has completed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp actual_end_time = 4;</code>
     */
    protected $actual_end_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Timestamp $estimated_start_time
     *           When the stage is expected to start. Set only if the stage has not
     *           started yet.
     *     @type \Google\Protobuf\Timestamp $actual_start_time
     *           Actual start time of the stage. Set only if the stage has started.
     *     @type \Google\Protobuf\Timestamp $estimated_end_time
     *           When the stage is expected to end. Set only if the stage has not
     *           completed yet.
     *     @type \Google\Protobuf\Timestamp $actual_end_time
     *           Actual end time of the stage. Set only if the stage has completed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Alloydb\V1\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * When the stage is expected to start. Set only if the stage has not
     * started yet.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp estimated_start_time = 1;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getEstimatedStartTime()
    {
        return $this->estimated_start_time;
    }

    public function hasEstimatedStartTime()
    {
        return isset($this->estimated_start_time);
    }

    public function clearEstimatedStartTime()
    {
        unset($this->estimated_start_time);
    }

    /**
     * When the stage is expected to start. Set only if the stage has not
     * started yet.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp estimated_start_time = 1;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEstimatedStartTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->estimated_start_time = $var;

        return $this;
    }

    /**
     * Actual start time of the stage. Set only if the stage has started.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp actual_start_time = 2;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getActualStartTime()
    {
        return $this->actual_start_time;
    }

    public function hasActualStartTime()
    {
        return isset($this->actual_start_time);
    }

    public function clearActualStartTime()
    {
        unset($this->actual_start_time);
    }

    /**
     * Actual start time of the stage. Set only if the stage has started.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp actual_start_time = 2;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setActualStartTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->actual_start_time = $var;

        return $this;
    }

    /**
     * When the stage is expected to end. Set only if the stage has not
     * completed yet.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp estimated_end_time = 3;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getEstimatedEndTime()
    {
        return $this->estimated_end_time;
    }

    public function hasEstimatedEndTime()
    {
        return isset($this->estimated_end_time);
    }

    public function clearEstimatedEndTime()
    {
        unset($this->estimated_end_time);
    }

    /**
     * When the stage is expected to end. Set only if the stage has not
     * completed yet.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp estimated_end_time = 3;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEstimatedEndTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->estimated_end_time = $var;

        return $this;
    }

    /**
     * Actual end time of the stage. Set only if the stage has completed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp actual_end_time = 4;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getActualEndTime()
    {
        return $this->actual_end_time;
    }

    public function hasActualEndTime()
    {
        return isset($this->actual_end_time);
    }

    public function clearActualEndTime()
    {
        unset($this->actual_end_time);
    }

    /**
     * Actual end time of the stage. Set only if the stage has completed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp actual_end_time = 4;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setActualEndTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->actual_end_time = $var;

        return $this;
    }

}


