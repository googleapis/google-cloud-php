<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/hypercomputecluster/v1alpha/hypercompute_cluster.proto

namespace Google\Cloud\HypercomputeCluster\V1alpha\SlurmOrchestrator\SlurmConfig;

use UnexpectedValueException;

/**
 * Specifies the mechanism used to preempt jobs or enable gang scheduling.
 *
 * Protobuf type <code>google.cloud.hypercomputecluster.v1alpha.SlurmOrchestrator.SlurmConfig.PreemptMode</code>
 */
class PreemptMode
{
    /**
     * Unspecified preempt mode.
     *
     * Generated from protobuf enum <code>PREEMPT_MODE_UNSPECIFIED = 0;</code>
     */
    const PREEMPT_MODE_UNSPECIFIED = 0;
    /**
     * Is the default value and disables job preemption and gang scheduling.
     *
     * Generated from protobuf enum <code>OFF = 1;</code>
     */
    const OFF = 1;
    /**
     * The preempted job will be cancelled
     *
     * Generated from protobuf enum <code>CANCEL = 2;</code>
     */
    const CANCEL = 2;
    /**
     * Enables gang scheduling (time slicing) of jobs in the same partition,
     * and allows the resuming of suspended jobs.
     *
     * Generated from protobuf enum <code>GANG = 3;</code>
     */
    const GANG = 3;
    /**
     * Preempts jobs by requeuing them (if possible) or canceling them.
     *
     * Generated from protobuf enum <code>REQUEUE = 4;</code>
     */
    const REQUEUE = 4;
    /**
     * The preempted jobs will be suspended, and later the Gang scheduler will
     * resume them.
     *
     * Generated from protobuf enum <code>SUSPEND = 5;</code>
     */
    const SUSPEND = 5;
    /**
     * Allow preemption only if the preemptor's job priority is higher than
     * the preemptee's job priority.
     *
     * Generated from protobuf enum <code>PRIORITY = 6;</code>
     */
    const PRIORITY = 6;
    /**
     * Allow jobs within the same qos to preempt one another.
     *
     * Generated from protobuf enum <code>WITHIN = 7;</code>
     */
    const WITHIN = 7;

    private static $valueToName = [
        self::PREEMPT_MODE_UNSPECIFIED => 'PREEMPT_MODE_UNSPECIFIED',
        self::OFF => 'OFF',
        self::CANCEL => 'CANCEL',
        self::GANG => 'GANG',
        self::REQUEUE => 'REQUEUE',
        self::SUSPEND => 'SUSPEND',
        self::PRIORITY => 'PRIORITY',
        self::WITHIN => 'WITHIN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


