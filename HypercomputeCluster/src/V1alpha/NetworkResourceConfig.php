<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/hypercomputecluster/v1alpha/hypercompute_cluster.proto

namespace Google\Cloud\HypercomputeCluster\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describes how a network resource should be initialized. Each network resource
 * can either be imported from an existing Google Cloud resource or initialized
 * when the cluster is created.
 *
 * Generated from protobuf message <code>google.cloud.hypercomputecluster.v1alpha.NetworkResourceConfig</code>
 */
class NetworkResourceConfig extends \Google\Protobuf\Internal\Message
{
    protected $config;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\NewNetworkConfig $new_network
     *           Optional. Immutable. If set, indicates that a new network should be
     *           created.
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\ExistingNetworkConfig $existing_network
     *           Optional. Immutable. If set, indicates that an existing network should be
     *           imported.
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\NewComputeNetworkConfig $new_compute_network
     *           Immutable. Deprecated: Use new_network instead.
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\ExistingComputeNetworkConfig $existing_compute_network
     *           Immutable. Deprecated: Use existing_network instead.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Hypercomputecluster\V1Alpha\HypercomputeCluster::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Immutable. If set, indicates that a new network should be
     * created.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.NewNetworkConfig new_network = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\NewNetworkConfig|null
     */
    public function getNewNetwork()
    {
        return $this->readOneof(3);
    }

    public function hasNewNetwork()
    {
        return $this->hasOneof(3);
    }

    /**
     * Optional. Immutable. If set, indicates that a new network should be
     * created.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.NewNetworkConfig new_network = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\NewNetworkConfig $var
     * @return $this
     */
    public function setNewNetwork($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\NewNetworkConfig::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Optional. Immutable. If set, indicates that an existing network should be
     * imported.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.ExistingNetworkConfig existing_network = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\ExistingNetworkConfig|null
     */
    public function getExistingNetwork()
    {
        return $this->readOneof(4);
    }

    public function hasExistingNetwork()
    {
        return $this->hasOneof(4);
    }

    /**
     * Optional. Immutable. If set, indicates that an existing network should be
     * imported.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.ExistingNetworkConfig existing_network = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\ExistingNetworkConfig $var
     * @return $this
     */
    public function setExistingNetwork($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\ExistingNetworkConfig::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Immutable. Deprecated: Use new_network instead.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.NewComputeNetworkConfig new_compute_network = 1 [deprecated = true, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\NewComputeNetworkConfig|null
     * @deprecated
     */
    public function getNewComputeNetwork()
    {
        if ($this->hasOneof(1)) {
            @trigger_error('new_compute_network is deprecated.', E_USER_DEPRECATED);
        }
        return $this->readOneof(1);
    }

    public function hasNewComputeNetwork()
    {
        if ($this->hasOneof(1)) {
            @trigger_error('new_compute_network is deprecated.', E_USER_DEPRECATED);
        }
        return $this->hasOneof(1);
    }

    /**
     * Immutable. Deprecated: Use new_network instead.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.NewComputeNetworkConfig new_compute_network = 1 [deprecated = true, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\NewComputeNetworkConfig $var
     * @return $this
     * @deprecated
     */
    public function setNewComputeNetwork($var)
    {
        @trigger_error('new_compute_network is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\NewComputeNetworkConfig::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Immutable. Deprecated: Use existing_network instead.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.ExistingComputeNetworkConfig existing_compute_network = 2 [deprecated = true, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\ExistingComputeNetworkConfig|null
     * @deprecated
     */
    public function getExistingComputeNetwork()
    {
        if ($this->hasOneof(2)) {
            @trigger_error('existing_compute_network is deprecated.', E_USER_DEPRECATED);
        }
        return $this->readOneof(2);
    }

    public function hasExistingComputeNetwork()
    {
        if ($this->hasOneof(2)) {
            @trigger_error('existing_compute_network is deprecated.', E_USER_DEPRECATED);
        }
        return $this->hasOneof(2);
    }

    /**
     * Immutable. Deprecated: Use existing_network instead.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.ExistingComputeNetworkConfig existing_compute_network = 2 [deprecated = true, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\ExistingComputeNetworkConfig $var
     * @return $this
     * @deprecated
     */
    public function setExistingComputeNetwork($var)
    {
        @trigger_error('existing_compute_network is deprecated.', E_USER_DEPRECATED);
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\ExistingComputeNetworkConfig::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getConfig()
    {
        return $this->whichOneof("config");
    }

}

