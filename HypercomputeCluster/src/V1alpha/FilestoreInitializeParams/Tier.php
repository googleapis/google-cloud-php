<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/hypercomputecluster/v1alpha/hypercompute_cluster.proto

namespace Google\Cloud\HypercomputeCluster\V1alpha\FilestoreInitializeParams;

use UnexpectedValueException;

/**
 * The service tier types of the filestore
 *
 * Protobuf type <code>google.cloud.hypercomputecluster.v1alpha.FilestoreInitializeParams.Tier</code>
 */
class Tier
{
    /**
     * Unspecified filestore tier
     *
     * Generated from protobuf enum <code>TIER_UNSPECIFIED = 0;</code>
     */
    const TIER_UNSPECIFIED = 0;
    /**
     * Basic HDD filestore tier
     *
     * Generated from protobuf enum <code>TIER_BASIC_HDD = 1;</code>
     */
    const TIER_BASIC_HDD = 1;
    /**
     * Basic SSD filestore tier
     *
     * Generated from protobuf enum <code>TIER_BASIC_SSD = 2;</code>
     */
    const TIER_BASIC_SSD = 2;
    /**
     * High scale SSD filestore tier
     *
     * Generated from protobuf enum <code>TIER_HIGH_SCALE_SSD = 3;</code>
     */
    const TIER_HIGH_SCALE_SSD = 3;
    /**
     * Zonal filestore tier
     *
     * Generated from protobuf enum <code>TIER_ZONAL = 4;</code>
     */
    const TIER_ZONAL = 4;
    /**
     * Enterprise filestore tier
     *
     * Generated from protobuf enum <code>TIER_ENTERPRISE = 5;</code>
     */
    const TIER_ENTERPRISE = 5;
    /**
     * Regional filestore tier
     *
     * Generated from protobuf enum <code>TIER_REGIONAL = 6;</code>
     */
    const TIER_REGIONAL = 6;

    private static $valueToName = [
        self::TIER_UNSPECIFIED => 'TIER_UNSPECIFIED',
        self::TIER_BASIC_HDD => 'TIER_BASIC_HDD',
        self::TIER_BASIC_SSD => 'TIER_BASIC_SSD',
        self::TIER_HIGH_SCALE_SSD => 'TIER_HIGH_SCALE_SSD',
        self::TIER_ZONAL => 'TIER_ZONAL',
        self::TIER_ENTERPRISE => 'TIER_ENTERPRISE',
        self::TIER_REGIONAL => 'TIER_REGIONAL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


