<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/hypercomputecluster/v1alpha/hypercompute_cluster.proto

namespace Google\Cloud\HypercomputeCluster\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * When set in
 * [Orchestrator][google.cloud.hypercomputecluster.v1alpha.Orchestrator],
 * indicates that the cluster should use [Slurm](https://slurm.schedmd.com/) as
 * the orchestrator.
 *
 * Generated from protobuf message <code>google.cloud.hypercomputecluster.v1alpha.SlurmOrchestrator</code>
 */
class SlurmOrchestrator extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Configuration for login nodes, which allow users to access the
     * cluster over SSH.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.SlurmLoginNodes login_nodes = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $login_nodes = null;
    /**
     * Required. Configuration of Slurm nodesets, which define groups of compute
     * resources that can be used by Slurm. At least one compute node is required.
     *
     * Generated from protobuf field <code>repeated .google.cloud.hypercomputecluster.v1alpha.SlurmNodeSet node_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $node_sets;
    /**
     * Required. Configuration of Slurm partitions, which group one or more
     * nodesets. Acts as a queue against which jobs can be submitted. At least one
     * partition is required.
     *
     * Generated from protobuf field <code>repeated .google.cloud.hypercomputecluster.v1alpha.SlurmPartition partitions = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $partitions;
    /**
     * Optional. Default partition to use for submitted jobs that do not
     * explicitly specify a partition. Required if and only if there is more than
     * one partition, in which case it must match the id of one of the partitions.
     *
     * Generated from protobuf field <code>string default_partition = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $default_partition = '';
    /**
     * Optional. Slurm [prolog
     * scripts](https://slurm.schedmd.com/prolog_epilog.html), which will be
     * executed by compute nodes before a node begins running a new job.
     *
     * Generated from protobuf field <code>repeated string prolog_bash_scripts = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $prolog_bash_scripts;
    /**
     * Optional. Slurm [epilog
     * scripts](https://slurm.schedmd.com/prolog_epilog.html), which will be
     * executed by compute nodes whenever a node finishes running a job.
     *
     * Generated from protobuf field <code>repeated string epilog_bash_scripts = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $epilog_bash_scripts;
    /**
     * Optional. Unstable: Contact hypercompute-service-eng&#64; before using.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.SlurmOrchestrator.SlurmConfig config = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $config = null;
    /**
     * Optional. Unstable: Contact hypercompute-service-eng&#64; before using.
     *
     * Generated from protobuf field <code>repeated string task_prolog_bash_scripts = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $task_prolog_bash_scripts;
    /**
     * Optional. Unstable: Contact hypercompute-service-eng&#64; before using.
     *
     * Generated from protobuf field <code>repeated string task_epilog_bash_scripts = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $task_epilog_bash_scripts;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\SlurmLoginNodes $login_nodes
     *           Required. Configuration for login nodes, which allow users to access the
     *           cluster over SSH.
     *     @type array<\Google\Cloud\HypercomputeCluster\V1alpha\SlurmNodeSet>|\Google\Protobuf\Internal\RepeatedField $node_sets
     *           Required. Configuration of Slurm nodesets, which define groups of compute
     *           resources that can be used by Slurm. At least one compute node is required.
     *     @type array<\Google\Cloud\HypercomputeCluster\V1alpha\SlurmPartition>|\Google\Protobuf\Internal\RepeatedField $partitions
     *           Required. Configuration of Slurm partitions, which group one or more
     *           nodesets. Acts as a queue against which jobs can be submitted. At least one
     *           partition is required.
     *     @type string $default_partition
     *           Optional. Default partition to use for submitted jobs that do not
     *           explicitly specify a partition. Required if and only if there is more than
     *           one partition, in which case it must match the id of one of the partitions.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $prolog_bash_scripts
     *           Optional. Slurm [prolog
     *           scripts](https://slurm.schedmd.com/prolog_epilog.html), which will be
     *           executed by compute nodes before a node begins running a new job.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $epilog_bash_scripts
     *           Optional. Slurm [epilog
     *           scripts](https://slurm.schedmd.com/prolog_epilog.html), which will be
     *           executed by compute nodes whenever a node finishes running a job.
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\SlurmOrchestrator\SlurmConfig $config
     *           Optional. Unstable: Contact hypercompute-service-eng&#64; before using.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $task_prolog_bash_scripts
     *           Optional. Unstable: Contact hypercompute-service-eng&#64; before using.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $task_epilog_bash_scripts
     *           Optional. Unstable: Contact hypercompute-service-eng&#64; before using.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Hypercomputecluster\V1Alpha\HypercomputeCluster::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Configuration for login nodes, which allow users to access the
     * cluster over SSH.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.SlurmLoginNodes login_nodes = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\SlurmLoginNodes|null
     */
    public function getLoginNodes()
    {
        return $this->login_nodes;
    }

    public function hasLoginNodes()
    {
        return isset($this->login_nodes);
    }

    public function clearLoginNodes()
    {
        unset($this->login_nodes);
    }

    /**
     * Required. Configuration for login nodes, which allow users to access the
     * cluster over SSH.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.SlurmLoginNodes login_nodes = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\SlurmLoginNodes $var
     * @return $this
     */
    public function setLoginNodes($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\SlurmLoginNodes::class);
        $this->login_nodes = $var;

        return $this;
    }

    /**
     * Required. Configuration of Slurm nodesets, which define groups of compute
     * resources that can be used by Slurm. At least one compute node is required.
     *
     * Generated from protobuf field <code>repeated .google.cloud.hypercomputecluster.v1alpha.SlurmNodeSet node_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNodeSets()
    {
        return $this->node_sets;
    }

    /**
     * Required. Configuration of Slurm nodesets, which define groups of compute
     * resources that can be used by Slurm. At least one compute node is required.
     *
     * Generated from protobuf field <code>repeated .google.cloud.hypercomputecluster.v1alpha.SlurmNodeSet node_sets = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param array<\Google\Cloud\HypercomputeCluster\V1alpha\SlurmNodeSet>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNodeSets($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\HypercomputeCluster\V1alpha\SlurmNodeSet::class);
        $this->node_sets = $arr;

        return $this;
    }

    /**
     * Required. Configuration of Slurm partitions, which group one or more
     * nodesets. Acts as a queue against which jobs can be submitted. At least one
     * partition is required.
     *
     * Generated from protobuf field <code>repeated .google.cloud.hypercomputecluster.v1alpha.SlurmPartition partitions = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPartitions()
    {
        return $this->partitions;
    }

    /**
     * Required. Configuration of Slurm partitions, which group one or more
     * nodesets. Acts as a queue against which jobs can be submitted. At least one
     * partition is required.
     *
     * Generated from protobuf field <code>repeated .google.cloud.hypercomputecluster.v1alpha.SlurmPartition partitions = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param array<\Google\Cloud\HypercomputeCluster\V1alpha\SlurmPartition>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPartitions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\HypercomputeCluster\V1alpha\SlurmPartition::class);
        $this->partitions = $arr;

        return $this;
    }

    /**
     * Optional. Default partition to use for submitted jobs that do not
     * explicitly specify a partition. Required if and only if there is more than
     * one partition, in which case it must match the id of one of the partitions.
     *
     * Generated from protobuf field <code>string default_partition = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDefaultPartition()
    {
        return $this->default_partition;
    }

    /**
     * Optional. Default partition to use for submitted jobs that do not
     * explicitly specify a partition. Required if and only if there is more than
     * one partition, in which case it must match the id of one of the partitions.
     *
     * Generated from protobuf field <code>string default_partition = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDefaultPartition($var)
    {
        GPBUtil::checkString($var, True);
        $this->default_partition = $var;

        return $this;
    }

    /**
     * Optional. Slurm [prolog
     * scripts](https://slurm.schedmd.com/prolog_epilog.html), which will be
     * executed by compute nodes before a node begins running a new job.
     *
     * Generated from protobuf field <code>repeated string prolog_bash_scripts = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPrologBashScripts()
    {
        return $this->prolog_bash_scripts;
    }

    /**
     * Optional. Slurm [prolog
     * scripts](https://slurm.schedmd.com/prolog_epilog.html), which will be
     * executed by compute nodes before a node begins running a new job.
     *
     * Generated from protobuf field <code>repeated string prolog_bash_scripts = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPrologBashScripts($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->prolog_bash_scripts = $arr;

        return $this;
    }

    /**
     * Optional. Slurm [epilog
     * scripts](https://slurm.schedmd.com/prolog_epilog.html), which will be
     * executed by compute nodes whenever a node finishes running a job.
     *
     * Generated from protobuf field <code>repeated string epilog_bash_scripts = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getEpilogBashScripts()
    {
        return $this->epilog_bash_scripts;
    }

    /**
     * Optional. Slurm [epilog
     * scripts](https://slurm.schedmd.com/prolog_epilog.html), which will be
     * executed by compute nodes whenever a node finishes running a job.
     *
     * Generated from protobuf field <code>repeated string epilog_bash_scripts = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setEpilogBashScripts($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->epilog_bash_scripts = $arr;

        return $this;
    }

    /**
     * Optional. Unstable: Contact hypercompute-service-eng&#64; before using.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.SlurmOrchestrator.SlurmConfig config = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\SlurmOrchestrator\SlurmConfig|null
     */
    public function getConfig()
    {
        return $this->config;
    }

    public function hasConfig()
    {
        return isset($this->config);
    }

    public function clearConfig()
    {
        unset($this->config);
    }

    /**
     * Optional. Unstable: Contact hypercompute-service-eng&#64; before using.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.SlurmOrchestrator.SlurmConfig config = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\SlurmOrchestrator\SlurmConfig $var
     * @return $this
     */
    public function setConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\SlurmOrchestrator\SlurmConfig::class);
        $this->config = $var;

        return $this;
    }

    /**
     * Optional. Unstable: Contact hypercompute-service-eng&#64; before using.
     *
     * Generated from protobuf field <code>repeated string task_prolog_bash_scripts = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTaskPrologBashScripts()
    {
        return $this->task_prolog_bash_scripts;
    }

    /**
     * Optional. Unstable: Contact hypercompute-service-eng&#64; before using.
     *
     * Generated from protobuf field <code>repeated string task_prolog_bash_scripts = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTaskPrologBashScripts($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->task_prolog_bash_scripts = $arr;

        return $this;
    }

    /**
     * Optional. Unstable: Contact hypercompute-service-eng&#64; before using.
     *
     * Generated from protobuf field <code>repeated string task_epilog_bash_scripts = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTaskEpilogBashScripts()
    {
        return $this->task_epilog_bash_scripts;
    }

    /**
     * Optional. Unstable: Contact hypercompute-service-eng&#64; before using.
     *
     * Generated from protobuf field <code>repeated string task_epilog_bash_scripts = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTaskEpilogBashScripts($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->task_epilog_bash_scripts = $arr;

        return $this;
    }

}

