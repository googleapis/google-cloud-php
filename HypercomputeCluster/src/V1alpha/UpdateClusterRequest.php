<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/hypercomputecluster/v1alpha/hypercompute_cluster.proto

namespace Google\Cloud\HypercomputeCluster\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [UpdateCluster][google.cloud.hypercomputecluster.v1alpha.HypercomputeCluster.UpdateCluster].
 *
 * Generated from protobuf message <code>google.cloud.hypercomputecluster.v1alpha.UpdateClusterRequest</code>
 */
class UpdateClusterRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Cluster to update.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.Cluster cluster = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $cluster = null;
    /**
     * Optional. Mask specifying which fields in the cluster to update. All paths
     * must be specified explicitly - wildcards are not supported. At least one
     * path must be provided.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $update_mask = null;
    /**
     * Optional. A unique identifier for this request. A random UUID is
     * recommended. This request is idempotent if and only if `request_id` is
     * provided.
     *
     * Generated from protobuf field <code>string request_id = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     */
    protected $request_id = '';

    /**
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\Cluster $cluster    Required. Cluster to update.
     * @param \Google\Protobuf\FieldMask                        $updateMask Optional. Mask specifying which fields in the cluster to update. All paths
     *                                                                      must be specified explicitly - wildcards are not supported. At least one
     *                                                                      path must be provided.
     *
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\UpdateClusterRequest
     *
     * @experimental
     */
    public static function build(\Google\Cloud\HypercomputeCluster\V1alpha\Cluster $cluster, \Google\Protobuf\FieldMask $updateMask): self
    {
        return (new self())
            ->setCluster($cluster)
            ->setUpdateMask($updateMask);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\Cluster $cluster
     *           Required. Cluster to update.
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           Optional. Mask specifying which fields in the cluster to update. All paths
     *           must be specified explicitly - wildcards are not supported. At least one
     *           path must be provided.
     *     @type string $request_id
     *           Optional. A unique identifier for this request. A random UUID is
     *           recommended. This request is idempotent if and only if `request_id` is
     *           provided.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Hypercomputecluster\V1Alpha\HypercomputeCluster::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Cluster to update.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.Cluster cluster = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\Cluster|null
     */
    public function getCluster()
    {
        return $this->cluster;
    }

    public function hasCluster()
    {
        return isset($this->cluster);
    }

    public function clearCluster()
    {
        unset($this->cluster);
    }

    /**
     * Required. Cluster to update.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.Cluster cluster = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\Cluster $var
     * @return $this
     */
    public function setCluster($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\Cluster::class);
        $this->cluster = $var;

        return $this;
    }

    /**
     * Optional. Mask specifying which fields in the cluster to update. All paths
     * must be specified explicitly - wildcards are not supported. At least one
     * path must be provided.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * Optional. Mask specifying which fields in the cluster to update. All paths
     * must be specified explicitly - wildcards are not supported. At least one
     * path must be provided.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

    /**
     * Optional. A unique identifier for this request. A random UUID is
     * recommended. This request is idempotent if and only if `request_id` is
     * provided.
     *
     * Generated from protobuf field <code>string request_id = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Optional. A unique identifier for this request. A random UUID is
     * recommended. This request is idempotent if and only if `request_id` is
     * provided.
     *
     * Generated from protobuf field <code>string request_id = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

}

