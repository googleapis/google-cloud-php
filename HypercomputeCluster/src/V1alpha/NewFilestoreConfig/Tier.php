<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/hypercomputecluster/v1alpha/hypercompute_cluster.proto

namespace Google\Cloud\HypercomputeCluster\V1alpha\NewFilestoreConfig;

use UnexpectedValueException;

/**
 * Available [service
 * tiers](https://cloud.google.com/filestore/docs/service-tiers) for Filestore
 * instances.
 *
 * Protobuf type <code>google.cloud.hypercomputecluster.v1alpha.NewFilestoreConfig.Tier</code>
 */
class Tier
{
    /**
     * Not set.
     *
     * Generated from protobuf enum <code>TIER_UNSPECIFIED = 0;</code>
     */
    const TIER_UNSPECIFIED = 0;
    /**
     * Offers expanded capacity and performance scaling capabilities suitable
     * for high-performance computing application requirements.
     *
     * Generated from protobuf enum <code>ZONAL = 4;</code>
     */
    const ZONAL = 4;
    /**
     * Offers features and availability needed for mission-critical,
     * high-performance computing workloads.
     *
     * Generated from protobuf enum <code>REGIONAL = 6;</code>
     */
    const REGIONAL = 6;
    /**
     * Deprecated: Use a different tier instead.
     *
     * Generated from protobuf enum <code>BASIC_HDD = 1 [deprecated = true];</code>
     */
    const BASIC_HDD = 1;
    /**
     * Deprecated: Use a different tier instead.
     *
     * Generated from protobuf enum <code>BASIC_SSD = 2 [deprecated = true];</code>
     */
    const BASIC_SSD = 2;
    /**
     * Deprecated: Use a different tier instead.
     *
     * Generated from protobuf enum <code>HIGH_SCALE_SSD = 3 [deprecated = true];</code>
     */
    const HIGH_SCALE_SSD = 3;
    /**
     * Deprecated: Use a different tier instead.
     *
     * Generated from protobuf enum <code>ENTERPRISE = 5 [deprecated = true];</code>
     */
    const ENTERPRISE = 5;

    private static $valueToName = [
        self::TIER_UNSPECIFIED => 'TIER_UNSPECIFIED',
        self::ZONAL => 'ZONAL',
        self::REGIONAL => 'REGIONAL',
        self::BASIC_HDD => 'BASIC_HDD',
        self::BASIC_SSD => 'BASIC_SSD',
        self::HIGH_SCALE_SSD => 'HIGH_SCALE_SSD',
        self::ENTERPRISE => 'ENTERPRISE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


