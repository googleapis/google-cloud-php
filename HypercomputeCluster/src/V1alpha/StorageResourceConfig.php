<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/hypercomputecluster/v1alpha/hypercompute_cluster.proto

namespace Google\Cloud\HypercomputeCluster\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describes how a storage resource should be initialized. Each storage resource
 * can either be imported from an existing Google Cloud resource or initialized
 * when the cluster is created.
 *
 * Generated from protobuf message <code>google.cloud.hypercomputecluster.v1alpha.StorageResourceConfig</code>
 */
class StorageResourceConfig extends \Google\Protobuf\Internal\Message
{
    protected $config;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\NewFilestoreConfig $new_filestore
     *           Optional. Immutable. If set, indicates that a new Filestore instance
     *           should be created.
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\ExistingFilestoreConfig $existing_filestore
     *           Optional. Immutable. If set, indicates that an existing Filestore
     *           instance should be imported.
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\NewBucketConfig $new_bucket
     *           Optional. Immutable. If set, indicates that a new Cloud Storage bucket
     *           should be created.
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\ExistingBucketConfig $existing_bucket
     *           Optional. Immutable. If set, indicates that an existing Cloud Storage
     *           bucket should be imported.
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\NewLustreConfig $new_lustre
     *           Optional. Immutable. If set, indicates that a new Managed Lustre instance
     *           should be created.
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\ExistingLustreConfig $existing_lustre
     *           Optional. Immutable. If set, indicates that an existing Managed Lustre
     *           instance should be imported.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Hypercomputecluster\V1Alpha\HypercomputeCluster::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Immutable. If set, indicates that a new Filestore instance
     * should be created.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.NewFilestoreConfig new_filestore = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\NewFilestoreConfig|null
     */
    public function getNewFilestore()
    {
        return $this->readOneof(1);
    }

    public function hasNewFilestore()
    {
        return $this->hasOneof(1);
    }

    /**
     * Optional. Immutable. If set, indicates that a new Filestore instance
     * should be created.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.NewFilestoreConfig new_filestore = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\NewFilestoreConfig $var
     * @return $this
     */
    public function setNewFilestore($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\NewFilestoreConfig::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Optional. Immutable. If set, indicates that an existing Filestore
     * instance should be imported.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.ExistingFilestoreConfig existing_filestore = 2 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\ExistingFilestoreConfig|null
     */
    public function getExistingFilestore()
    {
        return $this->readOneof(2);
    }

    public function hasExistingFilestore()
    {
        return $this->hasOneof(2);
    }

    /**
     * Optional. Immutable. If set, indicates that an existing Filestore
     * instance should be imported.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.ExistingFilestoreConfig existing_filestore = 2 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\ExistingFilestoreConfig $var
     * @return $this
     */
    public function setExistingFilestore($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\ExistingFilestoreConfig::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Optional. Immutable. If set, indicates that a new Cloud Storage bucket
     * should be created.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.NewBucketConfig new_bucket = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\NewBucketConfig|null
     */
    public function getNewBucket()
    {
        return $this->readOneof(3);
    }

    public function hasNewBucket()
    {
        return $this->hasOneof(3);
    }

    /**
     * Optional. Immutable. If set, indicates that a new Cloud Storage bucket
     * should be created.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.NewBucketConfig new_bucket = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\NewBucketConfig $var
     * @return $this
     */
    public function setNewBucket($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\NewBucketConfig::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Optional. Immutable. If set, indicates that an existing Cloud Storage
     * bucket should be imported.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.ExistingBucketConfig existing_bucket = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\ExistingBucketConfig|null
     */
    public function getExistingBucket()
    {
        return $this->readOneof(4);
    }

    public function hasExistingBucket()
    {
        return $this->hasOneof(4);
    }

    /**
     * Optional. Immutable. If set, indicates that an existing Cloud Storage
     * bucket should be imported.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.ExistingBucketConfig existing_bucket = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\ExistingBucketConfig $var
     * @return $this
     */
    public function setExistingBucket($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\ExistingBucketConfig::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Optional. Immutable. If set, indicates that a new Managed Lustre instance
     * should be created.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.NewLustreConfig new_lustre = 5 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\NewLustreConfig|null
     */
    public function getNewLustre()
    {
        return $this->readOneof(5);
    }

    public function hasNewLustre()
    {
        return $this->hasOneof(5);
    }

    /**
     * Optional. Immutable. If set, indicates that a new Managed Lustre instance
     * should be created.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.NewLustreConfig new_lustre = 5 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\NewLustreConfig $var
     * @return $this
     */
    public function setNewLustre($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\NewLustreConfig::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Optional. Immutable. If set, indicates that an existing Managed Lustre
     * instance should be imported.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.ExistingLustreConfig existing_lustre = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\ExistingLustreConfig|null
     */
    public function getExistingLustre()
    {
        return $this->readOneof(6);
    }

    public function hasExistingLustre()
    {
        return $this->hasOneof(6);
    }

    /**
     * Optional. Immutable. If set, indicates that an existing Managed Lustre
     * instance should be imported.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.ExistingLustreConfig existing_lustre = 6 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\ExistingLustreConfig $var
     * @return $this
     */
    public function setExistingLustre($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\ExistingLustreConfig::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getConfig()
    {
        return $this->whichOneof("config");
    }

}

