<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/hypercomputecluster/v1alpha/machine_learning_runs.proto

namespace Google\Cloud\HypercomputeCluster\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A Machine Learning run.
 *
 * Generated from protobuf message <code>google.cloud.hypercomputecluster.v1alpha.MachineLearningRun</code>
 */
class MachineLearningRun extends \Google\Protobuf\Internal\Message
{
    /**
     * Identifier. The name of the Machine Learning run.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     */
    protected $name = '';
    /**
     * Optional. Display name for the run.
     *
     * Generated from protobuf field <code>string display_name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $display_name = '';
    /**
     * Required. Allows grouping of similar runs.
     *  * Helps improving UI rendering performance.
     *  * Allows comparing similar runs via fast filters.
     *
     * Generated from protobuf field <code>string run_set = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $run_set = '';
    /**
     * Optional. ETag for the run.
     * It must be provided for update/delete operations and must match the
     * server's etag.
     *
     * Generated from protobuf field <code>string etag = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $etag = '';
    /**
     * Optional. Tracks configuration for this run,
     * example: batch_size, jax_version, tpu_generation etc.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.Configs configs = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $configs = null;
    /**
     * Required. List of tools enabled for this run
     * example: XProf, NSys
     *
     * Generated from protobuf field <code>repeated .google.cloud.hypercomputecluster.v1alpha.Tool tools = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $tools;
    /**
     * Optional. Metrics for the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.Metrics metrics = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $metrics = null;
    /**
     * Optional. Any custom labels for this run
     * Example: type:workload, type:simulation etc.
     *
     * Generated from protobuf field <code>map<string, string> labels = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $labels;
    /**
     * Output only. State of the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.State state = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $state = 0;
    /**
     * Output only. Time when the run was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $create_time = null;
    /**
     * Output only. Time when the run was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $update_time = null;
    /**
     * Optional. Artifacts for the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.Artifacts artifacts = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $artifacts = null;
    /**
     * Required. The orchestrator used for the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.MachineLearningRun.Orchestrator orchestrator = 13 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $orchestrator = 0;
    /**
     * Optional. The metadata for the workload associated with the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.WorkloadDetails workload_details = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $workload_details = null;
    /**
     * Optional. RunPhase defines the phase of the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.MachineLearningRun.RunPhase run_phase = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $run_phase = 0;
    /**
     * Optional. Error details for the run.
     * This field is set when the run is failed.
     *
     * Generated from protobuf field <code>string error_details = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $error_details = '';
    /**
     * Output only. Time when the run was completed.
     * This field is set when the run is completed or failed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 17 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $end_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Identifier. The name of the Machine Learning run.
     *     @type string $display_name
     *           Optional. Display name for the run.
     *     @type string $run_set
     *           Required. Allows grouping of similar runs.
     *            * Helps improving UI rendering performance.
     *            * Allows comparing similar runs via fast filters.
     *     @type string $etag
     *           Optional. ETag for the run.
     *           It must be provided for update/delete operations and must match the
     *           server's etag.
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\Configs $configs
     *           Optional. Tracks configuration for this run,
     *           example: batch_size, jax_version, tpu_generation etc.
     *     @type array<\Google\Cloud\HypercomputeCluster\V1alpha\Tool>|\Google\Protobuf\Internal\RepeatedField $tools
     *           Required. List of tools enabled for this run
     *           example: XProf, NSys
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\Metrics $metrics
     *           Optional. Metrics for the run.
     *     @type array|\Google\Protobuf\Internal\MapField $labels
     *           Optional. Any custom labels for this run
     *           Example: type:workload, type:simulation etc.
     *     @type int $state
     *           Output only. State of the run.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. Time when the run was created.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. Time when the run was last updated.
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\Artifacts $artifacts
     *           Optional. Artifacts for the run.
     *     @type int $orchestrator
     *           Required. The orchestrator used for the run.
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\WorkloadDetails $workload_details
     *           Optional. The metadata for the workload associated with the run.
     *     @type int $run_phase
     *           Optional. RunPhase defines the phase of the run.
     *     @type string $error_details
     *           Optional. Error details for the run.
     *           This field is set when the run is failed.
     *     @type \Google\Protobuf\Timestamp $end_time
     *           Output only. Time when the run was completed.
     *           This field is set when the run is completed or failed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Hypercomputecluster\V1Alpha\MachineLearningRuns::initOnce();
        parent::__construct($data);
    }

    /**
     * Identifier. The name of the Machine Learning run.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Identifier. The name of the Machine Learning run.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. Display name for the run.
     *
     * Generated from protobuf field <code>string display_name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Optional. Display name for the run.
     *
     * Generated from protobuf field <code>string display_name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * Required. Allows grouping of similar runs.
     *  * Helps improving UI rendering performance.
     *  * Allows comparing similar runs via fast filters.
     *
     * Generated from protobuf field <code>string run_set = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getRunSet()
    {
        return $this->run_set;
    }

    /**
     * Required. Allows grouping of similar runs.
     *  * Helps improving UI rendering performance.
     *  * Allows comparing similar runs via fast filters.
     *
     * Generated from protobuf field <code>string run_set = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setRunSet($var)
    {
        GPBUtil::checkString($var, True);
        $this->run_set = $var;

        return $this;
    }

    /**
     * Optional. ETag for the run.
     * It must be provided for update/delete operations and must match the
     * server's etag.
     *
     * Generated from protobuf field <code>string etag = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getEtag()
    {
        return $this->etag;
    }

    /**
     * Optional. ETag for the run.
     * It must be provided for update/delete operations and must match the
     * server's etag.
     *
     * Generated from protobuf field <code>string etag = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setEtag($var)
    {
        GPBUtil::checkString($var, True);
        $this->etag = $var;

        return $this;
    }

    /**
     * Optional. Tracks configuration for this run,
     * example: batch_size, jax_version, tpu_generation etc.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.Configs configs = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\Configs|null
     */
    public function getConfigs()
    {
        return $this->configs;
    }

    public function hasConfigs()
    {
        return isset($this->configs);
    }

    public function clearConfigs()
    {
        unset($this->configs);
    }

    /**
     * Optional. Tracks configuration for this run,
     * example: batch_size, jax_version, tpu_generation etc.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.Configs configs = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\Configs $var
     * @return $this
     */
    public function setConfigs($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\Configs::class);
        $this->configs = $var;

        return $this;
    }

    /**
     * Required. List of tools enabled for this run
     * example: XProf, NSys
     *
     * Generated from protobuf field <code>repeated .google.cloud.hypercomputecluster.v1alpha.Tool tools = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTools()
    {
        return $this->tools;
    }

    /**
     * Required. List of tools enabled for this run
     * example: XProf, NSys
     *
     * Generated from protobuf field <code>repeated .google.cloud.hypercomputecluster.v1alpha.Tool tools = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param array<\Google\Cloud\HypercomputeCluster\V1alpha\Tool>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTools($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\HypercomputeCluster\V1alpha\Tool::class);
        $this->tools = $arr;

        return $this;
    }

    /**
     * Optional. Metrics for the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.Metrics metrics = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\Metrics|null
     */
    public function getMetrics()
    {
        return $this->metrics;
    }

    public function hasMetrics()
    {
        return isset($this->metrics);
    }

    public function clearMetrics()
    {
        unset($this->metrics);
    }

    /**
     * Optional. Metrics for the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.Metrics metrics = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\Metrics $var
     * @return $this
     */
    public function setMetrics($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\Metrics::class);
        $this->metrics = $var;

        return $this;
    }

    /**
     * Optional. Any custom labels for this run
     * Example: type:workload, type:simulation etc.
     *
     * Generated from protobuf field <code>map<string, string> labels = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * Optional. Any custom labels for this run
     * Example: type:workload, type:simulation etc.
     *
     * Generated from protobuf field <code>map<string, string> labels = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setLabels($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;

        return $this;
    }

    /**
     * Output only. State of the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.State state = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * Output only. State of the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.State state = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\HypercomputeCluster\V1alpha\State::class);
        $this->state = $var;

        return $this;
    }

    /**
     * Output only. Time when the run was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. Time when the run was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * Output only. Time when the run was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. Time when the run was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 11 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Optional. Artifacts for the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.Artifacts artifacts = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\Artifacts|null
     */
    public function getArtifacts()
    {
        return $this->artifacts;
    }

    public function hasArtifacts()
    {
        return isset($this->artifacts);
    }

    public function clearArtifacts()
    {
        unset($this->artifacts);
    }

    /**
     * Optional. Artifacts for the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.Artifacts artifacts = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\Artifacts $var
     * @return $this
     */
    public function setArtifacts($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\Artifacts::class);
        $this->artifacts = $var;

        return $this;
    }

    /**
     * Required. The orchestrator used for the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.MachineLearningRun.Orchestrator orchestrator = 13 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getOrchestrator()
    {
        return $this->orchestrator;
    }

    /**
     * Required. The orchestrator used for the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.MachineLearningRun.Orchestrator orchestrator = 13 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setOrchestrator($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\HypercomputeCluster\V1alpha\MachineLearningRun\Orchestrator::class);
        $this->orchestrator = $var;

        return $this;
    }

    /**
     * Optional. The metadata for the workload associated with the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.WorkloadDetails workload_details = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\WorkloadDetails|null
     */
    public function getWorkloadDetails()
    {
        return $this->workload_details;
    }

    public function hasWorkloadDetails()
    {
        return isset($this->workload_details);
    }

    public function clearWorkloadDetails()
    {
        unset($this->workload_details);
    }

    /**
     * Optional. The metadata for the workload associated with the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.WorkloadDetails workload_details = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\WorkloadDetails $var
     * @return $this
     */
    public function setWorkloadDetails($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\WorkloadDetails::class);
        $this->workload_details = $var;

        return $this;
    }

    /**
     * Optional. RunPhase defines the phase of the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.MachineLearningRun.RunPhase run_phase = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getRunPhase()
    {
        return $this->run_phase;
    }

    /**
     * Optional. RunPhase defines the phase of the run.
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.MachineLearningRun.RunPhase run_phase = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setRunPhase($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\HypercomputeCluster\V1alpha\MachineLearningRun\RunPhase::class);
        $this->run_phase = $var;

        return $this;
    }

    /**
     * Optional. Error details for the run.
     * This field is set when the run is failed.
     *
     * Generated from protobuf field <code>string error_details = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getErrorDetails()
    {
        return $this->error_details;
    }

    /**
     * Optional. Error details for the run.
     * This field is set when the run is failed.
     *
     * Generated from protobuf field <code>string error_details = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setErrorDetails($var)
    {
        GPBUtil::checkString($var, True);
        $this->error_details = $var;

        return $this;
    }

    /**
     * Output only. Time when the run was completed.
     * This field is set when the run is completed or failed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 17 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getEndTime()
    {
        return $this->end_time;
    }

    public function hasEndTime()
    {
        return isset($this->end_time);
    }

    public function clearEndTime()
    {
        unset($this->end_time);
    }

    /**
     * Output only. Time when the run was completed.
     * This field is set when the run is completed or failed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 17 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEndTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->end_time = $var;

        return $this;
    }

}

