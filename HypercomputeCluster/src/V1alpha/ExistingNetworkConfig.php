<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/hypercomputecluster/v1alpha/hypercompute_cluster.proto

namespace Google\Cloud\HypercomputeCluster\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * When set in a
 * [NetworkResourceConfig][google.cloud.hypercomputecluster.v1alpha.NetworkResourceConfig],
 * indicates that an existing network should be imported.
 *
 * Generated from protobuf message <code>google.cloud.hypercomputecluster.v1alpha.ExistingNetworkConfig</code>
 */
class ExistingNetworkConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Immutable. Name of the network to import, in the format
     * `projects/{project}/global/networks/{network}`.
     *
     * Generated from protobuf field <code>string network = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {</code>
     */
    protected $network = '';
    /**
     * Required. Immutable. Particular subnetwork to use, in the format
     * `projects/{project}/regions/{region}/subnetworks/{subnetwork}`.
     *
     * Generated from protobuf field <code>string subnetwork = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {</code>
     */
    protected $subnetwork = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $network
     *           Required. Immutable. Name of the network to import, in the format
     *           `projects/{project}/global/networks/{network}`.
     *     @type string $subnetwork
     *           Required. Immutable. Particular subnetwork to use, in the format
     *           `projects/{project}/regions/{region}/subnetworks/{subnetwork}`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Hypercomputecluster\V1Alpha\HypercomputeCluster::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Immutable. Name of the network to import, in the format
     * `projects/{project}/global/networks/{network}`.
     *
     * Generated from protobuf field <code>string network = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getNetwork()
    {
        return $this->network;
    }

    /**
     * Required. Immutable. Name of the network to import, in the format
     * `projects/{project}/global/networks/{network}`.
     *
     * Generated from protobuf field <code>string network = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setNetwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->network = $var;

        return $this;
    }

    /**
     * Required. Immutable. Particular subnetwork to use, in the format
     * `projects/{project}/regions/{region}/subnetworks/{subnetwork}`.
     *
     * Generated from protobuf field <code>string subnetwork = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getSubnetwork()
    {
        return $this->subnetwork;
    }

    /**
     * Required. Immutable. Particular subnetwork to use, in the format
     * `projects/{project}/regions/{region}/subnetworks/{subnetwork}`.
     *
     * Generated from protobuf field <code>string subnetwork = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setSubnetwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->subnetwork = $var;

        return $this;
    }

}

