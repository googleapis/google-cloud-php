<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/hypercomputecluster/v1alpha/hypercompute_cluster.proto

namespace Google\Cloud\HypercomputeCluster\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message describing initialize params for storage object
 *
 * @deprecated
 * Generated from protobuf message <code>google.cloud.hypercomputecluster.v1alpha.StorageInitializeParams</code>
 */
class StorageInitializeParams extends \Google\Protobuf\Internal\Message
{
    protected $option;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\FilestoreInitializeParams $filestore
     *           FileStore initialize params
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\GcsInitializeParams $gcs
     *           Google Cloud Storage initialize params
     *     @type \Google\Cloud\HypercomputeCluster\V1alpha\LustreInitializeParams $lustre
     *           Lustre initialize params
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Hypercomputecluster\V1Alpha\HypercomputeCluster::initOnce();
        parent::__construct($data);
    }

    /**
     * FileStore initialize params
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.FilestoreInitializeParams filestore = 1;</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\FilestoreInitializeParams|null
     */
    public function getFilestore()
    {
        return $this->readOneof(1);
    }

    public function hasFilestore()
    {
        return $this->hasOneof(1);
    }

    /**
     * FileStore initialize params
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.FilestoreInitializeParams filestore = 1;</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\FilestoreInitializeParams $var
     * @return $this
     */
    public function setFilestore($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\FilestoreInitializeParams::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Google Cloud Storage initialize params
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.GcsInitializeParams gcs = 2;</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\GcsInitializeParams|null
     */
    public function getGcs()
    {
        return $this->readOneof(2);
    }

    public function hasGcs()
    {
        return $this->hasOneof(2);
    }

    /**
     * Google Cloud Storage initialize params
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.GcsInitializeParams gcs = 2;</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\GcsInitializeParams $var
     * @return $this
     */
    public function setGcs($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\GcsInitializeParams::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Lustre initialize params
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.LustreInitializeParams lustre = 3;</code>
     * @return \Google\Cloud\HypercomputeCluster\V1alpha\LustreInitializeParams|null
     */
    public function getLustre()
    {
        return $this->readOneof(3);
    }

    public function hasLustre()
    {
        return $this->hasOneof(3);
    }

    /**
     * Lustre initialize params
     *
     * Generated from protobuf field <code>.google.cloud.hypercomputecluster.v1alpha.LustreInitializeParams lustre = 3;</code>
     * @param \Google\Cloud\HypercomputeCluster\V1alpha\LustreInitializeParams $var
     * @return $this
     */
    public function setLustre($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\HypercomputeCluster\V1alpha\LustreInitializeParams::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getOption()
    {
        return $this->whichOneof("option");
    }

}

