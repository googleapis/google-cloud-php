<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/ads/admanager/v1/ad_unit_enums.proto

namespace Google\Ads\AdManager\V1\SmartSizeModeEnum;

use UnexpectedValueException;

/**
 * The smart size mode for this ad unit. This attribute is optional and
 * defaults to SmartSizeMode.NONE for fixed sizes.
 *
 * Protobuf type <code>google.ads.admanager.v1.SmartSizeModeEnum.SmartSizeMode</code>
 */
class SmartSizeMode
{
    /**
     * Default value. This value is unused.
     *
     * Generated from protobuf enum <code>SMART_SIZE_MODE_UNSPECIFIED = 0;</code>
     */
    const SMART_SIZE_MODE_UNSPECIFIED = 0;
    /**
     * Fixed size mode (default).
     *
     * Generated from protobuf enum <code>NONE = 1;</code>
     */
    const NONE = 1;
    /**
     * The height is fixed for the request, the width is a range.
     *
     * Generated from protobuf enum <code>SMART_BANNER = 2;</code>
     */
    const SMART_BANNER = 2;
    /**
     * Height and width are ranges.
     *
     * Generated from protobuf enum <code>DYNAMIC_SIZE = 3;</code>
     */
    const DYNAMIC_SIZE = 3;

    private static $valueToName = [
        self::SMART_SIZE_MODE_UNSPECIFIED => 'SMART_SIZE_MODE_UNSPECIFIED',
        self::NONE => 'NONE',
        self::SMART_BANNER => 'SMART_BANNER',
        self::DYNAMIC_SIZE => 'DYNAMIC_SIZE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


