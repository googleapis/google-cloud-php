<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/ads/admanager/v1/report_service.proto

namespace Google\Ads\AdManager\V1\Schedule;

use UnexpectedValueException;

/**
 * Frequency to run report.
 *
 * Protobuf type <code>google.ads.admanager.v1.Schedule.Frequency</code>
 */
class Frequency
{
    /**
     * No Frequency specified.
     *
     * Generated from protobuf enum <code>FREQUENCY_UNSPECIFIED = 0;</code>
     */
    const FREQUENCY_UNSPECIFIED = 0;
    /**
     * Schedule report to run every hour.
     *
     * Generated from protobuf enum <code>HOURLY = 1;</code>
     */
    const HOURLY = 1;
    /**
     * Schedule report to run twice a day (every 12 hours).
     *
     * Generated from protobuf enum <code>TWO_TIMES_DAILY = 2;</code>
     */
    const TWO_TIMES_DAILY = 2;
    /**
     * Schedule report to run three times a day (every 8 hours).
     *
     * Generated from protobuf enum <code>THREE_TIMES_DAILY = 3;</code>
     */
    const THREE_TIMES_DAILY = 3;
    /**
     * Schedule report to run four times a day (every 6 hours).
     *
     * Generated from protobuf enum <code>FOUR_TIMES_DAILY = 4;</code>
     */
    const FOUR_TIMES_DAILY = 4;
    /**
     * Schedule report to run on a daily basis.
     *
     * Generated from protobuf enum <code>DAILY = 5;</code>
     */
    const DAILY = 5;
    /**
     * Schedule report to run on a weekly basis.
     *
     * Generated from protobuf enum <code>WEEKLY = 6;</code>
     */
    const WEEKLY = 6;
    /**
     * Schedule report to run on a monthly basis.
     *
     * Generated from protobuf enum <code>MONTHLY = 7;</code>
     */
    const MONTHLY = 7;

    private static $valueToName = [
        self::FREQUENCY_UNSPECIFIED => 'FREQUENCY_UNSPECIFIED',
        self::HOURLY => 'HOURLY',
        self::TWO_TIMES_DAILY => 'TWO_TIMES_DAILY',
        self::THREE_TIMES_DAILY => 'THREE_TIMES_DAILY',
        self::FOUR_TIMES_DAILY => 'FOUR_TIMES_DAILY',
        self::DAILY => 'DAILY',
        self::WEEKLY => 'WEEKLY',
        self::MONTHLY => 'MONTHLY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


