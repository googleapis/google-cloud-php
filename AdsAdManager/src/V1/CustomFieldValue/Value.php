<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/ads/admanager/v1/custom_field_value.proto

namespace Google\Ads\AdManager\V1\CustomFieldValue;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represent custom field value type.
 * Next Id: 5
 *
 * Generated from protobuf message <code>google.ads.admanager.v1.CustomFieldValue.Value</code>
 */
class Value extends \Google\Protobuf\Internal\Message
{
    protected $value;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $dropdown_value
     *           The custom_field_option_id, if the CustomFieldDataType is DROPDOWN.
     *     @type string $string_value
     *           The value, if the CustomFieldDataType is STRING.
     *     @type float $number_value
     *           The value, if the CustomFieldDataType is NUMBER.
     *     @type bool $toggle_value
     *           The value, if the CustomFieldDataType is TOGGLE.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Ads\Admanager\V1\CustomFieldValue::initOnce();
        parent::__construct($data);
    }

    /**
     * The custom_field_option_id, if the CustomFieldDataType is DROPDOWN.
     *
     * Generated from protobuf field <code>int64 dropdown_value = 1;</code>
     * @return int|string
     */
    public function getDropdownValue()
    {
        return $this->readOneof(1);
    }

    public function hasDropdownValue()
    {
        return $this->hasOneof(1);
    }

    /**
     * The custom_field_option_id, if the CustomFieldDataType is DROPDOWN.
     *
     * Generated from protobuf field <code>int64 dropdown_value = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDropdownValue($var)
    {
        GPBUtil::checkInt64($var);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * The value, if the CustomFieldDataType is STRING.
     *
     * Generated from protobuf field <code>string string_value = 2;</code>
     * @return string
     */
    public function getStringValue()
    {
        return $this->readOneof(2);
    }

    public function hasStringValue()
    {
        return $this->hasOneof(2);
    }

    /**
     * The value, if the CustomFieldDataType is STRING.
     *
     * Generated from protobuf field <code>string string_value = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setStringValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * The value, if the CustomFieldDataType is NUMBER.
     *
     * Generated from protobuf field <code>double number_value = 3;</code>
     * @return float
     */
    public function getNumberValue()
    {
        return $this->readOneof(3);
    }

    public function hasNumberValue()
    {
        return $this->hasOneof(3);
    }

    /**
     * The value, if the CustomFieldDataType is NUMBER.
     *
     * Generated from protobuf field <code>double number_value = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setNumberValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * The value, if the CustomFieldDataType is TOGGLE.
     *
     * Generated from protobuf field <code>bool toggle_value = 4;</code>
     * @return bool
     */
    public function getToggleValue()
    {
        return $this->readOneof(4);
    }

    public function hasToggleValue()
    {
        return $this->hasOneof(4);
    }

    /**
     * The value, if the CustomFieldDataType is TOGGLE.
     *
     * Generated from protobuf field <code>bool toggle_value = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setToggleValue($var)
    {
        GPBUtil::checkBool($var);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getValue()
    {
        return $this->whichOneof("value");
    }

}


