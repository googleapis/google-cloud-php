<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/ads/admanager/v1/report_service.proto

namespace Google\Ads\AdManager\V1\Report;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A flag for a report. Flags are used show if certain thresholds are met.
 * Result rows that match the filter will have the corresponding
 * [MetricValueGroup.flagValues][MetricValueGroup] index set to true.
 * For more information about flags see:
 * https://support.google.com/admanager/answer/15079975
 *
 * Generated from protobuf message <code>google.ads.admanager.v1.Report.Flag</code>
 */
class Flag extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Filters to apply for the flag.
     *
     * Generated from protobuf field <code>repeated .google.ads.admanager.v1.Report.Filter filters = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $filters;
    /**
     * Optional. Name of the flag.
     * The flag names RED, YELLOW, GREEN, BLUE, PURPLE, and GREY correspond to
     * the colored flags that appear in the UI. The UI will not display flags
     * with other names, but they are available for use by API clients.
     *
     * Generated from protobuf field <code>string name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Google\Ads\AdManager\V1\Report\Filter>|\Google\Protobuf\Internal\RepeatedField $filters
     *           Required. Filters to apply for the flag.
     *     @type string $name
     *           Optional. Name of the flag.
     *           The flag names RED, YELLOW, GREEN, BLUE, PURPLE, and GREY correspond to
     *           the colored flags that appear in the UI. The UI will not display flags
     *           with other names, but they are available for use by API clients.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Ads\Admanager\V1\ReportService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Filters to apply for the flag.
     *
     * Generated from protobuf field <code>repeated .google.ads.admanager.v1.Report.Filter filters = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFilters()
    {
        return $this->filters;
    }

    /**
     * Required. Filters to apply for the flag.
     *
     * Generated from protobuf field <code>repeated .google.ads.admanager.v1.Report.Filter filters = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param array<\Google\Ads\AdManager\V1\Report\Filter>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFilters($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Ads\AdManager\V1\Report\Filter::class);
        $this->filters = $arr;

        return $this;
    }

    /**
     * Optional. Name of the flag.
     * The flag names RED, YELLOW, GREEN, BLUE, PURPLE, and GREY correspond to
     * the colored flags that appear in the UI. The UI will not display flags
     * with other names, but they are available for use by API clients.
     *
     * Generated from protobuf field <code>string name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Optional. Name of the flag.
     * The flag names RED, YELLOW, GREEN, BLUE, PURPLE, and GREY correspond to
     * the colored flags that appear in the UI. The UI will not display flags
     * with other names, but they are available for use by API clients.
     *
     * Generated from protobuf field <code>string name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

}


