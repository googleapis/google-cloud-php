<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/ads/admanager/v1/report_service.proto

namespace Google\Ads\AdManager\V1\Report;

use UnexpectedValueException;

/**
 * Reporting metrics.
 *
 * Protobuf type <code>google.ads.admanager.v1.Report.Metric</code>
 */
class Metric
{
    /**
     * Default value. This value is unused.
     *
     * Generated from protobuf enum <code>METRIC_UNSPECIFIED = 0;</code>
     */
    const METRIC_UNSPECIFIED = 0;
    /**
     * Active View total average time in seconds that specific impressions are
     * reported as being viewable.
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 61;</code>
     */
    const ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 61;
    /**
     * Total number of impressions that were eligible to measure viewability.
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 58;</code>
     */
    const ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 58;
    /**
     * The total number of impressions that were sampled and measured by active
     * view.
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 57;</code>
     */
    const ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 57;
    /**
     * The percentage of total impressions that were measurable by active view
     * (out of all the total impressions sampled for active view).
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 60;</code>
     */
    const ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 60;
    /**
     * The total number of impressions viewed on the user's screen.
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 56;</code>
     */
    const ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 56;
    /**
     * The percentage of total impressions viewed on the user's screen (out of
     * the total impressions measurable by active view).
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 59;</code>
     */
    const ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 59;
    /**
     * Active View AdSense average time in seconds that specific impressions are
     * reported as being viewable.
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 73;</code>
     */
    const ADSENSE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 73;
    /**
     * Total number of impressions delivered by AdSense that were eligible to
     * measure viewability.
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 70;</code>
     */
    const ADSENSE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 70;
    /**
     * The number of impressions delivered by AdSense that were sampled, and
     * measurable by active view.
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 69;</code>
     */
    const ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 69;
    /**
     * The percentage of impressions delivered by AdSense that were measurable
     * by active view (out of all AdSense impressions sampled for active view).
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 72;</code>
     */
    const ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 72;
    /**
     * The number of impressions delivered by AdSense viewed on the user's
     * screen.
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 68;</code>
     */
    const ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 68;
    /**
     * The percentage of impressions delivered by AdSense viewed on the user's
     * screen (out of AdSense impressions measurable by active view).
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 71;</code>
     */
    const ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 71;
    /**
     * The average effective cost-per-thousand-impressions earned from the ads
     * delivered by AdSense through line item dynamic allocation.
     *
     * Generated from protobuf enum <code>ADSENSE_AVERAGE_ECPM = 26;</code>
     */
    const ADSENSE_AVERAGE_ECPM = 26;
    /**
     * Number of clicks delivered by AdSense demand channel.
     *
     * Generated from protobuf enum <code>ADSENSE_CLICKS = 23;</code>
     */
    const ADSENSE_CLICKS = 23;
    /**
     * The ratio of impressions served by AdSense that resulted in users
     * clicking on an ad. The clickthrough rate (CTR) is updated nightly. The
     * AdSense CTR is calculated as: (AdSense clicks / AdSense impressions).
     *
     * Generated from protobuf enum <code>ADSENSE_CTR = 24;</code>
     */
    const ADSENSE_CTR = 24;
    /**
     * Total impressions delivered by AdSense.
     *
     * Generated from protobuf enum <code>ADSENSE_IMPRESSIONS = 22;</code>
     */
    const ADSENSE_IMPRESSIONS = 22;
    /**
     * Ratio of clicks delivered by AdSense through line item dynamic allocation
     * in relation to the total clicks delivered.
     *
     * Generated from protobuf enum <code>ADSENSE_PERCENT_CLICKS = 28;</code>
     */
    const ADSENSE_PERCENT_CLICKS = 28;
    /**
     * Ratio of impressions delivered by AdSense through line item dynamic
     * allocation in relation to the total impressions delivered.
     *
     * Generated from protobuf enum <code>ADSENSE_PERCENT_IMPRESSIONS = 27;</code>
     */
    const ADSENSE_PERCENT_IMPRESSIONS = 27;
    /**
     * Ratio of revenue generated by AdSense through line item dynamic
     * allocation in relation to the total revenue.
     *
     * Generated from protobuf enum <code>ADSENSE_PERCENT_REVENUE = 29;</code>
     */
    const ADSENSE_PERCENT_REVENUE = 29;
    /**
     * Ratio of revenue generated by AdSense through line item dynamic
     * allocation in relation to the total revenue (excluding CPD).
     *
     * Generated from protobuf enum <code>ADSENSE_PERCENT_REVENUE_WITHOUT_CPD = 30;</code>
     */
    const ADSENSE_PERCENT_REVENUE_WITHOUT_CPD = 30;
    /**
     * The total number of times that an AdSense ad is delivered.
     *
     * Generated from protobuf enum <code>ADSENSE_RESPONSES_SERVED = 41;</code>
     */
    const ADSENSE_RESPONSES_SERVED = 41;
    /**
     * Revenue generated from AdSense through line item dynamic allocation,
     * calculated in the network's currency and time zone.
     *
     * Generated from protobuf enum <code>ADSENSE_REVENUE = 25;</code>
     */
    const ADSENSE_REVENUE = 25;
    /**
     * Active View AdExchange average time in seconds that specific impressions
     * are reported as being viewable.
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 79;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 79;
    /**
     * Total number of impressions delivered by Ad Exchange that were eligible
     * to measure viewability.
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 76;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 76;
    /**
     * The number of impressions delivered by Ad Exchange that were sampled, and
     * measurable by active view.
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 75;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 75;
    /**
     * The percentage of impressions delivered by Ad Exchange that were
     * measurable by active view (out of all Ad Exchange impressions sampled for
     * active view).
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 78;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 78;
    /**
     * The number of impressions delivered by Ad Exchange viewed on the user's
     * screen.
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 74;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 74;
    /**
     * The percentage of impressions delivered by Ad Exchange viewed on the
     * user's screen (out of Ad Exchange impressions measurable by active view).
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 77;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 77;
    /**
     * The average effective cost-per-thousand-impressions earned from the ads
     * delivered by Ad Exchange through line item dynamic allocation.
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_AVERAGE_ECPM = 18;</code>
     */
    const AD_EXCHANGE_AVERAGE_ECPM = 18;
    /**
     * Number of clicks delivered by the Ad Exchange.
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_CLICKS = 15;</code>
     */
    const AD_EXCHANGE_CLICKS = 15;
    /**
     * The ratio of impressions served by the Ad Exchange that resulted in users
     * clicking on an ad. The clickthrough rate (CTR) is updated nightly. Ad
     * Exchange CTR is calculated as: (Ad Exchange clicks / Ad Exchange
     * impressions).
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_CTR = 16;</code>
     */
    const AD_EXCHANGE_CTR = 16;
    /**
     * Total impressions delivered by the Ad Exchange.
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_IMPRESSIONS = 14;</code>
     */
    const AD_EXCHANGE_IMPRESSIONS = 14;
    /**
     * Ratio of clicks delivered by Ad Exchange through line item dynamic
     * allocation in relation to the total clicks delivered.
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_PERCENT_CLICKS = 20;</code>
     */
    const AD_EXCHANGE_PERCENT_CLICKS = 20;
    /**
     * Ratio of impressions delivered by Ad Exchange through line item dynamic
     * allocation in relation to the total impressions delivered.
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_PERCENT_IMPRESSIONS = 19;</code>
     */
    const AD_EXCHANGE_PERCENT_IMPRESSIONS = 19;
    /**
     * Ratio of revenue generated by Ad Exchange through line item dynamic
     * allocation in relation to the total revenue.
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_PERCENT_REVENUE = 21;</code>
     */
    const AD_EXCHANGE_PERCENT_REVENUE = 21;
    /**
     * Ratio of revenue generated by Ad Exchange through line item dynamic
     * allocation in relation to the total revenue (excluding CPD).
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_PERCENT_REVENUE_WITHOUT_CPD = 31;</code>
     */
    const AD_EXCHANGE_PERCENT_REVENUE_WITHOUT_CPD = 31;
    /**
     * The total number of times that an Ad Exchange ad is delivered.
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_RESPONSES_SERVED = 42;</code>
     */
    const AD_EXCHANGE_RESPONSES_SERVED = 42;
    /**
     * Revenue generated from the Ad Exchange through line item dynamic
     * allocation, calculated in your network's currency and time zone.
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_REVENUE = 17;</code>
     */
    const AD_EXCHANGE_REVENUE = 17;
    /**
     * The total number of times that an ad request is sent to the ad server
     * including dynamic allocation.
     *
     * Generated from protobuf enum <code>AD_REQUESTS = 38;</code>
     */
    const AD_REQUESTS = 38;
    /**
     * Active View ad server average time in seconds that specific impressions
     * are reported as being viewable.
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 67;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 67;
    /**
     * Total number of impressions delivered by the ad server that were eligible
     * to measure viewability.
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 64;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 64;
    /**
     * The number of impressions delivered by the ad server that were sampled,
     * and measurable by active view.
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 63;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 63;
    /**
     * The percentage of impressions delivered by the ad server that were
     * measurable by active view (out of all the ad server impressions sampled
     * for active view).
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 66;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 66;
    /**
     * The number of impressions delivered by the ad server viewed on the user's
     * screen.
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 62;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 62;
    /**
     * The percentage of impressions delivered by the ad server viewed on the
     * user's screen (out of the ad server impressions measurable by active
     * view).
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 65;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 65;
    /**
     * Average effective cost-per-thousand-impressions earned from the ads
     * delivered by the Google Ad Manager server.
     *
     * Generated from protobuf enum <code>AD_SERVER_AVERAGE_ECPM = 34;</code>
     */
    const AD_SERVER_AVERAGE_ECPM = 34;
    /**
     * Average effective cost-per-thousand-impressions earned from the ads
     * delivered by the Google Ad Manager server, excluding CPD value.
     *
     * Generated from protobuf enum <code>AD_SERVER_AVERAGE_ECPM_WITHOUT_CPD = 10;</code>
     */
    const AD_SERVER_AVERAGE_ECPM_WITHOUT_CPD = 10;
    /**
     * Total clicks served by the Google Ad Manager server. It usually takes
     * about 30 minutes for new clicks to be recorded and added to the total
     * displayed in reporting.
     *
     * Generated from protobuf enum <code>AD_SERVER_CLICKS = 7;</code>
     */
    const AD_SERVER_CLICKS = 7;
    /**
     * CPD revenue earned, calculated in your network's currency, for
     * the ads delivered by the Google Ad Manager server. Sum of all booked
     * revenue.
     *
     * Generated from protobuf enum <code>AD_SERVER_CPD_REVENUE = 32;</code>
     */
    const AD_SERVER_CPD_REVENUE = 32;
    /**
     * Ratio of impressions served by the Google Ad Manager server that resulted
     * in users clicking on an ad. The clickthrough rate (CTR) is updated
     * nightly. The ad server CTR is calculated as: (Ad server clicks / Ad
     * server impressions).
     *
     * Generated from protobuf enum <code>AD_SERVER_CTR = 8;</code>
     */
    const AD_SERVER_CTR = 8;
    /**
     * Total impressions delivered by the Ad Server.
     *
     * Generated from protobuf enum <code>AD_SERVER_IMPRESSIONS = 6;</code>
     */
    const AD_SERVER_IMPRESSIONS = 6;
    /**
     * Ratio of clicks delivered by the Google Ad Manager server in relation to
     * the total clicks delivered.
     *
     * Generated from protobuf enum <code>AD_SERVER_PERCENT_CLICKS = 12;</code>
     */
    const AD_SERVER_PERCENT_CLICKS = 12;
    /**
     * Ratio of impressions delivered by the Google Ad Manager server in
     * relation to the total impressions delivered.
     *
     * Generated from protobuf enum <code>AD_SERVER_PERCENT_IMPRESSIONS = 11;</code>
     */
    const AD_SERVER_PERCENT_IMPRESSIONS = 11;
    /**
     * Ratio of revenue generated by the Google Ad Manager server in relation
     * to the total revenue.
     *
     * Generated from protobuf enum <code>AD_SERVER_PERCENT_REVENUE = 35;</code>
     */
    const AD_SERVER_PERCENT_REVENUE = 35;
    /**
     * Ratio of revenue generated by the Google Ad Manager server (excluding
     * CPD) in relation to the total revenue.
     *
     * Generated from protobuf enum <code>AD_SERVER_PERCENT_REVENUE_WITHOUT_CPD = 13;</code>
     */
    const AD_SERVER_PERCENT_REVENUE_WITHOUT_CPD = 13;
    /**
     * The total number of times that an ad is served by the ad server.
     *
     * Generated from protobuf enum <code>AD_SERVER_RESPONSES_SERVED = 40;</code>
     */
    const AD_SERVER_RESPONSES_SERVED = 40;
    /**
     * All CPM, CPC, and CPD revenue earned, calculated in your network's
     * currency, for the ads delivered by the Google Ad Manager server.
     * Sum of all booked revenue.
     *
     * Generated from protobuf enum <code>AD_SERVER_REVENUE = 33;</code>
     */
    const AD_SERVER_REVENUE = 33;
    /**
     * Revenue (excluding CPD) earned, calculated in your network's currency,
     * for the ads delivered by the Google Ad Manager server. Sum of all booked
     * revenue.
     *
     * Generated from protobuf enum <code>AD_SERVER_REVENUE_WITHOUT_CPD = 9;</code>
     */
    const AD_SERVER_REVENUE_WITHOUT_CPD = 9;
    /**
     * Number of winning bids received from Open Bidding buyers, even when the
     * winning bid is placed at the end of a mediation for mobile apps chain.
     *
     * Generated from protobuf enum <code>AUCTIONS_WON = 80;</code>
     */
    const AUCTIONS_WON = 80;
    /**
     * eCPM averaged across the Google Ad Manager server, AdSense,
     * and Ad Exchange.
     *
     * Generated from protobuf enum <code>AVERAGE_ECPM = 37;</code>
     */
    const AVERAGE_ECPM = 37;
    /**
     * eCPM averaged across the Google Ad Manager server (excluding CPD),
     * AdSense, and Ad Exchange.
     *
     * Generated from protobuf enum <code>AVERAGE_ECPM_WITHOUT_CPD = 5;</code>
     */
    const AVERAGE_ECPM_WITHOUT_CPD = 5;
    /**
     * Number of bids received from Open Bidding buyers, regardless of whether
     * the returned bid competes in an auction.
     *
     * Generated from protobuf enum <code>BIDS = 81;</code>
     */
    const BIDS = 81;
    /**
     * Number of bids received from Open Bidding buyers that competed in
     * the auction.
     *
     * Generated from protobuf enum <code>BIDS_IN_AUCTION = 82;</code>
     */
    const BIDS_IN_AUCTION = 82;
    /**
     * Number of times a yield partner is asked to return bid to fill
     * a yield group request.
     *
     * Generated from protobuf enum <code>CALLOUTS = 83;</code>
     */
    const CALLOUTS = 83;
    /**
     * The number of times a user clicked on an ad.
     *
     * Generated from protobuf enum <code>CLICKS = 2;</code>
     */
    const CLICKS = 2;
    /**
     * The total number of times that the code for an ad is served by the ad
     * server including dynamic allocation.
     *
     * Generated from protobuf enum <code>CODE_SERVED_COUNT = 44;</code>
     */
    const CODE_SERVED_COUNT = 44;
    /**
     * For standard ads, your ad clickthrough rate (CTR) is the number of ad
     *  clicks divided by the number of individual ad impressions expressed as a
     *  fraction. Ad CTR = Clicks / Ad impressions.
     *
     * Generated from protobuf enum <code>CTR = 3;</code>
     */
    const CTR = 3;
    /**
     * The number of coviewed impressions sold by Google in partner sales.
     *
     * Generated from protobuf enum <code>GOOGLE_SOLD_AUCTION_COVIEWED_IMPRESSIONS = 129;</code>
     */
    const GOOGLE_SOLD_AUCTION_COVIEWED_IMPRESSIONS = 129;
    /**
     * The number of auction impressions sold by Google in partner sales.
     *
     * Generated from protobuf enum <code>GOOGLE_SOLD_AUCTION_IMPRESSIONS = 128;</code>
     */
    const GOOGLE_SOLD_AUCTION_IMPRESSIONS = 128;
    /**
     * The number of coviewed impressions sold by Google in partner sales.
     *
     * Generated from protobuf enum <code>GOOGLE_SOLD_COVIEWED_IMPRESSIONS = 131;</code>
     */
    const GOOGLE_SOLD_COVIEWED_IMPRESSIONS = 131;
    /**
     * The number of impressions sold by Google in partner sales.
     *
     * Generated from protobuf enum <code>GOOGLE_SOLD_IMPRESSIONS = 130;</code>
     */
    const GOOGLE_SOLD_IMPRESSIONS = 130;
    /**
     * The number of coviewed impressions sold by Google in partner sales.
     *
     * Generated from protobuf enum <code>GOOGLE_SOLD_RESERVATION_COVIEWED_IMPRESSIONS = 127;</code>
     */
    const GOOGLE_SOLD_RESERVATION_COVIEWED_IMPRESSIONS = 127;
    /**
     * The number of reservation impressions sold by Google in partner sales.
     *
     * Generated from protobuf enum <code>GOOGLE_SOLD_RESERVATION_IMPRESSIONS = 126;</code>
     */
    const GOOGLE_SOLD_RESERVATION_IMPRESSIONS = 126;
    /**
     * Total impressions from the Google Ad Manager server, AdSense,
     * Ad Exchange, and yield group partners.
     *
     * Generated from protobuf enum <code>IMPRESSIONS = 1;</code>
     */
    const IMPRESSIONS = 1;
    /**
     * The number of filled pod requests (filled by partner or Google) in
     * partner sales.
     *
     * Generated from protobuf enum <code>PARTNER_SALES_FILLED_POD_REQUESTS = 135;</code>
     */
    const PARTNER_SALES_FILLED_POD_REQUESTS = 135;
    /**
     * The percent of filled requests to total ad requests in
     * partner sales.
     *
     * Generated from protobuf enum <code>PARTNER_SALES_FILL_RATE = 136;</code>
     */
    const PARTNER_SALES_FILL_RATE = 136;
    /**
     * The percent of partner filled requests to total ad requests
     * in partner sales.
     *
     * Generated from protobuf enum <code>PARTNER_SALES_PARTNER_MATCH_RATE = 137;</code>
     */
    const PARTNER_SALES_PARTNER_MATCH_RATE = 137;
    /**
     * The number of queries eligible for partner sales.
     *
     * Generated from protobuf enum <code>PARTNER_SALES_QUERIES = 132;</code>
     */
    const PARTNER_SALES_QUERIES = 132;
    /**
     * The number of partner unfilled impressions in partner sales.
     * If a pod request is not filled by partner but filled by Google, this
     * metric will still count 1.
     *
     * Generated from protobuf enum <code>PARTNER_SALES_UNFILLED_IMPRESSIONS = 133;</code>
     */
    const PARTNER_SALES_UNFILLED_IMPRESSIONS = 133;
    /**
     * The number of partner unmatched queries in partner sales.
     * If an ad request is not filled by partner but filled by Google, this
     * metric will still count 1.
     *
     * Generated from protobuf enum <code>PARTNER_SALES_UNMATCHED_QUERIES = 134;</code>
     */
    const PARTNER_SALES_UNMATCHED_QUERIES = 134;
    /**
     * The number of code served sold by partner in partner sales.
     *
     * Generated from protobuf enum <code>PARTNER_SOLD_CODE_SERVED = 125;</code>
     */
    const PARTNER_SOLD_CODE_SERVED = 125;
    /**
     * The number of coviewed impressions sold by partner in partner sales.
     *
     * Generated from protobuf enum <code>PARTNER_SOLD_COVIEWED_IMPRESSIONS = 124;</code>
     */
    const PARTNER_SOLD_COVIEWED_IMPRESSIONS = 124;
    /**
     * The number of impressions sold by partner in partner sales.
     *
     * Generated from protobuf enum <code>PARTNER_SOLD_IMPRESSIONS = 123;</code>
     */
    const PARTNER_SOLD_IMPRESSIONS = 123;
    /**
     * The total number of ad requests eligible for programmatic inventory,
     * including Programmatic Guaranteed, Preferred Deals, backfill, and open
     * auction.
     *
     * Generated from protobuf enum <code>PROGRAMMATIC_ELIGIBLE_AD_REQUESTS = 177;</code>
     */
    const PROGRAMMATIC_ELIGIBLE_AD_REQUESTS = 177;
    /**
     * The number of programmatic responses served divided by the number of
     * programmatic eligible ad requests. Includes Ad Exchange, Open Bidding,
     * and Preferred Deals.
     *
     * Generated from protobuf enum <code>PROGRAMMATIC_MATCH_RATE = 178;</code>
     */
    const PROGRAMMATIC_MATCH_RATE = 178;
    /**
     * Total number of ad responses served from programmatic demand sources.
     * Includes Ad Exchange, Open Bidding, and Preferred Deals.
     * Differs from AD_EXCHANGE_RESPONSES_SERVED, which doesn't include Open
     * Bidding ad requests.
     *
     * Generated from protobuf enum <code>PROGRAMMATIC_RESPONSES_SERVED = 176;</code>
     */
    const PROGRAMMATIC_RESPONSES_SERVED = 176;
    /**
     * The total number of times that an ad is served by the ad server including
     * dynamic allocation.
     *
     * Generated from protobuf enum <code>RESPONSES_SERVED = 39;</code>
     */
    const RESPONSES_SERVED = 39;
    /**
     * Total amount of CPM, CPC, and CPD revenue based on the number of units
     * served by the Google Ad Manager server, AdSense, Ad Exchange, and
     * third-party Mediation networks.
     *
     * Generated from protobuf enum <code>REVENUE = 36;</code>
     */
    const REVENUE = 36;
    /**
     * Total amount of revenue (excluding CPD) based on the number of units
     * served by the Google Ad Manager server, AdSense, Ad Exchange, and
     * third-party Mediation networks.
     *
     * Generated from protobuf enum <code>REVENUE_WITHOUT_CPD = 4;</code>
     */
    const REVENUE_WITHOUT_CPD = 4;
    /**
     * Number of times a yield group buyer successfully returned a bid in
     * response to a yield group callout.
     *
     * Generated from protobuf enum <code>SUCCESSFUL_RESPONSES = 84;</code>
     */
    const SUCCESSFUL_RESPONSES = 84;
    /**
     * The total number of missed impressions due to the ad servers' inability
     * to find ads to serve including dynamic allocation.
     *
     * Generated from protobuf enum <code>UNFILLED_IMPRESSIONS = 45;</code>
     */
    const UNFILLED_IMPRESSIONS = 45;
    /**
     * The total number of times that an ad is not returned by the ad server.
     *
     * Generated from protobuf enum <code>UNMATCHED_AD_REQUESTS = 43;</code>
     */
    const UNMATCHED_AD_REQUESTS = 43;
    /**
     * Number of times an Offerwall message was shown to users.
     *
     * Generated from protobuf enum <code>USER_MESSAGES_OFFERWALL_MESSAGES_SHOWN = 121;</code>
     */
    const USER_MESSAGES_OFFERWALL_MESSAGES_SHOWN = 121;
    /**
     * The number of messages where the user gained an entitlement.
     *
     * Generated from protobuf enum <code>USER_MESSAGES_OFFERWALL_SUCCESSFUL_ENGAGEMENTS = 122;</code>
     */
    const USER_MESSAGES_OFFERWALL_SUCCESSFUL_ENGAGEMENTS = 122;
    /**
     * The number of user interactions with a video, on average, such as pause,
     * full screen, mute, etc.
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_AVERAGE_INTERACTION_RATE = 92;</code>
     */
    const VIDEO_INTERACTION_AVERAGE_INTERACTION_RATE = 92;
    /**
     * The number of times a user collapses a video, either to its original size
     * or to a different size.
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_COLLAPSES = 93;</code>
     */
    const VIDEO_INTERACTION_COLLAPSES = 93;
    /**
     * The number of times a user expands a video.
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_EXPANDS = 95;</code>
     */
    const VIDEO_INTERACTION_EXPANDS = 95;
    /**
     * The number of times ad clip played in full screen mode.
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_FULL_SCREENS = 96;</code>
     */
    const VIDEO_INTERACTION_FULL_SCREENS = 96;
    /**
     * The number of times video player was in mute state during play of ad
     *  clip.
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_MUTES = 97;</code>
     */
    const VIDEO_INTERACTION_MUTES = 97;
    /**
     * The number of times user paused ad clip.
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_PAUSES = 98;</code>
     */
    const VIDEO_INTERACTION_PAUSES = 98;
    /**
     * The number of times the user unpaused the video.
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_RESUMES = 99;</code>
     */
    const VIDEO_INTERACTION_RESUMES = 99;
    /**
     * The number of times a user rewinds the video.
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_REWINDS = 100;</code>
     */
    const VIDEO_INTERACTION_REWINDS = 100;
    /**
     * The number of times a user unmutes the video.
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_UNMUTES = 101;</code>
     */
    const VIDEO_INTERACTION_UNMUTES = 101;
    /**
     * The number of times a skippable video is skipped.
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_VIDEO_SKIPS = 102;</code>
     */
    const VIDEO_INTERACTION_VIDEO_SKIPS = 102;
    /**
     * The number of total creative serves in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_CREATIVE_SERVES = 139;</code>
     */
    const VIDEO_REAL_TIME_CREATIVE_SERVES = 139;
    /**
     * The number of errors of type 100 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_100_COUNT = 143;</code>
     */
    const VIDEO_REAL_TIME_ERROR_100_COUNT = 143;
    /**
     * The number of errors of type 101 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_101_COUNT = 144;</code>
     */
    const VIDEO_REAL_TIME_ERROR_101_COUNT = 144;
    /**
     * The number of errors of type 102 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_102_COUNT = 145;</code>
     */
    const VIDEO_REAL_TIME_ERROR_102_COUNT = 145;
    /**
     * The number of errors of type 200 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_200_COUNT = 146;</code>
     */
    const VIDEO_REAL_TIME_ERROR_200_COUNT = 146;
    /**
     * The number of errors of type 201 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_201_COUNT = 147;</code>
     */
    const VIDEO_REAL_TIME_ERROR_201_COUNT = 147;
    /**
     * The number of errors of type 202 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_202_COUNT = 148;</code>
     */
    const VIDEO_REAL_TIME_ERROR_202_COUNT = 148;
    /**
     * The number of errors of type 203 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_203_COUNT = 149;</code>
     */
    const VIDEO_REAL_TIME_ERROR_203_COUNT = 149;
    /**
     * The number of errors of type 300 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_300_COUNT = 150;</code>
     */
    const VIDEO_REAL_TIME_ERROR_300_COUNT = 150;
    /**
     * The number of errors of type 301 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_301_COUNT = 151;</code>
     */
    const VIDEO_REAL_TIME_ERROR_301_COUNT = 151;
    /**
     * The number of errors of type 302 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_302_COUNT = 152;</code>
     */
    const VIDEO_REAL_TIME_ERROR_302_COUNT = 152;
    /**
     * The number of errors of type 303 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_303_COUNT = 153;</code>
     */
    const VIDEO_REAL_TIME_ERROR_303_COUNT = 153;
    /**
     * The number of errors of type 400 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_400_COUNT = 154;</code>
     */
    const VIDEO_REAL_TIME_ERROR_400_COUNT = 154;
    /**
     * The number of errors of type 401 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_401_COUNT = 155;</code>
     */
    const VIDEO_REAL_TIME_ERROR_401_COUNT = 155;
    /**
     * The number of errors of type 402 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_402_COUNT = 156;</code>
     */
    const VIDEO_REAL_TIME_ERROR_402_COUNT = 156;
    /**
     * The number of errors of type 403 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_403_COUNT = 157;</code>
     */
    const VIDEO_REAL_TIME_ERROR_403_COUNT = 157;
    /**
     * The number of errors of type 405 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_405_COUNT = 158;</code>
     */
    const VIDEO_REAL_TIME_ERROR_405_COUNT = 158;
    /**
     * The number of errors of type 406 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_406_COUNT = 159;</code>
     */
    const VIDEO_REAL_TIME_ERROR_406_COUNT = 159;
    /**
     * The number of errors of type 407 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_407_COUNT = 160;</code>
     */
    const VIDEO_REAL_TIME_ERROR_407_COUNT = 160;
    /**
     * The number of errors of type 408 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_408_COUNT = 161;</code>
     */
    const VIDEO_REAL_TIME_ERROR_408_COUNT = 161;
    /**
     * The number of errors of type 409 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_409_COUNT = 162;</code>
     */
    const VIDEO_REAL_TIME_ERROR_409_COUNT = 162;
    /**
     * The number of errors of type 410 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_410_COUNT = 163;</code>
     */
    const VIDEO_REAL_TIME_ERROR_410_COUNT = 163;
    /**
     * The number of errors of type 500 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_500_COUNT = 164;</code>
     */
    const VIDEO_REAL_TIME_ERROR_500_COUNT = 164;
    /**
     * The number of errors of type 501 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_501_COUNT = 165;</code>
     */
    const VIDEO_REAL_TIME_ERROR_501_COUNT = 165;
    /**
     * The number of errors of type 502 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_502_COUNT = 166;</code>
     */
    const VIDEO_REAL_TIME_ERROR_502_COUNT = 166;
    /**
     * The number of errors of type 503 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_503_COUNT = 167;</code>
     */
    const VIDEO_REAL_TIME_ERROR_503_COUNT = 167;
    /**
     * The number of errors of type 600 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_600_COUNT = 168;</code>
     */
    const VIDEO_REAL_TIME_ERROR_600_COUNT = 168;
    /**
     * The number of errors of type 601 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_601_COUNT = 169;</code>
     */
    const VIDEO_REAL_TIME_ERROR_601_COUNT = 169;
    /**
     * The number of errors of type 602 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_602_COUNT = 170;</code>
     */
    const VIDEO_REAL_TIME_ERROR_602_COUNT = 170;
    /**
     * The number of errors of type 603 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_603_COUNT = 171;</code>
     */
    const VIDEO_REAL_TIME_ERROR_603_COUNT = 171;
    /**
     * The number of errors of type 604 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_604_COUNT = 172;</code>
     */
    const VIDEO_REAL_TIME_ERROR_604_COUNT = 172;
    /**
     * The number of errors of type 900 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_900_COUNT = 173;</code>
     */
    const VIDEO_REAL_TIME_ERROR_900_COUNT = 173;
    /**
     * The number of errors of type 901 in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_901_COUNT = 174;</code>
     */
    const VIDEO_REAL_TIME_ERROR_901_COUNT = 174;
    /**
     * The number of total impressions in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_IMPRESSIONS = 138;</code>
     */
    const VIDEO_REAL_TIME_IMPRESSIONS = 138;
    /**
     * The number of matched queries in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_MATCHED_QUERIES = 140;</code>
     */
    const VIDEO_REAL_TIME_MATCHED_QUERIES = 140;
    /**
     * The number of all errors in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_TOTAL_ERROR_COUNT = 175;</code>
     */
    const VIDEO_REAL_TIME_TOTAL_ERROR_COUNT = 175;
    /**
     * The number of total queries in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_TOTAL_QUERIES = 142;</code>
     */
    const VIDEO_REAL_TIME_TOTAL_QUERIES = 142;
    /**
     * The number of unmatched queries in video realtime reporting.
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_UNMATCHED_QUERIES = 141;</code>
     */
    const VIDEO_REAL_TIME_UNMATCHED_QUERIES = 141;
    /**
     * Number of times that the publisher specified a video ad played
     * automatically.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_AUTO_PLAYS = 103;</code>
     */
    const VIDEO_VIEWERSHIP_AUTO_PLAYS = 103;
    /**
     * Average percentage of the video watched by users.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_AVERAGE_VIEW_RATE = 104;</code>
     */
    const VIDEO_VIEWERSHIP_AVERAGE_VIEW_RATE = 104;
    /**
     * Average time(seconds) users watched the video.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_AVERAGE_VIEW_TIME = 105;</code>
     */
    const VIDEO_VIEWERSHIP_AVERAGE_VIEW_TIME = 105;
    /**
     * Number of times that the publisher specified a video ad was clicked to
     * play.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_CLICK_TO_PLAYS = 106;</code>
     */
    const VIDEO_VIEWERSHIP_CLICK_TO_PLAYS = 106;
    /**
     * The number of times the video played to completion.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_COMPLETES = 107;</code>
     */
    const VIDEO_VIEWERSHIP_COMPLETES = 107;
    /**
     * Percentage of times the video played to the end.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_COMPLETION_RATE = 108;</code>
     */
    const VIDEO_VIEWERSHIP_COMPLETION_RATE = 108;
    /**
     * The number of engaged views: ad is viewed to completion or for 30s,
     * whichever comes first.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_ENGAGED_VIEWS = 109;</code>
     */
    const VIDEO_VIEWERSHIP_ENGAGED_VIEWS = 109;
    /**
     * The number of times the video played to 25% of its length.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_FIRST_QUARTILES = 110;</code>
     */
    const VIDEO_VIEWERSHIP_FIRST_QUARTILES = 110;
    /**
     * The number of times the video reached its midpoint during play.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_MIDPOINTS = 111;</code>
     */
    const VIDEO_VIEWERSHIP_MIDPOINTS = 111;
    /**
     * The number of times a skip button is shown in video.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_SKIP_BUTTONS_SHOWN = 112;</code>
     */
    const VIDEO_VIEWERSHIP_SKIP_BUTTONS_SHOWN = 112;
    /**
     * The number of impressions where the video was played.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_STARTS = 113;</code>
     */
    const VIDEO_VIEWERSHIP_STARTS = 113;
    /**
     * The number of times the video played to 75% of its length.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_THIRD_QUARTILES = 114;</code>
     */
    const VIDEO_VIEWERSHIP_THIRD_QUARTILES = 114;
    /**
     * The number of times an error occurred, such as a VAST redirect error, a
     * video playback error, or an invalid response error.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_TOTAL_ERROR_COUNT = 115;</code>
     */
    const VIDEO_VIEWERSHIP_TOTAL_ERROR_COUNT = 115;
    /**
     * The percentage of video error count.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_TOTAL_ERROR_RATE = 94;</code>
     */
    const VIDEO_VIEWERSHIP_TOTAL_ERROR_RATE = 94;
    /**
     * Duration of the video creative.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_VIDEO_LENGTH = 116;</code>
     */
    const VIDEO_VIEWERSHIP_VIDEO_LENGTH = 116;
    /**
     * View-through rate represented as a percentage.
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_VIEW_THROUGH_RATE = 117;</code>
     */
    const VIDEO_VIEWERSHIP_VIEW_THROUGH_RATE = 117;
    /**
     * The estimated net rate for yield groups or individual
     * yield group partners.
     *
     * Generated from protobuf enum <code>YIELD_GROUP_ESTIMATED_CPM = 88;</code>
     */
    const YIELD_GROUP_ESTIMATED_CPM = 88;
    /**
     * Total net revenue earned by a yield group, based upon the yield group
     * estimated CPM and yield group impressions recorded.
     *
     * Generated from protobuf enum <code>YIELD_GROUP_ESTIMATED_REVENUE = 87;</code>
     */
    const YIELD_GROUP_ESTIMATED_REVENUE = 87;
    /**
     * Number of matched yield group requests where a yield partner delivered
     * their ad to publisher inventory.
     *
     * Generated from protobuf enum <code>YIELD_GROUP_IMPRESSIONS = 85;</code>
     */
    const YIELD_GROUP_IMPRESSIONS = 85;
    /**
     * Yield group Mediation fill rate indicating how often a network
     * fills an ad request.
     *
     * Generated from protobuf enum <code>YIELD_GROUP_MEDIATION_FILL_RATE = 89;</code>
     */
    const YIELD_GROUP_MEDIATION_FILL_RATE = 89;
    /**
     * Total requests where a Mediation chain was served.
     *
     * Generated from protobuf enum <code>YIELD_GROUP_MEDIATION_MATCHED_QUERIES = 86;</code>
     */
    const YIELD_GROUP_MEDIATION_MATCHED_QUERIES = 86;
    /**
     * The number of mediation chain passback across all channels.
     *
     * Generated from protobuf enum <code>YIELD_GROUP_MEDIATION_PASSBACKS = 118;</code>
     */
    const YIELD_GROUP_MEDIATION_PASSBACKS = 118;
    /**
     * Revenue per thousand impressions based on data collected by Ad Manager
     * from third-party ad network reports.
     *
     * Generated from protobuf enum <code>YIELD_GROUP_MEDIATION_THIRD_PARTY_ECPM = 90;</code>
     */
    const YIELD_GROUP_MEDIATION_THIRD_PARTY_ECPM = 90;

    private static $valueToName = [
        self::METRIC_UNSPECIFIED => 'METRIC_UNSPECIFIED',
        self::ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME => 'ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME',
        self::ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS => 'ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS',
        self::ACTIVE_VIEW_MEASURABLE_IMPRESSIONS => 'ACTIVE_VIEW_MEASURABLE_IMPRESSIONS',
        self::ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE => 'ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE',
        self::ACTIVE_VIEW_VIEWABLE_IMPRESSIONS => 'ACTIVE_VIEW_VIEWABLE_IMPRESSIONS',
        self::ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE => 'ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE',
        self::ADSENSE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME => 'ADSENSE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME',
        self::ADSENSE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS => 'ADSENSE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS',
        self::ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS => 'ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS',
        self::ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE => 'ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE',
        self::ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS => 'ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS',
        self::ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE => 'ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE',
        self::ADSENSE_AVERAGE_ECPM => 'ADSENSE_AVERAGE_ECPM',
        self::ADSENSE_CLICKS => 'ADSENSE_CLICKS',
        self::ADSENSE_CTR => 'ADSENSE_CTR',
        self::ADSENSE_IMPRESSIONS => 'ADSENSE_IMPRESSIONS',
        self::ADSENSE_PERCENT_CLICKS => 'ADSENSE_PERCENT_CLICKS',
        self::ADSENSE_PERCENT_IMPRESSIONS => 'ADSENSE_PERCENT_IMPRESSIONS',
        self::ADSENSE_PERCENT_REVENUE => 'ADSENSE_PERCENT_REVENUE',
        self::ADSENSE_PERCENT_REVENUE_WITHOUT_CPD => 'ADSENSE_PERCENT_REVENUE_WITHOUT_CPD',
        self::ADSENSE_RESPONSES_SERVED => 'ADSENSE_RESPONSES_SERVED',
        self::ADSENSE_REVENUE => 'ADSENSE_REVENUE',
        self::AD_EXCHANGE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME => 'AD_EXCHANGE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME',
        self::AD_EXCHANGE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS => 'AD_EXCHANGE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS',
        self::AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS => 'AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS',
        self::AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE => 'AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE',
        self::AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS => 'AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS',
        self::AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE => 'AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE',
        self::AD_EXCHANGE_AVERAGE_ECPM => 'AD_EXCHANGE_AVERAGE_ECPM',
        self::AD_EXCHANGE_CLICKS => 'AD_EXCHANGE_CLICKS',
        self::AD_EXCHANGE_CTR => 'AD_EXCHANGE_CTR',
        self::AD_EXCHANGE_IMPRESSIONS => 'AD_EXCHANGE_IMPRESSIONS',
        self::AD_EXCHANGE_PERCENT_CLICKS => 'AD_EXCHANGE_PERCENT_CLICKS',
        self::AD_EXCHANGE_PERCENT_IMPRESSIONS => 'AD_EXCHANGE_PERCENT_IMPRESSIONS',
        self::AD_EXCHANGE_PERCENT_REVENUE => 'AD_EXCHANGE_PERCENT_REVENUE',
        self::AD_EXCHANGE_PERCENT_REVENUE_WITHOUT_CPD => 'AD_EXCHANGE_PERCENT_REVENUE_WITHOUT_CPD',
        self::AD_EXCHANGE_RESPONSES_SERVED => 'AD_EXCHANGE_RESPONSES_SERVED',
        self::AD_EXCHANGE_REVENUE => 'AD_EXCHANGE_REVENUE',
        self::AD_REQUESTS => 'AD_REQUESTS',
        self::AD_SERVER_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME => 'AD_SERVER_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME',
        self::AD_SERVER_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS => 'AD_SERVER_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS',
        self::AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS => 'AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS',
        self::AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE => 'AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE',
        self::AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS => 'AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS',
        self::AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE => 'AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE',
        self::AD_SERVER_AVERAGE_ECPM => 'AD_SERVER_AVERAGE_ECPM',
        self::AD_SERVER_AVERAGE_ECPM_WITHOUT_CPD => 'AD_SERVER_AVERAGE_ECPM_WITHOUT_CPD',
        self::AD_SERVER_CLICKS => 'AD_SERVER_CLICKS',
        self::AD_SERVER_CPD_REVENUE => 'AD_SERVER_CPD_REVENUE',
        self::AD_SERVER_CTR => 'AD_SERVER_CTR',
        self::AD_SERVER_IMPRESSIONS => 'AD_SERVER_IMPRESSIONS',
        self::AD_SERVER_PERCENT_CLICKS => 'AD_SERVER_PERCENT_CLICKS',
        self::AD_SERVER_PERCENT_IMPRESSIONS => 'AD_SERVER_PERCENT_IMPRESSIONS',
        self::AD_SERVER_PERCENT_REVENUE => 'AD_SERVER_PERCENT_REVENUE',
        self::AD_SERVER_PERCENT_REVENUE_WITHOUT_CPD => 'AD_SERVER_PERCENT_REVENUE_WITHOUT_CPD',
        self::AD_SERVER_RESPONSES_SERVED => 'AD_SERVER_RESPONSES_SERVED',
        self::AD_SERVER_REVENUE => 'AD_SERVER_REVENUE',
        self::AD_SERVER_REVENUE_WITHOUT_CPD => 'AD_SERVER_REVENUE_WITHOUT_CPD',
        self::AUCTIONS_WON => 'AUCTIONS_WON',
        self::AVERAGE_ECPM => 'AVERAGE_ECPM',
        self::AVERAGE_ECPM_WITHOUT_CPD => 'AVERAGE_ECPM_WITHOUT_CPD',
        self::BIDS => 'BIDS',
        self::BIDS_IN_AUCTION => 'BIDS_IN_AUCTION',
        self::CALLOUTS => 'CALLOUTS',
        self::CLICKS => 'CLICKS',
        self::CODE_SERVED_COUNT => 'CODE_SERVED_COUNT',
        self::CTR => 'CTR',
        self::GOOGLE_SOLD_AUCTION_COVIEWED_IMPRESSIONS => 'GOOGLE_SOLD_AUCTION_COVIEWED_IMPRESSIONS',
        self::GOOGLE_SOLD_AUCTION_IMPRESSIONS => 'GOOGLE_SOLD_AUCTION_IMPRESSIONS',
        self::GOOGLE_SOLD_COVIEWED_IMPRESSIONS => 'GOOGLE_SOLD_COVIEWED_IMPRESSIONS',
        self::GOOGLE_SOLD_IMPRESSIONS => 'GOOGLE_SOLD_IMPRESSIONS',
        self::GOOGLE_SOLD_RESERVATION_COVIEWED_IMPRESSIONS => 'GOOGLE_SOLD_RESERVATION_COVIEWED_IMPRESSIONS',
        self::GOOGLE_SOLD_RESERVATION_IMPRESSIONS => 'GOOGLE_SOLD_RESERVATION_IMPRESSIONS',
        self::IMPRESSIONS => 'IMPRESSIONS',
        self::PARTNER_SALES_FILLED_POD_REQUESTS => 'PARTNER_SALES_FILLED_POD_REQUESTS',
        self::PARTNER_SALES_FILL_RATE => 'PARTNER_SALES_FILL_RATE',
        self::PARTNER_SALES_PARTNER_MATCH_RATE => 'PARTNER_SALES_PARTNER_MATCH_RATE',
        self::PARTNER_SALES_QUERIES => 'PARTNER_SALES_QUERIES',
        self::PARTNER_SALES_UNFILLED_IMPRESSIONS => 'PARTNER_SALES_UNFILLED_IMPRESSIONS',
        self::PARTNER_SALES_UNMATCHED_QUERIES => 'PARTNER_SALES_UNMATCHED_QUERIES',
        self::PARTNER_SOLD_CODE_SERVED => 'PARTNER_SOLD_CODE_SERVED',
        self::PARTNER_SOLD_COVIEWED_IMPRESSIONS => 'PARTNER_SOLD_COVIEWED_IMPRESSIONS',
        self::PARTNER_SOLD_IMPRESSIONS => 'PARTNER_SOLD_IMPRESSIONS',
        self::PROGRAMMATIC_ELIGIBLE_AD_REQUESTS => 'PROGRAMMATIC_ELIGIBLE_AD_REQUESTS',
        self::PROGRAMMATIC_MATCH_RATE => 'PROGRAMMATIC_MATCH_RATE',
        self::PROGRAMMATIC_RESPONSES_SERVED => 'PROGRAMMATIC_RESPONSES_SERVED',
        self::RESPONSES_SERVED => 'RESPONSES_SERVED',
        self::REVENUE => 'REVENUE',
        self::REVENUE_WITHOUT_CPD => 'REVENUE_WITHOUT_CPD',
        self::SUCCESSFUL_RESPONSES => 'SUCCESSFUL_RESPONSES',
        self::UNFILLED_IMPRESSIONS => 'UNFILLED_IMPRESSIONS',
        self::UNMATCHED_AD_REQUESTS => 'UNMATCHED_AD_REQUESTS',
        self::USER_MESSAGES_OFFERWALL_MESSAGES_SHOWN => 'USER_MESSAGES_OFFERWALL_MESSAGES_SHOWN',
        self::USER_MESSAGES_OFFERWALL_SUCCESSFUL_ENGAGEMENTS => 'USER_MESSAGES_OFFERWALL_SUCCESSFUL_ENGAGEMENTS',
        self::VIDEO_INTERACTION_AVERAGE_INTERACTION_RATE => 'VIDEO_INTERACTION_AVERAGE_INTERACTION_RATE',
        self::VIDEO_INTERACTION_COLLAPSES => 'VIDEO_INTERACTION_COLLAPSES',
        self::VIDEO_INTERACTION_EXPANDS => 'VIDEO_INTERACTION_EXPANDS',
        self::VIDEO_INTERACTION_FULL_SCREENS => 'VIDEO_INTERACTION_FULL_SCREENS',
        self::VIDEO_INTERACTION_MUTES => 'VIDEO_INTERACTION_MUTES',
        self::VIDEO_INTERACTION_PAUSES => 'VIDEO_INTERACTION_PAUSES',
        self::VIDEO_INTERACTION_RESUMES => 'VIDEO_INTERACTION_RESUMES',
        self::VIDEO_INTERACTION_REWINDS => 'VIDEO_INTERACTION_REWINDS',
        self::VIDEO_INTERACTION_UNMUTES => 'VIDEO_INTERACTION_UNMUTES',
        self::VIDEO_INTERACTION_VIDEO_SKIPS => 'VIDEO_INTERACTION_VIDEO_SKIPS',
        self::VIDEO_REAL_TIME_CREATIVE_SERVES => 'VIDEO_REAL_TIME_CREATIVE_SERVES',
        self::VIDEO_REAL_TIME_ERROR_100_COUNT => 'VIDEO_REAL_TIME_ERROR_100_COUNT',
        self::VIDEO_REAL_TIME_ERROR_101_COUNT => 'VIDEO_REAL_TIME_ERROR_101_COUNT',
        self::VIDEO_REAL_TIME_ERROR_102_COUNT => 'VIDEO_REAL_TIME_ERROR_102_COUNT',
        self::VIDEO_REAL_TIME_ERROR_200_COUNT => 'VIDEO_REAL_TIME_ERROR_200_COUNT',
        self::VIDEO_REAL_TIME_ERROR_201_COUNT => 'VIDEO_REAL_TIME_ERROR_201_COUNT',
        self::VIDEO_REAL_TIME_ERROR_202_COUNT => 'VIDEO_REAL_TIME_ERROR_202_COUNT',
        self::VIDEO_REAL_TIME_ERROR_203_COUNT => 'VIDEO_REAL_TIME_ERROR_203_COUNT',
        self::VIDEO_REAL_TIME_ERROR_300_COUNT => 'VIDEO_REAL_TIME_ERROR_300_COUNT',
        self::VIDEO_REAL_TIME_ERROR_301_COUNT => 'VIDEO_REAL_TIME_ERROR_301_COUNT',
        self::VIDEO_REAL_TIME_ERROR_302_COUNT => 'VIDEO_REAL_TIME_ERROR_302_COUNT',
        self::VIDEO_REAL_TIME_ERROR_303_COUNT => 'VIDEO_REAL_TIME_ERROR_303_COUNT',
        self::VIDEO_REAL_TIME_ERROR_400_COUNT => 'VIDEO_REAL_TIME_ERROR_400_COUNT',
        self::VIDEO_REAL_TIME_ERROR_401_COUNT => 'VIDEO_REAL_TIME_ERROR_401_COUNT',
        self::VIDEO_REAL_TIME_ERROR_402_COUNT => 'VIDEO_REAL_TIME_ERROR_402_COUNT',
        self::VIDEO_REAL_TIME_ERROR_403_COUNT => 'VIDEO_REAL_TIME_ERROR_403_COUNT',
        self::VIDEO_REAL_TIME_ERROR_405_COUNT => 'VIDEO_REAL_TIME_ERROR_405_COUNT',
        self::VIDEO_REAL_TIME_ERROR_406_COUNT => 'VIDEO_REAL_TIME_ERROR_406_COUNT',
        self::VIDEO_REAL_TIME_ERROR_407_COUNT => 'VIDEO_REAL_TIME_ERROR_407_COUNT',
        self::VIDEO_REAL_TIME_ERROR_408_COUNT => 'VIDEO_REAL_TIME_ERROR_408_COUNT',
        self::VIDEO_REAL_TIME_ERROR_409_COUNT => 'VIDEO_REAL_TIME_ERROR_409_COUNT',
        self::VIDEO_REAL_TIME_ERROR_410_COUNT => 'VIDEO_REAL_TIME_ERROR_410_COUNT',
        self::VIDEO_REAL_TIME_ERROR_500_COUNT => 'VIDEO_REAL_TIME_ERROR_500_COUNT',
        self::VIDEO_REAL_TIME_ERROR_501_COUNT => 'VIDEO_REAL_TIME_ERROR_501_COUNT',
        self::VIDEO_REAL_TIME_ERROR_502_COUNT => 'VIDEO_REAL_TIME_ERROR_502_COUNT',
        self::VIDEO_REAL_TIME_ERROR_503_COUNT => 'VIDEO_REAL_TIME_ERROR_503_COUNT',
        self::VIDEO_REAL_TIME_ERROR_600_COUNT => 'VIDEO_REAL_TIME_ERROR_600_COUNT',
        self::VIDEO_REAL_TIME_ERROR_601_COUNT => 'VIDEO_REAL_TIME_ERROR_601_COUNT',
        self::VIDEO_REAL_TIME_ERROR_602_COUNT => 'VIDEO_REAL_TIME_ERROR_602_COUNT',
        self::VIDEO_REAL_TIME_ERROR_603_COUNT => 'VIDEO_REAL_TIME_ERROR_603_COUNT',
        self::VIDEO_REAL_TIME_ERROR_604_COUNT => 'VIDEO_REAL_TIME_ERROR_604_COUNT',
        self::VIDEO_REAL_TIME_ERROR_900_COUNT => 'VIDEO_REAL_TIME_ERROR_900_COUNT',
        self::VIDEO_REAL_TIME_ERROR_901_COUNT => 'VIDEO_REAL_TIME_ERROR_901_COUNT',
        self::VIDEO_REAL_TIME_IMPRESSIONS => 'VIDEO_REAL_TIME_IMPRESSIONS',
        self::VIDEO_REAL_TIME_MATCHED_QUERIES => 'VIDEO_REAL_TIME_MATCHED_QUERIES',
        self::VIDEO_REAL_TIME_TOTAL_ERROR_COUNT => 'VIDEO_REAL_TIME_TOTAL_ERROR_COUNT',
        self::VIDEO_REAL_TIME_TOTAL_QUERIES => 'VIDEO_REAL_TIME_TOTAL_QUERIES',
        self::VIDEO_REAL_TIME_UNMATCHED_QUERIES => 'VIDEO_REAL_TIME_UNMATCHED_QUERIES',
        self::VIDEO_VIEWERSHIP_AUTO_PLAYS => 'VIDEO_VIEWERSHIP_AUTO_PLAYS',
        self::VIDEO_VIEWERSHIP_AVERAGE_VIEW_RATE => 'VIDEO_VIEWERSHIP_AVERAGE_VIEW_RATE',
        self::VIDEO_VIEWERSHIP_AVERAGE_VIEW_TIME => 'VIDEO_VIEWERSHIP_AVERAGE_VIEW_TIME',
        self::VIDEO_VIEWERSHIP_CLICK_TO_PLAYS => 'VIDEO_VIEWERSHIP_CLICK_TO_PLAYS',
        self::VIDEO_VIEWERSHIP_COMPLETES => 'VIDEO_VIEWERSHIP_COMPLETES',
        self::VIDEO_VIEWERSHIP_COMPLETION_RATE => 'VIDEO_VIEWERSHIP_COMPLETION_RATE',
        self::VIDEO_VIEWERSHIP_ENGAGED_VIEWS => 'VIDEO_VIEWERSHIP_ENGAGED_VIEWS',
        self::VIDEO_VIEWERSHIP_FIRST_QUARTILES => 'VIDEO_VIEWERSHIP_FIRST_QUARTILES',
        self::VIDEO_VIEWERSHIP_MIDPOINTS => 'VIDEO_VIEWERSHIP_MIDPOINTS',
        self::VIDEO_VIEWERSHIP_SKIP_BUTTONS_SHOWN => 'VIDEO_VIEWERSHIP_SKIP_BUTTONS_SHOWN',
        self::VIDEO_VIEWERSHIP_STARTS => 'VIDEO_VIEWERSHIP_STARTS',
        self::VIDEO_VIEWERSHIP_THIRD_QUARTILES => 'VIDEO_VIEWERSHIP_THIRD_QUARTILES',
        self::VIDEO_VIEWERSHIP_TOTAL_ERROR_COUNT => 'VIDEO_VIEWERSHIP_TOTAL_ERROR_COUNT',
        self::VIDEO_VIEWERSHIP_TOTAL_ERROR_RATE => 'VIDEO_VIEWERSHIP_TOTAL_ERROR_RATE',
        self::VIDEO_VIEWERSHIP_VIDEO_LENGTH => 'VIDEO_VIEWERSHIP_VIDEO_LENGTH',
        self::VIDEO_VIEWERSHIP_VIEW_THROUGH_RATE => 'VIDEO_VIEWERSHIP_VIEW_THROUGH_RATE',
        self::YIELD_GROUP_ESTIMATED_CPM => 'YIELD_GROUP_ESTIMATED_CPM',
        self::YIELD_GROUP_ESTIMATED_REVENUE => 'YIELD_GROUP_ESTIMATED_REVENUE',
        self::YIELD_GROUP_IMPRESSIONS => 'YIELD_GROUP_IMPRESSIONS',
        self::YIELD_GROUP_MEDIATION_FILL_RATE => 'YIELD_GROUP_MEDIATION_FILL_RATE',
        self::YIELD_GROUP_MEDIATION_MATCHED_QUERIES => 'YIELD_GROUP_MEDIATION_MATCHED_QUERIES',
        self::YIELD_GROUP_MEDIATION_PASSBACKS => 'YIELD_GROUP_MEDIATION_PASSBACKS',
        self::YIELD_GROUP_MEDIATION_THIRD_PARTY_ECPM => 'YIELD_GROUP_MEDIATION_THIRD_PARTY_ECPM',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


