<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/policytroubleshooter/iam/v3/troubleshooter.proto

namespace Google\Cloud\PolicyTroubleshooter\Iam\V3\TroubleshootIamPolicyResponse;

use UnexpectedValueException;

/**
 * Whether the principal has the permission on the resource.
 *
 * Protobuf type <code>google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse.OverallAccessState</code>
 */
class OverallAccessState
{
    /**
     * Not specified.
     *
     * Generated from protobuf enum <code>OVERALL_ACCESS_STATE_UNSPECIFIED = 0;</code>
     */
    const OVERALL_ACCESS_STATE_UNSPECIFIED = 0;
    /**
     * The principal has the permission.
     *
     * Generated from protobuf enum <code>CAN_ACCESS = 1;</code>
     */
    const CAN_ACCESS = 1;
    /**
     * The principal doesn't have the permission.
     *
     * Generated from protobuf enum <code>CANNOT_ACCESS = 2;</code>
     */
    const CANNOT_ACCESS = 2;
    /**
     * The principal might have the permission, but the sender can't access all
     * of the information needed to fully evaluate the principal's access.
     *
     * Generated from protobuf enum <code>UNKNOWN_INFO = 3;</code>
     */
    const UNKNOWN_INFO = 3;
    /**
     * The principal might have the permission, but Policy Troubleshooter can't
     * fully evaluate the principal's access because the sender didn't provide
     * the required context to evaluate the condition.
     *
     * Generated from protobuf enum <code>UNKNOWN_CONDITIONAL = 4;</code>
     */
    const UNKNOWN_CONDITIONAL = 4;

    private static $valueToName = [
        self::OVERALL_ACCESS_STATE_UNSPECIFIED => 'OVERALL_ACCESS_STATE_UNSPECIFIED',
        self::CAN_ACCESS => 'CAN_ACCESS',
        self::CANNOT_ACCESS => 'CANNOT_ACCESS',
        self::UNKNOWN_INFO => 'UNKNOWN_INFO',
        self::UNKNOWN_CONDITIONAL => 'UNKNOWN_CONDITIONAL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


