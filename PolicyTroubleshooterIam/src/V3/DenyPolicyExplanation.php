<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/policytroubleshooter/iam/v3/troubleshooter.proto

namespace Google\Cloud\PolicyTroubleshooter\Iam\V3;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details about how the relevant IAM deny policies affect the final access
 * state.
 *
 * Generated from protobuf message <code>google.cloud.policytroubleshooter.iam.v3.DenyPolicyExplanation</code>
 */
class DenyPolicyExplanation extends \Google\Protobuf\Internal\Message
{
    /**
     * Indicates whether the principal is denied the specified permission for
     * the specified resource, based on evaluating all applicable IAM deny
     * policies.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1;</code>
     */
    protected $deny_access_state = 0;
    /**
     * List of resources with IAM deny policies that were evaluated to check the
     * principal's denied permissions, with annotations to indicate how each
     * policy contributed to the final result.
     * The list of resources includes the policy for the resource itself, as well
     * as policies that are inherited from higher levels of the resource
     * hierarchy, including the organization, the folder, and the project. The
     * order of the resources starts from the resource and climbs up the resource
     * hierarchy.
     * To learn more about the resource hierarchy, see
     * https://cloud.google.com/iam/help/resource-hierarchy.
     *
     * Generated from protobuf field <code>repeated .google.cloud.policytroubleshooter.iam.v3.ExplainedDenyResource explained_resources = 2;</code>
     */
    private $explained_resources;
    /**
     * The relevance of the deny policy result to the overall access state.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 3;</code>
     */
    protected $relevance = 0;
    /**
     * Indicates whether the permission to troubleshoot is supported in deny
     * policies.
     *
     * Generated from protobuf field <code>bool permission_deniable = 4;</code>
     */
    protected $permission_deniable = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $deny_access_state
     *           Indicates whether the principal is denied the specified permission for
     *           the specified resource, based on evaluating all applicable IAM deny
     *           policies.
     *     @type array<\Google\Cloud\PolicyTroubleshooter\Iam\V3\ExplainedDenyResource>|\Google\Protobuf\Internal\RepeatedField $explained_resources
     *           List of resources with IAM deny policies that were evaluated to check the
     *           principal's denied permissions, with annotations to indicate how each
     *           policy contributed to the final result.
     *           The list of resources includes the policy for the resource itself, as well
     *           as policies that are inherited from higher levels of the resource
     *           hierarchy, including the organization, the folder, and the project. The
     *           order of the resources starts from the resource and climbs up the resource
     *           hierarchy.
     *           To learn more about the resource hierarchy, see
     *           https://cloud.google.com/iam/help/resource-hierarchy.
     *     @type int $relevance
     *           The relevance of the deny policy result to the overall access state.
     *     @type bool $permission_deniable
     *           Indicates whether the permission to troubleshoot is supported in deny
     *           policies.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Policytroubleshooter\Iam\V3\Troubleshooter::initOnce();
        parent::__construct($data);
    }

    /**
     * Indicates whether the principal is denied the specified permission for
     * the specified resource, based on evaluating all applicable IAM deny
     * policies.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1;</code>
     * @return int
     */
    public function getDenyAccessState()
    {
        return $this->deny_access_state;
    }

    /**
     * Indicates whether the principal is denied the specified permission for
     * the specified resource, based on evaluating all applicable IAM deny
     * policies.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setDenyAccessState($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyAccessState::class);
        $this->deny_access_state = $var;

        return $this;
    }

    /**
     * List of resources with IAM deny policies that were evaluated to check the
     * principal's denied permissions, with annotations to indicate how each
     * policy contributed to the final result.
     * The list of resources includes the policy for the resource itself, as well
     * as policies that are inherited from higher levels of the resource
     * hierarchy, including the organization, the folder, and the project. The
     * order of the resources starts from the resource and climbs up the resource
     * hierarchy.
     * To learn more about the resource hierarchy, see
     * https://cloud.google.com/iam/help/resource-hierarchy.
     *
     * Generated from protobuf field <code>repeated .google.cloud.policytroubleshooter.iam.v3.ExplainedDenyResource explained_resources = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getExplainedResources()
    {
        return $this->explained_resources;
    }

    /**
     * List of resources with IAM deny policies that were evaluated to check the
     * principal's denied permissions, with annotations to indicate how each
     * policy contributed to the final result.
     * The list of resources includes the policy for the resource itself, as well
     * as policies that are inherited from higher levels of the resource
     * hierarchy, including the organization, the folder, and the project. The
     * order of the resources starts from the resource and climbs up the resource
     * hierarchy.
     * To learn more about the resource hierarchy, see
     * https://cloud.google.com/iam/help/resource-hierarchy.
     *
     * Generated from protobuf field <code>repeated .google.cloud.policytroubleshooter.iam.v3.ExplainedDenyResource explained_resources = 2;</code>
     * @param array<\Google\Cloud\PolicyTroubleshooter\Iam\V3\ExplainedDenyResource>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setExplainedResources($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\PolicyTroubleshooter\Iam\V3\ExplainedDenyResource::class);
        $this->explained_resources = $arr;

        return $this;
    }

    /**
     * The relevance of the deny policy result to the overall access state.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 3;</code>
     * @return int
     */
    public function getRelevance()
    {
        return $this->relevance;
    }

    /**
     * The relevance of the deny policy result to the overall access state.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setRelevance($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\PolicyTroubleshooter\Iam\V3\HeuristicRelevance::class);
        $this->relevance = $var;

        return $this;
    }

    /**
     * Indicates whether the permission to troubleshoot is supported in deny
     * policies.
     *
     * Generated from protobuf field <code>bool permission_deniable = 4;</code>
     * @return bool
     */
    public function getPermissionDeniable()
    {
        return $this->permission_deniable;
    }

    /**
     * Indicates whether the permission to troubleshoot is supported in deny
     * policies.
     *
     * Generated from protobuf field <code>bool permission_deniable = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setPermissionDeniable($var)
    {
        GPBUtil::checkBool($var);
        $this->permission_deniable = $var;

        return $this;
    }

}

