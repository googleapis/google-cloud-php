<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/policytroubleshooter/iam/v3/troubleshooter.proto

namespace Google\Cloud\PolicyTroubleshooter\Iam\V3;

use UnexpectedValueException;

/**
 * Whether IAM deny policies deny the principal the permission.
 *
 * Protobuf type <code>google.cloud.policytroubleshooter.iam.v3.DenyAccessState</code>
 */
class DenyAccessState
{
    /**
     * Not specified.
     *
     * Generated from protobuf enum <code>DENY_ACCESS_STATE_UNSPECIFIED = 0;</code>
     */
    const DENY_ACCESS_STATE_UNSPECIFIED = 0;
    /**
     * The deny policy denies the principal the permission.
     *
     * Generated from protobuf enum <code>DENY_ACCESS_STATE_DENIED = 1;</code>
     */
    const DENY_ACCESS_STATE_DENIED = 1;
    /**
     * The deny policy doesn't deny the principal the permission.
     *
     * Generated from protobuf enum <code>DENY_ACCESS_STATE_NOT_DENIED = 2;</code>
     */
    const DENY_ACCESS_STATE_NOT_DENIED = 2;
    /**
     * The deny policy denies the principal the permission if a condition
     * expression evaluates to `true`. However, the sender of the request didn't
     * provide enough context for Policy Troubleshooter to evaluate the condition
     * expression.
     *
     * Generated from protobuf enum <code>DENY_ACCESS_STATE_UNKNOWN_CONDITIONAL = 3;</code>
     */
    const DENY_ACCESS_STATE_UNKNOWN_CONDITIONAL = 3;
    /**
     * The sender of the request does not have access to all of the deny policies
     * that Policy Troubleshooter needs to evaluate the principal's access.
     *
     * Generated from protobuf enum <code>DENY_ACCESS_STATE_UNKNOWN_INFO = 4;</code>
     */
    const DENY_ACCESS_STATE_UNKNOWN_INFO = 4;

    private static $valueToName = [
        self::DENY_ACCESS_STATE_UNSPECIFIED => 'DENY_ACCESS_STATE_UNSPECIFIED',
        self::DENY_ACCESS_STATE_DENIED => 'DENY_ACCESS_STATE_DENIED',
        self::DENY_ACCESS_STATE_NOT_DENIED => 'DENY_ACCESS_STATE_NOT_DENIED',
        self::DENY_ACCESS_STATE_UNKNOWN_CONDITIONAL => 'DENY_ACCESS_STATE_UNKNOWN_CONDITIONAL',
        self::DENY_ACCESS_STATE_UNKNOWN_INFO => 'DENY_ACCESS_STATE_UNKNOWN_INFO',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

