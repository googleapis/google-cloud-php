<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/policysimulator/v1/simulator.proto

namespace Google\Cloud\PolicySimulator\V1\Replay;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Summary statistics about the replayed log entries.
 *
 * Generated from protobuf message <code>google.cloud.policysimulator.v1.Replay.ResultsSummary</code>
 */
class ResultsSummary extends \Google\Protobuf\Internal\Message
{
    /**
     * The total number of log entries replayed.
     *
     * Generated from protobuf field <code>int32 log_count = 1;</code>
     */
    protected $log_count = 0;
    /**
     * The number of replayed log entries with no difference between
     * baseline and simulated policies.
     *
     * Generated from protobuf field <code>int32 unchanged_count = 2;</code>
     */
    protected $unchanged_count = 0;
    /**
     * The number of replayed log entries with a difference between baseline and
     * simulated policies.
     *
     * Generated from protobuf field <code>int32 difference_count = 3;</code>
     */
    protected $difference_count = 0;
    /**
     * The number of log entries that could not be replayed.
     *
     * Generated from protobuf field <code>int32 error_count = 4;</code>
     */
    protected $error_count = 0;
    /**
     * The date of the oldest log entry replayed.
     *
     * Generated from protobuf field <code>.google.type.Date oldest_date = 5;</code>
     */
    protected $oldest_date = null;
    /**
     * The date of the newest log entry replayed.
     *
     * Generated from protobuf field <code>.google.type.Date newest_date = 6;</code>
     */
    protected $newest_date = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $log_count
     *           The total number of log entries replayed.
     *     @type int $unchanged_count
     *           The number of replayed log entries with no difference between
     *           baseline and simulated policies.
     *     @type int $difference_count
     *           The number of replayed log entries with a difference between baseline and
     *           simulated policies.
     *     @type int $error_count
     *           The number of log entries that could not be replayed.
     *     @type \Google\Type\Date $oldest_date
     *           The date of the oldest log entry replayed.
     *     @type \Google\Type\Date $newest_date
     *           The date of the newest log entry replayed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Policysimulator\V1\Simulator::initOnce();
        parent::__construct($data);
    }

    /**
     * The total number of log entries replayed.
     *
     * Generated from protobuf field <code>int32 log_count = 1;</code>
     * @return int
     */
    public function getLogCount()
    {
        return $this->log_count;
    }

    /**
     * The total number of log entries replayed.
     *
     * Generated from protobuf field <code>int32 log_count = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setLogCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->log_count = $var;

        return $this;
    }

    /**
     * The number of replayed log entries with no difference between
     * baseline and simulated policies.
     *
     * Generated from protobuf field <code>int32 unchanged_count = 2;</code>
     * @return int
     */
    public function getUnchangedCount()
    {
        return $this->unchanged_count;
    }

    /**
     * The number of replayed log entries with no difference between
     * baseline and simulated policies.
     *
     * Generated from protobuf field <code>int32 unchanged_count = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setUnchangedCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->unchanged_count = $var;

        return $this;
    }

    /**
     * The number of replayed log entries with a difference between baseline and
     * simulated policies.
     *
     * Generated from protobuf field <code>int32 difference_count = 3;</code>
     * @return int
     */
    public function getDifferenceCount()
    {
        return $this->difference_count;
    }

    /**
     * The number of replayed log entries with a difference between baseline and
     * simulated policies.
     *
     * Generated from protobuf field <code>int32 difference_count = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setDifferenceCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->difference_count = $var;

        return $this;
    }

    /**
     * The number of log entries that could not be replayed.
     *
     * Generated from protobuf field <code>int32 error_count = 4;</code>
     * @return int
     */
    public function getErrorCount()
    {
        return $this->error_count;
    }

    /**
     * The number of log entries that could not be replayed.
     *
     * Generated from protobuf field <code>int32 error_count = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setErrorCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->error_count = $var;

        return $this;
    }

    /**
     * The date of the oldest log entry replayed.
     *
     * Generated from protobuf field <code>.google.type.Date oldest_date = 5;</code>
     * @return \Google\Type\Date|null
     */
    public function getOldestDate()
    {
        return $this->oldest_date;
    }

    public function hasOldestDate()
    {
        return isset($this->oldest_date);
    }

    public function clearOldestDate()
    {
        unset($this->oldest_date);
    }

    /**
     * The date of the oldest log entry replayed.
     *
     * Generated from protobuf field <code>.google.type.Date oldest_date = 5;</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setOldestDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->oldest_date = $var;

        return $this;
    }

    /**
     * The date of the newest log entry replayed.
     *
     * Generated from protobuf field <code>.google.type.Date newest_date = 6;</code>
     * @return \Google\Type\Date|null
     */
    public function getNewestDate()
    {
        return $this->newest_date;
    }

    public function hasNewestDate()
    {
        return isset($this->newest_date);
    }

    public function clearNewestDate()
    {
        unset($this->newest_date);
    }

    /**
     * The date of the newest log entry replayed.
     *
     * Generated from protobuf field <code>.google.type.Date newest_date = 6;</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setNewestDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->newest_date = $var;

        return $this;
    }

}


