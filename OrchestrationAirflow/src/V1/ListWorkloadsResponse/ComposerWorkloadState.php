<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/orchestration/airflow/service/v1/environments.proto

namespace Google\Cloud\Orchestration\Airflow\Service\V1\ListWorkloadsResponse;

use UnexpectedValueException;

/**
 * Workload states.
 *
 * Protobuf type <code>google.cloud.orchestration.airflow.service.v1.ListWorkloadsResponse.ComposerWorkloadState</code>
 */
class ComposerWorkloadState
{
    /**
     * Not able to determine the status of the workload.
     *
     * Generated from protobuf enum <code>COMPOSER_WORKLOAD_STATE_UNSPECIFIED = 0;</code>
     */
    const COMPOSER_WORKLOAD_STATE_UNSPECIFIED = 0;
    /**
     * Workload is in pending state and has not yet started.
     *
     * Generated from protobuf enum <code>PENDING = 1;</code>
     */
    const PENDING = 1;
    /**
     * Workload is running fine.
     *
     * Generated from protobuf enum <code>OK = 2;</code>
     */
    const OK = 2;
    /**
     * Workload is running but there are some non-critical problems.
     *
     * Generated from protobuf enum <code>WARNING = 3;</code>
     */
    const WARNING = 3;
    /**
     * Workload is not running due to an error.
     *
     * Generated from protobuf enum <code>ERROR = 4;</code>
     */
    const ERROR = 4;
    /**
     * Workload has finished execution with success.
     *
     * Generated from protobuf enum <code>SUCCEEDED = 5;</code>
     */
    const SUCCEEDED = 5;
    /**
     * Workload has finished execution with failure.
     *
     * Generated from protobuf enum <code>FAILED = 6;</code>
     */
    const FAILED = 6;

    private static $valueToName = [
        self::COMPOSER_WORKLOAD_STATE_UNSPECIFIED => 'COMPOSER_WORKLOAD_STATE_UNSPECIFIED',
        self::PENDING => 'PENDING',
        self::OK => 'OK',
        self::WARNING => 'WARNING',
        self::ERROR => 'ERROR',
        self::SUCCEEDED => 'SUCCEEDED',
        self::FAILED => 'FAILED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


