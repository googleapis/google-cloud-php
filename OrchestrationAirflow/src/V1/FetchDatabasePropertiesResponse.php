<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/orchestration/airflow/service/v1/environments.proto

namespace Google\Cloud\Orchestration\Airflow\Service\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Response for FetchDatabasePropertiesRequest.
 *
 * Generated from protobuf message <code>google.cloud.orchestration.airflow.service.v1.FetchDatabasePropertiesResponse</code>
 */
class FetchDatabasePropertiesResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * The Compute Engine zone that the instance is currently serving from.
     *
     * Generated from protobuf field <code>string primary_gce_zone = 1;</code>
     */
    private $primary_gce_zone = '';
    /**
     * The Compute Engine zone that the failover instance is currently serving
     * from for a regional Cloud SQL instance.
     *
     * Generated from protobuf field <code>string secondary_gce_zone = 2;</code>
     */
    private $secondary_gce_zone = '';
    /**
     * The availability status of the failover replica. A false status indicates
     * that the failover replica is out of sync. The primary instance can only
     * fail over to the failover replica when the status is true.
     *
     * Generated from protobuf field <code>bool is_failover_replica_available = 3;</code>
     */
    private $is_failover_replica_available = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $primary_gce_zone
     *           The Compute Engine zone that the instance is currently serving from.
     *     @type string $secondary_gce_zone
     *           The Compute Engine zone that the failover instance is currently serving
     *           from for a regional Cloud SQL instance.
     *     @type bool $is_failover_replica_available
     *           The availability status of the failover replica. A false status indicates
     *           that the failover replica is out of sync. The primary instance can only
     *           fail over to the failover replica when the status is true.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Orchestration\Airflow\Service\V1\Environments::initOnce();
        parent::__construct($data);
    }

    /**
     * The Compute Engine zone that the instance is currently serving from.
     *
     * Generated from protobuf field <code>string primary_gce_zone = 1;</code>
     * @return string
     */
    public function getPrimaryGceZone()
    {
        return $this->primary_gce_zone;
    }

    /**
     * The Compute Engine zone that the instance is currently serving from.
     *
     * Generated from protobuf field <code>string primary_gce_zone = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPrimaryGceZone($var)
    {
        GPBUtil::checkString($var, True);
        $this->primary_gce_zone = $var;

        return $this;
    }

    /**
     * The Compute Engine zone that the failover instance is currently serving
     * from for a regional Cloud SQL instance.
     *
     * Generated from protobuf field <code>string secondary_gce_zone = 2;</code>
     * @return string
     */
    public function getSecondaryGceZone()
    {
        return $this->secondary_gce_zone;
    }

    /**
     * The Compute Engine zone that the failover instance is currently serving
     * from for a regional Cloud SQL instance.
     *
     * Generated from protobuf field <code>string secondary_gce_zone = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setSecondaryGceZone($var)
    {
        GPBUtil::checkString($var, True);
        $this->secondary_gce_zone = $var;

        return $this;
    }

    /**
     * The availability status of the failover replica. A false status indicates
     * that the failover replica is out of sync. The primary instance can only
     * fail over to the failover replica when the status is true.
     *
     * Generated from protobuf field <code>bool is_failover_replica_available = 3;</code>
     * @return bool
     */
    public function getIsFailoverReplicaAvailable()
    {
        return $this->is_failover_replica_available;
    }

    /**
     * The availability status of the failover replica. A false status indicates
     * that the failover replica is out of sync. The primary instance can only
     * fail over to the failover replica when the status is true.
     *
     * Generated from protobuf field <code>bool is_failover_replica_available = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsFailoverReplicaAvailable($var)
    {
        GPBUtil::checkBool($var);
        $this->is_failover_replica_available = $var;

        return $this;
    }

}

