<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/contactcenterinsights/v1/resources.proto

namespace Google\Cloud\ContactCenterInsights\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The CCAI Insights project wide analysis rule. This rule will be applied to
 * all conversations that match the filter defined in the rule. For a
 * conversation matches the filter, the annotators specified in the rule will be
 * run. If a conversation matches multiple rules, a union of all the annotators
 * will be run. One project can have multiple analysis rules.
 *
 * Generated from protobuf message <code>google.cloud.contactcenterinsights.v1.AnalysisRule</code>
 */
class AnalysisRule extends \Google\Protobuf\Internal\Message
{
    /**
     * Identifier. The resource name of the analysis rule.
     * Format:
     * projects/{project}/locations/{location}/analysisRules/{analysis_rule}
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     */
    protected $name = '';
    /**
     * Output only. The time at which this analysis rule was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $create_time = null;
    /**
     * Output only. The most recent time at which this analysis rule was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $update_time = null;
    /**
     * Display Name of the analysis rule.
     *
     * Generated from protobuf field <code>optional string display_name = 4;</code>
     */
    protected $display_name = null;
    /**
     * Filter for the conversations that should apply this analysis
     * rule. An empty filter means this analysis rule applies to all
     * conversations.
     *
     * Generated from protobuf field <code>string conversation_filter = 5;</code>
     */
    protected $conversation_filter = '';
    /**
     * Selector of annotators to run and the phrase matchers to use for
     * conversations that matches the conversation_filter. If not specified, NO
     * annotators will be run.
     *
     * Generated from protobuf field <code>.google.cloud.contactcenterinsights.v1.AnnotatorSelector annotator_selector = 6;</code>
     */
    protected $annotator_selector = null;
    /**
     * Percentage of conversations that we should apply this analysis setting
     * automatically, between [0, 1]. For example, 0.1 means 10%. Conversations
     * are sampled in a determenestic way. The original runtime_percentage &
     * upload percentage will be replaced by defining filters on the conversation.
     *
     * Generated from protobuf field <code>double analysis_percentage = 7;</code>
     */
    protected $analysis_percentage = 0.0;
    /**
     * If true, apply this rule to conversations. Otherwise, this rule is
     * inactive and saved as a draft.
     *
     * Generated from protobuf field <code>bool active = 8;</code>
     */
    protected $active = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Identifier. The resource name of the analysis rule.
     *           Format:
     *           projects/{project}/locations/{location}/analysisRules/{analysis_rule}
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. The time at which this analysis rule was created.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. The most recent time at which this analysis rule was updated.
     *     @type string $display_name
     *           Display Name of the analysis rule.
     *     @type string $conversation_filter
     *           Filter for the conversations that should apply this analysis
     *           rule. An empty filter means this analysis rule applies to all
     *           conversations.
     *     @type \Google\Cloud\ContactCenterInsights\V1\AnnotatorSelector $annotator_selector
     *           Selector of annotators to run and the phrase matchers to use for
     *           conversations that matches the conversation_filter. If not specified, NO
     *           annotators will be run.
     *     @type float $analysis_percentage
     *           Percentage of conversations that we should apply this analysis setting
     *           automatically, between [0, 1]. For example, 0.1 means 10%. Conversations
     *           are sampled in a determenestic way. The original runtime_percentage &
     *           upload percentage will be replaced by defining filters on the conversation.
     *     @type bool $active
     *           If true, apply this rule to conversations. Otherwise, this rule is
     *           inactive and saved as a draft.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Contactcenterinsights\V1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Identifier. The resource name of the analysis rule.
     * Format:
     * projects/{project}/locations/{location}/analysisRules/{analysis_rule}
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Identifier. The resource name of the analysis rule.
     * Format:
     * projects/{project}/locations/{location}/analysisRules/{analysis_rule}
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Output only. The time at which this analysis rule was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. The time at which this analysis rule was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * Output only. The most recent time at which this analysis rule was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. The most recent time at which this analysis rule was updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Display Name of the analysis rule.
     *
     * Generated from protobuf field <code>optional string display_name = 4;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return isset($this->display_name) ? $this->display_name : '';
    }

    public function hasDisplayName()
    {
        return isset($this->display_name);
    }

    public function clearDisplayName()
    {
        unset($this->display_name);
    }

    /**
     * Display Name of the analysis rule.
     *
     * Generated from protobuf field <code>optional string display_name = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * Filter for the conversations that should apply this analysis
     * rule. An empty filter means this analysis rule applies to all
     * conversations.
     *
     * Generated from protobuf field <code>string conversation_filter = 5;</code>
     * @return string
     */
    public function getConversationFilter()
    {
        return $this->conversation_filter;
    }

    /**
     * Filter for the conversations that should apply this analysis
     * rule. An empty filter means this analysis rule applies to all
     * conversations.
     *
     * Generated from protobuf field <code>string conversation_filter = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setConversationFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->conversation_filter = $var;

        return $this;
    }

    /**
     * Selector of annotators to run and the phrase matchers to use for
     * conversations that matches the conversation_filter. If not specified, NO
     * annotators will be run.
     *
     * Generated from protobuf field <code>.google.cloud.contactcenterinsights.v1.AnnotatorSelector annotator_selector = 6;</code>
     * @return \Google\Cloud\ContactCenterInsights\V1\AnnotatorSelector|null
     */
    public function getAnnotatorSelector()
    {
        return $this->annotator_selector;
    }

    public function hasAnnotatorSelector()
    {
        return isset($this->annotator_selector);
    }

    public function clearAnnotatorSelector()
    {
        unset($this->annotator_selector);
    }

    /**
     * Selector of annotators to run and the phrase matchers to use for
     * conversations that matches the conversation_filter. If not specified, NO
     * annotators will be run.
     *
     * Generated from protobuf field <code>.google.cloud.contactcenterinsights.v1.AnnotatorSelector annotator_selector = 6;</code>
     * @param \Google\Cloud\ContactCenterInsights\V1\AnnotatorSelector $var
     * @return $this
     */
    public function setAnnotatorSelector($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\ContactCenterInsights\V1\AnnotatorSelector::class);
        $this->annotator_selector = $var;

        return $this;
    }

    /**
     * Percentage of conversations that we should apply this analysis setting
     * automatically, between [0, 1]. For example, 0.1 means 10%. Conversations
     * are sampled in a determenestic way. The original runtime_percentage &
     * upload percentage will be replaced by defining filters on the conversation.
     *
     * Generated from protobuf field <code>double analysis_percentage = 7;</code>
     * @return float
     */
    public function getAnalysisPercentage()
    {
        return $this->analysis_percentage;
    }

    /**
     * Percentage of conversations that we should apply this analysis setting
     * automatically, between [0, 1]. For example, 0.1 means 10%. Conversations
     * are sampled in a determenestic way. The original runtime_percentage &
     * upload percentage will be replaced by defining filters on the conversation.
     *
     * Generated from protobuf field <code>double analysis_percentage = 7;</code>
     * @param float $var
     * @return $this
     */
    public function setAnalysisPercentage($var)
    {
        GPBUtil::checkDouble($var);
        $this->analysis_percentage = $var;

        return $this;
    }

    /**
     * If true, apply this rule to conversations. Otherwise, this rule is
     * inactive and saved as a draft.
     *
     * Generated from protobuf field <code>bool active = 8;</code>
     * @return bool
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * If true, apply this rule to conversations. Otherwise, this rule is
     * inactive and saved as a draft.
     *
     * Generated from protobuf field <code>bool active = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setActive($var)
    {
        GPBUtil::checkBool($var);
        $this->active = $var;

        return $this;
    }

}

