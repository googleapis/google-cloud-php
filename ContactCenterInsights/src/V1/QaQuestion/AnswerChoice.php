<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/contactcenterinsights/v1/resources.proto

namespace Google\Cloud\ContactCenterInsights\V1\QaQuestion;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message representing a possible answer to the question.
 *
 * Generated from protobuf message <code>google.cloud.contactcenterinsights.v1.QaQuestion.AnswerChoice</code>
 */
class AnswerChoice extends \Google\Protobuf\Internal\Message
{
    /**
     * A short string used as an identifier.
     *
     * Generated from protobuf field <code>string key = 1;</code>
     */
    protected $key = '';
    /**
     * Numerical score of the answer, used for generating the overall score of
     * a QaScorecardResult. If the answer uses na_value, this field is unused.
     *
     * Generated from protobuf field <code>optional double score = 6;</code>
     */
    protected $score = null;
    protected $value;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $str_value
     *           String value.
     *     @type float $num_value
     *           Numerical value.
     *     @type bool $bool_value
     *           Boolean value.
     *     @type bool $na_value
     *           A value of "Not Applicable (N/A)". If provided, this field may only
     *           be set to `true`. If a question receives this answer, it will be
     *           excluded from any score calculations.
     *     @type string $key
     *           A short string used as an identifier.
     *     @type float $score
     *           Numerical score of the answer, used for generating the overall score of
     *           a QaScorecardResult. If the answer uses na_value, this field is unused.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Contactcenterinsights\V1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * String value.
     *
     * Generated from protobuf field <code>string str_value = 2;</code>
     * @return string
     */
    public function getStrValue()
    {
        return $this->readOneof(2);
    }

    public function hasStrValue()
    {
        return $this->hasOneof(2);
    }

    /**
     * String value.
     *
     * Generated from protobuf field <code>string str_value = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setStrValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Numerical value.
     *
     * Generated from protobuf field <code>double num_value = 3;</code>
     * @return float
     */
    public function getNumValue()
    {
        return $this->readOneof(3);
    }

    public function hasNumValue()
    {
        return $this->hasOneof(3);
    }

    /**
     * Numerical value.
     *
     * Generated from protobuf field <code>double num_value = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setNumValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Boolean value.
     *
     * Generated from protobuf field <code>bool bool_value = 4;</code>
     * @return bool
     */
    public function getBoolValue()
    {
        return $this->readOneof(4);
    }

    public function hasBoolValue()
    {
        return $this->hasOneof(4);
    }

    /**
     * Boolean value.
     *
     * Generated from protobuf field <code>bool bool_value = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setBoolValue($var)
    {
        GPBUtil::checkBool($var);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * A value of "Not Applicable (N/A)". If provided, this field may only
     * be set to `true`. If a question receives this answer, it will be
     * excluded from any score calculations.
     *
     * Generated from protobuf field <code>bool na_value = 5;</code>
     * @return bool
     */
    public function getNaValue()
    {
        return $this->readOneof(5);
    }

    public function hasNaValue()
    {
        return $this->hasOneof(5);
    }

    /**
     * A value of "Not Applicable (N/A)". If provided, this field may only
     * be set to `true`. If a question receives this answer, it will be
     * excluded from any score calculations.
     *
     * Generated from protobuf field <code>bool na_value = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setNaValue($var)
    {
        GPBUtil::checkBool($var);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * A short string used as an identifier.
     *
     * Generated from protobuf field <code>string key = 1;</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * A short string used as an identifier.
     *
     * Generated from protobuf field <code>string key = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->key = $var;

        return $this;
    }

    /**
     * Numerical score of the answer, used for generating the overall score of
     * a QaScorecardResult. If the answer uses na_value, this field is unused.
     *
     * Generated from protobuf field <code>optional double score = 6;</code>
     * @return float
     */
    public function getScore()
    {
        return isset($this->score) ? $this->score : 0.0;
    }

    public function hasScore()
    {
        return isset($this->score);
    }

    public function clearScore()
    {
        unset($this->score);
    }

    /**
     * Numerical score of the answer, used for generating the overall score of
     * a QaScorecardResult. If the answer uses na_value, this field is unused.
     *
     * Generated from protobuf field <code>optional double score = 6;</code>
     * @param float $var
     * @return $this
     */
    public function setScore($var)
    {
        GPBUtil::checkDouble($var);
        $this->score = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getValue()
    {
        return $this->whichOneof("value");
    }

}


