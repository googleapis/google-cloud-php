<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/contactcenterinsights/v1/contact_center_insights.proto

namespace Google\Cloud\ContactCenterInsights\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for TuneQaScorecardRevision endpoint.
 *
 * Generated from protobuf message <code>google.cloud.contactcenterinsights.v1.TuneQaScorecardRevisionRequest</code>
 */
class TuneQaScorecardRevisionRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The parent resource for new fine tuning job instance.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Required. Filter for selecting the feedback labels that needs to be
     * used for training.
     * This filter can be used to limit the feedback labels used for tuning to a
     * feedback labels created or updated for a specific time-window etc.
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $filter = '';
    /**
     * Optional. Run in validate only mode, no fine tuning will actually run.
     * Data quality validations like training data distributions will run.
     * Even when set to false, the data quality validations will still run but
     * once the validations complete we will proceed with the fine tune, if
     * applicable.
     *
     * Generated from protobuf field <code>bool validate_only = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $validate_only = false;

    /**
     * @param string $parent       Required. The parent resource for new fine tuning job instance. Please see
     *                             {@see ContactCenterInsightsClient::qaScorecardRevisionName()} for help formatting this field.
     * @param string $filter       Required. Filter for selecting the feedback labels that needs to be
     *                             used for training.
     *                             This filter can be used to limit the feedback labels used for tuning to a
     *                             feedback labels created or updated for a specific time-window etc.
     * @param bool   $validateOnly Optional. Run in validate only mode, no fine tuning will actually run.
     *                             Data quality validations like training data distributions will run.
     *                             Even when set to false, the data quality validations will still run but
     *                             once the validations complete we will proceed with the fine tune, if
     *                             applicable.
     *
     * @return \Google\Cloud\ContactCenterInsights\V1\TuneQaScorecardRevisionRequest
     *
     * @experimental
     */
    public static function build(string $parent, string $filter, bool $validateOnly): self
    {
        return (new self())
            ->setParent($parent)
            ->setFilter($filter)
            ->setValidateOnly($validateOnly);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The parent resource for new fine tuning job instance.
     *     @type string $filter
     *           Required. Filter for selecting the feedback labels that needs to be
     *           used for training.
     *           This filter can be used to limit the feedback labels used for tuning to a
     *           feedback labels created or updated for a specific time-window etc.
     *     @type bool $validate_only
     *           Optional. Run in validate only mode, no fine tuning will actually run.
     *           Data quality validations like training data distributions will run.
     *           Even when set to false, the data quality validations will still run but
     *           once the validations complete we will proceed with the fine tune, if
     *           applicable.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Contactcenterinsights\V1\ContactCenterInsights::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The parent resource for new fine tuning job instance.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The parent resource for new fine tuning job instance.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Required. Filter for selecting the feedback labels that needs to be
     * used for training.
     * This filter can be used to limit the feedback labels used for tuning to a
     * feedback labels created or updated for a specific time-window etc.
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Required. Filter for selecting the feedback labels that needs to be
     * used for training.
     * This filter can be used to limit the feedback labels used for tuning to a
     * feedback labels created or updated for a specific time-window etc.
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

    /**
     * Optional. Run in validate only mode, no fine tuning will actually run.
     * Data quality validations like training data distributions will run.
     * Even when set to false, the data quality validations will still run but
     * once the validations complete we will proceed with the fine tune, if
     * applicable.
     *
     * Generated from protobuf field <code>bool validate_only = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getValidateOnly()
    {
        return $this->validate_only;
    }

    /**
     * Optional. Run in validate only mode, no fine tuning will actually run.
     * Data quality validations like training data distributions will run.
     * Even when set to false, the data quality validations will still run but
     * once the validations complete we will proceed with the fine tune, if
     * applicable.
     *
     * Generated from protobuf field <code>bool validate_only = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setValidateOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->validate_only = $var;

        return $this;
    }

}

