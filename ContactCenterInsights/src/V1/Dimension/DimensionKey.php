<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/contactcenterinsights/v1/contact_center_insights.proto

namespace Google\Cloud\ContactCenterInsights\V1\Dimension;

use UnexpectedValueException;

/**
 * The key of the dimension.
 *
 * Protobuf type <code>google.cloud.contactcenterinsights.v1.Dimension.DimensionKey</code>
 */
class DimensionKey
{
    /**
     * The key of the dimension is unspecified.
     *
     * Generated from protobuf enum <code>DIMENSION_KEY_UNSPECIFIED = 0;</code>
     */
    const DIMENSION_KEY_UNSPECIFIED = 0;
    /**
     * The dimension is keyed by issues.
     *
     * Generated from protobuf enum <code>ISSUE = 1;</code>
     */
    const ISSUE = 1;
    /**
     * The dimension is keyed by agents.
     *
     * Generated from protobuf enum <code>AGENT = 2;</code>
     */
    const AGENT = 2;
    /**
     * The dimension is keyed by agent teams.
     *
     * Generated from protobuf enum <code>AGENT_TEAM = 3;</code>
     */
    const AGENT_TEAM = 3;
    /**
     * The dimension is keyed by QaQuestionIds.
     * Note that: We only group by the QuestionId and not the revision-id of the
     * scorecard this question is a part of. This allows for showing stats for
     * the same question across different scorecard revisions.
     *
     * Generated from protobuf enum <code>QA_QUESTION_ID = 4;</code>
     */
    const QA_QUESTION_ID = 4;
    /**
     * The dimension is keyed by QaQuestionIds-Answer value pairs.
     * Note that: We only group by the QuestionId and not the revision-id of the
     * scorecard this question is a part of. This allows for showing
     * distribution of answers per question across different scorecard
     * revisions.
     *
     * Generated from protobuf enum <code>QA_QUESTION_ANSWER_VALUE = 5;</code>
     */
    const QA_QUESTION_ANSWER_VALUE = 5;
    /**
     * The dimension is keyed by the conversation profile ID.
     *
     * Generated from protobuf enum <code>CONVERSATION_PROFILE_ID = 6;</code>
     */
    const CONVERSATION_PROFILE_ID = 6;

    private static $valueToName = [
        self::DIMENSION_KEY_UNSPECIFIED => 'DIMENSION_KEY_UNSPECIFIED',
        self::ISSUE => 'ISSUE',
        self::AGENT => 'AGENT',
        self::AGENT_TEAM => 'AGENT_TEAM',
        self::QA_QUESTION_ID => 'QA_QUESTION_ID',
        self::QA_QUESTION_ANSWER_VALUE => 'QA_QUESTION_ANSWER_VALUE',
        self::CONVERSATION_PROFILE_ID => 'CONVERSATION_PROFILE_ID',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


