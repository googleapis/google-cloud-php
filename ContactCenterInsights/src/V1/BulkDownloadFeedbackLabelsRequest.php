<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/contactcenterinsights/v1/contact_center_insights.proto

namespace Google\Cloud\ContactCenterInsights\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for the BulkDownloadFeedbackLabel endpoint.
 *
 * Generated from protobuf message <code>google.cloud.contactcenterinsights.v1.BulkDownloadFeedbackLabelsRequest</code>
 */
class BulkDownloadFeedbackLabelsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The parent resource for new feedback labels.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Optional. A filter to reduce results to a specific subset. Supports
     * disjunctions (OR) and conjunctions (AND).
     * Supported fields:
     * * `issue_model_id`
     * * `qa_question_id`
     * * `qa_scorecard_id`
     * * `min_create_time`
     * * `max_create_time`
     * * `min_update_time`
     * * `max_update_time`
     * * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $filter = '';
    /**
     * Optional. Limits the maximum number of feedback labels that will be
     * downloaded. The first `N` feedback labels will be downloaded.
     *
     * Generated from protobuf field <code>int32 max_download_count = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $max_download_count = 0;
    /**
     * Optional. The type of feedback labels that will be downloaded.
     *
     * Generated from protobuf field <code>.google.cloud.contactcenterinsights.v1.BulkDownloadFeedbackLabelsRequest.FeedbackLabelType feedback_label_type = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $feedback_label_type = 0;
    /**
     * Optional. Filter parent conversations to download feedback labels for.
     * When specified, the feedback labels will be downloaded for the
     * conversations that match the filter.
     * If `template_qa_scorecard_id` is set, all the conversations that match the
     * filter will be paired with the questions under the scorecard for labeling.
     *
     * Generated from protobuf field <code>string conversation_filter = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $conversation_filter = '';
    /**
     * Optional. If set, a template for labeling conversations and scorecard
     * questions will be created from the conversation_filter and the questions
     * under the scorecard(s). The feedback label `filter` will be ignored.
     *
     * Generated from protobuf field <code>repeated string template_qa_scorecard_id = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $template_qa_scorecard_id;
    protected $destination;

    /**
     * @param string $parent Required. The parent resource for new feedback labels. Please see
     *                       {@see ContactCenterInsightsClient::locationName()} for help formatting this field.
     *
     * @return \Google\Cloud\ContactCenterInsights\V1\BulkDownloadFeedbackLabelsRequest
     *
     * @experimental
     */
    public static function build(string $parent): self
    {
        return (new self())
            ->setParent($parent);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\ContactCenterInsights\V1\BulkDownloadFeedbackLabelsRequest\GcsDestination $gcs_destination
     *           A cloud storage bucket destination.
     *     @type string $parent
     *           Required. The parent resource for new feedback labels.
     *     @type string $filter
     *           Optional. A filter to reduce results to a specific subset. Supports
     *           disjunctions (OR) and conjunctions (AND).
     *           Supported fields:
     *           * `issue_model_id`
     *           * `qa_question_id`
     *           * `qa_scorecard_id`
     *           * `min_create_time`
     *           * `max_create_time`
     *           * `min_update_time`
     *           * `max_update_time`
     *           * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING
     *     @type int $max_download_count
     *           Optional. Limits the maximum number of feedback labels that will be
     *           downloaded. The first `N` feedback labels will be downloaded.
     *     @type int $feedback_label_type
     *           Optional. The type of feedback labels that will be downloaded.
     *     @type string $conversation_filter
     *           Optional. Filter parent conversations to download feedback labels for.
     *           When specified, the feedback labels will be downloaded for the
     *           conversations that match the filter.
     *           If `template_qa_scorecard_id` is set, all the conversations that match the
     *           filter will be paired with the questions under the scorecard for labeling.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $template_qa_scorecard_id
     *           Optional. If set, a template for labeling conversations and scorecard
     *           questions will be created from the conversation_filter and the questions
     *           under the scorecard(s). The feedback label `filter` will be ignored.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Contactcenterinsights\V1\ContactCenterInsights::initOnce();
        parent::__construct($data);
    }

    /**
     * A cloud storage bucket destination.
     *
     * Generated from protobuf field <code>.google.cloud.contactcenterinsights.v1.BulkDownloadFeedbackLabelsRequest.GcsDestination gcs_destination = 3;</code>
     * @return \Google\Cloud\ContactCenterInsights\V1\BulkDownloadFeedbackLabelsRequest\GcsDestination|null
     */
    public function getGcsDestination()
    {
        return $this->readOneof(3);
    }

    public function hasGcsDestination()
    {
        return $this->hasOneof(3);
    }

    /**
     * A cloud storage bucket destination.
     *
     * Generated from protobuf field <code>.google.cloud.contactcenterinsights.v1.BulkDownloadFeedbackLabelsRequest.GcsDestination gcs_destination = 3;</code>
     * @param \Google\Cloud\ContactCenterInsights\V1\BulkDownloadFeedbackLabelsRequest\GcsDestination $var
     * @return $this
     */
    public function setGcsDestination($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\ContactCenterInsights\V1\BulkDownloadFeedbackLabelsRequest\GcsDestination::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Required. The parent resource for new feedback labels.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The parent resource for new feedback labels.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Optional. A filter to reduce results to a specific subset. Supports
     * disjunctions (OR) and conjunctions (AND).
     * Supported fields:
     * * `issue_model_id`
     * * `qa_question_id`
     * * `qa_scorecard_id`
     * * `min_create_time`
     * * `max_create_time`
     * * `min_update_time`
     * * `max_update_time`
     * * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Optional. A filter to reduce results to a specific subset. Supports
     * disjunctions (OR) and conjunctions (AND).
     * Supported fields:
     * * `issue_model_id`
     * * `qa_question_id`
     * * `qa_scorecard_id`
     * * `min_create_time`
     * * `max_create_time`
     * * `min_update_time`
     * * `max_update_time`
     * * `feedback_label_type`: QUALITY_AI, TOPIC_MODELING
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

    /**
     * Optional. Limits the maximum number of feedback labels that will be
     * downloaded. The first `N` feedback labels will be downloaded.
     *
     * Generated from protobuf field <code>int32 max_download_count = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getMaxDownloadCount()
    {
        return $this->max_download_count;
    }

    /**
     * Optional. Limits the maximum number of feedback labels that will be
     * downloaded. The first `N` feedback labels will be downloaded.
     *
     * Generated from protobuf field <code>int32 max_download_count = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setMaxDownloadCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_download_count = $var;

        return $this;
    }

    /**
     * Optional. The type of feedback labels that will be downloaded.
     *
     * Generated from protobuf field <code>.google.cloud.contactcenterinsights.v1.BulkDownloadFeedbackLabelsRequest.FeedbackLabelType feedback_label_type = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getFeedbackLabelType()
    {
        return $this->feedback_label_type;
    }

    /**
     * Optional. The type of feedback labels that will be downloaded.
     *
     * Generated from protobuf field <code>.google.cloud.contactcenterinsights.v1.BulkDownloadFeedbackLabelsRequest.FeedbackLabelType feedback_label_type = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setFeedbackLabelType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\ContactCenterInsights\V1\BulkDownloadFeedbackLabelsRequest\FeedbackLabelType::class);
        $this->feedback_label_type = $var;

        return $this;
    }

    /**
     * Optional. Filter parent conversations to download feedback labels for.
     * When specified, the feedback labels will be downloaded for the
     * conversations that match the filter.
     * If `template_qa_scorecard_id` is set, all the conversations that match the
     * filter will be paired with the questions under the scorecard for labeling.
     *
     * Generated from protobuf field <code>string conversation_filter = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getConversationFilter()
    {
        return $this->conversation_filter;
    }

    /**
     * Optional. Filter parent conversations to download feedback labels for.
     * When specified, the feedback labels will be downloaded for the
     * conversations that match the filter.
     * If `template_qa_scorecard_id` is set, all the conversations that match the
     * filter will be paired with the questions under the scorecard for labeling.
     *
     * Generated from protobuf field <code>string conversation_filter = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setConversationFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->conversation_filter = $var;

        return $this;
    }

    /**
     * Optional. If set, a template for labeling conversations and scorecard
     * questions will be created from the conversation_filter and the questions
     * under the scorecard(s). The feedback label `filter` will be ignored.
     *
     * Generated from protobuf field <code>repeated string template_qa_scorecard_id = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTemplateQaScorecardId()
    {
        return $this->template_qa_scorecard_id;
    }

    /**
     * Optional. If set, a template for labeling conversations and scorecard
     * questions will be created from the conversation_filter and the questions
     * under the scorecard(s). The feedback label `filter` will be ignored.
     *
     * Generated from protobuf field <code>repeated string template_qa_scorecard_id = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTemplateQaScorecardId($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->template_qa_scorecard_id = $arr;

        return $this;
    }

    /**
     * @return string
     */
    public function getDestination()
    {
        return $this->whichOneof("destination");
    }

}

