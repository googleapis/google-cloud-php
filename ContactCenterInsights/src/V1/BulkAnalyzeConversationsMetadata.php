<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/contactcenterinsights/v1/contact_center_insights.proto

namespace Google\Cloud\ContactCenterInsights\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The metadata for a bulk analyze conversations operation.
 *
 * Generated from protobuf message <code>google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsMetadata</code>
 */
class BulkAnalyzeConversationsMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * The time the operation was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 1;</code>
     */
    private $create_time = null;
    /**
     * The time the operation finished running.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 2;</code>
     */
    private $end_time = null;
    /**
     * The original request for bulk analyze.
     *
     * Generated from protobuf field <code>.google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsRequest request = 3;</code>
     */
    private $request = null;
    /**
     * The number of requested analyses that have completed successfully so far.
     *
     * Generated from protobuf field <code>int32 completed_analyses_count = 4;</code>
     */
    private $completed_analyses_count = 0;
    /**
     * The number of requested analyses that have failed so far.
     *
     * Generated from protobuf field <code>int32 failed_analyses_count = 5;</code>
     */
    private $failed_analyses_count = 0;
    /**
     * Total number of analyses requested. Computed by the number of conversations
     * returned by `filter` multiplied by `analysis_percentage` in the request.
     *
     * Generated from protobuf field <code>int32 total_requested_analyses_count = 6;</code>
     */
    private $total_requested_analyses_count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Timestamp $create_time
     *           The time the operation was created.
     *     @type \Google\Protobuf\Timestamp $end_time
     *           The time the operation finished running.
     *     @type \Google\Cloud\ContactCenterInsights\V1\BulkAnalyzeConversationsRequest $request
     *           The original request for bulk analyze.
     *     @type int $completed_analyses_count
     *           The number of requested analyses that have completed successfully so far.
     *     @type int $failed_analyses_count
     *           The number of requested analyses that have failed so far.
     *     @type int $total_requested_analyses_count
     *           Total number of analyses requested. Computed by the number of conversations
     *           returned by `filter` multiplied by `analysis_percentage` in the request.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Contactcenterinsights\V1\ContactCenterInsights::initOnce();
        parent::__construct($data);
    }

    /**
     * The time the operation was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 1;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * The time the operation was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 1;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * The time the operation finished running.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 2;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getEndTime()
    {
        return $this->end_time;
    }

    public function hasEndTime()
    {
        return isset($this->end_time);
    }

    public function clearEndTime()
    {
        unset($this->end_time);
    }

    /**
     * The time the operation finished running.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 2;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEndTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->end_time = $var;

        return $this;
    }

    /**
     * The original request for bulk analyze.
     *
     * Generated from protobuf field <code>.google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsRequest request = 3;</code>
     * @return \Google\Cloud\ContactCenterInsights\V1\BulkAnalyzeConversationsRequest|null
     */
    public function getRequest()
    {
        return $this->request;
    }

    public function hasRequest()
    {
        return isset($this->request);
    }

    public function clearRequest()
    {
        unset($this->request);
    }

    /**
     * The original request for bulk analyze.
     *
     * Generated from protobuf field <code>.google.cloud.contactcenterinsights.v1.BulkAnalyzeConversationsRequest request = 3;</code>
     * @param \Google\Cloud\ContactCenterInsights\V1\BulkAnalyzeConversationsRequest $var
     * @return $this
     */
    public function setRequest($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\ContactCenterInsights\V1\BulkAnalyzeConversationsRequest::class);
        $this->request = $var;

        return $this;
    }

    /**
     * The number of requested analyses that have completed successfully so far.
     *
     * Generated from protobuf field <code>int32 completed_analyses_count = 4;</code>
     * @return int
     */
    public function getCompletedAnalysesCount()
    {
        return $this->completed_analyses_count;
    }

    /**
     * The number of requested analyses that have completed successfully so far.
     *
     * Generated from protobuf field <code>int32 completed_analyses_count = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setCompletedAnalysesCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->completed_analyses_count = $var;

        return $this;
    }

    /**
     * The number of requested analyses that have failed so far.
     *
     * Generated from protobuf field <code>int32 failed_analyses_count = 5;</code>
     * @return int
     */
    public function getFailedAnalysesCount()
    {
        return $this->failed_analyses_count;
    }

    /**
     * The number of requested analyses that have failed so far.
     *
     * Generated from protobuf field <code>int32 failed_analyses_count = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setFailedAnalysesCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->failed_analyses_count = $var;

        return $this;
    }

    /**
     * Total number of analyses requested. Computed by the number of conversations
     * returned by `filter` multiplied by `analysis_percentage` in the request.
     *
     * Generated from protobuf field <code>int32 total_requested_analyses_count = 6;</code>
     * @return int
     */
    public function getTotalRequestedAnalysesCount()
    {
        return $this->total_requested_analyses_count;
    }

    /**
     * Total number of analyses requested. Computed by the number of conversations
     * returned by `filter` multiplied by `analysis_percentage` in the request.
     *
     * Generated from protobuf field <code>int32 total_requested_analyses_count = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setTotalRequestedAnalysesCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->total_requested_analyses_count = $var;

        return $this;
    }

}

