<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/managedkafka/v1/resources.proto

namespace Google\Cloud\ManagedKafka\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Task Retry Policy is implemented on a best-effort
 * basis.
 * Retry delay will be exponential based on provided minimum and maximum
 * backoffs. https://en.wikipedia.org/wiki/Exponential_backoff.
 * Note that the delay between consecutive task restarts may not always
 * precisely match the configured settings. This can happen when the
 * ConnectCluster is in rebalancing state or if the ConnectCluster is
 * unresponsive etc.
 *
 * Generated from protobuf message <code>google.cloud.managedkafka.v1.TaskRetryPolicy</code>
 */
class TaskRetryPolicy extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The minimum amount of time to wait before retrying a failed task.
     * This sets a lower bound for the backoff delay.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration minimum_backoff = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $minimum_backoff = null;
    /**
     * Optional. The maximum amount of time to wait before retrying a failed task.
     * This sets an upper bound for the backoff delay.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration maximum_backoff = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $maximum_backoff = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Duration $minimum_backoff
     *           Optional. The minimum amount of time to wait before retrying a failed task.
     *           This sets a lower bound for the backoff delay.
     *     @type \Google\Protobuf\Duration $maximum_backoff
     *           Optional. The maximum amount of time to wait before retrying a failed task.
     *           This sets an upper bound for the backoff delay.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Managedkafka\V1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The minimum amount of time to wait before retrying a failed task.
     * This sets a lower bound for the backoff delay.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration minimum_backoff = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getMinimumBackoff()
    {
        return $this->minimum_backoff;
    }

    public function hasMinimumBackoff()
    {
        return isset($this->minimum_backoff);
    }

    public function clearMinimumBackoff()
    {
        unset($this->minimum_backoff);
    }

    /**
     * Optional. The minimum amount of time to wait before retrying a failed task.
     * This sets a lower bound for the backoff delay.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration minimum_backoff = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setMinimumBackoff($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->minimum_backoff = $var;

        return $this;
    }

    /**
     * Optional. The maximum amount of time to wait before retrying a failed task.
     * This sets an upper bound for the backoff delay.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration maximum_backoff = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getMaximumBackoff()
    {
        return $this->maximum_backoff;
    }

    public function hasMaximumBackoff()
    {
        return isset($this->maximum_backoff);
    }

    public function clearMaximumBackoff()
    {
        unset($this->maximum_backoff);
    }

    /**
     * Optional. The maximum amount of time to wait before retrying a failed task.
     * This sets an upper bound for the backoff delay.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration maximum_backoff = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setMaximumBackoff($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->maximum_backoff = $var;

        return $this;
    }

}

