<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/managedkafka/v1/managed_kafka.proto

namespace Google\Cloud\ManagedKafka\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for CreateTopic.
 *
 * Generated from protobuf message <code>google.cloud.managedkafka.v1.CreateTopicRequest</code>
 */
class CreateTopicRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The parent cluster in which to create the topic.
     * Structured like
     * `projects/{project}/locations/{location}/clusters/{cluster}`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Required. The ID to use for the topic, which will become the final
     * component of the topic's name.
     * This value is structured like: `my-topic-name`.
     *
     * Generated from protobuf field <code>string topic_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $topic_id = '';
    /**
     * Required. Configuration of the topic to create. Its `name` field is
     * ignored.
     *
     * Generated from protobuf field <code>.google.cloud.managedkafka.v1.Topic topic = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $topic = null;

    /**
     * @param string                              $parent  Required. The parent cluster in which to create the topic.
     *                                                     Structured like
     *                                                     `projects/{project}/locations/{location}/clusters/{cluster}`. Please see
     *                                                     {@see ManagedKafkaClient::clusterName()} for help formatting this field.
     * @param \Google\Cloud\ManagedKafka\V1\Topic $topic   Required. Configuration of the topic to create. Its `name` field is
     *                                                     ignored.
     * @param string                              $topicId Required. The ID to use for the topic, which will become the final
     *                                                     component of the topic's name.
     *
     *                                                     This value is structured like: `my-topic-name`.
     *
     * @return \Google\Cloud\ManagedKafka\V1\CreateTopicRequest
     *
     * @experimental
     */
    public static function build(string $parent, \Google\Cloud\ManagedKafka\V1\Topic $topic, string $topicId): self
    {
        return (new self())
            ->setParent($parent)
            ->setTopic($topic)
            ->setTopicId($topicId);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The parent cluster in which to create the topic.
     *           Structured like
     *           `projects/{project}/locations/{location}/clusters/{cluster}`.
     *     @type string $topic_id
     *           Required. The ID to use for the topic, which will become the final
     *           component of the topic's name.
     *           This value is structured like: `my-topic-name`.
     *     @type \Google\Cloud\ManagedKafka\V1\Topic $topic
     *           Required. Configuration of the topic to create. Its `name` field is
     *           ignored.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Managedkafka\V1\ManagedKafka::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The parent cluster in which to create the topic.
     * Structured like
     * `projects/{project}/locations/{location}/clusters/{cluster}`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The parent cluster in which to create the topic.
     * Structured like
     * `projects/{project}/locations/{location}/clusters/{cluster}`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Required. The ID to use for the topic, which will become the final
     * component of the topic's name.
     * This value is structured like: `my-topic-name`.
     *
     * Generated from protobuf field <code>string topic_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getTopicId()
    {
        return $this->topic_id;
    }

    /**
     * Required. The ID to use for the topic, which will become the final
     * component of the topic's name.
     * This value is structured like: `my-topic-name`.
     *
     * Generated from protobuf field <code>string topic_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setTopicId($var)
    {
        GPBUtil::checkString($var, True);
        $this->topic_id = $var;

        return $this;
    }

    /**
     * Required. Configuration of the topic to create. Its `name` field is
     * ignored.
     *
     * Generated from protobuf field <code>.google.cloud.managedkafka.v1.Topic topic = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\ManagedKafka\V1\Topic|null
     */
    public function getTopic()
    {
        return $this->topic;
    }

    public function hasTopic()
    {
        return isset($this->topic);
    }

    public function clearTopic()
    {
        unset($this->topic);
    }

    /**
     * Required. Configuration of the topic to create. Its `name` field is
     * ignored.
     *
     * Generated from protobuf field <code>.google.cloud.managedkafka.v1.Topic topic = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\ManagedKafka\V1\Topic $var
     * @return $this
     */
    public function setTopic($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\ManagedKafka\V1\Topic::class);
        $this->topic = $var;

        return $this;
    }

}

