<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/managedkafka/v1/resources.proto

namespace Google\Cloud\ManagedKafka\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The TLS configuration for the Kafka cluster.
 *
 * Generated from protobuf message <code>google.cloud.managedkafka.v1.TlsConfig</code>
 */
class TlsConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The configuration of the broker truststore. If specified, clients
     * can use mTLS for authentication.
     *
     * Generated from protobuf field <code>.google.cloud.managedkafka.v1.TrustConfig trust_config = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $trust_config = null;
    /**
     * Optional. A list of rules for mapping from SSL principal names to
     * short names. These are applied in order by Kafka.
     * Refer to the Apache Kafka documentation for `ssl.principal.mapping.rules`
     * for the precise formatting details and syntax.
     * Example: "RULE:^CN=(.*?),OU=ServiceUsers.*$/$1&#64;example.com/,DEFAULT"
     * This is a static Kafka broker configuration. Setting or modifying this
     * field will trigger a rolling restart of the Kafka brokers to apply
     * the change. An empty string means no rules are applied (Kafka default).
     *
     * Generated from protobuf field <code>string ssl_principal_mapping_rules = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $ssl_principal_mapping_rules = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\ManagedKafka\V1\TrustConfig $trust_config
     *           Optional. The configuration of the broker truststore. If specified, clients
     *           can use mTLS for authentication.
     *     @type string $ssl_principal_mapping_rules
     *           Optional. A list of rules for mapping from SSL principal names to
     *           short names. These are applied in order by Kafka.
     *           Refer to the Apache Kafka documentation for `ssl.principal.mapping.rules`
     *           for the precise formatting details and syntax.
     *           Example: "RULE:^CN=(.*?),OU=ServiceUsers.*$/$1&#64;example.com/,DEFAULT"
     *           This is a static Kafka broker configuration. Setting or modifying this
     *           field will trigger a rolling restart of the Kafka brokers to apply
     *           the change. An empty string means no rules are applied (Kafka default).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Managedkafka\V1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The configuration of the broker truststore. If specified, clients
     * can use mTLS for authentication.
     *
     * Generated from protobuf field <code>.google.cloud.managedkafka.v1.TrustConfig trust_config = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\ManagedKafka\V1\TrustConfig|null
     */
    public function getTrustConfig()
    {
        return $this->trust_config;
    }

    public function hasTrustConfig()
    {
        return isset($this->trust_config);
    }

    public function clearTrustConfig()
    {
        unset($this->trust_config);
    }

    /**
     * Optional. The configuration of the broker truststore. If specified, clients
     * can use mTLS for authentication.
     *
     * Generated from protobuf field <code>.google.cloud.managedkafka.v1.TrustConfig trust_config = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\ManagedKafka\V1\TrustConfig $var
     * @return $this
     */
    public function setTrustConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\ManagedKafka\V1\TrustConfig::class);
        $this->trust_config = $var;

        return $this;
    }

    /**
     * Optional. A list of rules for mapping from SSL principal names to
     * short names. These are applied in order by Kafka.
     * Refer to the Apache Kafka documentation for `ssl.principal.mapping.rules`
     * for the precise formatting details and syntax.
     * Example: "RULE:^CN=(.*?),OU=ServiceUsers.*$/$1&#64;example.com/,DEFAULT"
     * This is a static Kafka broker configuration. Setting or modifying this
     * field will trigger a rolling restart of the Kafka brokers to apply
     * the change. An empty string means no rules are applied (Kafka default).
     *
     * Generated from protobuf field <code>string ssl_principal_mapping_rules = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getSslPrincipalMappingRules()
    {
        return $this->ssl_principal_mapping_rules;
    }

    /**
     * Optional. A list of rules for mapping from SSL principal names to
     * short names. These are applied in order by Kafka.
     * Refer to the Apache Kafka documentation for `ssl.principal.mapping.rules`
     * for the precise formatting details and syntax.
     * Example: "RULE:^CN=(.*?),OU=ServiceUsers.*$/$1&#64;example.com/,DEFAULT"
     * This is a static Kafka broker configuration. Setting or modifying this
     * field will trigger a rolling restart of the Kafka brokers to apply
     * the change. An empty string means no rules are applied (Kafka default).
     *
     * Generated from protobuf field <code>string ssl_principal_mapping_rules = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setSslPrincipalMappingRules($var)
    {
        GPBUtil::checkString($var, True);
        $this->ssl_principal_mapping_rules = $var;

        return $this;
    }

}

