<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/managedkafka/schemaregistry/v1/schema_registry_resources.proto

namespace Google\Cloud\ManagedKafka\SchemaRegistry\V1\Schema;

use UnexpectedValueException;

/**
 * Schema types.
 *
 * Protobuf type <code>google.cloud.managedkafka.schemaregistry.v1.Schema.SchemaType</code>
 */
class SchemaType
{
    /**
     * No schema type. The default will be AVRO.
     *
     * Generated from protobuf enum <code>SCHEMA_TYPE_UNSPECIFIED = 0;</code>
     */
    const SCHEMA_TYPE_UNSPECIFIED = 0;
    /**
     * Avro schema type.
     *
     * Generated from protobuf enum <code>AVRO = 1;</code>
     */
    const AVRO = 1;
    /**
     * JSON schema type.
     *
     * Generated from protobuf enum <code>JSON = 2;</code>
     */
    const JSON = 2;
    /**
     * Protobuf schema type.
     *
     * Generated from protobuf enum <code>PROTOBUF = 3;</code>
     */
    const PROTOBUF = 3;

    private static $valueToName = [
        self::SCHEMA_TYPE_UNSPECIFIED => 'SCHEMA_TYPE_UNSPECIFIED',
        self::AVRO => 'AVRO',
        self::JSON => 'JSON',
        self::PROTOBUF => 'PROTOBUF',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


