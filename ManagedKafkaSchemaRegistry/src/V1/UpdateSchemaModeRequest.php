<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/managedkafka/schemaregistry/v1/schema_registry.proto

namespace Google\Cloud\ManagedKafka\SchemaRegistry\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for updating schema registry or subject mode.
 *
 * Generated from protobuf message <code>google.cloud.managedkafka.schemaregistry.v1.UpdateSchemaModeRequest</code>
 */
class UpdateSchemaModeRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The resource name of the mode. The format is
     *   * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/mode/{subject}: mode for a schema registry, or
     *   * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/contexts/{context}/mode/{subject}: mode for a specific subject in a specific context
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $name = '';
    /**
     * Required. The mode type.
     *
     * Generated from protobuf field <code>.google.cloud.managedkafka.schemaregistry.v1.SchemaMode.ModeType mode = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $mode = 0;

    /**
     * @param string $name Required. The resource name of the mode. The format is
     *                     * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/mode/{subject}: mode for a schema registry, or
     *                     * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/contexts/{context}/mode/{subject}: mode for a specific subject in a specific context
     *                     Please see {@see ManagedSchemaRegistryClient::schemaModeName()} for help formatting this field.
     * @param int    $mode Required. The mode type.
     *                     For allowed values, use constants defined on {@see \Google\Cloud\ManagedKafka\SchemaRegistry\V1\SchemaMode\ModeType}
     *
     * @return \Google\Cloud\ManagedKafka\SchemaRegistry\V1\UpdateSchemaModeRequest
     *
     * @experimental
     */
    public static function build(string $name, int $mode): self
    {
        return (new self())
            ->setName($name)
            ->setMode($mode);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The resource name of the mode. The format is
     *             * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/mode/{subject}: mode for a schema registry, or
     *             * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/contexts/{context}/mode/{subject}: mode for a specific subject in a specific context
     *     @type int $mode
     *           Required. The mode type.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Managedkafka\Schemaregistry\V1\SchemaRegistry::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The resource name of the mode. The format is
     *   * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/mode/{subject}: mode for a schema registry, or
     *   * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/contexts/{context}/mode/{subject}: mode for a specific subject in a specific context
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The resource name of the mode. The format is
     *   * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/mode/{subject}: mode for a schema registry, or
     *   * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/contexts/{context}/mode/{subject}: mode for a specific subject in a specific context
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Required. The mode type.
     *
     * Generated from protobuf field <code>.google.cloud.managedkafka.schemaregistry.v1.SchemaMode.ModeType mode = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getMode()
    {
        return $this->mode;
    }

    /**
     * Required. The mode type.
     *
     * Generated from protobuf field <code>.google.cloud.managedkafka.schemaregistry.v1.SchemaMode.ModeType mode = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setMode($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\ManagedKafka\SchemaRegistry\V1\SchemaMode\ModeType::class);
        $this->mode = $var;

        return $this;
    }

}

