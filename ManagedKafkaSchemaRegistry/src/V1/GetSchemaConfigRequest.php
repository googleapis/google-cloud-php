<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/managedkafka/schemaregistry/v1/schema_registry.proto

namespace Google\Cloud\ManagedKafka\SchemaRegistry\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for getting config.
 *
 * Generated from protobuf message <code>google.cloud.managedkafka.schemaregistry.v1.GetSchemaConfigRequest</code>
 */
class GetSchemaConfigRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The resource name to get the config for. It can be either of
     * following:
     *   * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/config: Get config at global level.
     *   * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/config/{subject}: Get config for a specific subject.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $name = '';
    /**
     * Optional. If true, the config will fall back to the config at the global
     * level if no subject level config is found.
     *
     * Generated from protobuf field <code>optional bool default_to_global = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $default_to_global = null;

    /**
     * @param string $name Required. The resource name to get the config for. It can be either of
     *                     following:
     *                     * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/config: Get config at global level.
     *                     * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/config/{subject}: Get config for a specific subject. Please see
     *                     {@see ManagedSchemaRegistryClient::schemaConfigName()} for help formatting this field.
     *
     * @return \Google\Cloud\ManagedKafka\SchemaRegistry\V1\GetSchemaConfigRequest
     *
     * @experimental
     */
    public static function build(string $name): self
    {
        return (new self())
            ->setName($name);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The resource name to get the config for. It can be either of
     *           following:
     *             * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/config: Get config at global level.
     *             * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/config/{subject}: Get config for a specific subject.
     *     @type bool $default_to_global
     *           Optional. If true, the config will fall back to the config at the global
     *           level if no subject level config is found.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Managedkafka\Schemaregistry\V1\SchemaRegistry::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The resource name to get the config for. It can be either of
     * following:
     *   * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/config: Get config at global level.
     *   * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/config/{subject}: Get config for a specific subject.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The resource name to get the config for. It can be either of
     * following:
     *   * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/config: Get config at global level.
     *   * projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/config/{subject}: Get config for a specific subject.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. If true, the config will fall back to the config at the global
     * level if no subject level config is found.
     *
     * Generated from protobuf field <code>optional bool default_to_global = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getDefaultToGlobal()
    {
        return isset($this->default_to_global) ? $this->default_to_global : false;
    }

    public function hasDefaultToGlobal()
    {
        return isset($this->default_to_global);
    }

    public function clearDefaultToGlobal()
    {
        unset($this->default_to_global);
    }

    /**
     * Optional. If true, the config will fall back to the config at the global
     * level if no subject level config is found.
     *
     * Generated from protobuf field <code>optional bool default_to_global = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setDefaultToGlobal($var)
    {
        GPBUtil::checkBool($var);
        $this->default_to_global = $var;

        return $this;
    }

}

