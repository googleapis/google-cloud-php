<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/managedkafka/schemaregistry/v1/schema_registry_resources.proto

namespace Google\Cloud\ManagedKafka\SchemaRegistry\V1\SchemaMode;

use UnexpectedValueException;

/**
 * Mode type of the schemas or subjects.
 *
 * Protobuf type <code>google.cloud.managedkafka.schemaregistry.v1.SchemaMode.ModeType</code>
 */
class ModeType
{
    /**
     * The default / unset value.
     * The subject mode is NONE/unset by default, which means use the global
     * schema registry mode. This should not be used for setting the mode.
     *
     * Generated from protobuf enum <code>NONE = 0;</code>
     */
    const NONE = 0;
    /**
     * READONLY mode.
     *
     * Generated from protobuf enum <code>READONLY = 1;</code>
     */
    const READONLY = 1;
    /**
     * READWRITE mode.
     *
     * Generated from protobuf enum <code>READWRITE = 2;</code>
     */
    const READWRITE = 2;
    /**
     * IMPORT mode.
     *
     * Generated from protobuf enum <code>IMPORT = 3;</code>
     */
    const IMPORT = 3;

    private static $valueToName = [
        self::NONE => 'NONE',
        self::READONLY => 'READONLY',
        self::READWRITE => 'READWRITE',
        self::IMPORT => 'IMPORT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


