<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataproc/v1/clusters.proto

namespace Google\Cloud\Dataproc\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A reference to a Compute Engine instance.
 *
 * Generated from protobuf message <code>google.cloud.dataproc.v1.InstanceReference</code>
 */
class InstanceReference extends \Google\Protobuf\Internal\Message
{
    /**
     * The user-friendly name of the Compute Engine instance.
     *
     * Generated from protobuf field <code>string instance_name = 1;</code>
     */
    private $instance_name = '';
    /**
     * The unique identifier of the Compute Engine instance.
     *
     * Generated from protobuf field <code>string instance_id = 2;</code>
     */
    private $instance_id = '';
    /**
     * The public RSA key used for sharing data with this instance.
     *
     * Generated from protobuf field <code>string public_key = 3;</code>
     */
    private $public_key = '';
    /**
     * The public ECIES key used for sharing data with this instance.
     *
     * Generated from protobuf field <code>string public_ecies_key = 4;</code>
     */
    private $public_ecies_key = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $instance_name
     *           The user-friendly name of the Compute Engine instance.
     *     @type string $instance_id
     *           The unique identifier of the Compute Engine instance.
     *     @type string $public_key
     *           The public RSA key used for sharing data with this instance.
     *     @type string $public_ecies_key
     *           The public ECIES key used for sharing data with this instance.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataproc\V1\Clusters::initOnce();
        parent::__construct($data);
    }

    /**
     * The user-friendly name of the Compute Engine instance.
     *
     * Generated from protobuf field <code>string instance_name = 1;</code>
     * @return string
     */
    public function getInstanceName()
    {
        return $this->instance_name;
    }

    /**
     * The user-friendly name of the Compute Engine instance.
     *
     * Generated from protobuf field <code>string instance_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setInstanceName($var)
    {
        GPBUtil::checkString($var, True);
        $this->instance_name = $var;

        return $this;
    }

    /**
     * The unique identifier of the Compute Engine instance.
     *
     * Generated from protobuf field <code>string instance_id = 2;</code>
     * @return string
     */
    public function getInstanceId()
    {
        return $this->instance_id;
    }

    /**
     * The unique identifier of the Compute Engine instance.
     *
     * Generated from protobuf field <code>string instance_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setInstanceId($var)
    {
        GPBUtil::checkString($var, True);
        $this->instance_id = $var;

        return $this;
    }

    /**
     * The public RSA key used for sharing data with this instance.
     *
     * Generated from protobuf field <code>string public_key = 3;</code>
     * @return string
     */
    public function getPublicKey()
    {
        return $this->public_key;
    }

    /**
     * The public RSA key used for sharing data with this instance.
     *
     * Generated from protobuf field <code>string public_key = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setPublicKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->public_key = $var;

        return $this;
    }

    /**
     * The public ECIES key used for sharing data with this instance.
     *
     * Generated from protobuf field <code>string public_ecies_key = 4;</code>
     * @return string
     */
    public function getPublicEciesKey()
    {
        return $this->public_ecies_key;
    }

    /**
     * The public ECIES key used for sharing data with this instance.
     *
     * Generated from protobuf field <code>string public_ecies_key = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPublicEciesKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->public_ecies_key = $var;

        return $this;
    }

}

