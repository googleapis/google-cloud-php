<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataproc/v1/clusters.proto

namespace Google\Cloud\Dataproc\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Auxiliary services configuration for a Cluster.
 *
 * Generated from protobuf message <code>google.cloud.dataproc.v1.AuxiliaryServicesConfig</code>
 */
class AuxiliaryServicesConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The Hive Metastore configuration for this workload.
     *
     * Generated from protobuf field <code>.google.cloud.dataproc.v1.MetastoreConfig metastore_config = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $metastore_config = null;
    /**
     * Optional. The Spark History Server configuration for the workload.
     *
     * Generated from protobuf field <code>.google.cloud.dataproc.v1.SparkHistoryServerConfig spark_history_server_config = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $spark_history_server_config = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Dataproc\V1\MetastoreConfig $metastore_config
     *           Optional. The Hive Metastore configuration for this workload.
     *     @type \Google\Cloud\Dataproc\V1\SparkHistoryServerConfig $spark_history_server_config
     *           Optional. The Spark History Server configuration for the workload.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataproc\V1\Clusters::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The Hive Metastore configuration for this workload.
     *
     * Generated from protobuf field <code>.google.cloud.dataproc.v1.MetastoreConfig metastore_config = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\Dataproc\V1\MetastoreConfig|null
     */
    public function getMetastoreConfig()
    {
        return $this->metastore_config;
    }

    public function hasMetastoreConfig()
    {
        return isset($this->metastore_config);
    }

    public function clearMetastoreConfig()
    {
        unset($this->metastore_config);
    }

    /**
     * Optional. The Hive Metastore configuration for this workload.
     *
     * Generated from protobuf field <code>.google.cloud.dataproc.v1.MetastoreConfig metastore_config = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\Dataproc\V1\MetastoreConfig $var
     * @return $this
     */
    public function setMetastoreConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dataproc\V1\MetastoreConfig::class);
        $this->metastore_config = $var;

        return $this;
    }

    /**
     * Optional. The Spark History Server configuration for the workload.
     *
     * Generated from protobuf field <code>.google.cloud.dataproc.v1.SparkHistoryServerConfig spark_history_server_config = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\Dataproc\V1\SparkHistoryServerConfig|null
     */
    public function getSparkHistoryServerConfig()
    {
        return $this->spark_history_server_config;
    }

    public function hasSparkHistoryServerConfig()
    {
        return isset($this->spark_history_server_config);
    }

    public function clearSparkHistoryServerConfig()
    {
        unset($this->spark_history_server_config);
    }

    /**
     * Optional. The Spark History Server configuration for the workload.
     *
     * Generated from protobuf field <code>.google.cloud.dataproc.v1.SparkHistoryServerConfig spark_history_server_config = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\Dataproc\V1\SparkHistoryServerConfig $var
     * @return $this
     */
    public function setSparkHistoryServerConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dataproc\V1\SparkHistoryServerConfig::class);
        $this->spark_history_server_config = $var;

        return $this;
    }

}

