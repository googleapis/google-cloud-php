<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataproc/v1/clusters.proto

namespace Google\Cloud\Dataproc\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Specifies the config of disk options for a group of VM instances.
 *
 * Generated from protobuf message <code>google.cloud.dataproc.v1.DiskConfig</code>
 */
class DiskConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Type of the boot disk (default is "pd-standard").
     * Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive),
     * "pd-ssd" (Persistent Disk Solid State Drive),
     * or "pd-standard" (Persistent Disk Hard Disk Drive).
     * See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
     *
     * Generated from protobuf field <code>string boot_disk_type = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $boot_disk_type = '';
    /**
     * Optional. Size in GB of the boot disk (default is 500GB).
     *
     * Generated from protobuf field <code>int32 boot_disk_size_gb = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $boot_disk_size_gb = 0;
    /**
     * Optional. Number of attached SSDs, from 0 to 4 (default is 0).
     * If SSDs are not attached, the boot disk is used to store runtime logs and
     * [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data.
     * If one or more SSDs are attached, this runtime bulk
     * data is spread across them, and the boot disk contains only basic
     * config and installed binaries.
     *
     * Generated from protobuf field <code>int32 num_local_ssds = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $num_local_ssds = 0;
    /**
     * Optional. Interface type of local SSDs (default is "scsi").
     * Valid values: "scsi" (Small Computer System Interface),
     * "nvme" (Non-Volatile Memory Express).
     * See [local SSD
     * performance](https://cloud.google.com/compute/docs/disks/local-ssd#performance).
     *
     * Generated from protobuf field <code>string local_ssd_interface = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $local_ssd_interface = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $boot_disk_type
     *           Optional. Type of the boot disk (default is "pd-standard").
     *           Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive),
     *           "pd-ssd" (Persistent Disk Solid State Drive),
     *           or "pd-standard" (Persistent Disk Hard Disk Drive).
     *           See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
     *     @type int $boot_disk_size_gb
     *           Optional. Size in GB of the boot disk (default is 500GB).
     *     @type int $num_local_ssds
     *           Optional. Number of attached SSDs, from 0 to 4 (default is 0).
     *           If SSDs are not attached, the boot disk is used to store runtime logs and
     *           [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data.
     *           If one or more SSDs are attached, this runtime bulk
     *           data is spread across them, and the boot disk contains only basic
     *           config and installed binaries.
     *     @type string $local_ssd_interface
     *           Optional. Interface type of local SSDs (default is "scsi").
     *           Valid values: "scsi" (Small Computer System Interface),
     *           "nvme" (Non-Volatile Memory Express).
     *           See [local SSD
     *           performance](https://cloud.google.com/compute/docs/disks/local-ssd#performance).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataproc\V1\Clusters::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Type of the boot disk (default is "pd-standard").
     * Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive),
     * "pd-ssd" (Persistent Disk Solid State Drive),
     * or "pd-standard" (Persistent Disk Hard Disk Drive).
     * See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
     *
     * Generated from protobuf field <code>string boot_disk_type = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getBootDiskType()
    {
        return $this->boot_disk_type;
    }

    /**
     * Optional. Type of the boot disk (default is "pd-standard").
     * Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive),
     * "pd-ssd" (Persistent Disk Solid State Drive),
     * or "pd-standard" (Persistent Disk Hard Disk Drive).
     * See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
     *
     * Generated from protobuf field <code>string boot_disk_type = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setBootDiskType($var)
    {
        GPBUtil::checkString($var, True);
        $this->boot_disk_type = $var;

        return $this;
    }

    /**
     * Optional. Size in GB of the boot disk (default is 500GB).
     *
     * Generated from protobuf field <code>int32 boot_disk_size_gb = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getBootDiskSizeGb()
    {
        return $this->boot_disk_size_gb;
    }

    /**
     * Optional. Size in GB of the boot disk (default is 500GB).
     *
     * Generated from protobuf field <code>int32 boot_disk_size_gb = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setBootDiskSizeGb($var)
    {
        GPBUtil::checkInt32($var);
        $this->boot_disk_size_gb = $var;

        return $this;
    }

    /**
     * Optional. Number of attached SSDs, from 0 to 4 (default is 0).
     * If SSDs are not attached, the boot disk is used to store runtime logs and
     * [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data.
     * If one or more SSDs are attached, this runtime bulk
     * data is spread across them, and the boot disk contains only basic
     * config and installed binaries.
     *
     * Generated from protobuf field <code>int32 num_local_ssds = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getNumLocalSsds()
    {
        return $this->num_local_ssds;
    }

    /**
     * Optional. Number of attached SSDs, from 0 to 4 (default is 0).
     * If SSDs are not attached, the boot disk is used to store runtime logs and
     * [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data.
     * If one or more SSDs are attached, this runtime bulk
     * data is spread across them, and the boot disk contains only basic
     * config and installed binaries.
     *
     * Generated from protobuf field <code>int32 num_local_ssds = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setNumLocalSsds($var)
    {
        GPBUtil::checkInt32($var);
        $this->num_local_ssds = $var;

        return $this;
    }

    /**
     * Optional. Interface type of local SSDs (default is "scsi").
     * Valid values: "scsi" (Small Computer System Interface),
     * "nvme" (Non-Volatile Memory Express).
     * See [local SSD
     * performance](https://cloud.google.com/compute/docs/disks/local-ssd#performance).
     *
     * Generated from protobuf field <code>string local_ssd_interface = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getLocalSsdInterface()
    {
        return $this->local_ssd_interface;
    }

    /**
     * Optional. Interface type of local SSDs (default is "scsi").
     * Valid values: "scsi" (Small Computer System Interface),
     * "nvme" (Non-Volatile Memory Express).
     * See [local SSD
     * performance](https://cloud.google.com/compute/docs/disks/local-ssd#performance).
     *
     * Generated from protobuf field <code>string local_ssd_interface = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setLocalSsdInterface($var)
    {
        GPBUtil::checkString($var, True);
        $this->local_ssd_interface = $var;

        return $this;
    }

}

