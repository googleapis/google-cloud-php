<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/pubsub/v1/pubsub.proto

namespace Google\Cloud\PubSub\V1\IngestionDataSourceSettings;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Ingestion settings for Confluent Cloud.
 *
 * Generated from protobuf message <code>google.pubsub.v1.IngestionDataSourceSettings.ConfluentCloud</code>
 */
class ConfluentCloud extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. An output-only field that indicates the state of the
     * Confluent Cloud ingestion source.
     *
     * Generated from protobuf field <code>.google.pubsub.v1.IngestionDataSourceSettings.ConfluentCloud.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $state = 0;
    /**
     * Required. The address of the bootstrap server. The format is url:port.
     *
     * Generated from protobuf field <code>string bootstrap_server = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $bootstrap_server = '';
    /**
     * Required. The id of the cluster.
     *
     * Generated from protobuf field <code>string cluster_id = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $cluster_id = '';
    /**
     * Required. The name of the topic in the Confluent Cloud cluster that
     * Pub/Sub will import from.
     *
     * Generated from protobuf field <code>string topic = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $topic = '';
    /**
     * Required. The id of the identity pool to be used for Federated Identity
     * authentication with Confluent Cloud. See
     * https://docs.confluent.io/cloud/current/security/authenticate/workload-identities/identity-providers/oauth/identity-pools.html#add-oauth-identity-pools.
     *
     * Generated from protobuf field <code>string identity_pool_id = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $identity_pool_id = '';
    /**
     * Required. The GCP service account to be used for Federated Identity
     * authentication with `identity_pool_id`.
     *
     * Generated from protobuf field <code>string gcp_service_account = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $gcp_service_account = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $state
     *           Output only. An output-only field that indicates the state of the
     *           Confluent Cloud ingestion source.
     *     @type string $bootstrap_server
     *           Required. The address of the bootstrap server. The format is url:port.
     *     @type string $cluster_id
     *           Required. The id of the cluster.
     *     @type string $topic
     *           Required. The name of the topic in the Confluent Cloud cluster that
     *           Pub/Sub will import from.
     *     @type string $identity_pool_id
     *           Required. The id of the identity pool to be used for Federated Identity
     *           authentication with Confluent Cloud. See
     *           https://docs.confluent.io/cloud/current/security/authenticate/workload-identities/identity-providers/oauth/identity-pools.html#add-oauth-identity-pools.
     *     @type string $gcp_service_account
     *           Required. The GCP service account to be used for Federated Identity
     *           authentication with `identity_pool_id`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Pubsub\V1\Pubsub::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. An output-only field that indicates the state of the
     * Confluent Cloud ingestion source.
     *
     * Generated from protobuf field <code>.google.pubsub.v1.IngestionDataSourceSettings.ConfluentCloud.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * Output only. An output-only field that indicates the state of the
     * Confluent Cloud ingestion source.
     *
     * Generated from protobuf field <code>.google.pubsub.v1.IngestionDataSourceSettings.ConfluentCloud.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\PubSub\V1\IngestionDataSourceSettings\ConfluentCloud\State::class);
        $this->state = $var;

        return $this;
    }

    /**
     * Required. The address of the bootstrap server. The format is url:port.
     *
     * Generated from protobuf field <code>string bootstrap_server = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getBootstrapServer()
    {
        return $this->bootstrap_server;
    }

    /**
     * Required. The address of the bootstrap server. The format is url:port.
     *
     * Generated from protobuf field <code>string bootstrap_server = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setBootstrapServer($var)
    {
        GPBUtil::checkString($var, True);
        $this->bootstrap_server = $var;

        return $this;
    }

    /**
     * Required. The id of the cluster.
     *
     * Generated from protobuf field <code>string cluster_id = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getClusterId()
    {
        return $this->cluster_id;
    }

    /**
     * Required. The id of the cluster.
     *
     * Generated from protobuf field <code>string cluster_id = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setClusterId($var)
    {
        GPBUtil::checkString($var, True);
        $this->cluster_id = $var;

        return $this;
    }

    /**
     * Required. The name of the topic in the Confluent Cloud cluster that
     * Pub/Sub will import from.
     *
     * Generated from protobuf field <code>string topic = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getTopic()
    {
        return $this->topic;
    }

    /**
     * Required. The name of the topic in the Confluent Cloud cluster that
     * Pub/Sub will import from.
     *
     * Generated from protobuf field <code>string topic = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setTopic($var)
    {
        GPBUtil::checkString($var, True);
        $this->topic = $var;

        return $this;
    }

    /**
     * Required. The id of the identity pool to be used for Federated Identity
     * authentication with Confluent Cloud. See
     * https://docs.confluent.io/cloud/current/security/authenticate/workload-identities/identity-providers/oauth/identity-pools.html#add-oauth-identity-pools.
     *
     * Generated from protobuf field <code>string identity_pool_id = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getIdentityPoolId()
    {
        return $this->identity_pool_id;
    }

    /**
     * Required. The id of the identity pool to be used for Federated Identity
     * authentication with Confluent Cloud. See
     * https://docs.confluent.io/cloud/current/security/authenticate/workload-identities/identity-providers/oauth/identity-pools.html#add-oauth-identity-pools.
     *
     * Generated from protobuf field <code>string identity_pool_id = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setIdentityPoolId($var)
    {
        GPBUtil::checkString($var, True);
        $this->identity_pool_id = $var;

        return $this;
    }

    /**
     * Required. The GCP service account to be used for Federated Identity
     * authentication with `identity_pool_id`.
     *
     * Generated from protobuf field <code>string gcp_service_account = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getGcpServiceAccount()
    {
        return $this->gcp_service_account;
    }

    /**
     * Required. The GCP service account to be used for Federated Identity
     * authentication with `identity_pool_id`.
     *
     * Generated from protobuf field <code>string gcp_service_account = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setGcpServiceAccount($var)
    {
        GPBUtil::checkString($var, True);
        $this->gcp_service_account = $var;

        return $this;
    }

}


