<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/pubsub/v1/schema.proto

namespace Google\Cloud\PubSub\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for the `ListSchemaRevisions` method.
 *
 * Generated from protobuf message <code>google.pubsub.v1.ListSchemaRevisionsRequest</code>
 */
class ListSchemaRevisionsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the schema to list revisions for.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    private $name = '';
    /**
     * The set of Schema fields to return in the response. If not set, returns
     * Schemas with `name` and `type`, but not `definition`. Set to `FULL` to
     * retrieve all fields.
     *
     * Generated from protobuf field <code>.google.pubsub.v1.SchemaView view = 2;</code>
     */
    private $view = 0;
    /**
     * The maximum number of revisions to return per page.
     *
     * Generated from protobuf field <code>int32 page_size = 3;</code>
     */
    private $page_size = 0;
    /**
     * The page token, received from a previous ListSchemaRevisions call.
     * Provide this to retrieve the subsequent page.
     *
     * Generated from protobuf field <code>string page_token = 4;</code>
     */
    private $page_token = '';

    /**
     * @param string $name Required. The name of the schema to list revisions for. Please see
     *                     {@see SchemaServiceClient::schemaName()} for help formatting this field.
     *
     * @return \Google\Cloud\PubSub\V1\ListSchemaRevisionsRequest
     *
     * @experimental
     */
    public static function build(string $name): self
    {
        return (new self())
            ->setName($name);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The name of the schema to list revisions for.
     *     @type int $view
     *           The set of Schema fields to return in the response. If not set, returns
     *           Schemas with `name` and `type`, but not `definition`. Set to `FULL` to
     *           retrieve all fields.
     *     @type int $page_size
     *           The maximum number of revisions to return per page.
     *     @type string $page_token
     *           The page token, received from a previous ListSchemaRevisions call.
     *           Provide this to retrieve the subsequent page.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Pubsub\V1\Schema::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The name of the schema to list revisions for.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The name of the schema to list revisions for.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The set of Schema fields to return in the response. If not set, returns
     * Schemas with `name` and `type`, but not `definition`. Set to `FULL` to
     * retrieve all fields.
     *
     * Generated from protobuf field <code>.google.pubsub.v1.SchemaView view = 2;</code>
     * @return int
     */
    public function getView()
    {
        return $this->view;
    }

    /**
     * The set of Schema fields to return in the response. If not set, returns
     * Schemas with `name` and `type`, but not `definition`. Set to `FULL` to
     * retrieve all fields.
     *
     * Generated from protobuf field <code>.google.pubsub.v1.SchemaView view = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setView($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\PubSub\V1\SchemaView::class);
        $this->view = $var;

        return $this;
    }

    /**
     * The maximum number of revisions to return per page.
     *
     * Generated from protobuf field <code>int32 page_size = 3;</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * The maximum number of revisions to return per page.
     *
     * Generated from protobuf field <code>int32 page_size = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * The page token, received from a previous ListSchemaRevisions call.
     * Provide this to retrieve the subsequent page.
     *
     * Generated from protobuf field <code>string page_token = 4;</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * The page token, received from a previous ListSchemaRevisions call.
     * Provide this to retrieve the subsequent page.
     *
     * Generated from protobuf field <code>string page_token = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

}

