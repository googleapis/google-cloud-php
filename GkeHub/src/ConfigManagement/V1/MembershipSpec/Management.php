<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/gkehub/v1/configmanagement/configmanagement.proto

namespace Google\Cloud\GkeHub\ConfigManagement\V1\MembershipSpec;

use UnexpectedValueException;

/**
 * Whether to automatically manage the Feature.
 *
 * Protobuf type <code>google.cloud.gkehub.configmanagement.v1.MembershipSpec.Management</code>
 */
class Management
{
    /**
     * Unspecified
     *
     * Generated from protobuf enum <code>MANAGEMENT_UNSPECIFIED = 0;</code>
     */
    const MANAGEMENT_UNSPECIFIED = 0;
    /**
     * Google will manage the Feature for the cluster.
     *
     * Generated from protobuf enum <code>MANAGEMENT_AUTOMATIC = 1;</code>
     */
    const MANAGEMENT_AUTOMATIC = 1;
    /**
     * User will manually manage the Feature for the cluster.
     *
     * Generated from protobuf enum <code>MANAGEMENT_MANUAL = 2;</code>
     */
    const MANAGEMENT_MANUAL = 2;

    private static $valueToName = [
        self::MANAGEMENT_UNSPECIFIED => 'MANAGEMENT_UNSPECIFIED',
        self::MANAGEMENT_AUTOMATIC => 'MANAGEMENT_AUTOMATIC',
        self::MANAGEMENT_MANUAL => 'MANAGEMENT_MANUAL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Management::class, \Google\Cloud\GkeHub\ConfigManagement\V1\MembershipSpec_Management::class);

