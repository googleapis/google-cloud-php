<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/gkehub/v1/feature.proto

namespace Google\Cloud\GkeHub\V1\FeatureResourceState;

use UnexpectedValueException;

/**
 * State describes the lifecycle status of a Feature.
 *
 * Protobuf type <code>google.cloud.gkehub.v1.FeatureResourceState.State</code>
 */
class State
{
    /**
     * State is unknown or not set.
     *
     * Generated from protobuf enum <code>STATE_UNSPECIFIED = 0;</code>
     */
    const STATE_UNSPECIFIED = 0;
    /**
     * The Feature is being enabled, and the Feature resource is being created.
     * Once complete, the corresponding Feature will be enabled in this Hub.
     *
     * Generated from protobuf enum <code>ENABLING = 1;</code>
     */
    const ENABLING = 1;
    /**
     * The Feature is enabled in this Hub, and the Feature resource is fully
     * available.
     *
     * Generated from protobuf enum <code>ACTIVE = 2;</code>
     */
    const ACTIVE = 2;
    /**
     * The Feature is being disabled in this Hub, and the Feature resource
     * is being deleted.
     *
     * Generated from protobuf enum <code>DISABLING = 3;</code>
     */
    const DISABLING = 3;
    /**
     * The Feature resource is being updated.
     *
     * Generated from protobuf enum <code>UPDATING = 4;</code>
     */
    const UPDATING = 4;
    /**
     * The Feature resource is being updated by the Hub Service.
     *
     * Generated from protobuf enum <code>SERVICE_UPDATING = 5;</code>
     */
    const SERVICE_UPDATING = 5;

    private static $valueToName = [
        self::STATE_UNSPECIFIED => 'STATE_UNSPECIFIED',
        self::ENABLING => 'ENABLING',
        self::ACTIVE => 'ACTIVE',
        self::DISABLING => 'DISABLING',
        self::UPDATING => 'UPDATING',
        self::SERVICE_UPDATING => 'SERVICE_UPDATING',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(State::class, \Google\Cloud\GkeHub\V1\FeatureResourceState_State::class);

