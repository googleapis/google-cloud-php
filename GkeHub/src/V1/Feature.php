<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/gkehub/v1/feature.proto

namespace Google\Cloud\GkeHub\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Feature represents the settings and status of any Hub Feature.
 *
 * Generated from protobuf message <code>google.cloud.gkehub.v1.Feature</code>
 */
class Feature extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. The full, unique name of this Feature resource in the format
     * `projects/&#42;&#47;locations/&#42;&#47;features/&#42;`.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $name = '';
    /**
     * GCP labels for this Feature.
     *
     * Generated from protobuf field <code>map<string, string> labels = 2;</code>
     */
    private $labels;
    /**
     * Output only. State of the Feature resource itself.
     *
     * Generated from protobuf field <code>.google.cloud.gkehub.v1.FeatureResourceState resource_state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $resource_state = null;
    /**
     * Optional. Hub-wide Feature configuration. If this Feature does not support any
     * Hub-wide configuration, this field may be unused.
     *
     * Generated from protobuf field <code>.google.cloud.gkehub.v1.CommonFeatureSpec spec = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $spec = null;
    /**
     * Optional. Membership-specific configuration for this Feature. If this Feature does
     * not support any per-Membership configuration, this field may be unused.
     * The keys indicate which Membership the configuration is for, in the form:
     *     projects/{p}/locations/{l}/memberships/{m}
     * Where {p} is the project, {l} is a valid location and {m} is a valid
     * Membership in this project at that location. {p} WILL match the Feature's
     * project.
     * {p} will always be returned as the project number, but the project ID is
     * also accepted during input. If the same Membership is specified in the map
     * twice (using the project ID form, and the project number form), exactly
     * ONE of the entries will be saved, with no guarantees as to which. For this
     * reason, it is recommended the same format be used for all entries when
     * mutating a Feature.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.gkehub.v1.MembershipFeatureSpec> membership_specs = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $membership_specs;
    /**
     * Output only. The Hub-wide Feature state.
     *
     * Generated from protobuf field <code>.google.cloud.gkehub.v1.CommonFeatureState state = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $state = null;
    /**
     * Output only. Membership-specific Feature status. If this Feature does
     * report any per-Membership status, this field may be unused.
     * The keys indicate which Membership the state is for, in the form:
     *     projects/{p}/locations/{l}/memberships/{m}
     * Where {p} is the project number, {l} is a valid location and {m} is a valid
     * Membership in this project at that location. {p} MUST match the Feature's
     * project number.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.gkehub.v1.MembershipFeatureState> membership_states = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $membership_states;
    /**
     * Output only. When the Feature resource was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $create_time = null;
    /**
     * Output only. When the Feature resource was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $update_time = null;
    /**
     * Output only. When the Feature resource was deleted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp delete_time = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $delete_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Output only. The full, unique name of this Feature resource in the format
     *           `projects/&#42;&#47;locations/&#42;&#47;features/&#42;`.
     *     @type array|\Google\Protobuf\Internal\MapField $labels
     *           GCP labels for this Feature.
     *     @type \Google\Cloud\GkeHub\V1\FeatureResourceState $resource_state
     *           Output only. State of the Feature resource itself.
     *     @type \Google\Cloud\GkeHub\V1\CommonFeatureSpec $spec
     *           Optional. Hub-wide Feature configuration. If this Feature does not support any
     *           Hub-wide configuration, this field may be unused.
     *     @type array|\Google\Protobuf\Internal\MapField $membership_specs
     *           Optional. Membership-specific configuration for this Feature. If this Feature does
     *           not support any per-Membership configuration, this field may be unused.
     *           The keys indicate which Membership the configuration is for, in the form:
     *               projects/{p}/locations/{l}/memberships/{m}
     *           Where {p} is the project, {l} is a valid location and {m} is a valid
     *           Membership in this project at that location. {p} WILL match the Feature's
     *           project.
     *           {p} will always be returned as the project number, but the project ID is
     *           also accepted during input. If the same Membership is specified in the map
     *           twice (using the project ID form, and the project number form), exactly
     *           ONE of the entries will be saved, with no guarantees as to which. For this
     *           reason, it is recommended the same format be used for all entries when
     *           mutating a Feature.
     *     @type \Google\Cloud\GkeHub\V1\CommonFeatureState $state
     *           Output only. The Hub-wide Feature state.
     *     @type array|\Google\Protobuf\Internal\MapField $membership_states
     *           Output only. Membership-specific Feature status. If this Feature does
     *           report any per-Membership status, this field may be unused.
     *           The keys indicate which Membership the state is for, in the form:
     *               projects/{p}/locations/{l}/memberships/{m}
     *           Where {p} is the project number, {l} is a valid location and {m} is a valid
     *           Membership in this project at that location. {p} MUST match the Feature's
     *           project number.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. When the Feature resource was created.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. When the Feature resource was last updated.
     *     @type \Google\Protobuf\Timestamp $delete_time
     *           Output only. When the Feature resource was deleted.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Gkehub\V1\Feature::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. The full, unique name of this Feature resource in the format
     * `projects/&#42;&#47;locations/&#42;&#47;features/&#42;`.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Output only. The full, unique name of this Feature resource in the format
     * `projects/&#42;&#47;locations/&#42;&#47;features/&#42;`.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * GCP labels for this Feature.
     *
     * Generated from protobuf field <code>map<string, string> labels = 2;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * GCP labels for this Feature.
     *
     * Generated from protobuf field <code>map<string, string> labels = 2;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setLabels($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;

        return $this;
    }

    /**
     * Output only. State of the Feature resource itself.
     *
     * Generated from protobuf field <code>.google.cloud.gkehub.v1.FeatureResourceState resource_state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Cloud\GkeHub\V1\FeatureResourceState|null
     */
    public function getResourceState()
    {
        return $this->resource_state;
    }

    public function hasResourceState()
    {
        return isset($this->resource_state);
    }

    public function clearResourceState()
    {
        unset($this->resource_state);
    }

    /**
     * Output only. State of the Feature resource itself.
     *
     * Generated from protobuf field <code>.google.cloud.gkehub.v1.FeatureResourceState resource_state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Cloud\GkeHub\V1\FeatureResourceState $var
     * @return $this
     */
    public function setResourceState($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GkeHub\V1\FeatureResourceState::class);
        $this->resource_state = $var;

        return $this;
    }

    /**
     * Optional. Hub-wide Feature configuration. If this Feature does not support any
     * Hub-wide configuration, this field may be unused.
     *
     * Generated from protobuf field <code>.google.cloud.gkehub.v1.CommonFeatureSpec spec = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\GkeHub\V1\CommonFeatureSpec|null
     */
    public function getSpec()
    {
        return $this->spec;
    }

    public function hasSpec()
    {
        return isset($this->spec);
    }

    public function clearSpec()
    {
        unset($this->spec);
    }

    /**
     * Optional. Hub-wide Feature configuration. If this Feature does not support any
     * Hub-wide configuration, this field may be unused.
     *
     * Generated from protobuf field <code>.google.cloud.gkehub.v1.CommonFeatureSpec spec = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\GkeHub\V1\CommonFeatureSpec $var
     * @return $this
     */
    public function setSpec($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GkeHub\V1\CommonFeatureSpec::class);
        $this->spec = $var;

        return $this;
    }

    /**
     * Optional. Membership-specific configuration for this Feature. If this Feature does
     * not support any per-Membership configuration, this field may be unused.
     * The keys indicate which Membership the configuration is for, in the form:
     *     projects/{p}/locations/{l}/memberships/{m}
     * Where {p} is the project, {l} is a valid location and {m} is a valid
     * Membership in this project at that location. {p} WILL match the Feature's
     * project.
     * {p} will always be returned as the project number, but the project ID is
     * also accepted during input. If the same Membership is specified in the map
     * twice (using the project ID form, and the project number form), exactly
     * ONE of the entries will be saved, with no guarantees as to which. For this
     * reason, it is recommended the same format be used for all entries when
     * mutating a Feature.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.gkehub.v1.MembershipFeatureSpec> membership_specs = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getMembershipSpecs()
    {
        return $this->membership_specs;
    }

    /**
     * Optional. Membership-specific configuration for this Feature. If this Feature does
     * not support any per-Membership configuration, this field may be unused.
     * The keys indicate which Membership the configuration is for, in the form:
     *     projects/{p}/locations/{l}/memberships/{m}
     * Where {p} is the project, {l} is a valid location and {m} is a valid
     * Membership in this project at that location. {p} WILL match the Feature's
     * project.
     * {p} will always be returned as the project number, but the project ID is
     * also accepted during input. If the same Membership is specified in the map
     * twice (using the project ID form, and the project number form), exactly
     * ONE of the entries will be saved, with no guarantees as to which. For this
     * reason, it is recommended the same format be used for all entries when
     * mutating a Feature.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.gkehub.v1.MembershipFeatureSpec> membership_specs = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setMembershipSpecs($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\GkeHub\V1\MembershipFeatureSpec::class);
        $this->membership_specs = $arr;

        return $this;
    }

    /**
     * Output only. The Hub-wide Feature state.
     *
     * Generated from protobuf field <code>.google.cloud.gkehub.v1.CommonFeatureState state = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Cloud\GkeHub\V1\CommonFeatureState|null
     */
    public function getState()
    {
        return $this->state;
    }

    public function hasState()
    {
        return isset($this->state);
    }

    public function clearState()
    {
        unset($this->state);
    }

    /**
     * Output only. The Hub-wide Feature state.
     *
     * Generated from protobuf field <code>.google.cloud.gkehub.v1.CommonFeatureState state = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Cloud\GkeHub\V1\CommonFeatureState $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GkeHub\V1\CommonFeatureState::class);
        $this->state = $var;

        return $this;
    }

    /**
     * Output only. Membership-specific Feature status. If this Feature does
     * report any per-Membership status, this field may be unused.
     * The keys indicate which Membership the state is for, in the form:
     *     projects/{p}/locations/{l}/memberships/{m}
     * Where {p} is the project number, {l} is a valid location and {m} is a valid
     * Membership in this project at that location. {p} MUST match the Feature's
     * project number.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.gkehub.v1.MembershipFeatureState> membership_states = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getMembershipStates()
    {
        return $this->membership_states;
    }

    /**
     * Output only. Membership-specific Feature status. If this Feature does
     * report any per-Membership status, this field may be unused.
     * The keys indicate which Membership the state is for, in the form:
     *     projects/{p}/locations/{l}/memberships/{m}
     * Where {p} is the project number, {l} is a valid location and {m} is a valid
     * Membership in this project at that location. {p} MUST match the Feature's
     * project number.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.gkehub.v1.MembershipFeatureState> membership_states = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setMembershipStates($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\GkeHub\V1\MembershipFeatureState::class);
        $this->membership_states = $arr;

        return $this;
    }

    /**
     * Output only. When the Feature resource was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. When the Feature resource was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * Output only. When the Feature resource was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. When the Feature resource was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Output only. When the Feature resource was deleted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp delete_time = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getDeleteTime()
    {
        return $this->delete_time;
    }

    public function hasDeleteTime()
    {
        return isset($this->delete_time);
    }

    public function clearDeleteTime()
    {
        unset($this->delete_time);
    }

    /**
     * Output only. When the Feature resource was deleted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp delete_time = 10 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setDeleteTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->delete_time = $var;

        return $this;
    }

}

