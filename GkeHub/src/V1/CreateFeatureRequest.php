<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/gkehub/v1/service.proto

namespace Google\Cloud\GkeHub\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for the `GkeHub.CreateFeature` method.
 *
 * Generated from protobuf message <code>google.cloud.gkehub.v1.CreateFeatureRequest</code>
 */
class CreateFeatureRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The parent (project and location) where the Feature will be created.
     * Specified in the format `projects/&#42;&#47;locations/&#42;`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.resource_reference) = {</code>
     */
    private $parent = '';
    /**
     * The ID of the feature to create.
     *
     * Generated from protobuf field <code>string feature_id = 2;</code>
     */
    private $feature_id = '';
    /**
     * The Feature resource to create.
     *
     * Generated from protobuf field <code>.google.cloud.gkehub.v1.Feature resource = 3;</code>
     */
    private $resource = null;
    /**
     * Optional. A request ID to identify requests. Specify a unique request ID
     * so that if you must retry your request, the server will know to ignore
     * the request if it has already been completed. The server will guarantee
     * that for at least 60 minutes after the first request.
     * For example, consider a situation where you make an initial request and
     * the request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, will ignore the second request. This prevents
     * clients from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 4;</code>
     */
    private $request_id = '';

    /**
     * @param string                          $parent    Required. The parent (project and location) where the Feature will be created.
     *                                                   Specified in the format `projects/&#42;/locations/*`.
     * @param \Google\Cloud\GkeHub\V1\Feature $resource  The Feature resource to create.
     * @param string                          $featureId The ID of the feature to create.
     *
     * @return \Google\Cloud\GkeHub\V1\CreateFeatureRequest
     *
     * @experimental
     */
    public static function build(string $parent, \Google\Cloud\GkeHub\V1\Feature $resource, string $featureId): self
    {
        return (new self())
            ->setParent($parent)
            ->setResource($resource)
            ->setFeatureId($featureId);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The parent (project and location) where the Feature will be created.
     *           Specified in the format `projects/&#42;&#47;locations/&#42;`.
     *     @type string $feature_id
     *           The ID of the feature to create.
     *     @type \Google\Cloud\GkeHub\V1\Feature $resource
     *           The Feature resource to create.
     *     @type string $request_id
     *           Optional. A request ID to identify requests. Specify a unique request ID
     *           so that if you must retry your request, the server will know to ignore
     *           the request if it has already been completed. The server will guarantee
     *           that for at least 60 minutes after the first request.
     *           For example, consider a situation where you make an initial request and
     *           the request times out. If you make the request again with the same request
     *           ID, the server can check if original operation with the same request ID
     *           was received, and if so, will ignore the second request. This prevents
     *           clients from accidentally creating duplicate commitments.
     *           The request ID must be a valid UUID with the exception that zero UUID is
     *           not supported (00000000-0000-0000-0000-000000000000).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Gkehub\V1\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The parent (project and location) where the Feature will be created.
     * Specified in the format `projects/&#42;&#47;locations/&#42;`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The parent (project and location) where the Feature will be created.
     * Specified in the format `projects/&#42;&#47;locations/&#42;`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * The ID of the feature to create.
     *
     * Generated from protobuf field <code>string feature_id = 2;</code>
     * @return string
     */
    public function getFeatureId()
    {
        return $this->feature_id;
    }

    /**
     * The ID of the feature to create.
     *
     * Generated from protobuf field <code>string feature_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFeatureId($var)
    {
        GPBUtil::checkString($var, True);
        $this->feature_id = $var;

        return $this;
    }

    /**
     * The Feature resource to create.
     *
     * Generated from protobuf field <code>.google.cloud.gkehub.v1.Feature resource = 3;</code>
     * @return \Google\Cloud\GkeHub\V1\Feature|null
     */
    public function getResource()
    {
        return $this->resource;
    }

    public function hasResource()
    {
        return isset($this->resource);
    }

    public function clearResource()
    {
        unset($this->resource);
    }

    /**
     * The Feature resource to create.
     *
     * Generated from protobuf field <code>.google.cloud.gkehub.v1.Feature resource = 3;</code>
     * @param \Google\Cloud\GkeHub\V1\Feature $var
     * @return $this
     */
    public function setResource($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\GkeHub\V1\Feature::class);
        $this->resource = $var;

        return $this;
    }

    /**
     * Optional. A request ID to identify requests. Specify a unique request ID
     * so that if you must retry your request, the server will know to ignore
     * the request if it has already been completed. The server will guarantee
     * that for at least 60 minutes after the first request.
     * For example, consider a situation where you make an initial request and
     * the request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, will ignore the second request. This prevents
     * clients from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 4;</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Optional. A request ID to identify requests. Specify a unique request ID
     * so that if you must retry your request, the server will know to ignore
     * the request if it has already been completed. The server will guarantee
     * that for at least 60 minutes after the first request.
     * For example, consider a situation where you make an initial request and
     * the request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, will ignore the second request. This prevents
     * clients from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

}

