<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storage/control/v2/storage_control.proto

namespace Google\Cloud\Storage\Control\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message returned in the metadata field of the Operation resource for
 * CreateAnywhereCache operations.
 *
 * Generated from protobuf message <code>google.storage.control.v2.CreateAnywhereCacheMetadata</code>
 */
class CreateAnywhereCacheMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Generic metadata for the long running operation.
     *
     * Generated from protobuf field <code>.google.storage.control.v2.CommonLongRunningOperationMetadata common_metadata = 1;</code>
     */
    protected $common_metadata = null;
    /**
     * Anywhere Cache ID.
     *
     * Generated from protobuf field <code>optional string anywhere_cache_id = 2;</code>
     */
    protected $anywhere_cache_id = null;
    /**
     * The zone in which the cache instance is running. For example,
     * us-central1-a.
     *
     * Generated from protobuf field <code>optional string zone = 6;</code>
     */
    protected $zone = null;
    /**
     * Anywhere Cache entry's TTL. A cache-level config that is applied to all new
     * cache entries on admission. Default ttl value (24hrs) is applied if not
     * specified in the create request.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Duration ttl = 3;</code>
     */
    protected $ttl = null;
    /**
     * Anywhere Cache entry Admission Policy in kebab-case (e.g.,
     * "admit-on-first-miss"). Default admission policy (admit-on-first-miss) is
     * applied if not specified in the create request.
     *
     * Generated from protobuf field <code>optional string admission_policy = 5;</code>
     */
    protected $admission_policy = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Storage\Control\V2\CommonLongRunningOperationMetadata $common_metadata
     *           Generic metadata for the long running operation.
     *     @type string $anywhere_cache_id
     *           Anywhere Cache ID.
     *     @type string $zone
     *           The zone in which the cache instance is running. For example,
     *           us-central1-a.
     *     @type \Google\Protobuf\Duration $ttl
     *           Anywhere Cache entry's TTL. A cache-level config that is applied to all new
     *           cache entries on admission. Default ttl value (24hrs) is applied if not
     *           specified in the create request.
     *     @type string $admission_policy
     *           Anywhere Cache entry Admission Policy in kebab-case (e.g.,
     *           "admit-on-first-miss"). Default admission policy (admit-on-first-miss) is
     *           applied if not specified in the create request.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Storage\Control\V2\StorageControl::initOnce();
        parent::__construct($data);
    }

    /**
     * Generic metadata for the long running operation.
     *
     * Generated from protobuf field <code>.google.storage.control.v2.CommonLongRunningOperationMetadata common_metadata = 1;</code>
     * @return \Google\Cloud\Storage\Control\V2\CommonLongRunningOperationMetadata|null
     */
    public function getCommonMetadata()
    {
        return $this->common_metadata;
    }

    public function hasCommonMetadata()
    {
        return isset($this->common_metadata);
    }

    public function clearCommonMetadata()
    {
        unset($this->common_metadata);
    }

    /**
     * Generic metadata for the long running operation.
     *
     * Generated from protobuf field <code>.google.storage.control.v2.CommonLongRunningOperationMetadata common_metadata = 1;</code>
     * @param \Google\Cloud\Storage\Control\V2\CommonLongRunningOperationMetadata $var
     * @return $this
     */
    public function setCommonMetadata($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Storage\Control\V2\CommonLongRunningOperationMetadata::class);
        $this->common_metadata = $var;

        return $this;
    }

    /**
     * Anywhere Cache ID.
     *
     * Generated from protobuf field <code>optional string anywhere_cache_id = 2;</code>
     * @return string
     */
    public function getAnywhereCacheId()
    {
        return isset($this->anywhere_cache_id) ? $this->anywhere_cache_id : '';
    }

    public function hasAnywhereCacheId()
    {
        return isset($this->anywhere_cache_id);
    }

    public function clearAnywhereCacheId()
    {
        unset($this->anywhere_cache_id);
    }

    /**
     * Anywhere Cache ID.
     *
     * Generated from protobuf field <code>optional string anywhere_cache_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setAnywhereCacheId($var)
    {
        GPBUtil::checkString($var, True);
        $this->anywhere_cache_id = $var;

        return $this;
    }

    /**
     * The zone in which the cache instance is running. For example,
     * us-central1-a.
     *
     * Generated from protobuf field <code>optional string zone = 6;</code>
     * @return string
     */
    public function getZone()
    {
        return isset($this->zone) ? $this->zone : '';
    }

    public function hasZone()
    {
        return isset($this->zone);
    }

    public function clearZone()
    {
        unset($this->zone);
    }

    /**
     * The zone in which the cache instance is running. For example,
     * us-central1-a.
     *
     * Generated from protobuf field <code>optional string zone = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setZone($var)
    {
        GPBUtil::checkString($var, True);
        $this->zone = $var;

        return $this;
    }

    /**
     * Anywhere Cache entry's TTL. A cache-level config that is applied to all new
     * cache entries on admission. Default ttl value (24hrs) is applied if not
     * specified in the create request.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Duration ttl = 3;</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getTtl()
    {
        return $this->ttl;
    }

    public function hasTtl()
    {
        return isset($this->ttl);
    }

    public function clearTtl()
    {
        unset($this->ttl);
    }

    /**
     * Anywhere Cache entry's TTL. A cache-level config that is applied to all new
     * cache entries on admission. Default ttl value (24hrs) is applied if not
     * specified in the create request.
     *
     * Generated from protobuf field <code>optional .google.protobuf.Duration ttl = 3;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setTtl($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->ttl = $var;

        return $this;
    }

    /**
     * Anywhere Cache entry Admission Policy in kebab-case (e.g.,
     * "admit-on-first-miss"). Default admission policy (admit-on-first-miss) is
     * applied if not specified in the create request.
     *
     * Generated from protobuf field <code>optional string admission_policy = 5;</code>
     * @return string
     */
    public function getAdmissionPolicy()
    {
        return isset($this->admission_policy) ? $this->admission_policy : '';
    }

    public function hasAdmissionPolicy()
    {
        return isset($this->admission_policy);
    }

    public function clearAdmissionPolicy()
    {
        unset($this->admission_policy);
    }

    /**
     * Anywhere Cache entry Admission Policy in kebab-case (e.g.,
     * "admit-on-first-miss"). Default admission policy (admit-on-first-miss) is
     * applied if not specified in the create request.
     *
     * Generated from protobuf field <code>optional string admission_policy = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setAdmissionPolicy($var)
    {
        GPBUtil::checkString($var, True);
        $this->admission_policy = $var;

        return $this;
    }

}

