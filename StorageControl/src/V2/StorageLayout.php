<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storage/control/v2/storage_control.proto

namespace Google\Cloud\Storage\Control\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The storage layout configuration of a bucket.
 *
 * Generated from protobuf message <code>google.storage.control.v2.StorageLayout</code>
 */
class StorageLayout extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. The name of the StorageLayout resource.
     * Format: `projects/{project}/buckets/{bucket}/storageLayout`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $name = '';
    /**
     * Output only. The location of the bucket.
     *
     * Generated from protobuf field <code>string location = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $location = '';
    /**
     * Output only. The location type of the bucket (region, dual-region,
     * multi-region, etc).
     *
     * Generated from protobuf field <code>string location_type = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $location_type = '';
    /**
     * Output only. The data placement configuration for custom dual region. If
     * there is no configuration, this is not a custom dual region bucket.
     *
     * Generated from protobuf field <code>.google.storage.control.v2.StorageLayout.CustomPlacementConfig custom_placement_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $custom_placement_config = null;
    /**
     * Output only. The bucket's hierarchical namespace configuration. If there is
     * no configuration, the hierarchical namespace is disabled.
     *
     * Generated from protobuf field <code>.google.storage.control.v2.StorageLayout.HierarchicalNamespace hierarchical_namespace = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $hierarchical_namespace = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Output only. The name of the StorageLayout resource.
     *           Format: `projects/{project}/buckets/{bucket}/storageLayout`
     *     @type string $location
     *           Output only. The location of the bucket.
     *     @type string $location_type
     *           Output only. The location type of the bucket (region, dual-region,
     *           multi-region, etc).
     *     @type \Google\Cloud\Storage\Control\V2\StorageLayout\CustomPlacementConfig $custom_placement_config
     *           Output only. The data placement configuration for custom dual region. If
     *           there is no configuration, this is not a custom dual region bucket.
     *     @type \Google\Cloud\Storage\Control\V2\StorageLayout\HierarchicalNamespace $hierarchical_namespace
     *           Output only. The bucket's hierarchical namespace configuration. If there is
     *           no configuration, the hierarchical namespace is disabled.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Storage\Control\V2\StorageControl::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. The name of the StorageLayout resource.
     * Format: `projects/{project}/buckets/{bucket}/storageLayout`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Output only. The name of the StorageLayout resource.
     * Format: `projects/{project}/buckets/{bucket}/storageLayout`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Output only. The location of the bucket.
     *
     * Generated from protobuf field <code>string location = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getLocation()
    {
        return $this->location;
    }

    /**
     * Output only. The location of the bucket.
     *
     * Generated from protobuf field <code>string location = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setLocation($var)
    {
        GPBUtil::checkString($var, True);
        $this->location = $var;

        return $this;
    }

    /**
     * Output only. The location type of the bucket (region, dual-region,
     * multi-region, etc).
     *
     * Generated from protobuf field <code>string location_type = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getLocationType()
    {
        return $this->location_type;
    }

    /**
     * Output only. The location type of the bucket (region, dual-region,
     * multi-region, etc).
     *
     * Generated from protobuf field <code>string location_type = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setLocationType($var)
    {
        GPBUtil::checkString($var, True);
        $this->location_type = $var;

        return $this;
    }

    /**
     * Output only. The data placement configuration for custom dual region. If
     * there is no configuration, this is not a custom dual region bucket.
     *
     * Generated from protobuf field <code>.google.storage.control.v2.StorageLayout.CustomPlacementConfig custom_placement_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Cloud\Storage\Control\V2\StorageLayout\CustomPlacementConfig|null
     */
    public function getCustomPlacementConfig()
    {
        return $this->custom_placement_config;
    }

    public function hasCustomPlacementConfig()
    {
        return isset($this->custom_placement_config);
    }

    public function clearCustomPlacementConfig()
    {
        unset($this->custom_placement_config);
    }

    /**
     * Output only. The data placement configuration for custom dual region. If
     * there is no configuration, this is not a custom dual region bucket.
     *
     * Generated from protobuf field <code>.google.storage.control.v2.StorageLayout.CustomPlacementConfig custom_placement_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Cloud\Storage\Control\V2\StorageLayout\CustomPlacementConfig $var
     * @return $this
     */
    public function setCustomPlacementConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Storage\Control\V2\StorageLayout\CustomPlacementConfig::class);
        $this->custom_placement_config = $var;

        return $this;
    }

    /**
     * Output only. The bucket's hierarchical namespace configuration. If there is
     * no configuration, the hierarchical namespace is disabled.
     *
     * Generated from protobuf field <code>.google.storage.control.v2.StorageLayout.HierarchicalNamespace hierarchical_namespace = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Cloud\Storage\Control\V2\StorageLayout\HierarchicalNamespace|null
     */
    public function getHierarchicalNamespace()
    {
        return $this->hierarchical_namespace;
    }

    public function hasHierarchicalNamespace()
    {
        return isset($this->hierarchical_namespace);
    }

    public function clearHierarchicalNamespace()
    {
        unset($this->hierarchical_namespace);
    }

    /**
     * Output only. The bucket's hierarchical namespace configuration. If there is
     * no configuration, the hierarchical namespace is disabled.
     *
     * Generated from protobuf field <code>.google.storage.control.v2.StorageLayout.HierarchicalNamespace hierarchical_namespace = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Cloud\Storage\Control\V2\StorageLayout\HierarchicalNamespace $var
     * @return $this
     */
    public function setHierarchicalNamespace($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Storage\Control\V2\StorageLayout\HierarchicalNamespace::class);
        $this->hierarchical_namespace = $var;

        return $this;
    }

}

