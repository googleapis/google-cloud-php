<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/resourcemanager/v3/tag_keys.proto

namespace Google\Cloud\ResourceManager\V3;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A TagKey, used to group a set of TagValues.
 *
 * Generated from protobuf message <code>google.cloud.resourcemanager.v3.TagKey</code>
 */
class TagKey extends \Google\Protobuf\Internal\Message
{
    /**
     * Immutable. The resource name for a TagKey. Must be in the format
     * `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for
     * the TagKey.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    private $name = '';
    /**
     * Immutable. The resource name of the TagKey's parent. A TagKey can be
     * parented by an Organization or a Project. For a TagKey parented by an
     * Organization, its parent must be in the form `organizations/{org_id}`. For
     * a TagKey parented by a Project, its parent can be in the form
     * `projects/{project_id}` or `projects/{project_number}`.
     *
     * Generated from protobuf field <code>string parent = 2 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    private $parent = '';
    /**
     * Required. Immutable. The user friendly name for a TagKey. The short name
     * should be unique for TagKeys within the same tag namespace.
     * The short name must be 1-63 characters, beginning and ending with
     * an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_),
     * dots (.), and alphanumerics between.
     *
     * Generated from protobuf field <code>string short_name = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     */
    private $short_name = '';
    /**
     * Output only. Immutable. Namespaced name of the TagKey.
     *
     * Generated from protobuf field <code>string namespaced_name = 4 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE];</code>
     */
    private $namespaced_name = '';
    /**
     * Optional. User-assigned description of the TagKey. Must not exceed 256
     * characters.
     * Read-write.
     *
     * Generated from protobuf field <code>string description = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $description = '';
    /**
     * Output only. Creation time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $create_time = null;
    /**
     * Output only. Update time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $update_time = null;
    /**
     * Optional. Entity tag which users can pass to prevent race conditions. This
     * field is always set in server responses. See UpdateTagKeyRequest for
     * details.
     *
     * Generated from protobuf field <code>string etag = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $etag = '';
    /**
     * Optional. A purpose denotes that this Tag is intended for use in policies
     * of a specific policy engine, and will involve that policy engine in
     * management operations involving this Tag. A purpose does not grant a
     * policy engine exclusive rights to the Tag, and it may be referenced by
     * other policy engines.
     * A purpose cannot be changed once set.
     *
     * Generated from protobuf field <code>.google.cloud.resourcemanager.v3.Purpose purpose = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $purpose = 0;
    /**
     * Optional. Purpose data corresponds to the policy system that the tag is
     * intended for. See documentation for `Purpose` for formatting of this field.
     * Purpose data cannot be changed once set.
     *
     * Generated from protobuf field <code>map<string, string> purpose_data = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $purpose_data;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Immutable. The resource name for a TagKey. Must be in the format
     *           `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for
     *           the TagKey.
     *     @type string $parent
     *           Immutable. The resource name of the TagKey's parent. A TagKey can be
     *           parented by an Organization or a Project. For a TagKey parented by an
     *           Organization, its parent must be in the form `organizations/{org_id}`. For
     *           a TagKey parented by a Project, its parent can be in the form
     *           `projects/{project_id}` or `projects/{project_number}`.
     *     @type string $short_name
     *           Required. Immutable. The user friendly name for a TagKey. The short name
     *           should be unique for TagKeys within the same tag namespace.
     *           The short name must be 1-63 characters, beginning and ending with
     *           an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_),
     *           dots (.), and alphanumerics between.
     *     @type string $namespaced_name
     *           Output only. Immutable. Namespaced name of the TagKey.
     *     @type string $description
     *           Optional. User-assigned description of the TagKey. Must not exceed 256
     *           characters.
     *           Read-write.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. Creation time.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. Update time.
     *     @type string $etag
     *           Optional. Entity tag which users can pass to prevent race conditions. This
     *           field is always set in server responses. See UpdateTagKeyRequest for
     *           details.
     *     @type int $purpose
     *           Optional. A purpose denotes that this Tag is intended for use in policies
     *           of a specific policy engine, and will involve that policy engine in
     *           management operations involving this Tag. A purpose does not grant a
     *           policy engine exclusive rights to the Tag, and it may be referenced by
     *           other policy engines.
     *           A purpose cannot be changed once set.
     *     @type array|\Google\Protobuf\Internal\MapField $purpose_data
     *           Optional. Purpose data corresponds to the policy system that the tag is
     *           intended for. See documentation for `Purpose` for formatting of this field.
     *           Purpose data cannot be changed once set.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Resourcemanager\V3\TagKeys::initOnce();
        parent::__construct($data);
    }

    /**
     * Immutable. The resource name for a TagKey. Must be in the format
     * `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for
     * the TagKey.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Immutable. The resource name for a TagKey. Must be in the format
     * `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for
     * the TagKey.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Immutable. The resource name of the TagKey's parent. A TagKey can be
     * parented by an Organization or a Project. For a TagKey parented by an
     * Organization, its parent must be in the form `organizations/{org_id}`. For
     * a TagKey parented by a Project, its parent can be in the form
     * `projects/{project_id}` or `projects/{project_number}`.
     *
     * Generated from protobuf field <code>string parent = 2 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Immutable. The resource name of the TagKey's parent. A TagKey can be
     * parented by an Organization or a Project. For a TagKey parented by an
     * Organization, its parent must be in the form `organizations/{org_id}`. For
     * a TagKey parented by a Project, its parent can be in the form
     * `projects/{project_id}` or `projects/{project_number}`.
     *
     * Generated from protobuf field <code>string parent = 2 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Required. Immutable. The user friendly name for a TagKey. The short name
     * should be unique for TagKeys within the same tag namespace.
     * The short name must be 1-63 characters, beginning and ending with
     * an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_),
     * dots (.), and alphanumerics between.
     *
     * Generated from protobuf field <code>string short_name = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return string
     */
    public function getShortName()
    {
        return $this->short_name;
    }

    /**
     * Required. Immutable. The user friendly name for a TagKey. The short name
     * should be unique for TagKeys within the same tag namespace.
     * The short name must be 1-63 characters, beginning and ending with
     * an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_),
     * dots (.), and alphanumerics between.
     *
     * Generated from protobuf field <code>string short_name = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param string $var
     * @return $this
     */
    public function setShortName($var)
    {
        GPBUtil::checkString($var, True);
        $this->short_name = $var;

        return $this;
    }

    /**
     * Output only. Immutable. Namespaced name of the TagKey.
     *
     * Generated from protobuf field <code>string namespaced_name = 4 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return string
     */
    public function getNamespacedName()
    {
        return $this->namespaced_name;
    }

    /**
     * Output only. Immutable. Namespaced name of the TagKey.
     *
     * Generated from protobuf field <code>string namespaced_name = 4 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param string $var
     * @return $this
     */
    public function setNamespacedName($var)
    {
        GPBUtil::checkString($var, True);
        $this->namespaced_name = $var;

        return $this;
    }

    /**
     * Optional. User-assigned description of the TagKey. Must not exceed 256
     * characters.
     * Read-write.
     *
     * Generated from protobuf field <code>string description = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Optional. User-assigned description of the TagKey. Must not exceed 256
     * characters.
     * Read-write.
     *
     * Generated from protobuf field <code>string description = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Output only. Creation time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. Creation time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * Output only. Update time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. Update time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Optional. Entity tag which users can pass to prevent race conditions. This
     * field is always set in server responses. See UpdateTagKeyRequest for
     * details.
     *
     * Generated from protobuf field <code>string etag = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getEtag()
    {
        return $this->etag;
    }

    /**
     * Optional. Entity tag which users can pass to prevent race conditions. This
     * field is always set in server responses. See UpdateTagKeyRequest for
     * details.
     *
     * Generated from protobuf field <code>string etag = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setEtag($var)
    {
        GPBUtil::checkString($var, True);
        $this->etag = $var;

        return $this;
    }

    /**
     * Optional. A purpose denotes that this Tag is intended for use in policies
     * of a specific policy engine, and will involve that policy engine in
     * management operations involving this Tag. A purpose does not grant a
     * policy engine exclusive rights to the Tag, and it may be referenced by
     * other policy engines.
     * A purpose cannot be changed once set.
     *
     * Generated from protobuf field <code>.google.cloud.resourcemanager.v3.Purpose purpose = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getPurpose()
    {
        return $this->purpose;
    }

    /**
     * Optional. A purpose denotes that this Tag is intended for use in policies
     * of a specific policy engine, and will involve that policy engine in
     * management operations involving this Tag. A purpose does not grant a
     * policy engine exclusive rights to the Tag, and it may be referenced by
     * other policy engines.
     * A purpose cannot be changed once set.
     *
     * Generated from protobuf field <code>.google.cloud.resourcemanager.v3.Purpose purpose = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setPurpose($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\ResourceManager\V3\Purpose::class);
        $this->purpose = $var;

        return $this;
    }

    /**
     * Optional. Purpose data corresponds to the policy system that the tag is
     * intended for. See documentation for `Purpose` for formatting of this field.
     * Purpose data cannot be changed once set.
     *
     * Generated from protobuf field <code>map<string, string> purpose_data = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getPurposeData()
    {
        return $this->purpose_data;
    }

    /**
     * Optional. Purpose data corresponds to the policy system that the tag is
     * intended for. See documentation for `Purpose` for formatting of this field.
     * Purpose data cannot be changed once set.
     *
     * Generated from protobuf field <code>map<string, string> purpose_data = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setPurposeData($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->purpose_data = $arr;

        return $this;
    }

}

