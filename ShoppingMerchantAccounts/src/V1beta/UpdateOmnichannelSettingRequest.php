<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/accounts/v1beta/omnichannelsettings.proto

namespace Google\Shopping\Merchant\Accounts\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for the UpdateOmnichannelSetting method.
 *
 * Generated from protobuf message <code>google.shopping.merchant.accounts.v1beta.UpdateOmnichannelSettingRequest</code>
 */
class UpdateOmnichannelSettingRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The omnichannel setting to update.
     * The omnichannel setting's `name` field is used to identify the
     * omnichannel setting to be updated.
     *
     * Generated from protobuf field <code>.google.shopping.merchant.accounts.v1beta.OmnichannelSetting omnichannel_setting = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $omnichannel_setting = null;
    /**
     * Required. The list of fields to be updated.
     * The following fields are supported in snake_case only:
     * - `lsf_type`
     * - `in_stock`
     * - `pickup`
     * - `odo`
     * - `about`
     * - `inventory_verification`
     * Full replacement with wildcard `*`is supported, while empty/implied update
     * mask is not.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $update_mask = null;

    /**
     * @param \Google\Shopping\Merchant\Accounts\V1beta\OmnichannelSetting $omnichannelSetting Required. The omnichannel setting to update.
     *
     *                                                                                         The omnichannel setting's `name` field is used to identify the
     *                                                                                         omnichannel setting to be updated.
     * @param \Google\Protobuf\FieldMask                                   $updateMask         Required. The list of fields to be updated.
     *
     *                                                                                         The following fields are supported in snake_case only:
     *                                                                                         - `lsf_type`
     *                                                                                         - `in_stock`
     *                                                                                         - `pickup`
     *                                                                                         - `odo`
     *                                                                                         - `about`
     *                                                                                         - `inventory_verification`
     *
     *                                                                                         Full replacement with wildcard `*`is supported, while empty/implied update
     *                                                                                         mask is not.
     *
     * @return \Google\Shopping\Merchant\Accounts\V1beta\UpdateOmnichannelSettingRequest
     *
     * @experimental
     */
    public static function build(\Google\Shopping\Merchant\Accounts\V1beta\OmnichannelSetting $omnichannelSetting, \Google\Protobuf\FieldMask $updateMask): self
    {
        return (new self())
            ->setOmnichannelSetting($omnichannelSetting)
            ->setUpdateMask($updateMask);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Shopping\Merchant\Accounts\V1beta\OmnichannelSetting $omnichannel_setting
     *           Required. The omnichannel setting to update.
     *           The omnichannel setting's `name` field is used to identify the
     *           omnichannel setting to be updated.
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           Required. The list of fields to be updated.
     *           The following fields are supported in snake_case only:
     *           - `lsf_type`
     *           - `in_stock`
     *           - `pickup`
     *           - `odo`
     *           - `about`
     *           - `inventory_verification`
     *           Full replacement with wildcard `*`is supported, while empty/implied update
     *           mask is not.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Merchant\Accounts\V1Beta\Omnichannelsettings::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The omnichannel setting to update.
     * The omnichannel setting's `name` field is used to identify the
     * omnichannel setting to be updated.
     *
     * Generated from protobuf field <code>.google.shopping.merchant.accounts.v1beta.OmnichannelSetting omnichannel_setting = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Shopping\Merchant\Accounts\V1beta\OmnichannelSetting|null
     */
    public function getOmnichannelSetting()
    {
        return $this->omnichannel_setting;
    }

    public function hasOmnichannelSetting()
    {
        return isset($this->omnichannel_setting);
    }

    public function clearOmnichannelSetting()
    {
        unset($this->omnichannel_setting);
    }

    /**
     * Required. The omnichannel setting to update.
     * The omnichannel setting's `name` field is used to identify the
     * omnichannel setting to be updated.
     *
     * Generated from protobuf field <code>.google.shopping.merchant.accounts.v1beta.OmnichannelSetting omnichannel_setting = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Shopping\Merchant\Accounts\V1beta\OmnichannelSetting $var
     * @return $this
     */
    public function setOmnichannelSetting($var)
    {
        GPBUtil::checkMessage($var, \Google\Shopping\Merchant\Accounts\V1beta\OmnichannelSetting::class);
        $this->omnichannel_setting = $var;

        return $this;
    }

    /**
     * Required. The list of fields to be updated.
     * The following fields are supported in snake_case only:
     * - `lsf_type`
     * - `in_stock`
     * - `pickup`
     * - `odo`
     * - `about`
     * - `inventory_verification`
     * Full replacement with wildcard `*`is supported, while empty/implied update
     * mask is not.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * Required. The list of fields to be updated.
     * The following fields are supported in snake_case only:
     * - `lsf_type`
     * - `in_stock`
     * - `pickup`
     * - `odo`
     * - `about`
     * - `inventory_verification`
     * Full replacement with wildcard `*`is supported, while empty/implied update
     * mask is not.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

}

