<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/accounts/v1beta/accounts.proto

namespace Google\Shopping\Merchant\Accounts\V1beta\CreateAndConfigureAccountRequest;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Additional instructions to add account services during creation of the
 * account.
 *
 * Generated from protobuf message <code>google.shopping.merchant.accounts.v1beta.CreateAndConfigureAccountRequest.AddAccountService</code>
 */
class AddAccountService extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The provider of the service.
     * Format: `accounts/{account}`
     *
     * Generated from protobuf field <code>optional string provider = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     */
    protected $provider = null;
    protected $service_type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Shopping\Merchant\Accounts\V1beta\AccountAggregation $account_aggregation
     *           The provider is an
     *           [aggregator](https://support.google.com/merchants/answer/188487) for
     *           the account. Payload for service type Account Aggregation.
     *     @type string $provider
     *           Optional. The provider of the service.
     *           Format: `accounts/{account}`
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Merchant\Accounts\V1Beta\Accounts::initOnce();
        parent::__construct($data);
    }

    /**
     * The provider is an
     * [aggregator](https://support.google.com/merchants/answer/188487) for
     * the account. Payload for service type Account Aggregation.
     *
     * Generated from protobuf field <code>.google.shopping.merchant.accounts.v1beta.AccountAggregation account_aggregation = 103;</code>
     * @return \Google\Shopping\Merchant\Accounts\V1beta\AccountAggregation|null
     */
    public function getAccountAggregation()
    {
        return $this->readOneof(103);
    }

    public function hasAccountAggregation()
    {
        return $this->hasOneof(103);
    }

    /**
     * The provider is an
     * [aggregator](https://support.google.com/merchants/answer/188487) for
     * the account. Payload for service type Account Aggregation.
     *
     * Generated from protobuf field <code>.google.shopping.merchant.accounts.v1beta.AccountAggregation account_aggregation = 103;</code>
     * @param \Google\Shopping\Merchant\Accounts\V1beta\AccountAggregation $var
     * @return $this
     */
    public function setAccountAggregation($var)
    {
        GPBUtil::checkMessage($var, \Google\Shopping\Merchant\Accounts\V1beta\AccountAggregation::class);
        $this->writeOneof(103, $var);

        return $this;
    }

    /**
     * Optional. The provider of the service.
     * Format: `accounts/{account}`
     *
     * Generated from protobuf field <code>optional string provider = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getProvider()
    {
        return isset($this->provider) ? $this->provider : '';
    }

    public function hasProvider()
    {
        return isset($this->provider);
    }

    public function clearProvider()
    {
        unset($this->provider);
    }

    /**
     * Optional. The provider of the service.
     * Format: `accounts/{account}`
     *
     * Generated from protobuf field <code>optional string provider = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setProvider($var)
    {
        GPBUtil::checkString($var, True);
        $this->provider = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getServiceType()
    {
        return $this->whichOneof("service_type");
    }

}


