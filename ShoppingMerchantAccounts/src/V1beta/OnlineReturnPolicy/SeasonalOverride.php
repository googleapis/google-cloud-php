<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/accounts/v1beta/online_return_policy.proto

namespace Google\Shopping\Merchant\Accounts\V1beta\OnlineReturnPolicy;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>google.shopping.merchant.accounts.v1beta.OnlineReturnPolicy.SeasonalOverride</code>
 */
class SeasonalOverride extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Display name of this seasonal override in Merchant Center.
     *
     * Generated from protobuf field <code>string label = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $label = '';
    /**
     * Required. Defines the date range when this seasonal override applies.
     * Both start_date and end_date are inclusive.
     * The dates of the seasonal overrides should not overlap.
     *
     * Generated from protobuf field <code>.google.type.Date start_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $start_date = null;
    /**
     * Required. seasonal override end date (inclusive).
     *
     * Generated from protobuf field <code>.google.type.Date end_date = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $end_date = null;
    protected $return_window;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $return_days
     *           Number of days (from the delivery date) that the product can be
     *           returned.
     *     @type \Google\Type\Date $return_until_date
     *           Fixed end date until which the product can be returned.
     *     @type string $label
     *           Required. Display name of this seasonal override in Merchant Center.
     *     @type \Google\Type\Date $start_date
     *           Required. Defines the date range when this seasonal override applies.
     *           Both start_date and end_date are inclusive.
     *           The dates of the seasonal overrides should not overlap.
     *     @type \Google\Type\Date $end_date
     *           Required. seasonal override end date (inclusive).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Merchant\Accounts\V1Beta\OnlineReturnPolicy::initOnce();
        parent::__construct($data);
    }

    /**
     * Number of days (from the delivery date) that the product can be
     * returned.
     *
     * Generated from protobuf field <code>int32 return_days = 5;</code>
     * @return int
     */
    public function getReturnDays()
    {
        return $this->readOneof(5);
    }

    public function hasReturnDays()
    {
        return $this->hasOneof(5);
    }

    /**
     * Number of days (from the delivery date) that the product can be
     * returned.
     *
     * Generated from protobuf field <code>int32 return_days = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setReturnDays($var)
    {
        GPBUtil::checkInt32($var);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Fixed end date until which the product can be returned.
     *
     * Generated from protobuf field <code>.google.type.Date return_until_date = 6;</code>
     * @return \Google\Type\Date|null
     */
    public function getReturnUntilDate()
    {
        return $this->readOneof(6);
    }

    public function hasReturnUntilDate()
    {
        return $this->hasOneof(6);
    }

    /**
     * Fixed end date until which the product can be returned.
     *
     * Generated from protobuf field <code>.google.type.Date return_until_date = 6;</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setReturnUntilDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Required. Display name of this seasonal override in Merchant Center.
     *
     * Generated from protobuf field <code>string label = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * Required. Display name of this seasonal override in Merchant Center.
     *
     * Generated from protobuf field <code>string label = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setLabel($var)
    {
        GPBUtil::checkString($var, True);
        $this->label = $var;

        return $this;
    }

    /**
     * Required. Defines the date range when this seasonal override applies.
     * Both start_date and end_date are inclusive.
     * The dates of the seasonal overrides should not overlap.
     *
     * Generated from protobuf field <code>.google.type.Date start_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Type\Date|null
     */
    public function getStartDate()
    {
        return $this->start_date;
    }

    public function hasStartDate()
    {
        return isset($this->start_date);
    }

    public function clearStartDate()
    {
        unset($this->start_date);
    }

    /**
     * Required. Defines the date range when this seasonal override applies.
     * Both start_date and end_date are inclusive.
     * The dates of the seasonal overrides should not overlap.
     *
     * Generated from protobuf field <code>.google.type.Date start_date = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setStartDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->start_date = $var;

        return $this;
    }

    /**
     * Required. seasonal override end date (inclusive).
     *
     * Generated from protobuf field <code>.google.type.Date end_date = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Type\Date|null
     */
    public function getEndDate()
    {
        return $this->end_date;
    }

    public function hasEndDate()
    {
        return isset($this->end_date);
    }

    public function clearEndDate()
    {
        unset($this->end_date);
    }

    /**
     * Required. seasonal override end date (inclusive).
     *
     * Generated from protobuf field <code>.google.type.Date end_date = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setEndDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->end_date = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getReturnWindow()
    {
        return $this->whichOneof("return_window");
    }

}


