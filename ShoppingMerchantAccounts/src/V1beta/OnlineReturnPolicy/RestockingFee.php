<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/accounts/v1beta/online_return_policy.proto

namespace Google\Shopping\Merchant\Accounts\V1beta\OnlineReturnPolicy;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The restocking fee. This can be a flat fee or a micro percent.
 *
 * Generated from protobuf message <code>google.shopping.merchant.accounts.v1beta.OnlineReturnPolicy.RestockingFee</code>
 */
class RestockingFee extends \Google\Protobuf\Internal\Message
{
    protected $type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Shopping\Type\Price $fixed_fee
     *           Fixed restocking fee.
     *     @type int $micro_percent
     *           Percent of total price in micros. 15,000,000 means 15% of the total
     *           price would be charged.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Merchant\Accounts\V1Beta\OnlineReturnPolicy::initOnce();
        parent::__construct($data);
    }

    /**
     * Fixed restocking fee.
     *
     * Generated from protobuf field <code>.google.shopping.type.Price fixed_fee = 1;</code>
     * @return \Google\Shopping\Type\Price|null
     */
    public function getFixedFee()
    {
        return $this->readOneof(1);
    }

    public function hasFixedFee()
    {
        return $this->hasOneof(1);
    }

    /**
     * Fixed restocking fee.
     *
     * Generated from protobuf field <code>.google.shopping.type.Price fixed_fee = 1;</code>
     * @param \Google\Shopping\Type\Price $var
     * @return $this
     */
    public function setFixedFee($var)
    {
        GPBUtil::checkMessage($var, \Google\Shopping\Type\Price::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Percent of total price in micros. 15,000,000 means 15% of the total
     * price would be charged.
     *
     * Generated from protobuf field <code>int32 micro_percent = 2;</code>
     * @return int
     */
    public function getMicroPercent()
    {
        return $this->readOneof(2);
    }

    public function hasMicroPercent()
    {
        return $this->hasOneof(2);
    }

    /**
     * Percent of total price in micros. 15,000,000 means 15% of the total
     * price would be charged.
     *
     * Generated from protobuf field <code>int32 micro_percent = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMicroPercent($var)
    {
        GPBUtil::checkInt32($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getType()
    {
        return $this->whichOneof("type");
    }

}


