<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/accounts/v1/accountservices.proto

namespace Google\Shopping\Merchant\Accounts\V1\AccountService;

use UnexpectedValueException;

/**
 * The list of mutability option settings a service can have.
 *
 * Protobuf type <code>google.shopping.merchant.accounts.v1.AccountService.Mutability</code>
 */
class Mutability
{
    /**
     * Unused default value
     *
     * Generated from protobuf enum <code>MUTABILITY_UNSPECIFIED = 0;</code>
     */
    const MUTABILITY_UNSPECIFIED = 0;
    /**
     * The service can be mutated without restrictions.
     *
     * Generated from protobuf enum <code>MUTABLE = 1;</code>
     */
    const MUTABLE = 1;
    /**
     * The service is read-only and must not be mutated.
     *
     * Generated from protobuf enum <code>IMMUTABLE = 2;</code>
     */
    const IMMUTABLE = 2;

    private static $valueToName = [
        self::MUTABILITY_UNSPECIFIED => 'MUTABILITY_UNSPECIFIED',
        self::MUTABLE => 'MUTABLE',
        self::IMMUTABLE => 'IMMUTABLE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


