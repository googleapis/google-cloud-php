<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/accounts/v1/checkoutsettings.proto

namespace Google\Shopping\Merchant\Accounts\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * [CheckoutSettings](https://support.google.com/merchants/answer/13945960) for
 * a specific merchant.
 *
 * Generated from protobuf message <code>google.shopping.merchant.accounts.v1.CheckoutSettings</code>
 */
class CheckoutSettings extends \Google\Protobuf\Internal\Message
{
    /**
     * Identifier. The resource name of the program configuration settings.
     * Format: `accounts/{account}/programs/{program}/checkoutSettings`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     */
    protected $name = '';
    /**
     * URI settings for cart or checkout URL.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.UriSettings uri_settings = 2;</code>
     */
    protected $uri_settings = null;
    /**
     * Optional. The destinations (also known as [Marketing
     * methods](https://support.google.com/merchants/answer/15130232)) to which
     * the checkout program applies, valid destination values are `SHOPPING_ADS`,
     * `FREE_LISTINGS`
     *
     * Generated from protobuf field <code>repeated .google.shopping.type.Destination.DestinationEnum eligible_destinations = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $eligible_destinations;
    /**
     * Output only. Reflects the merchant enrollment state in `Checkout` program.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutEnrollmentState enrollment_state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $enrollment_state = null;
    /**
     * Output only. Reflects the merchant review state in `Checkout` program.
     * This is set based on the data quality reviews of the URL provided by
     * the merchant.
     * A merchant with enrollment state
     * as `ENROLLED` can be in the following review states: `IN_REVIEW`,
     * `APPROVED` or `DISAPPROVED`. A merchant must be in an `enrollment_state` of
     * `ENROLLED` before a review can begin for the merchant.For more details,
     * check the help center doc.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutReviewState review_state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $review_state = null;
    /**
     * Output only. The effective value of `uri_settings` for a given merchant. If
     * account level settings are present then this value will be a copy of url
     * settings. Otherwise, it will have the value of the parent account (for only
     * marketplace sellers).
     *
     * Generated from protobuf field <code>.google.shopping.merchant.accounts.v1.UriSettings effective_uri_settings = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $effective_uri_settings = null;
    /**
     * Output only. The effective value of enrollment_state for a given merchant
     * ID. If account level settings are present then this value will be a copy of
     * the account level settings. Otherwise, it will have the value of the parent
     * account (for only marketplace sellers).
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutEnrollmentState effective_enrollment_state = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $effective_enrollment_state = null;
    /**
     * Output only. The effective value of `review_state` for a given merchant ID.
     * If account level settings are present then this value will be a copy of the
     * account level settings. Otherwise, it will have the value of the parent
     * account (for only marketplace sellers).
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutReviewState effective_review_state = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $effective_review_state = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Identifier. The resource name of the program configuration settings.
     *           Format: `accounts/{account}/programs/{program}/checkoutSettings`
     *     @type \Google\Shopping\Merchant\Accounts\V1\UriSettings $uri_settings
     *           URI settings for cart or checkout URL.
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $eligible_destinations
     *           Optional. The destinations (also known as [Marketing
     *           methods](https://support.google.com/merchants/answer/15130232)) to which
     *           the checkout program applies, valid destination values are `SHOPPING_ADS`,
     *           `FREE_LISTINGS`
     *     @type int $enrollment_state
     *           Output only. Reflects the merchant enrollment state in `Checkout` program.
     *     @type int $review_state
     *           Output only. Reflects the merchant review state in `Checkout` program.
     *           This is set based on the data quality reviews of the URL provided by
     *           the merchant.
     *           A merchant with enrollment state
     *           as `ENROLLED` can be in the following review states: `IN_REVIEW`,
     *           `APPROVED` or `DISAPPROVED`. A merchant must be in an `enrollment_state` of
     *           `ENROLLED` before a review can begin for the merchant.For more details,
     *           check the help center doc.
     *     @type \Google\Shopping\Merchant\Accounts\V1\UriSettings $effective_uri_settings
     *           Output only. The effective value of `uri_settings` for a given merchant. If
     *           account level settings are present then this value will be a copy of url
     *           settings. Otherwise, it will have the value of the parent account (for only
     *           marketplace sellers).
     *     @type int $effective_enrollment_state
     *           Output only. The effective value of enrollment_state for a given merchant
     *           ID. If account level settings are present then this value will be a copy of
     *           the account level settings. Otherwise, it will have the value of the parent
     *           account (for only marketplace sellers).
     *     @type int $effective_review_state
     *           Output only. The effective value of `review_state` for a given merchant ID.
     *           If account level settings are present then this value will be a copy of the
     *           account level settings. Otherwise, it will have the value of the parent
     *           account (for only marketplace sellers).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Merchant\Accounts\V1\Checkoutsettings::initOnce();
        parent::__construct($data);
    }

    /**
     * Identifier. The resource name of the program configuration settings.
     * Format: `accounts/{account}/programs/{program}/checkoutSettings`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Identifier. The resource name of the program configuration settings.
     * Format: `accounts/{account}/programs/{program}/checkoutSettings`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * URI settings for cart or checkout URL.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.UriSettings uri_settings = 2;</code>
     * @return \Google\Shopping\Merchant\Accounts\V1\UriSettings|null
     */
    public function getUriSettings()
    {
        return $this->uri_settings;
    }

    public function hasUriSettings()
    {
        return isset($this->uri_settings);
    }

    public function clearUriSettings()
    {
        unset($this->uri_settings);
    }

    /**
     * URI settings for cart or checkout URL.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.UriSettings uri_settings = 2;</code>
     * @param \Google\Shopping\Merchant\Accounts\V1\UriSettings $var
     * @return $this
     */
    public function setUriSettings($var)
    {
        GPBUtil::checkMessage($var, \Google\Shopping\Merchant\Accounts\V1\UriSettings::class);
        $this->uri_settings = $var;

        return $this;
    }

    /**
     * Optional. The destinations (also known as [Marketing
     * methods](https://support.google.com/merchants/answer/15130232)) to which
     * the checkout program applies, valid destination values are `SHOPPING_ADS`,
     * `FREE_LISTINGS`
     *
     * Generated from protobuf field <code>repeated .google.shopping.type.Destination.DestinationEnum eligible_destinations = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getEligibleDestinations()
    {
        return $this->eligible_destinations;
    }

    /**
     * Optional. The destinations (also known as [Marketing
     * methods](https://support.google.com/merchants/answer/15130232)) to which
     * the checkout program applies, valid destination values are `SHOPPING_ADS`,
     * `FREE_LISTINGS`
     *
     * Generated from protobuf field <code>repeated .google.shopping.type.Destination.DestinationEnum eligible_destinations = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setEligibleDestinations($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Google\Shopping\Type\Destination\DestinationEnum::class);
        $this->eligible_destinations = $arr;

        return $this;
    }

    /**
     * Output only. Reflects the merchant enrollment state in `Checkout` program.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutEnrollmentState enrollment_state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getEnrollmentState()
    {
        return isset($this->enrollment_state) ? $this->enrollment_state : 0;
    }

    public function hasEnrollmentState()
    {
        return isset($this->enrollment_state);
    }

    public function clearEnrollmentState()
    {
        unset($this->enrollment_state);
    }

    /**
     * Output only. Reflects the merchant enrollment state in `Checkout` program.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutEnrollmentState enrollment_state = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setEnrollmentState($var)
    {
        GPBUtil::checkEnum($var, \Google\Shopping\Merchant\Accounts\V1\CheckoutSettings\CheckoutEnrollmentState::class);
        $this->enrollment_state = $var;

        return $this;
    }

    /**
     * Output only. Reflects the merchant review state in `Checkout` program.
     * This is set based on the data quality reviews of the URL provided by
     * the merchant.
     * A merchant with enrollment state
     * as `ENROLLED` can be in the following review states: `IN_REVIEW`,
     * `APPROVED` or `DISAPPROVED`. A merchant must be in an `enrollment_state` of
     * `ENROLLED` before a review can begin for the merchant.For more details,
     * check the help center doc.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutReviewState review_state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getReviewState()
    {
        return isset($this->review_state) ? $this->review_state : 0;
    }

    public function hasReviewState()
    {
        return isset($this->review_state);
    }

    public function clearReviewState()
    {
        unset($this->review_state);
    }

    /**
     * Output only. Reflects the merchant review state in `Checkout` program.
     * This is set based on the data quality reviews of the URL provided by
     * the merchant.
     * A merchant with enrollment state
     * as `ENROLLED` can be in the following review states: `IN_REVIEW`,
     * `APPROVED` or `DISAPPROVED`. A merchant must be in an `enrollment_state` of
     * `ENROLLED` before a review can begin for the merchant.For more details,
     * check the help center doc.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutReviewState review_state = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setReviewState($var)
    {
        GPBUtil::checkEnum($var, \Google\Shopping\Merchant\Accounts\V1\CheckoutSettings\CheckoutReviewState::class);
        $this->review_state = $var;

        return $this;
    }

    /**
     * Output only. The effective value of `uri_settings` for a given merchant. If
     * account level settings are present then this value will be a copy of url
     * settings. Otherwise, it will have the value of the parent account (for only
     * marketplace sellers).
     *
     * Generated from protobuf field <code>.google.shopping.merchant.accounts.v1.UriSettings effective_uri_settings = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Shopping\Merchant\Accounts\V1\UriSettings|null
     */
    public function getEffectiveUriSettings()
    {
        return $this->effective_uri_settings;
    }

    public function hasEffectiveUriSettings()
    {
        return isset($this->effective_uri_settings);
    }

    public function clearEffectiveUriSettings()
    {
        unset($this->effective_uri_settings);
    }

    /**
     * Output only. The effective value of `uri_settings` for a given merchant. If
     * account level settings are present then this value will be a copy of url
     * settings. Otherwise, it will have the value of the parent account (for only
     * marketplace sellers).
     *
     * Generated from protobuf field <code>.google.shopping.merchant.accounts.v1.UriSettings effective_uri_settings = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Shopping\Merchant\Accounts\V1\UriSettings $var
     * @return $this
     */
    public function setEffectiveUriSettings($var)
    {
        GPBUtil::checkMessage($var, \Google\Shopping\Merchant\Accounts\V1\UriSettings::class);
        $this->effective_uri_settings = $var;

        return $this;
    }

    /**
     * Output only. The effective value of enrollment_state for a given merchant
     * ID. If account level settings are present then this value will be a copy of
     * the account level settings. Otherwise, it will have the value of the parent
     * account (for only marketplace sellers).
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutEnrollmentState effective_enrollment_state = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getEffectiveEnrollmentState()
    {
        return isset($this->effective_enrollment_state) ? $this->effective_enrollment_state : 0;
    }

    public function hasEffectiveEnrollmentState()
    {
        return isset($this->effective_enrollment_state);
    }

    public function clearEffectiveEnrollmentState()
    {
        unset($this->effective_enrollment_state);
    }

    /**
     * Output only. The effective value of enrollment_state for a given merchant
     * ID. If account level settings are present then this value will be a copy of
     * the account level settings. Otherwise, it will have the value of the parent
     * account (for only marketplace sellers).
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutEnrollmentState effective_enrollment_state = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setEffectiveEnrollmentState($var)
    {
        GPBUtil::checkEnum($var, \Google\Shopping\Merchant\Accounts\V1\CheckoutSettings\CheckoutEnrollmentState::class);
        $this->effective_enrollment_state = $var;

        return $this;
    }

    /**
     * Output only. The effective value of `review_state` for a given merchant ID.
     * If account level settings are present then this value will be a copy of the
     * account level settings. Otherwise, it will have the value of the parent
     * account (for only marketplace sellers).
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutReviewState effective_review_state = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getEffectiveReviewState()
    {
        return isset($this->effective_review_state) ? $this->effective_review_state : 0;
    }

    public function hasEffectiveReviewState()
    {
        return isset($this->effective_review_state);
    }

    public function clearEffectiveReviewState()
    {
        unset($this->effective_review_state);
    }

    /**
     * Output only. The effective value of `review_state` for a given merchant ID.
     * If account level settings are present then this value will be a copy of the
     * account level settings. Otherwise, it will have the value of the parent
     * account (for only marketplace sellers).
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.CheckoutSettings.CheckoutReviewState effective_review_state = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setEffectiveReviewState($var)
    {
        GPBUtil::checkEnum($var, \Google\Shopping\Merchant\Accounts\V1\CheckoutSettings\CheckoutReviewState::class);
        $this->effective_review_state = $var;

        return $this;
    }

}

