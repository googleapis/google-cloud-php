<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/accounts/v1/developerregistration.proto

namespace Google\Shopping\Merchant\Accounts\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for the RegisterGCP method.
 *
 * Generated from protobuf message <code>google.shopping.merchant.accounts.v1.RegisterGcpRequest</code>
 */
class RegisterGcpRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the developer registration to be created for the
     * merchant account that the GCP will be registered with. Format:
     * `accounts/{account}/developerRegistration`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $name = '';
    /**
     * Immutable. If the developer email provided is associated with a user in the
     * merchant account provided, the user will be updated to have "API developer"
     * access type and the email preference corresponding to that user will be
     * updated to have the new "API notifications" preference. If the developer
     * email provided is not associated with any user we will just add it as a
     * contact. The email preference corresponding to that contact will have the
     * new "API notifications" preference
     *
     * Generated from protobuf field <code>string developer_email = 2 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    protected $developer_email = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The name of the developer registration to be created for the
     *           merchant account that the GCP will be registered with. Format:
     *           `accounts/{account}/developerRegistration`
     *     @type string $developer_email
     *           Immutable. If the developer email provided is associated with a user in the
     *           merchant account provided, the user will be updated to have "API developer"
     *           access type and the email preference corresponding to that user will be
     *           updated to have the new "API notifications" preference. If the developer
     *           email provided is not associated with any user we will just add it as a
     *           contact. The email preference corresponding to that contact will have the
     *           new "API notifications" preference
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Merchant\Accounts\V1\Developerregistration::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The name of the developer registration to be created for the
     * merchant account that the GCP will be registered with. Format:
     * `accounts/{account}/developerRegistration`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The name of the developer registration to be created for the
     * merchant account that the GCP will be registered with. Format:
     * `accounts/{account}/developerRegistration`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Immutable. If the developer email provided is associated with a user in the
     * merchant account provided, the user will be updated to have "API developer"
     * access type and the email preference corresponding to that user will be
     * updated to have the new "API notifications" preference. If the developer
     * email provided is not associated with any user we will just add it as a
     * contact. The email preference corresponding to that contact will have the
     * new "API notifications" preference
     *
     * Generated from protobuf field <code>string developer_email = 2 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return string
     */
    public function getDeveloperEmail()
    {
        return $this->developer_email;
    }

    /**
     * Immutable. If the developer email provided is associated with a user in the
     * merchant account provided, the user will be updated to have "API developer"
     * access type and the email preference corresponding to that user will be
     * updated to have the new "API notifications" preference. If the developer
     * email provided is not associated with any user we will just add it as a
     * contact. The email preference corresponding to that contact will have the
     * new "API notifications" preference
     *
     * Generated from protobuf field <code>string developer_email = 2 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param string $var
     * @return $this
     */
    public function setDeveloperEmail($var)
    {
        GPBUtil::checkString($var, True);
        $this->developer_email = $var;

        return $this;
    }

}

