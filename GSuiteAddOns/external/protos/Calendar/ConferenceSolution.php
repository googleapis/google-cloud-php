<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/apps/script/type/calendar/calendar_addon_manifest.proto

namespace Google\Apps\Script\Type\Calendar;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Defines conference related values.
 *
 * Generated from protobuf message <code>google.apps.script.type.calendar.ConferenceSolution</code>
 */
class ConferenceSolution extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The endpoint to call when ConferenceData should be created.
     *
     * Generated from protobuf field <code>string on_create_function = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $on_create_function = '';
    /**
     * Required. IDs should be unique across ConferenceSolutions within one
     * add-on, but this is not strictly enforced. It is up to the add-on developer
     * to assign them uniquely, otherwise the wrong ConferenceSolution may be
     * used when the add-on is triggered. While the developer may change the
     * display name of an add-on, the ID should not be changed.
     *
     * Generated from protobuf field <code>string id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $id = '';
    /**
     * Required. The display name of the ConferenceSolution.
     *
     * Generated from protobuf field <code>string name = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $name = '';
    /**
     * Required. The URL for the logo image of the ConferenceSolution.
     *
     * Generated from protobuf field <code>string logo_url = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $logo_url = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $on_create_function
     *           Required. The endpoint to call when ConferenceData should be created.
     *     @type string $id
     *           Required. IDs should be unique across ConferenceSolutions within one
     *           add-on, but this is not strictly enforced. It is up to the add-on developer
     *           to assign them uniquely, otherwise the wrong ConferenceSolution may be
     *           used when the add-on is triggered. While the developer may change the
     *           display name of an add-on, the ID should not be changed.
     *     @type string $name
     *           Required. The display name of the ConferenceSolution.
     *     @type string $logo_url
     *           Required. The URL for the logo image of the ConferenceSolution.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Apps\Script\Type\Calendar\CalendarAddonManifest::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The endpoint to call when ConferenceData should be created.
     *
     * Generated from protobuf field <code>string on_create_function = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getOnCreateFunction()
    {
        return $this->on_create_function;
    }

    /**
     * Required. The endpoint to call when ConferenceData should be created.
     *
     * Generated from protobuf field <code>string on_create_function = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setOnCreateFunction($var)
    {
        GPBUtil::checkString($var, True);
        $this->on_create_function = $var;

        return $this;
    }

    /**
     * Required. IDs should be unique across ConferenceSolutions within one
     * add-on, but this is not strictly enforced. It is up to the add-on developer
     * to assign them uniquely, otherwise the wrong ConferenceSolution may be
     * used when the add-on is triggered. While the developer may change the
     * display name of an add-on, the ID should not be changed.
     *
     * Generated from protobuf field <code>string id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Required. IDs should be unique across ConferenceSolutions within one
     * add-on, but this is not strictly enforced. It is up to the add-on developer
     * to assign them uniquely, otherwise the wrong ConferenceSolution may be
     * used when the add-on is triggered. While the developer may change the
     * display name of an add-on, the ID should not be changed.
     *
     * Generated from protobuf field <code>string id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;

        return $this;
    }

    /**
     * Required. The display name of the ConferenceSolution.
     *
     * Generated from protobuf field <code>string name = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The display name of the ConferenceSolution.
     *
     * Generated from protobuf field <code>string name = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Required. The URL for the logo image of the ConferenceSolution.
     *
     * Generated from protobuf field <code>string logo_url = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getLogoUrl()
    {
        return $this->logo_url;
    }

    /**
     * Required. The URL for the logo image of the ConferenceSolution.
     *
     * Generated from protobuf field <code>string logo_url = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setLogoUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->logo_url = $var;

        return $this;
    }

}

