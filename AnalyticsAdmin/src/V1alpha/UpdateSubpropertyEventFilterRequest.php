<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/analytics/admin/v1alpha/analytics_admin.proto

namespace Google\Analytics\Admin\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for UpdateSubpropertyEventFilter RPC.
 *
 * Generated from protobuf message <code>google.analytics.admin.v1alpha.UpdateSubpropertyEventFilterRequest</code>
 */
class UpdateSubpropertyEventFilterRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The subproperty event filter to update.
     *
     * Generated from protobuf field <code>.google.analytics.admin.v1alpha.SubpropertyEventFilter subproperty_event_filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $subproperty_event_filter = null;
    /**
     * Required. The list of fields to update. Field names must be in snake case
     * (for example, "field_to_update"). Omitted fields will not be updated. To
     * replace the entire entity, use one path with the string "*" to match all
     * fields.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $update_mask = null;

    /**
     * @param \Google\Analytics\Admin\V1alpha\SubpropertyEventFilter $subpropertyEventFilter Required. The subproperty event filter to update.
     * @param \Google\Protobuf\FieldMask                             $updateMask             Required. The list of fields to update. Field names must be in snake case
     *                                                                                       (for example, "field_to_update"). Omitted fields will not be updated. To
     *                                                                                       replace the entire entity, use one path with the string "*" to match all
     *                                                                                       fields.
     *
     * @return \Google\Analytics\Admin\V1alpha\UpdateSubpropertyEventFilterRequest
     *
     * @experimental
     */
    public static function build(\Google\Analytics\Admin\V1alpha\SubpropertyEventFilter $subpropertyEventFilter, \Google\Protobuf\FieldMask $updateMask): self
    {
        return (new self())
            ->setSubpropertyEventFilter($subpropertyEventFilter)
            ->setUpdateMask($updateMask);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Analytics\Admin\V1alpha\SubpropertyEventFilter $subproperty_event_filter
     *           Required. The subproperty event filter to update.
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           Required. The list of fields to update. Field names must be in snake case
     *           (for example, "field_to_update"). Omitted fields will not be updated. To
     *           replace the entire entity, use one path with the string "*" to match all
     *           fields.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Analytics\Admin\V1Alpha\AnalyticsAdmin::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The subproperty event filter to update.
     *
     * Generated from protobuf field <code>.google.analytics.admin.v1alpha.SubpropertyEventFilter subproperty_event_filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Analytics\Admin\V1alpha\SubpropertyEventFilter|null
     */
    public function getSubpropertyEventFilter()
    {
        return $this->subproperty_event_filter;
    }

    public function hasSubpropertyEventFilter()
    {
        return isset($this->subproperty_event_filter);
    }

    public function clearSubpropertyEventFilter()
    {
        unset($this->subproperty_event_filter);
    }

    /**
     * Required. The subproperty event filter to update.
     *
     * Generated from protobuf field <code>.google.analytics.admin.v1alpha.SubpropertyEventFilter subproperty_event_filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Analytics\Admin\V1alpha\SubpropertyEventFilter $var
     * @return $this
     */
    public function setSubpropertyEventFilter($var)
    {
        GPBUtil::checkMessage($var, \Google\Analytics\Admin\V1alpha\SubpropertyEventFilter::class);
        $this->subproperty_event_filter = $var;

        return $this;
    }

    /**
     * Required. The list of fields to update. Field names must be in snake case
     * (for example, "field_to_update"). Omitted fields will not be updated. To
     * replace the entire entity, use one path with the string "*" to match all
     * fields.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * Required. The list of fields to update. Field names must be in snake case
     * (for example, "field_to_update"). Omitted fields will not be updated. To
     * replace the entire entity, use one path with the string "*" to match all
     * fields.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

}

