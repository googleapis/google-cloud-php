<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/analytics/admin/v1beta/access_report.proto

namespace Google\Analytics\Admin\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A contiguous range of days: startDate, startDate + 1, ..., endDate.
 *
 * Generated from protobuf message <code>google.analytics.admin.v1beta.AccessDateRange</code>
 */
class AccessDateRange extends \Google\Protobuf\Internal\Message
{
    /**
     * The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot
     * be after `endDate`. The format `NdaysAgo`, `yesterday`, or `today` is also
     * accepted, and in that case, the date is inferred based on the current time
     * in the request's time zone.
     *
     * Generated from protobuf field <code>string start_date = 1;</code>
     */
    private $start_date = '';
    /**
     * The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot
     * be before `startDate`. The format `NdaysAgo`, `yesterday`, or `today` is
     * also accepted, and in that case, the date is inferred based on the current
     * time in the request's time zone.
     *
     * Generated from protobuf field <code>string end_date = 2;</code>
     */
    private $end_date = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $start_date
     *           The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot
     *           be after `endDate`. The format `NdaysAgo`, `yesterday`, or `today` is also
     *           accepted, and in that case, the date is inferred based on the current time
     *           in the request's time zone.
     *     @type string $end_date
     *           The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot
     *           be before `startDate`. The format `NdaysAgo`, `yesterday`, or `today` is
     *           also accepted, and in that case, the date is inferred based on the current
     *           time in the request's time zone.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Analytics\Admin\V1Beta\AccessReport::initOnce();
        parent::__construct($data);
    }

    /**
     * The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot
     * be after `endDate`. The format `NdaysAgo`, `yesterday`, or `today` is also
     * accepted, and in that case, the date is inferred based on the current time
     * in the request's time zone.
     *
     * Generated from protobuf field <code>string start_date = 1;</code>
     * @return string
     */
    public function getStartDate()
    {
        return $this->start_date;
    }

    /**
     * The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot
     * be after `endDate`. The format `NdaysAgo`, `yesterday`, or `today` is also
     * accepted, and in that case, the date is inferred based on the current time
     * in the request's time zone.
     *
     * Generated from protobuf field <code>string start_date = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setStartDate($var)
    {
        GPBUtil::checkString($var, True);
        $this->start_date = $var;

        return $this;
    }

    /**
     * The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot
     * be before `startDate`. The format `NdaysAgo`, `yesterday`, or `today` is
     * also accepted, and in that case, the date is inferred based on the current
     * time in the request's time zone.
     *
     * Generated from protobuf field <code>string end_date = 2;</code>
     * @return string
     */
    public function getEndDate()
    {
        return $this->end_date;
    }

    /**
     * The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot
     * be before `startDate`. The format `NdaysAgo`, `yesterday`, or `today` is
     * also accepted, and in that case, the date is inferred based on the current
     * time in the request's time zone.
     *
     * Generated from protobuf field <code>string end_date = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setEndDate($var)
    {
        GPBUtil::checkString($var, True);
        $this->end_date = $var;

        return $this;
    }

}

