<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/analytics/admin/v1beta/analytics_admin.proto

namespace Google\Analytics\Admin\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for ListProperties RPC.
 *
 * Generated from protobuf message <code>google.analytics.admin.v1beta.ListPropertiesRequest</code>
 */
class ListPropertiesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. An expression for filtering the results of the request.
     * Fields eligible for filtering are:
     * `parent:`(The resource name of the parent account/property) or
     * `ancestor:`(The resource name of the parent account) or
     * `firebase_project:`(The id or number of the linked firebase project).
     * Some examples of filters:
     * ```
     * | Filter                      | Description                               |
     * |-----------------------------|-------------------------------------------|
     * | parent:accounts/123         | The account with account id: 123.       |
     * | parent:properties/123       | The property with property id: 123.       |
     * | ancestor:accounts/123       | The account with account id: 123.         |
     * | firebase_project:project-id | The firebase project with id: project-id. |
     * | firebase_project:123        | The firebase project with number: 123.    |
     * ```
     *
     * Generated from protobuf field <code>string filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $filter = '';
    /**
     * The maximum number of resources to return. The service may return
     * fewer than this value, even if there are additional pages.
     * If unspecified, at most 50 resources will be returned.
     * The maximum value is 200; (higher values will be coerced to the maximum)
     *
     * Generated from protobuf field <code>int32 page_size = 2;</code>
     */
    private $page_size = 0;
    /**
     * A page token, received from a previous `ListProperties` call.
     * Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListProperties` must
     * match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 3;</code>
     */
    private $page_token = '';
    /**
     * Whether to include soft-deleted (ie: "trashed") Properties in the
     * results. Properties can be inspected to determine whether they are deleted
     * or not.
     *
     * Generated from protobuf field <code>bool show_deleted = 4;</code>
     */
    private $show_deleted = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $filter
     *           Required. An expression for filtering the results of the request.
     *           Fields eligible for filtering are:
     *           `parent:`(The resource name of the parent account/property) or
     *           `ancestor:`(The resource name of the parent account) or
     *           `firebase_project:`(The id or number of the linked firebase project).
     *           Some examples of filters:
     *           ```
     *           | Filter                      | Description                               |
     *           |-----------------------------|-------------------------------------------|
     *           | parent:accounts/123         | The account with account id: 123.       |
     *           | parent:properties/123       | The property with property id: 123.       |
     *           | ancestor:accounts/123       | The account with account id: 123.         |
     *           | firebase_project:project-id | The firebase project with id: project-id. |
     *           | firebase_project:123        | The firebase project with number: 123.    |
     *           ```
     *     @type int $page_size
     *           The maximum number of resources to return. The service may return
     *           fewer than this value, even if there are additional pages.
     *           If unspecified, at most 50 resources will be returned.
     *           The maximum value is 200; (higher values will be coerced to the maximum)
     *     @type string $page_token
     *           A page token, received from a previous `ListProperties` call.
     *           Provide this to retrieve the subsequent page.
     *           When paginating, all other parameters provided to `ListProperties` must
     *           match the call that provided the page token.
     *     @type bool $show_deleted
     *           Whether to include soft-deleted (ie: "trashed") Properties in the
     *           results. Properties can be inspected to determine whether they are deleted
     *           or not.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Analytics\Admin\V1Beta\AnalyticsAdmin::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. An expression for filtering the results of the request.
     * Fields eligible for filtering are:
     * `parent:`(The resource name of the parent account/property) or
     * `ancestor:`(The resource name of the parent account) or
     * `firebase_project:`(The id or number of the linked firebase project).
     * Some examples of filters:
     * ```
     * | Filter                      | Description                               |
     * |-----------------------------|-------------------------------------------|
     * | parent:accounts/123         | The account with account id: 123.       |
     * | parent:properties/123       | The property with property id: 123.       |
     * | ancestor:accounts/123       | The account with account id: 123.         |
     * | firebase_project:project-id | The firebase project with id: project-id. |
     * | firebase_project:123        | The firebase project with number: 123.    |
     * ```
     *
     * Generated from protobuf field <code>string filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Required. An expression for filtering the results of the request.
     * Fields eligible for filtering are:
     * `parent:`(The resource name of the parent account/property) or
     * `ancestor:`(The resource name of the parent account) or
     * `firebase_project:`(The id or number of the linked firebase project).
     * Some examples of filters:
     * ```
     * | Filter                      | Description                               |
     * |-----------------------------|-------------------------------------------|
     * | parent:accounts/123         | The account with account id: 123.       |
     * | parent:properties/123       | The property with property id: 123.       |
     * | ancestor:accounts/123       | The account with account id: 123.         |
     * | firebase_project:project-id | The firebase project with id: project-id. |
     * | firebase_project:123        | The firebase project with number: 123.    |
     * ```
     *
     * Generated from protobuf field <code>string filter = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

    /**
     * The maximum number of resources to return. The service may return
     * fewer than this value, even if there are additional pages.
     * If unspecified, at most 50 resources will be returned.
     * The maximum value is 200; (higher values will be coerced to the maximum)
     *
     * Generated from protobuf field <code>int32 page_size = 2;</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * The maximum number of resources to return. The service may return
     * fewer than this value, even if there are additional pages.
     * If unspecified, at most 50 resources will be returned.
     * The maximum value is 200; (higher values will be coerced to the maximum)
     *
     * Generated from protobuf field <code>int32 page_size = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * A page token, received from a previous `ListProperties` call.
     * Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListProperties` must
     * match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 3;</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * A page token, received from a previous `ListProperties` call.
     * Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListProperties` must
     * match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

    /**
     * Whether to include soft-deleted (ie: "trashed") Properties in the
     * results. Properties can be inspected to determine whether they are deleted
     * or not.
     *
     * Generated from protobuf field <code>bool show_deleted = 4;</code>
     * @return bool
     */
    public function getShowDeleted()
    {
        return $this->show_deleted;
    }

    /**
     * Whether to include soft-deleted (ie: "trashed") Properties in the
     * results. Properties can be inspected to determine whether they are deleted
     * or not.
     *
     * Generated from protobuf field <code>bool show_deleted = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setShowDeleted($var)
    {
        GPBUtil::checkBool($var);
        $this->show_deleted = $var;

        return $this;
    }

}

