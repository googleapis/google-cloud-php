<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/cloudbuild/v1/cloudbuild.proto

namespace Google\Cloud\Build\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>google.devtools.cloudbuild.v1.GitHubEnterpriseConfig</code>
 */
class GitHubEnterpriseConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The full resource name for the GitHubEnterpriseConfig
     * For example:
     * "projects/{$project_id}/locations/{$location_id}/githubEnterpriseConfigs/{$config_id}"
     *
     * Generated from protobuf field <code>string name = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $name = '';
    /**
     * The URL of the github enterprise host the configuration is for.
     *
     * Generated from protobuf field <code>string host_url = 3;</code>
     */
    private $host_url = '';
    /**
     * Required. The GitHub app id of the Cloud Build app on the GitHub Enterprise
     * server.
     *
     * Generated from protobuf field <code>int64 app_id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $app_id = 0;
    /**
     * Output only. Time when the installation was associated with the project.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $create_time = null;
    /**
     * The key that should be attached to webhook calls to the ReceiveWebhook
     * endpoint.
     *
     * Generated from protobuf field <code>string webhook_key = 8;</code>
     */
    private $webhook_key = '';
    /**
     * Optional. The network to be used when reaching out to the GitHub
     * Enterprise server. The VPC network must be enabled for private
     * service connection. This should be set if the GitHub Enterprise server is
     * hosted on-premises and not reachable by public internet.
     * If this field is left empty, no network peering will occur and calls to
     * the GitHub Enterprise server will be made over the public internet.
     * Must be in the format
     * `projects/{project}/global/networks/{network}`, where {project}
     * is a project number or id and {network} is the name of a
     * VPC network in the project.
     *
     * Generated from protobuf field <code>string peered_network = 9 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     */
    private $peered_network = '';
    /**
     * Names of secrets in Secret Manager.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets secrets = 10;</code>
     */
    private $secrets = null;
    /**
     * Name to display for this config.
     *
     * Generated from protobuf field <code>string display_name = 11;</code>
     */
    private $display_name = '';
    /**
     * Optional. SSL certificate to use for requests to GitHub Enterprise.
     *
     * Generated from protobuf field <code>string ssl_ca = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $ssl_ca = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Optional. The full resource name for the GitHubEnterpriseConfig
     *           For example:
     *           "projects/{$project_id}/locations/{$location_id}/githubEnterpriseConfigs/{$config_id}"
     *     @type string $host_url
     *           The URL of the github enterprise host the configuration is for.
     *     @type int|string $app_id
     *           Required. The GitHub app id of the Cloud Build app on the GitHub Enterprise
     *           server.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. Time when the installation was associated with the project.
     *     @type string $webhook_key
     *           The key that should be attached to webhook calls to the ReceiveWebhook
     *           endpoint.
     *     @type string $peered_network
     *           Optional. The network to be used when reaching out to the GitHub
     *           Enterprise server. The VPC network must be enabled for private
     *           service connection. This should be set if the GitHub Enterprise server is
     *           hosted on-premises and not reachable by public internet.
     *           If this field is left empty, no network peering will occur and calls to
     *           the GitHub Enterprise server will be made over the public internet.
     *           Must be in the format
     *           `projects/{project}/global/networks/{network}`, where {project}
     *           is a project number or id and {network} is the name of a
     *           VPC network in the project.
     *     @type \Google\Cloud\Build\V1\GitHubEnterpriseSecrets $secrets
     *           Names of secrets in Secret Manager.
     *     @type string $display_name
     *           Name to display for this config.
     *     @type string $ssl_ca
     *           Optional. SSL certificate to use for requests to GitHub Enterprise.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Devtools\Cloudbuild\V1\Cloudbuild::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The full resource name for the GitHubEnterpriseConfig
     * For example:
     * "projects/{$project_id}/locations/{$location_id}/githubEnterpriseConfigs/{$config_id}"
     *
     * Generated from protobuf field <code>string name = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Optional. The full resource name for the GitHubEnterpriseConfig
     * For example:
     * "projects/{$project_id}/locations/{$location_id}/githubEnterpriseConfigs/{$config_id}"
     *
     * Generated from protobuf field <code>string name = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The URL of the github enterprise host the configuration is for.
     *
     * Generated from protobuf field <code>string host_url = 3;</code>
     * @return string
     */
    public function getHostUrl()
    {
        return $this->host_url;
    }

    /**
     * The URL of the github enterprise host the configuration is for.
     *
     * Generated from protobuf field <code>string host_url = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setHostUrl($var)
    {
        GPBUtil::checkString($var, True);
        $this->host_url = $var;

        return $this;
    }

    /**
     * Required. The GitHub app id of the Cloud Build app on the GitHub Enterprise
     * server.
     *
     * Generated from protobuf field <code>int64 app_id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int|string
     */
    public function getAppId()
    {
        return $this->app_id;
    }

    /**
     * Required. The GitHub app id of the Cloud Build app on the GitHub Enterprise
     * server.
     *
     * Generated from protobuf field <code>int64 app_id = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int|string $var
     * @return $this
     */
    public function setAppId($var)
    {
        GPBUtil::checkInt64($var);
        $this->app_id = $var;

        return $this;
    }

    /**
     * Output only. Time when the installation was associated with the project.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. Time when the installation was associated with the project.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * The key that should be attached to webhook calls to the ReceiveWebhook
     * endpoint.
     *
     * Generated from protobuf field <code>string webhook_key = 8;</code>
     * @return string
     */
    public function getWebhookKey()
    {
        return $this->webhook_key;
    }

    /**
     * The key that should be attached to webhook calls to the ReceiveWebhook
     * endpoint.
     *
     * Generated from protobuf field <code>string webhook_key = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setWebhookKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->webhook_key = $var;

        return $this;
    }

    /**
     * Optional. The network to be used when reaching out to the GitHub
     * Enterprise server. The VPC network must be enabled for private
     * service connection. This should be set if the GitHub Enterprise server is
     * hosted on-premises and not reachable by public internet.
     * If this field is left empty, no network peering will occur and calls to
     * the GitHub Enterprise server will be made over the public internet.
     * Must be in the format
     * `projects/{project}/global/networks/{network}`, where {project}
     * is a project number or id and {network} is the name of a
     * VPC network in the project.
     *
     * Generated from protobuf field <code>string peered_network = 9 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getPeeredNetwork()
    {
        return $this->peered_network;
    }

    /**
     * Optional. The network to be used when reaching out to the GitHub
     * Enterprise server. The VPC network must be enabled for private
     * service connection. This should be set if the GitHub Enterprise server is
     * hosted on-premises and not reachable by public internet.
     * If this field is left empty, no network peering will occur and calls to
     * the GitHub Enterprise server will be made over the public internet.
     * Must be in the format
     * `projects/{project}/global/networks/{network}`, where {project}
     * is a project number or id and {network} is the name of a
     * VPC network in the project.
     *
     * Generated from protobuf field <code>string peered_network = 9 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setPeeredNetwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->peered_network = $var;

        return $this;
    }

    /**
     * Names of secrets in Secret Manager.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets secrets = 10;</code>
     * @return \Google\Cloud\Build\V1\GitHubEnterpriseSecrets|null
     */
    public function getSecrets()
    {
        return $this->secrets;
    }

    public function hasSecrets()
    {
        return isset($this->secrets);
    }

    public function clearSecrets()
    {
        unset($this->secrets);
    }

    /**
     * Names of secrets in Secret Manager.
     *
     * Generated from protobuf field <code>.google.devtools.cloudbuild.v1.GitHubEnterpriseSecrets secrets = 10;</code>
     * @param \Google\Cloud\Build\V1\GitHubEnterpriseSecrets $var
     * @return $this
     */
    public function setSecrets($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Build\V1\GitHubEnterpriseSecrets::class);
        $this->secrets = $var;

        return $this;
    }

    /**
     * Name to display for this config.
     *
     * Generated from protobuf field <code>string display_name = 11;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Name to display for this config.
     *
     * Generated from protobuf field <code>string display_name = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * Optional. SSL certificate to use for requests to GitHub Enterprise.
     *
     * Generated from protobuf field <code>string ssl_ca = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getSslCa()
    {
        return $this->ssl_ca;
    }

    /**
     * Optional. SSL certificate to use for requests to GitHub Enterprise.
     *
     * Generated from protobuf field <code>string ssl_ca = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setSslCa($var)
    {
        GPBUtil::checkString($var, True);
        $this->ssl_ca = $var;

        return $this;
    }

}

