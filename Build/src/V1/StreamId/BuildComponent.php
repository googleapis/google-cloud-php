<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/build/v1/build_events.proto

namespace Google\Cloud\Build\V1\StreamId;

use UnexpectedValueException;

/**
 * Which build component generates this event stream. Each build component
 * may generate one event stream.
 *
 * Protobuf type <code>google.devtools.build.v1.StreamId.BuildComponent</code>
 */
class BuildComponent
{
    /**
     * Unknown or unspecified; callers should never set this value.
     *
     * Generated from protobuf enum <code>UNKNOWN_COMPONENT = 0;</code>
     */
    const UNKNOWN_COMPONENT = 0;
    /**
     * A component that coordinates builds.
     *
     * Generated from protobuf enum <code>CONTROLLER = 1;</code>
     */
    const CONTROLLER = 1;
    /**
     * A component that runs executables needed to complete a build.
     *
     * Generated from protobuf enum <code>WORKER = 2;</code>
     */
    const WORKER = 2;
    /**
     * A component that builds something.
     *
     * Generated from protobuf enum <code>TOOL = 3;</code>
     */
    const TOOL = 3;

    private static $valueToName = [
        self::UNKNOWN_COMPONENT => 'UNKNOWN_COMPONENT',
        self::CONTROLLER => 'CONTROLLER',
        self::WORKER => 'WORKER',
        self::TOOL => 'TOOL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(BuildComponent::class, \Google\Cloud\Build\V1\StreamId_BuildComponent::class);

