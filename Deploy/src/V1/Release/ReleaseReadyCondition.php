<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/deploy/v1/cloud_deploy.proto

namespace Google\Cloud\Deploy\V1\Release;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ReleaseReadyCondition contains information around the status of the
 * Release. If a release is not ready, you cannot create a rollout with the
 * release.
 *
 * Generated from protobuf message <code>google.cloud.deploy.v1.Release.ReleaseReadyCondition</code>
 */
class ReleaseReadyCondition extends \Google\Protobuf\Internal\Message
{
    /**
     * True if the Release is in a valid state. Otherwise at least one condition
     * in `ReleaseCondition` is in an invalid state. Iterate over those
     * conditions and see which condition(s) has status = false to find out what
     * is wrong with the Release.
     *
     * Generated from protobuf field <code>bool status = 1;</code>
     */
    private $status = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $status
     *           True if the Release is in a valid state. Otherwise at least one condition
     *           in `ReleaseCondition` is in an invalid state. Iterate over those
     *           conditions and see which condition(s) has status = false to find out what
     *           is wrong with the Release.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Deploy\V1\CloudDeploy::initOnce();
        parent::__construct($data);
    }

    /**
     * True if the Release is in a valid state. Otherwise at least one condition
     * in `ReleaseCondition` is in an invalid state. Iterate over those
     * conditions and see which condition(s) has status = false to find out what
     * is wrong with the Release.
     *
     * Generated from protobuf field <code>bool status = 1;</code>
     * @return bool
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * True if the Release is in a valid state. Otherwise at least one condition
     * in `ReleaseCondition` is in an invalid state. Iterate over those
     * conditions and see which condition(s) has status = false to find out what
     * is wrong with the Release.
     *
     * Generated from protobuf field <code>bool status = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkBool($var);
        $this->status = $var;

        return $this;
    }

}


