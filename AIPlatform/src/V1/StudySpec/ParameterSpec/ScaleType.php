<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/study.proto

namespace Google\Cloud\AIPlatform\V1\StudySpec\ParameterSpec;

use UnexpectedValueException;

/**
 * The type of scaling that should be applied to this parameter.
 *
 * Protobuf type <code>google.cloud.aiplatform.v1.StudySpec.ParameterSpec.ScaleType</code>
 */
class ScaleType
{
    /**
     * By default, no scaling is applied.
     *
     * Generated from protobuf enum <code>SCALE_TYPE_UNSPECIFIED = 0;</code>
     */
    const SCALE_TYPE_UNSPECIFIED = 0;
    /**
     * Scales the feasible space to (0, 1) linearly.
     *
     * Generated from protobuf enum <code>UNIT_LINEAR_SCALE = 1;</code>
     */
    const UNIT_LINEAR_SCALE = 1;
    /**
     * Scales the feasible space logarithmically to (0, 1). The entire
     * feasible space must be strictly positive.
     *
     * Generated from protobuf enum <code>UNIT_LOG_SCALE = 2;</code>
     */
    const UNIT_LOG_SCALE = 2;
    /**
     * Scales the feasible space "reverse" logarithmically to (0, 1). The
     * result is that values close to the top of the feasible space are spread
     * out more than points near the bottom. The entire feasible space must be
     * strictly positive.
     *
     * Generated from protobuf enum <code>UNIT_REVERSE_LOG_SCALE = 3;</code>
     */
    const UNIT_REVERSE_LOG_SCALE = 3;

    private static $valueToName = [
        self::SCALE_TYPE_UNSPECIFIED => 'SCALE_TYPE_UNSPECIFIED',
        self::UNIT_LINEAR_SCALE => 'UNIT_LINEAR_SCALE',
        self::UNIT_LOG_SCALE => 'UNIT_LOG_SCALE',
        self::UNIT_REVERSE_LOG_SCALE => 'UNIT_REVERSE_LOG_SCALE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


