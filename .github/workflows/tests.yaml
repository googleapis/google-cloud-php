name: Test Suite
on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest]
        php: [ "7.1", "7.2", "7.3", "7.4", "8.0", "8.1", "8.2" ]
        phpunit-filename: [phpunit]
        include:
          - platform: ubuntu-latest
            php: "5.6"
            phpunit-filename: phpunit-php5
          - platform: ubuntu-latest
            php: "7.0"
            phpunit-filename: phpunit
    name: PHP ${{ matrix.php }} Unit Test (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup PHP
      uses: shivammathur/setup-php@verbose
      with:
        php-version: ${{ matrix.php }}
        extensions: grpc-1.49.0
    - name: Install Dependencies
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: composer --no-interaction --no-ansi --no-progress update
    - if: ${{ matrix.platform == 'windows-latest' }}
      name: Run Unit Test Suite (Windows)
      run: |
        vendor/bin/phpunit -c ${{ matrix.phpunit-filename }}.xml.dist
        if ( "$?" -ne "0" )
        {
          echo "*** RETRYING FLAKEY PHPUNIT ON WINDOWS ***"
          vendor/bin/phpunit -c ${{ matrix.phpunit-filename }}.xml.dist
        }
    - if: ${{ matrix.platform != 'windows-latest' }}
      name: Run Unit Test Suite
      run: |
        vendor/bin/phpunit -c ${{ matrix.phpunit-filename }}.xml.dist
    - if: ${{ matrix.platform != 'windows-latest' }}
      name: Run Snippet Test Suite
      run: |
        vendor/bin/phpunit -c ${{ matrix.phpunit-filename }}-snippets.xml.dist --verbose

  test_package:
    name: Package Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup PHP
      uses: shivammathur/setup-php@verbose
      with:
        php-version: '8.0'
        extensions: grpc-1.49.0
    - name: Run Package Test Suites
      run: bash .github/run-package-tests.sh

  style:
    runs-on: ubuntu-latest
    name: PHP Style Check
    steps:
    - uses: actions/checkout@v3
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
    - name: Install Dependencies
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: composer --no-interaction --no-ansi --no-progress update
    - name: Run PHPCS Code Style Checker
      run: dev/sh/style

  docfx:
    name: "Run DocFX tests"
    runs-on: ubuntu-latest
    env:
      PHPDOC_ENV: prod
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - run: pip install --require-hashes -r .kokoro/docs/docker/requirements.txt
    - name: Setup PHP
      uses: shivammathur/setup-php@verbose
      with:
        php-version: "8.0"
    - name: Extract phpDocumentor
      id: extract
      uses: shrink/actions-docker-extract@v2
      with:
        image: "phpdoc/phpdoc:202301112131087e6028"
        path: "/opt/phpdoc/."
    - name: Symlink phpDocumentor
      run: ln -s $(pwd)/${{ steps.extract.outputs.destination }}/bin/phpdoc /usr/local/bin/phpdoc
    - name: Install Dependencies
      uses: nick-invision/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 3
        command: composer --no-interaction --no-ansi --no-progress update
    - name: Run DocFX Unit Test Suite
      run: vendor/bin/phpunit -c dev/phpunit-docfx.xml.dist
    - name: Run Docs Generator (Dry Run)
      run: .kokoro/docs/publish.sh
