<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/certificatemanager/v1/certificate_manager.proto

namespace Google\Cloud\CertificateManager\V1\DnsAuthorization;

use UnexpectedValueException;

/**
 * DnsAuthorization type.
 *
 * Protobuf type <code>google.cloud.certificatemanager.v1.DnsAuthorization.Type</code>
 */
class Type
{
    /**
     * Type is unspecified.
     *
     * Generated from protobuf enum <code>TYPE_UNSPECIFIED = 0;</code>
     */
    const TYPE_UNSPECIFIED = 0;
    /**
     * FIXED_RECORD DNS authorization uses DNS-01 validation method.
     *
     * Generated from protobuf enum <code>FIXED_RECORD = 1;</code>
     */
    const FIXED_RECORD = 1;
    /**
     * PER_PROJECT_RECORD DNS authorization allows for independent management
     * of Google-managed certificates with DNS authorization across multiple
     * projects.
     *
     * Generated from protobuf enum <code>PER_PROJECT_RECORD = 2;</code>
     */
    const PER_PROJECT_RECORD = 2;

    private static $valueToName = [
        self::TYPE_UNSPECIFIED => 'TYPE_UNSPECIFIED',
        self::FIXED_RECORD => 'FIXED_RECORD',
        self::PER_PROJECT_RECORD => 'PER_PROJECT_RECORD',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


