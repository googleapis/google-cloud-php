<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/migrationcenter/v1/migrationcenter.proto

namespace Google\Cloud\MigrationCenter\V1\VmwareDiskConfig;

use UnexpectedValueException;

/**
 * VMDK backing type possible values.
 *
 * Protobuf type <code>google.cloud.migrationcenter.v1.VmwareDiskConfig.BackingType</code>
 */
class BackingType
{
    /**
     * Default value.
     *
     * Generated from protobuf enum <code>BACKING_TYPE_UNSPECIFIED = 0;</code>
     */
    const BACKING_TYPE_UNSPECIFIED = 0;
    /**
     * Flat v1.
     *
     * Generated from protobuf enum <code>BACKING_TYPE_FLAT_V1 = 1;</code>
     */
    const BACKING_TYPE_FLAT_V1 = 1;
    /**
     * Flat v2.
     *
     * Generated from protobuf enum <code>BACKING_TYPE_FLAT_V2 = 2;</code>
     */
    const BACKING_TYPE_FLAT_V2 = 2;
    /**
     * Persistent memory, also known as Non-Volatile Memory (NVM).
     *
     * Generated from protobuf enum <code>BACKING_TYPE_PMEM = 3;</code>
     */
    const BACKING_TYPE_PMEM = 3;
    /**
     * Raw Disk Memory v1.
     *
     * Generated from protobuf enum <code>BACKING_TYPE_RDM_V1 = 4;</code>
     */
    const BACKING_TYPE_RDM_V1 = 4;
    /**
     * Raw Disk Memory v2.
     *
     * Generated from protobuf enum <code>BACKING_TYPE_RDM_V2 = 5;</code>
     */
    const BACKING_TYPE_RDM_V2 = 5;
    /**
     * SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.
     *
     * Generated from protobuf enum <code>BACKING_TYPE_SESPARSE = 6;</code>
     */
    const BACKING_TYPE_SESPARSE = 6;
    /**
     * SEsparse v1.
     *
     * Generated from protobuf enum <code>BACKING_TYPE_SESPARSE_V1 = 7;</code>
     */
    const BACKING_TYPE_SESPARSE_V1 = 7;
    /**
     * SEsparse v1.
     *
     * Generated from protobuf enum <code>BACKING_TYPE_SESPARSE_V2 = 8;</code>
     */
    const BACKING_TYPE_SESPARSE_V2 = 8;

    private static $valueToName = [
        self::BACKING_TYPE_UNSPECIFIED => 'BACKING_TYPE_UNSPECIFIED',
        self::BACKING_TYPE_FLAT_V1 => 'BACKING_TYPE_FLAT_V1',
        self::BACKING_TYPE_FLAT_V2 => 'BACKING_TYPE_FLAT_V2',
        self::BACKING_TYPE_PMEM => 'BACKING_TYPE_PMEM',
        self::BACKING_TYPE_RDM_V1 => 'BACKING_TYPE_RDM_V1',
        self::BACKING_TYPE_RDM_V2 => 'BACKING_TYPE_RDM_V2',
        self::BACKING_TYPE_SESPARSE => 'BACKING_TYPE_SESPARSE',
        self::BACKING_TYPE_SESPARSE_V1 => 'BACKING_TYPE_SESPARSE_V1',
        self::BACKING_TYPE_SESPARSE_V2 => 'BACKING_TYPE_SESPARSE_V2',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


