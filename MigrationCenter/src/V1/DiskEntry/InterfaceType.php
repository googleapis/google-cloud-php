<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/migrationcenter/v1/migrationcenter.proto

namespace Google\Cloud\MigrationCenter\V1\DiskEntry;

use UnexpectedValueException;

/**
 * Disks interface type.
 *
 * Protobuf type <code>google.cloud.migrationcenter.v1.DiskEntry.InterfaceType</code>
 */
class InterfaceType
{
    /**
     * Interface type unknown or unspecified.
     *
     * Generated from protobuf enum <code>INTERFACE_TYPE_UNSPECIFIED = 0;</code>
     */
    const INTERFACE_TYPE_UNSPECIFIED = 0;
    /**
     * IDE interface type.
     *
     * Generated from protobuf enum <code>IDE = 1;</code>
     */
    const IDE = 1;
    /**
     * SATA interface type.
     *
     * Generated from protobuf enum <code>SATA = 2;</code>
     */
    const SATA = 2;
    /**
     * SAS interface type.
     *
     * Generated from protobuf enum <code>SAS = 3;</code>
     */
    const SAS = 3;
    /**
     * SCSI interface type.
     *
     * Generated from protobuf enum <code>SCSI = 4;</code>
     */
    const SCSI = 4;
    /**
     * NVME interface type.
     *
     * Generated from protobuf enum <code>NVME = 5;</code>
     */
    const NVME = 5;
    /**
     * FC interface type.
     *
     * Generated from protobuf enum <code>FC = 6;</code>
     */
    const FC = 6;
    /**
     * iSCSI interface type.
     *
     * Generated from protobuf enum <code>ISCSI = 7;</code>
     */
    const ISCSI = 7;

    private static $valueToName = [
        self::INTERFACE_TYPE_UNSPECIFIED => 'INTERFACE_TYPE_UNSPECIFIED',
        self::IDE => 'IDE',
        self::SATA => 'SATA',
        self::SAS => 'SAS',
        self::SCSI => 'SCSI',
        self::NVME => 'NVME',
        self::FC => 'FC',
        self::ISCSI => 'ISCSI',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


