<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/networkservices/v1/grpc_route.proto

namespace Google\Cloud\NetworkServices\V1\GrpcRoute;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Specifies how to route matched traffic.
 *
 * Generated from protobuf message <code>google.cloud.networkservices.v1.GrpcRoute.RouteAction</code>
 */
class RouteAction extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The destination services to which traffic should be forwarded.
     * If multiple destinations are specified, traffic will be split between
     * Backend Service(s) according to the weight field of these destinations.
     *
     * Generated from protobuf field <code>repeated .google.cloud.networkservices.v1.GrpcRoute.Destination destinations = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $destinations;
    /**
     * Optional. The specification for fault injection introduced into traffic to test the
     * resiliency of clients to destination service failure. As part of fault
     * injection, when clients send requests to a destination, delays can be
     * introduced on a percentage of requests before sending those requests to
     * the destination service. Similarly requests from clients can be aborted
     * by for a percentage of requests.
     * timeout and retry_policy will be ignored by clients that are configured
     * with a fault_injection_policy
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.GrpcRoute.FaultInjectionPolicy fault_injection_policy = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $fault_injection_policy = null;
    /**
     * Optional. Specifies the timeout for selected route. Timeout is computed
     * from the time the request has been fully processed (i.e. end of stream)
     * up until the response has been completely processed. Timeout includes all
     * retries.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration timeout = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $timeout = null;
    /**
     * Optional. Specifies the retry policy associated with this route.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.GrpcRoute.RetryPolicy retry_policy = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $retry_policy = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Google\Cloud\NetworkServices\V1\GrpcRoute\Destination>|\Google\Protobuf\Internal\RepeatedField $destinations
     *           Optional. The destination services to which traffic should be forwarded.
     *           If multiple destinations are specified, traffic will be split between
     *           Backend Service(s) according to the weight field of these destinations.
     *     @type \Google\Cloud\NetworkServices\V1\GrpcRoute\FaultInjectionPolicy $fault_injection_policy
     *           Optional. The specification for fault injection introduced into traffic to test the
     *           resiliency of clients to destination service failure. As part of fault
     *           injection, when clients send requests to a destination, delays can be
     *           introduced on a percentage of requests before sending those requests to
     *           the destination service. Similarly requests from clients can be aborted
     *           by for a percentage of requests.
     *           timeout and retry_policy will be ignored by clients that are configured
     *           with a fault_injection_policy
     *     @type \Google\Protobuf\Duration $timeout
     *           Optional. Specifies the timeout for selected route. Timeout is computed
     *           from the time the request has been fully processed (i.e. end of stream)
     *           up until the response has been completely processed. Timeout includes all
     *           retries.
     *     @type \Google\Cloud\NetworkServices\V1\GrpcRoute\RetryPolicy $retry_policy
     *           Optional. Specifies the retry policy associated with this route.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Networkservices\V1\GrpcRoute::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The destination services to which traffic should be forwarded.
     * If multiple destinations are specified, traffic will be split between
     * Backend Service(s) according to the weight field of these destinations.
     *
     * Generated from protobuf field <code>repeated .google.cloud.networkservices.v1.GrpcRoute.Destination destinations = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDestinations()
    {
        return $this->destinations;
    }

    /**
     * Optional. The destination services to which traffic should be forwarded.
     * If multiple destinations are specified, traffic will be split between
     * Backend Service(s) according to the weight field of these destinations.
     *
     * Generated from protobuf field <code>repeated .google.cloud.networkservices.v1.GrpcRoute.Destination destinations = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Cloud\NetworkServices\V1\GrpcRoute\Destination>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDestinations($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\NetworkServices\V1\GrpcRoute\Destination::class);
        $this->destinations = $arr;

        return $this;
    }

    /**
     * Optional. The specification for fault injection introduced into traffic to test the
     * resiliency of clients to destination service failure. As part of fault
     * injection, when clients send requests to a destination, delays can be
     * introduced on a percentage of requests before sending those requests to
     * the destination service. Similarly requests from clients can be aborted
     * by for a percentage of requests.
     * timeout and retry_policy will be ignored by clients that are configured
     * with a fault_injection_policy
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.GrpcRoute.FaultInjectionPolicy fault_injection_policy = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\NetworkServices\V1\GrpcRoute\FaultInjectionPolicy|null
     */
    public function getFaultInjectionPolicy()
    {
        return $this->fault_injection_policy;
    }

    public function hasFaultInjectionPolicy()
    {
        return isset($this->fault_injection_policy);
    }

    public function clearFaultInjectionPolicy()
    {
        unset($this->fault_injection_policy);
    }

    /**
     * Optional. The specification for fault injection introduced into traffic to test the
     * resiliency of clients to destination service failure. As part of fault
     * injection, when clients send requests to a destination, delays can be
     * introduced on a percentage of requests before sending those requests to
     * the destination service. Similarly requests from clients can be aborted
     * by for a percentage of requests.
     * timeout and retry_policy will be ignored by clients that are configured
     * with a fault_injection_policy
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.GrpcRoute.FaultInjectionPolicy fault_injection_policy = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\NetworkServices\V1\GrpcRoute\FaultInjectionPolicy $var
     * @return $this
     */
    public function setFaultInjectionPolicy($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\NetworkServices\V1\GrpcRoute\FaultInjectionPolicy::class);
        $this->fault_injection_policy = $var;

        return $this;
    }

    /**
     * Optional. Specifies the timeout for selected route. Timeout is computed
     * from the time the request has been fully processed (i.e. end of stream)
     * up until the response has been completely processed. Timeout includes all
     * retries.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration timeout = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getTimeout()
    {
        return $this->timeout;
    }

    public function hasTimeout()
    {
        return isset($this->timeout);
    }

    public function clearTimeout()
    {
        unset($this->timeout);
    }

    /**
     * Optional. Specifies the timeout for selected route. Timeout is computed
     * from the time the request has been fully processed (i.e. end of stream)
     * up until the response has been completely processed. Timeout includes all
     * retries.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration timeout = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setTimeout($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->timeout = $var;

        return $this;
    }

    /**
     * Optional. Specifies the retry policy associated with this route.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.GrpcRoute.RetryPolicy retry_policy = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\NetworkServices\V1\GrpcRoute\RetryPolicy|null
     */
    public function getRetryPolicy()
    {
        return $this->retry_policy;
    }

    public function hasRetryPolicy()
    {
        return isset($this->retry_policy);
    }

    public function clearRetryPolicy()
    {
        unset($this->retry_policy);
    }

    /**
     * Optional. Specifies the retry policy associated with this route.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.GrpcRoute.RetryPolicy retry_policy = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\NetworkServices\V1\GrpcRoute\RetryPolicy $var
     * @return $this
     */
    public function setRetryPolicy($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\NetworkServices\V1\GrpcRoute\RetryPolicy::class);
        $this->retry_policy = $var;

        return $this;
    }

}


