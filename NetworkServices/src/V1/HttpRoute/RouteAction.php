<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/networkservices/v1/http_route.proto

namespace Google\Cloud\NetworkServices\V1\HttpRoute;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The specifications for routing traffic and applying associated policies.
 *
 * Generated from protobuf message <code>google.cloud.networkservices.v1.HttpRoute.RouteAction</code>
 */
class RouteAction extends \Google\Protobuf\Internal\Message
{
    /**
     * The destination to which traffic should be forwarded.
     *
     * Generated from protobuf field <code>repeated .google.cloud.networkservices.v1.HttpRoute.Destination destinations = 1;</code>
     */
    private $destinations;
    /**
     * If set, the request is directed as configured by this field.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.Redirect redirect = 2;</code>
     */
    protected $redirect = null;
    /**
     * The specification for fault injection introduced into traffic to test the
     * resiliency of clients to backend service failure. As part of fault
     * injection, when clients send requests to a backend service, delays can be
     * introduced  on a percentage of requests before sending those requests to
     * the backend service. Similarly requests from clients can be aborted for a
     * percentage of requests.
     * timeout and retry_policy will be ignored by clients that are configured
     * with a fault_injection_policy
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.FaultInjectionPolicy fault_injection_policy = 4;</code>
     */
    protected $fault_injection_policy = null;
    /**
     * The specification for modifying the headers of a matching request prior
     * to delivery of the request to the destination. If HeaderModifiers are set
     * on both the Destination and the RouteAction, they will be merged.
     * Conflicts between the two will not be resolved on the configuration.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.HeaderModifier request_header_modifier = 5;</code>
     */
    protected $request_header_modifier = null;
    /**
     * The specification for modifying the headers of a response prior to
     * sending the response back to the client. If HeaderModifiers are set
     * on both the Destination and the RouteAction, they will be merged.
     * Conflicts between the two will not be resolved on the configuration.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.HeaderModifier response_header_modifier = 6;</code>
     */
    protected $response_header_modifier = null;
    /**
     * The specification for rewrite URL before forwarding requests to the
     * destination.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.URLRewrite url_rewrite = 7;</code>
     */
    protected $url_rewrite = null;
    /**
     * Specifies the timeout for selected route. Timeout is computed from the
     * time the request has been fully processed (i.e. end of stream) up until
     * the response has been completely processed. Timeout includes all retries.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration timeout = 8;</code>
     */
    protected $timeout = null;
    /**
     * Specifies the retry policy associated with this route.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.RetryPolicy retry_policy = 9;</code>
     */
    protected $retry_policy = null;
    /**
     * Specifies the policy on how requests intended for the routes destination
     * are shadowed to a separate mirrored destination. Proxy will not wait for
     * the shadow destination to respond before returning the response. Prior to
     * sending traffic to the shadow service, the host/authority header is
     * suffixed with -shadow.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.RequestMirrorPolicy request_mirror_policy = 10;</code>
     */
    protected $request_mirror_policy = null;
    /**
     * The specification for allowing client side cross-origin requests.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.CorsPolicy cors_policy = 11;</code>
     */
    protected $cors_policy = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<\Google\Cloud\NetworkServices\V1\HttpRoute\Destination>|\Google\Protobuf\Internal\RepeatedField $destinations
     *           The destination to which traffic should be forwarded.
     *     @type \Google\Cloud\NetworkServices\V1\HttpRoute\Redirect $redirect
     *           If set, the request is directed as configured by this field.
     *     @type \Google\Cloud\NetworkServices\V1\HttpRoute\FaultInjectionPolicy $fault_injection_policy
     *           The specification for fault injection introduced into traffic to test the
     *           resiliency of clients to backend service failure. As part of fault
     *           injection, when clients send requests to a backend service, delays can be
     *           introduced  on a percentage of requests before sending those requests to
     *           the backend service. Similarly requests from clients can be aborted for a
     *           percentage of requests.
     *           timeout and retry_policy will be ignored by clients that are configured
     *           with a fault_injection_policy
     *     @type \Google\Cloud\NetworkServices\V1\HttpRoute\HeaderModifier $request_header_modifier
     *           The specification for modifying the headers of a matching request prior
     *           to delivery of the request to the destination. If HeaderModifiers are set
     *           on both the Destination and the RouteAction, they will be merged.
     *           Conflicts between the two will not be resolved on the configuration.
     *     @type \Google\Cloud\NetworkServices\V1\HttpRoute\HeaderModifier $response_header_modifier
     *           The specification for modifying the headers of a response prior to
     *           sending the response back to the client. If HeaderModifiers are set
     *           on both the Destination and the RouteAction, they will be merged.
     *           Conflicts between the two will not be resolved on the configuration.
     *     @type \Google\Cloud\NetworkServices\V1\HttpRoute\URLRewrite $url_rewrite
     *           The specification for rewrite URL before forwarding requests to the
     *           destination.
     *     @type \Google\Protobuf\Duration $timeout
     *           Specifies the timeout for selected route. Timeout is computed from the
     *           time the request has been fully processed (i.e. end of stream) up until
     *           the response has been completely processed. Timeout includes all retries.
     *     @type \Google\Cloud\NetworkServices\V1\HttpRoute\RetryPolicy $retry_policy
     *           Specifies the retry policy associated with this route.
     *     @type \Google\Cloud\NetworkServices\V1\HttpRoute\RequestMirrorPolicy $request_mirror_policy
     *           Specifies the policy on how requests intended for the routes destination
     *           are shadowed to a separate mirrored destination. Proxy will not wait for
     *           the shadow destination to respond before returning the response. Prior to
     *           sending traffic to the shadow service, the host/authority header is
     *           suffixed with -shadow.
     *     @type \Google\Cloud\NetworkServices\V1\HttpRoute\CorsPolicy $cors_policy
     *           The specification for allowing client side cross-origin requests.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Networkservices\V1\HttpRoute::initOnce();
        parent::__construct($data);
    }

    /**
     * The destination to which traffic should be forwarded.
     *
     * Generated from protobuf field <code>repeated .google.cloud.networkservices.v1.HttpRoute.Destination destinations = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDestinations()
    {
        return $this->destinations;
    }

    /**
     * The destination to which traffic should be forwarded.
     *
     * Generated from protobuf field <code>repeated .google.cloud.networkservices.v1.HttpRoute.Destination destinations = 1;</code>
     * @param array<\Google\Cloud\NetworkServices\V1\HttpRoute\Destination>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDestinations($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\NetworkServices\V1\HttpRoute\Destination::class);
        $this->destinations = $arr;

        return $this;
    }

    /**
     * If set, the request is directed as configured by this field.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.Redirect redirect = 2;</code>
     * @return \Google\Cloud\NetworkServices\V1\HttpRoute\Redirect|null
     */
    public function getRedirect()
    {
        return $this->redirect;
    }

    public function hasRedirect()
    {
        return isset($this->redirect);
    }

    public function clearRedirect()
    {
        unset($this->redirect);
    }

    /**
     * If set, the request is directed as configured by this field.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.Redirect redirect = 2;</code>
     * @param \Google\Cloud\NetworkServices\V1\HttpRoute\Redirect $var
     * @return $this
     */
    public function setRedirect($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\NetworkServices\V1\HttpRoute\Redirect::class);
        $this->redirect = $var;

        return $this;
    }

    /**
     * The specification for fault injection introduced into traffic to test the
     * resiliency of clients to backend service failure. As part of fault
     * injection, when clients send requests to a backend service, delays can be
     * introduced  on a percentage of requests before sending those requests to
     * the backend service. Similarly requests from clients can be aborted for a
     * percentage of requests.
     * timeout and retry_policy will be ignored by clients that are configured
     * with a fault_injection_policy
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.FaultInjectionPolicy fault_injection_policy = 4;</code>
     * @return \Google\Cloud\NetworkServices\V1\HttpRoute\FaultInjectionPolicy|null
     */
    public function getFaultInjectionPolicy()
    {
        return $this->fault_injection_policy;
    }

    public function hasFaultInjectionPolicy()
    {
        return isset($this->fault_injection_policy);
    }

    public function clearFaultInjectionPolicy()
    {
        unset($this->fault_injection_policy);
    }

    /**
     * The specification for fault injection introduced into traffic to test the
     * resiliency of clients to backend service failure. As part of fault
     * injection, when clients send requests to a backend service, delays can be
     * introduced  on a percentage of requests before sending those requests to
     * the backend service. Similarly requests from clients can be aborted for a
     * percentage of requests.
     * timeout and retry_policy will be ignored by clients that are configured
     * with a fault_injection_policy
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.FaultInjectionPolicy fault_injection_policy = 4;</code>
     * @param \Google\Cloud\NetworkServices\V1\HttpRoute\FaultInjectionPolicy $var
     * @return $this
     */
    public function setFaultInjectionPolicy($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\NetworkServices\V1\HttpRoute\FaultInjectionPolicy::class);
        $this->fault_injection_policy = $var;

        return $this;
    }

    /**
     * The specification for modifying the headers of a matching request prior
     * to delivery of the request to the destination. If HeaderModifiers are set
     * on both the Destination and the RouteAction, they will be merged.
     * Conflicts between the two will not be resolved on the configuration.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.HeaderModifier request_header_modifier = 5;</code>
     * @return \Google\Cloud\NetworkServices\V1\HttpRoute\HeaderModifier|null
     */
    public function getRequestHeaderModifier()
    {
        return $this->request_header_modifier;
    }

    public function hasRequestHeaderModifier()
    {
        return isset($this->request_header_modifier);
    }

    public function clearRequestHeaderModifier()
    {
        unset($this->request_header_modifier);
    }

    /**
     * The specification for modifying the headers of a matching request prior
     * to delivery of the request to the destination. If HeaderModifiers are set
     * on both the Destination and the RouteAction, they will be merged.
     * Conflicts between the two will not be resolved on the configuration.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.HeaderModifier request_header_modifier = 5;</code>
     * @param \Google\Cloud\NetworkServices\V1\HttpRoute\HeaderModifier $var
     * @return $this
     */
    public function setRequestHeaderModifier($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\NetworkServices\V1\HttpRoute\HeaderModifier::class);
        $this->request_header_modifier = $var;

        return $this;
    }

    /**
     * The specification for modifying the headers of a response prior to
     * sending the response back to the client. If HeaderModifiers are set
     * on both the Destination and the RouteAction, they will be merged.
     * Conflicts between the two will not be resolved on the configuration.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.HeaderModifier response_header_modifier = 6;</code>
     * @return \Google\Cloud\NetworkServices\V1\HttpRoute\HeaderModifier|null
     */
    public function getResponseHeaderModifier()
    {
        return $this->response_header_modifier;
    }

    public function hasResponseHeaderModifier()
    {
        return isset($this->response_header_modifier);
    }

    public function clearResponseHeaderModifier()
    {
        unset($this->response_header_modifier);
    }

    /**
     * The specification for modifying the headers of a response prior to
     * sending the response back to the client. If HeaderModifiers are set
     * on both the Destination and the RouteAction, they will be merged.
     * Conflicts between the two will not be resolved on the configuration.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.HeaderModifier response_header_modifier = 6;</code>
     * @param \Google\Cloud\NetworkServices\V1\HttpRoute\HeaderModifier $var
     * @return $this
     */
    public function setResponseHeaderModifier($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\NetworkServices\V1\HttpRoute\HeaderModifier::class);
        $this->response_header_modifier = $var;

        return $this;
    }

    /**
     * The specification for rewrite URL before forwarding requests to the
     * destination.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.URLRewrite url_rewrite = 7;</code>
     * @return \Google\Cloud\NetworkServices\V1\HttpRoute\URLRewrite|null
     */
    public function getUrlRewrite()
    {
        return $this->url_rewrite;
    }

    public function hasUrlRewrite()
    {
        return isset($this->url_rewrite);
    }

    public function clearUrlRewrite()
    {
        unset($this->url_rewrite);
    }

    /**
     * The specification for rewrite URL before forwarding requests to the
     * destination.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.URLRewrite url_rewrite = 7;</code>
     * @param \Google\Cloud\NetworkServices\V1\HttpRoute\URLRewrite $var
     * @return $this
     */
    public function setUrlRewrite($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\NetworkServices\V1\HttpRoute\URLRewrite::class);
        $this->url_rewrite = $var;

        return $this;
    }

    /**
     * Specifies the timeout for selected route. Timeout is computed from the
     * time the request has been fully processed (i.e. end of stream) up until
     * the response has been completely processed. Timeout includes all retries.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration timeout = 8;</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getTimeout()
    {
        return $this->timeout;
    }

    public function hasTimeout()
    {
        return isset($this->timeout);
    }

    public function clearTimeout()
    {
        unset($this->timeout);
    }

    /**
     * Specifies the timeout for selected route. Timeout is computed from the
     * time the request has been fully processed (i.e. end of stream) up until
     * the response has been completely processed. Timeout includes all retries.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration timeout = 8;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setTimeout($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->timeout = $var;

        return $this;
    }

    /**
     * Specifies the retry policy associated with this route.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.RetryPolicy retry_policy = 9;</code>
     * @return \Google\Cloud\NetworkServices\V1\HttpRoute\RetryPolicy|null
     */
    public function getRetryPolicy()
    {
        return $this->retry_policy;
    }

    public function hasRetryPolicy()
    {
        return isset($this->retry_policy);
    }

    public function clearRetryPolicy()
    {
        unset($this->retry_policy);
    }

    /**
     * Specifies the retry policy associated with this route.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.RetryPolicy retry_policy = 9;</code>
     * @param \Google\Cloud\NetworkServices\V1\HttpRoute\RetryPolicy $var
     * @return $this
     */
    public function setRetryPolicy($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\NetworkServices\V1\HttpRoute\RetryPolicy::class);
        $this->retry_policy = $var;

        return $this;
    }

    /**
     * Specifies the policy on how requests intended for the routes destination
     * are shadowed to a separate mirrored destination. Proxy will not wait for
     * the shadow destination to respond before returning the response. Prior to
     * sending traffic to the shadow service, the host/authority header is
     * suffixed with -shadow.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.RequestMirrorPolicy request_mirror_policy = 10;</code>
     * @return \Google\Cloud\NetworkServices\V1\HttpRoute\RequestMirrorPolicy|null
     */
    public function getRequestMirrorPolicy()
    {
        return $this->request_mirror_policy;
    }

    public function hasRequestMirrorPolicy()
    {
        return isset($this->request_mirror_policy);
    }

    public function clearRequestMirrorPolicy()
    {
        unset($this->request_mirror_policy);
    }

    /**
     * Specifies the policy on how requests intended for the routes destination
     * are shadowed to a separate mirrored destination. Proxy will not wait for
     * the shadow destination to respond before returning the response. Prior to
     * sending traffic to the shadow service, the host/authority header is
     * suffixed with -shadow.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.RequestMirrorPolicy request_mirror_policy = 10;</code>
     * @param \Google\Cloud\NetworkServices\V1\HttpRoute\RequestMirrorPolicy $var
     * @return $this
     */
    public function setRequestMirrorPolicy($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\NetworkServices\V1\HttpRoute\RequestMirrorPolicy::class);
        $this->request_mirror_policy = $var;

        return $this;
    }

    /**
     * The specification for allowing client side cross-origin requests.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.CorsPolicy cors_policy = 11;</code>
     * @return \Google\Cloud\NetworkServices\V1\HttpRoute\CorsPolicy|null
     */
    public function getCorsPolicy()
    {
        return $this->cors_policy;
    }

    public function hasCorsPolicy()
    {
        return isset($this->cors_policy);
    }

    public function clearCorsPolicy()
    {
        unset($this->cors_policy);
    }

    /**
     * The specification for allowing client side cross-origin requests.
     *
     * Generated from protobuf field <code>.google.cloud.networkservices.v1.HttpRoute.CorsPolicy cors_policy = 11;</code>
     * @param \Google\Cloud\NetworkServices\V1\HttpRoute\CorsPolicy $var
     * @return $this
     */
    public function setCorsPolicy($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\NetworkServices\V1\HttpRoute\CorsPolicy::class);
        $this->cors_policy = $var;

        return $this;
    }

}


