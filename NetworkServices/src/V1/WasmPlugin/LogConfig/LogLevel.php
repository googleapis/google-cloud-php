<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/networkservices/v1/extensibility.proto

namespace Google\Cloud\NetworkServices\V1\WasmPlugin\LogConfig;

use UnexpectedValueException;

/**
 * Possible values to specify the lowest level of logs to be exported to
 * Cloud Logging.
 *
 * Protobuf type <code>google.cloud.networkservices.v1.WasmPlugin.LogConfig.LogLevel</code>
 */
class LogLevel
{
    /**
     * Unspecified value. Defaults to `LogLevel.INFO`.
     *
     * Generated from protobuf enum <code>LOG_LEVEL_UNSPECIFIED = 0;</code>
     */
    const LOG_LEVEL_UNSPECIFIED = 0;
    /**
     * Report logs with TRACE level and above.
     *
     * Generated from protobuf enum <code>TRACE = 1;</code>
     */
    const TRACE = 1;
    /**
     * Report logs with DEBUG level and above.
     *
     * Generated from protobuf enum <code>DEBUG = 2;</code>
     */
    const DEBUG = 2;
    /**
     * Report logs with INFO level and above.
     *
     * Generated from protobuf enum <code>INFO = 3;</code>
     */
    const INFO = 3;
    /**
     * Report logs with WARN level and above.
     *
     * Generated from protobuf enum <code>WARN = 4;</code>
     */
    const WARN = 4;
    /**
     * Report logs with ERROR level and above.
     *
     * Generated from protobuf enum <code>ERROR = 5;</code>
     */
    const ERROR = 5;
    /**
     * Report logs with CRITICAL level only.
     *
     * Generated from protobuf enum <code>CRITICAL = 6;</code>
     */
    const CRITICAL = 6;

    private static $valueToName = [
        self::LOG_LEVEL_UNSPECIFIED => 'LOG_LEVEL_UNSPECIFIED',
        self::TRACE => 'TRACE',
        self::DEBUG => 'DEBUG',
        self::INFO => 'INFO',
        self::WARN => 'WARN',
        self::ERROR => 'ERROR',
        self::CRITICAL => 'CRITICAL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


