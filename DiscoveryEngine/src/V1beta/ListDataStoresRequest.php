<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1beta/data_store_service.proto

namespace Google\Cloud\DiscoveryEngine\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [DataStoreService.ListDataStores][google.cloud.discoveryengine.v1beta.DataStoreService.ListDataStores]
 * method.
 *
 * Generated from protobuf message <code>google.cloud.discoveryengine.v1beta.ListDataStoresRequest</code>
 */
class ListDataStoresRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The parent branch resource name, such as
     * `projects/{project}/locations/{location}/collections/{collection_id}`.
     * If the caller does not have permission to list
     * [DataStore][google.cloud.discoveryengine.v1beta.DataStore]s under this
     * location, regardless of whether or not this data store exists, a
     * PERMISSION_DENIED error is returned.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Maximum number of
     * [DataStore][google.cloud.discoveryengine.v1beta.DataStore]s to return. If
     * unspecified, defaults to 10. The maximum allowed value is 50. Values above
     * 50 will be coerced to 50.
     * If this field is negative, an INVALID_ARGUMENT is returned.
     *
     * Generated from protobuf field <code>int32 page_size = 2;</code>
     */
    protected $page_size = 0;
    /**
     * A page token
     * [ListDataStoresResponse.next_page_token][google.cloud.discoveryengine.v1beta.ListDataStoresResponse.next_page_token],
     * received from a previous
     * [DataStoreService.ListDataStores][google.cloud.discoveryengine.v1beta.DataStoreService.ListDataStores]
     * call. Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to
     * [DataStoreService.ListDataStores][google.cloud.discoveryengine.v1beta.DataStoreService.ListDataStores]
     * must match the call that provided the page token. Otherwise, an
     * INVALID_ARGUMENT error is returned.
     *
     * Generated from protobuf field <code>string page_token = 3;</code>
     */
    protected $page_token = '';
    /**
     * Filter by solution type. For example: filter =
     * 'solution_type:SOLUTION_TYPE_SEARCH'
     *
     * Generated from protobuf field <code>string filter = 4;</code>
     */
    protected $filter = '';

    /**
     * @param string $parent Required. The parent branch resource name, such as
     *                       `projects/{project}/locations/{location}/collections/{collection_id}`.
     *
     *                       If the caller does not have permission to list
     *                       [DataStore][google.cloud.discoveryengine.v1beta.DataStore]s under this
     *                       location, regardless of whether or not this data store exists, a
     *                       PERMISSION_DENIED error is returned. Please see
     *                       {@see DataStoreServiceClient::collectionName()} for help formatting this field.
     *
     * @return \Google\Cloud\DiscoveryEngine\V1beta\ListDataStoresRequest
     *
     * @experimental
     */
    public static function build(string $parent): self
    {
        return (new self())
            ->setParent($parent);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The parent branch resource name, such as
     *           `projects/{project}/locations/{location}/collections/{collection_id}`.
     *           If the caller does not have permission to list
     *           [DataStore][google.cloud.discoveryengine.v1beta.DataStore]s under this
     *           location, regardless of whether or not this data store exists, a
     *           PERMISSION_DENIED error is returned.
     *     @type int $page_size
     *           Maximum number of
     *           [DataStore][google.cloud.discoveryengine.v1beta.DataStore]s to return. If
     *           unspecified, defaults to 10. The maximum allowed value is 50. Values above
     *           50 will be coerced to 50.
     *           If this field is negative, an INVALID_ARGUMENT is returned.
     *     @type string $page_token
     *           A page token
     *           [ListDataStoresResponse.next_page_token][google.cloud.discoveryengine.v1beta.ListDataStoresResponse.next_page_token],
     *           received from a previous
     *           [DataStoreService.ListDataStores][google.cloud.discoveryengine.v1beta.DataStoreService.ListDataStores]
     *           call. Provide this to retrieve the subsequent page.
     *           When paginating, all other parameters provided to
     *           [DataStoreService.ListDataStores][google.cloud.discoveryengine.v1beta.DataStoreService.ListDataStores]
     *           must match the call that provided the page token. Otherwise, an
     *           INVALID_ARGUMENT error is returned.
     *     @type string $filter
     *           Filter by solution type. For example: filter =
     *           'solution_type:SOLUTION_TYPE_SEARCH'
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Discoveryengine\V1Beta\DataStoreService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The parent branch resource name, such as
     * `projects/{project}/locations/{location}/collections/{collection_id}`.
     * If the caller does not have permission to list
     * [DataStore][google.cloud.discoveryengine.v1beta.DataStore]s under this
     * location, regardless of whether or not this data store exists, a
     * PERMISSION_DENIED error is returned.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The parent branch resource name, such as
     * `projects/{project}/locations/{location}/collections/{collection_id}`.
     * If the caller does not have permission to list
     * [DataStore][google.cloud.discoveryengine.v1beta.DataStore]s under this
     * location, regardless of whether or not this data store exists, a
     * PERMISSION_DENIED error is returned.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Maximum number of
     * [DataStore][google.cloud.discoveryengine.v1beta.DataStore]s to return. If
     * unspecified, defaults to 10. The maximum allowed value is 50. Values above
     * 50 will be coerced to 50.
     * If this field is negative, an INVALID_ARGUMENT is returned.
     *
     * Generated from protobuf field <code>int32 page_size = 2;</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * Maximum number of
     * [DataStore][google.cloud.discoveryengine.v1beta.DataStore]s to return. If
     * unspecified, defaults to 10. The maximum allowed value is 50. Values above
     * 50 will be coerced to 50.
     * If this field is negative, an INVALID_ARGUMENT is returned.
     *
     * Generated from protobuf field <code>int32 page_size = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * A page token
     * [ListDataStoresResponse.next_page_token][google.cloud.discoveryengine.v1beta.ListDataStoresResponse.next_page_token],
     * received from a previous
     * [DataStoreService.ListDataStores][google.cloud.discoveryengine.v1beta.DataStoreService.ListDataStores]
     * call. Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to
     * [DataStoreService.ListDataStores][google.cloud.discoveryengine.v1beta.DataStoreService.ListDataStores]
     * must match the call that provided the page token. Otherwise, an
     * INVALID_ARGUMENT error is returned.
     *
     * Generated from protobuf field <code>string page_token = 3;</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * A page token
     * [ListDataStoresResponse.next_page_token][google.cloud.discoveryengine.v1beta.ListDataStoresResponse.next_page_token],
     * received from a previous
     * [DataStoreService.ListDataStores][google.cloud.discoveryengine.v1beta.DataStoreService.ListDataStores]
     * call. Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to
     * [DataStoreService.ListDataStores][google.cloud.discoveryengine.v1beta.DataStoreService.ListDataStores]
     * must match the call that provided the page token. Otherwise, an
     * INVALID_ARGUMENT error is returned.
     *
     * Generated from protobuf field <code>string page_token = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

    /**
     * Filter by solution type. For example: filter =
     * 'solution_type:SOLUTION_TYPE_SEARCH'
     *
     * Generated from protobuf field <code>string filter = 4;</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Filter by solution type. For example: filter =
     * 'solution_type:SOLUTION_TYPE_SEARCH'
     *
     * Generated from protobuf field <code>string filter = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

}

