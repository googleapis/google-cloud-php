<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/assist_answer.proto

namespace Google\Cloud\DiscoveryEngine\V1\AssistAnswer;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * One part of the multi-part response of the assist call.
 *
 * Generated from protobuf message <code>google.cloud.discoveryengine.v1.AssistAnswer.Reply</code>
 */
class Reply extends \Google\Protobuf\Internal\Message
{
    protected $reply;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\DiscoveryEngine\V1\AssistantGroundedContent $grounded_content
     *           Possibly grounded response text or media from the assistant.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Discoveryengine\V1\AssistAnswer::initOnce();
        parent::__construct($data);
    }

    /**
     * Possibly grounded response text or media from the assistant.
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.AssistantGroundedContent grounded_content = 1;</code>
     * @return \Google\Cloud\DiscoveryEngine\V1\AssistantGroundedContent|null
     */
    public function getGroundedContent()
    {
        return $this->readOneof(1);
    }

    public function hasGroundedContent()
    {
        return $this->hasOneof(1);
    }

    /**
     * Possibly grounded response text or media from the assistant.
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.AssistantGroundedContent grounded_content = 1;</code>
     * @param \Google\Cloud\DiscoveryEngine\V1\AssistantGroundedContent $var
     * @return $this
     */
    public function setGroundedContent($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DiscoveryEngine\V1\AssistantGroundedContent::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getReply()
    {
        return $this->whichOneof("reply");
    }

}


