<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/conversational_search_service.proto

namespace Google\Cloud\DiscoveryEngine\V1\AnswerQueryRequest\SearchSpec;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Search parameters.
 *
 * Generated from protobuf message <code>google.cloud.discoveryengine.v1.AnswerQueryRequest.SearchSpec.SearchParams</code>
 */
class SearchParams extends \Google\Protobuf\Internal\Message
{
    /**
     * Number of search results to return.
     * The default value is 10.
     *
     * Generated from protobuf field <code>int32 max_return_results = 1;</code>
     */
    protected $max_return_results = 0;
    /**
     * The filter syntax consists of an expression language for constructing
     * a predicate from one or more fields of the documents being filtered.
     * Filter expression is case-sensitive. This will be used to filter
     * search results which may affect the Answer response.
     * If this field is unrecognizable, an  `INVALID_ARGUMENT`  is returned.
     * Filtering in Vertex AI Search is done by mapping the LHS filter key
     * to a key property defined in the Vertex AI Search backend -- this
     * mapping is defined by the customer in their schema. For example a
     * media customers might have a field 'name' in their schema. In this
     * case the filter would look like this: filter --> name:'ANY("king
     * kong")'
     * For more information about filtering including syntax and filter
     * operators, see
     * [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
     *
     * Generated from protobuf field <code>string filter = 2;</code>
     */
    protected $filter = '';
    /**
     * Boost specification to boost certain documents in search results which
     * may affect the answer query response. For more information on boosting,
     * see [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.SearchRequest.BoostSpec boost_spec = 3;</code>
     */
    protected $boost_spec = null;
    /**
     * The order in which documents are returned. Documents can be ordered
     * by a field in an [Document][google.cloud.discoveryengine.v1.Document]
     * object. Leave it unset if ordered by relevance. `order_by` expression
     * is case-sensitive. For more information on ordering, see
     * [Ordering](https://cloud.google.com/retail/docs/filter-and-order#order)
     * If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
     *
     * Generated from protobuf field <code>string order_by = 4;</code>
     */
    protected $order_by = '';
    /**
     * Specifies the search result mode. If unspecified, the
     * search result mode defaults to `DOCUMENTS`.
     * See [parse and chunk
     * documents](https://cloud.google.com/generative-ai-app-builder/docs/parse-chunk-documents)
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SearchResultMode search_result_mode = 5;</code>
     */
    protected $search_result_mode = 0;
    /**
     * Specs defining dataStores to filter on in a search call and
     * configurations for those dataStores. This is only considered for
     * engines with multiple dataStores use case. For single dataStore within
     * an engine, they should use the specs at the top level.
     *
     * Generated from protobuf field <code>repeated .google.cloud.discoveryengine.v1.SearchRequest.DataStoreSpec data_store_specs = 7;</code>
     */
    private $data_store_specs;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $max_return_results
     *           Number of search results to return.
     *           The default value is 10.
     *     @type string $filter
     *           The filter syntax consists of an expression language for constructing
     *           a predicate from one or more fields of the documents being filtered.
     *           Filter expression is case-sensitive. This will be used to filter
     *           search results which may affect the Answer response.
     *           If this field is unrecognizable, an  `INVALID_ARGUMENT`  is returned.
     *           Filtering in Vertex AI Search is done by mapping the LHS filter key
     *           to a key property defined in the Vertex AI Search backend -- this
     *           mapping is defined by the customer in their schema. For example a
     *           media customers might have a field 'name' in their schema. In this
     *           case the filter would look like this: filter --> name:'ANY("king
     *           kong")'
     *           For more information about filtering including syntax and filter
     *           operators, see
     *           [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
     *     @type \Google\Cloud\DiscoveryEngine\V1\SearchRequest\BoostSpec $boost_spec
     *           Boost specification to boost certain documents in search results which
     *           may affect the answer query response. For more information on boosting,
     *           see [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
     *     @type string $order_by
     *           The order in which documents are returned. Documents can be ordered
     *           by a field in an [Document][google.cloud.discoveryengine.v1.Document]
     *           object. Leave it unset if ordered by relevance. `order_by` expression
     *           is case-sensitive. For more information on ordering, see
     *           [Ordering](https://cloud.google.com/retail/docs/filter-and-order#order)
     *           If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
     *     @type int $search_result_mode
     *           Specifies the search result mode. If unspecified, the
     *           search result mode defaults to `DOCUMENTS`.
     *           See [parse and chunk
     *           documents](https://cloud.google.com/generative-ai-app-builder/docs/parse-chunk-documents)
     *     @type array<\Google\Cloud\DiscoveryEngine\V1\SearchRequest\DataStoreSpec>|\Google\Protobuf\Internal\RepeatedField $data_store_specs
     *           Specs defining dataStores to filter on in a search call and
     *           configurations for those dataStores. This is only considered for
     *           engines with multiple dataStores use case. For single dataStore within
     *           an engine, they should use the specs at the top level.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Discoveryengine\V1\ConversationalSearchService::initOnce();
        parent::__construct($data);
    }

    /**
     * Number of search results to return.
     * The default value is 10.
     *
     * Generated from protobuf field <code>int32 max_return_results = 1;</code>
     * @return int
     */
    public function getMaxReturnResults()
    {
        return $this->max_return_results;
    }

    /**
     * Number of search results to return.
     * The default value is 10.
     *
     * Generated from protobuf field <code>int32 max_return_results = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxReturnResults($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_return_results = $var;

        return $this;
    }

    /**
     * The filter syntax consists of an expression language for constructing
     * a predicate from one or more fields of the documents being filtered.
     * Filter expression is case-sensitive. This will be used to filter
     * search results which may affect the Answer response.
     * If this field is unrecognizable, an  `INVALID_ARGUMENT`  is returned.
     * Filtering in Vertex AI Search is done by mapping the LHS filter key
     * to a key property defined in the Vertex AI Search backend -- this
     * mapping is defined by the customer in their schema. For example a
     * media customers might have a field 'name' in their schema. In this
     * case the filter would look like this: filter --> name:'ANY("king
     * kong")'
     * For more information about filtering including syntax and filter
     * operators, see
     * [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
     *
     * Generated from protobuf field <code>string filter = 2;</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * The filter syntax consists of an expression language for constructing
     * a predicate from one or more fields of the documents being filtered.
     * Filter expression is case-sensitive. This will be used to filter
     * search results which may affect the Answer response.
     * If this field is unrecognizable, an  `INVALID_ARGUMENT`  is returned.
     * Filtering in Vertex AI Search is done by mapping the LHS filter key
     * to a key property defined in the Vertex AI Search backend -- this
     * mapping is defined by the customer in their schema. For example a
     * media customers might have a field 'name' in their schema. In this
     * case the filter would look like this: filter --> name:'ANY("king
     * kong")'
     * For more information about filtering including syntax and filter
     * operators, see
     * [Filter](https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata)
     *
     * Generated from protobuf field <code>string filter = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

    /**
     * Boost specification to boost certain documents in search results which
     * may affect the answer query response. For more information on boosting,
     * see [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.SearchRequest.BoostSpec boost_spec = 3;</code>
     * @return \Google\Cloud\DiscoveryEngine\V1\SearchRequest\BoostSpec|null
     */
    public function getBoostSpec()
    {
        return $this->boost_spec;
    }

    public function hasBoostSpec()
    {
        return isset($this->boost_spec);
    }

    public function clearBoostSpec()
    {
        unset($this->boost_spec);
    }

    /**
     * Boost specification to boost certain documents in search results which
     * may affect the answer query response. For more information on boosting,
     * see [Boosting](https://cloud.google.com/retail/docs/boosting#boost)
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.SearchRequest.BoostSpec boost_spec = 3;</code>
     * @param \Google\Cloud\DiscoveryEngine\V1\SearchRequest\BoostSpec $var
     * @return $this
     */
    public function setBoostSpec($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DiscoveryEngine\V1\SearchRequest\BoostSpec::class);
        $this->boost_spec = $var;

        return $this;
    }

    /**
     * The order in which documents are returned. Documents can be ordered
     * by a field in an [Document][google.cloud.discoveryengine.v1.Document]
     * object. Leave it unset if ordered by relevance. `order_by` expression
     * is case-sensitive. For more information on ordering, see
     * [Ordering](https://cloud.google.com/retail/docs/filter-and-order#order)
     * If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
     *
     * Generated from protobuf field <code>string order_by = 4;</code>
     * @return string
     */
    public function getOrderBy()
    {
        return $this->order_by;
    }

    /**
     * The order in which documents are returned. Documents can be ordered
     * by a field in an [Document][google.cloud.discoveryengine.v1.Document]
     * object. Leave it unset if ordered by relevance. `order_by` expression
     * is case-sensitive. For more information on ordering, see
     * [Ordering](https://cloud.google.com/retail/docs/filter-and-order#order)
     * If this field is unrecognizable, an `INVALID_ARGUMENT` is returned.
     *
     * Generated from protobuf field <code>string order_by = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setOrderBy($var)
    {
        GPBUtil::checkString($var, True);
        $this->order_by = $var;

        return $this;
    }

    /**
     * Specifies the search result mode. If unspecified, the
     * search result mode defaults to `DOCUMENTS`.
     * See [parse and chunk
     * documents](https://cloud.google.com/generative-ai-app-builder/docs/parse-chunk-documents)
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SearchResultMode search_result_mode = 5;</code>
     * @return int
     */
    public function getSearchResultMode()
    {
        return $this->search_result_mode;
    }

    /**
     * Specifies the search result mode. If unspecified, the
     * search result mode defaults to `DOCUMENTS`.
     * See [parse and chunk
     * documents](https://cloud.google.com/generative-ai-app-builder/docs/parse-chunk-documents)
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.SearchRequest.ContentSearchSpec.SearchResultMode search_result_mode = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setSearchResultMode($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\DiscoveryEngine\V1\SearchRequest\ContentSearchSpec\SearchResultMode::class);
        $this->search_result_mode = $var;

        return $this;
    }

    /**
     * Specs defining dataStores to filter on in a search call and
     * configurations for those dataStores. This is only considered for
     * engines with multiple dataStores use case. For single dataStore within
     * an engine, they should use the specs at the top level.
     *
     * Generated from protobuf field <code>repeated .google.cloud.discoveryengine.v1.SearchRequest.DataStoreSpec data_store_specs = 7;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDataStoreSpecs()
    {
        return $this->data_store_specs;
    }

    /**
     * Specs defining dataStores to filter on in a search call and
     * configurations for those dataStores. This is only considered for
     * engines with multiple dataStores use case. For single dataStore within
     * an engine, they should use the specs at the top level.
     *
     * Generated from protobuf field <code>repeated .google.cloud.discoveryengine.v1.SearchRequest.DataStoreSpec data_store_specs = 7;</code>
     * @param array<\Google\Cloud\DiscoveryEngine\V1\SearchRequest\DataStoreSpec>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDataStoreSpecs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\DiscoveryEngine\V1\SearchRequest\DataStoreSpec::class);
        $this->data_store_specs = $arr;

        return $this;
    }

}


