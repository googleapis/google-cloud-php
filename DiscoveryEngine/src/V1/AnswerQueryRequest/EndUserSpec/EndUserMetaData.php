<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/conversational_search_service.proto

namespace Google\Cloud\DiscoveryEngine\V1\AnswerQueryRequest\EndUserSpec;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * End user metadata.
 *
 * Generated from protobuf message <code>google.cloud.discoveryengine.v1.AnswerQueryRequest.EndUserSpec.EndUserMetaData</code>
 */
class EndUserMetaData extends \Google\Protobuf\Internal\Message
{
    protected $content;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\DiscoveryEngine\V1\AnswerQueryRequest\EndUserSpec\EndUserMetaData\ChunkInfo $chunk_info
     *           Chunk information.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Discoveryengine\V1\ConversationalSearchService::initOnce();
        parent::__construct($data);
    }

    /**
     * Chunk information.
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.AnswerQueryRequest.EndUserSpec.EndUserMetaData.ChunkInfo chunk_info = 1;</code>
     * @return \Google\Cloud\DiscoveryEngine\V1\AnswerQueryRequest\EndUserSpec\EndUserMetaData\ChunkInfo|null
     */
    public function getChunkInfo()
    {
        return $this->readOneof(1);
    }

    public function hasChunkInfo()
    {
        return $this->hasOneof(1);
    }

    /**
     * Chunk information.
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.AnswerQueryRequest.EndUserSpec.EndUserMetaData.ChunkInfo chunk_info = 1;</code>
     * @param \Google\Cloud\DiscoveryEngine\V1\AnswerQueryRequest\EndUserSpec\EndUserMetaData\ChunkInfo $var
     * @return $this
     */
    public function setChunkInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DiscoveryEngine\V1\AnswerQueryRequest\EndUserSpec\EndUserMetaData\ChunkInfo::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getContent()
    {
        return $this->whichOneof("content");
    }

}


