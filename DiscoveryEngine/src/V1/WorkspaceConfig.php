<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/data_store.proto

namespace Google\Cloud\DiscoveryEngine\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Config to store data store type configuration for workspace data
 *
 * Generated from protobuf message <code>google.cloud.discoveryengine.v1.WorkspaceConfig</code>
 */
class WorkspaceConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * The Google Workspace data source.
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.WorkspaceConfig.Type type = 1;</code>
     */
    protected $type = 0;
    /**
     * Obfuscated Dasher customer ID.
     *
     * Generated from protobuf field <code>string dasher_customer_id = 2;</code>
     */
    protected $dasher_customer_id = '';
    /**
     * Optional. The super admin service account for the workspace that will be
     * used for access token generation. For now we only use it for Native Google
     * Drive connector data ingestion.
     *
     * Generated from protobuf field <code>string super_admin_service_account = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $super_admin_service_account = '';
    /**
     * Optional. The super admin email address for the workspace that will be used
     * for access token generation. For now we only use it for Native Google Drive
     * connector data ingestion.
     *
     * Generated from protobuf field <code>string super_admin_email_address = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $super_admin_email_address = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $type
     *           The Google Workspace data source.
     *     @type string $dasher_customer_id
     *           Obfuscated Dasher customer ID.
     *     @type string $super_admin_service_account
     *           Optional. The super admin service account for the workspace that will be
     *           used for access token generation. For now we only use it for Native Google
     *           Drive connector data ingestion.
     *     @type string $super_admin_email_address
     *           Optional. The super admin email address for the workspace that will be used
     *           for access token generation. For now we only use it for Native Google Drive
     *           connector data ingestion.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Discoveryengine\V1\DataStore::initOnce();
        parent::__construct($data);
    }

    /**
     * The Google Workspace data source.
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.WorkspaceConfig.Type type = 1;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * The Google Workspace data source.
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.WorkspaceConfig.Type type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\DiscoveryEngine\V1\WorkspaceConfig\Type::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Obfuscated Dasher customer ID.
     *
     * Generated from protobuf field <code>string dasher_customer_id = 2;</code>
     * @return string
     */
    public function getDasherCustomerId()
    {
        return $this->dasher_customer_id;
    }

    /**
     * Obfuscated Dasher customer ID.
     *
     * Generated from protobuf field <code>string dasher_customer_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDasherCustomerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->dasher_customer_id = $var;

        return $this;
    }

    /**
     * Optional. The super admin service account for the workspace that will be
     * used for access token generation. For now we only use it for Native Google
     * Drive connector data ingestion.
     *
     * Generated from protobuf field <code>string super_admin_service_account = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getSuperAdminServiceAccount()
    {
        return $this->super_admin_service_account;
    }

    /**
     * Optional. The super admin service account for the workspace that will be
     * used for access token generation. For now we only use it for Native Google
     * Drive connector data ingestion.
     *
     * Generated from protobuf field <code>string super_admin_service_account = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setSuperAdminServiceAccount($var)
    {
        GPBUtil::checkString($var, True);
        $this->super_admin_service_account = $var;

        return $this;
    }

    /**
     * Optional. The super admin email address for the workspace that will be used
     * for access token generation. For now we only use it for Native Google Drive
     * connector data ingestion.
     *
     * Generated from protobuf field <code>string super_admin_email_address = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getSuperAdminEmailAddress()
    {
        return $this->super_admin_email_address;
    }

    /**
     * Optional. The super admin email address for the workspace that will be used
     * for access token generation. For now we only use it for Native Google Drive
     * connector data ingestion.
     *
     * Generated from protobuf field <code>string super_admin_email_address = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setSuperAdminEmailAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->super_admin_email_address = $var;

        return $this;
    }

}

