<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/import_config.proto

namespace Google\Cloud\DiscoveryEngine\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Cloud Storage location for input content.
 *
 * Generated from protobuf message <code>google.cloud.discoveryengine.v1.GcsSource</code>
 */
class GcsSource extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Cloud Storage URIs to input files. URI can be up to
     * 2000 characters long. URIs can match the full object path (for example,
     * `gs://bucket/directory/object.json`) or a pattern matching one or more
     * files, such as `gs://bucket/directory/&#42;.json`.
     * A request can contain at most 100 files (or 100,000 files if `data_schema`
     * is `content`). Each file can be up to 2 GB (or 100 MB if `data_schema` is
     * `content`).
     *
     * Generated from protobuf field <code>repeated string input_uris = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $input_uris;
    /**
     * The schema to use when parsing the data from the source.
     * Supported values for document imports:
     * * `document` (default): One JSON
     * [Document][google.cloud.discoveryengine.v1.Document] per line. Each
     * document must
     *   have a valid [Document.id][google.cloud.discoveryengine.v1.Document.id].
     * * `content`: Unstructured data (e.g. PDF, HTML). Each file matched by
     *   `input_uris` will become a document, with the ID set to the first 128
     *   bits of SHA256(URI) encoded as a hex string.
     * * `custom`: One custom data JSON per row in arbitrary format that conforms
     *   the defined [Schema][google.cloud.discoveryengine.v1.Schema] of the data
     *   store. This can only be used by the GENERIC Data Store vertical.
     * Supported values for user even imports:
     * * `user_event` (default): One JSON
     * [UserEvent][google.cloud.discoveryengine.v1.UserEvent] per line.
     *
     * Generated from protobuf field <code>string data_schema = 2;</code>
     */
    protected $data_schema = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $input_uris
     *           Required. Cloud Storage URIs to input files. URI can be up to
     *           2000 characters long. URIs can match the full object path (for example,
     *           `gs://bucket/directory/object.json`) or a pattern matching one or more
     *           files, such as `gs://bucket/directory/&#42;.json`.
     *           A request can contain at most 100 files (or 100,000 files if `data_schema`
     *           is `content`). Each file can be up to 2 GB (or 100 MB if `data_schema` is
     *           `content`).
     *     @type string $data_schema
     *           The schema to use when parsing the data from the source.
     *           Supported values for document imports:
     *           * `document` (default): One JSON
     *           [Document][google.cloud.discoveryengine.v1.Document] per line. Each
     *           document must
     *             have a valid [Document.id][google.cloud.discoveryengine.v1.Document.id].
     *           * `content`: Unstructured data (e.g. PDF, HTML). Each file matched by
     *             `input_uris` will become a document, with the ID set to the first 128
     *             bits of SHA256(URI) encoded as a hex string.
     *           * `custom`: One custom data JSON per row in arbitrary format that conforms
     *             the defined [Schema][google.cloud.discoveryengine.v1.Schema] of the data
     *             store. This can only be used by the GENERIC Data Store vertical.
     *           Supported values for user even imports:
     *           * `user_event` (default): One JSON
     *           [UserEvent][google.cloud.discoveryengine.v1.UserEvent] per line.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Discoveryengine\V1\ImportConfig::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Cloud Storage URIs to input files. URI can be up to
     * 2000 characters long. URIs can match the full object path (for example,
     * `gs://bucket/directory/object.json`) or a pattern matching one or more
     * files, such as `gs://bucket/directory/&#42;.json`.
     * A request can contain at most 100 files (or 100,000 files if `data_schema`
     * is `content`). Each file can be up to 2 GB (or 100 MB if `data_schema` is
     * `content`).
     *
     * Generated from protobuf field <code>repeated string input_uris = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInputUris()
    {
        return $this->input_uris;
    }

    /**
     * Required. Cloud Storage URIs to input files. URI can be up to
     * 2000 characters long. URIs can match the full object path (for example,
     * `gs://bucket/directory/object.json`) or a pattern matching one or more
     * files, such as `gs://bucket/directory/&#42;.json`.
     * A request can contain at most 100 files (or 100,000 files if `data_schema`
     * is `content`). Each file can be up to 2 GB (or 100 MB if `data_schema` is
     * `content`).
     *
     * Generated from protobuf field <code>repeated string input_uris = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInputUris($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->input_uris = $arr;

        return $this;
    }

    /**
     * The schema to use when parsing the data from the source.
     * Supported values for document imports:
     * * `document` (default): One JSON
     * [Document][google.cloud.discoveryengine.v1.Document] per line. Each
     * document must
     *   have a valid [Document.id][google.cloud.discoveryengine.v1.Document.id].
     * * `content`: Unstructured data (e.g. PDF, HTML). Each file matched by
     *   `input_uris` will become a document, with the ID set to the first 128
     *   bits of SHA256(URI) encoded as a hex string.
     * * `custom`: One custom data JSON per row in arbitrary format that conforms
     *   the defined [Schema][google.cloud.discoveryengine.v1.Schema] of the data
     *   store. This can only be used by the GENERIC Data Store vertical.
     * Supported values for user even imports:
     * * `user_event` (default): One JSON
     * [UserEvent][google.cloud.discoveryengine.v1.UserEvent] per line.
     *
     * Generated from protobuf field <code>string data_schema = 2;</code>
     * @return string
     */
    public function getDataSchema()
    {
        return $this->data_schema;
    }

    /**
     * The schema to use when parsing the data from the source.
     * Supported values for document imports:
     * * `document` (default): One JSON
     * [Document][google.cloud.discoveryengine.v1.Document] per line. Each
     * document must
     *   have a valid [Document.id][google.cloud.discoveryengine.v1.Document.id].
     * * `content`: Unstructured data (e.g. PDF, HTML). Each file matched by
     *   `input_uris` will become a document, with the ID set to the first 128
     *   bits of SHA256(URI) encoded as a hex string.
     * * `custom`: One custom data JSON per row in arbitrary format that conforms
     *   the defined [Schema][google.cloud.discoveryengine.v1.Schema] of the data
     *   store. This can only be used by the GENERIC Data Store vertical.
     * Supported values for user even imports:
     * * `user_event` (default): One JSON
     * [UserEvent][google.cloud.discoveryengine.v1.UserEvent] per line.
     *
     * Generated from protobuf field <code>string data_schema = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDataSchema($var)
    {
        GPBUtil::checkString($var, True);
        $this->data_schema = $var;

        return $this;
    }

}

