<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/assist_answer.proto

namespace Google\Cloud\DiscoveryEngine\V1\AssistantGroundedContent\TextGroundingMetadata\Reference;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Document metadata.
 *
 * Generated from protobuf message <code>google.cloud.discoveryengine.v1.AssistantGroundedContent.TextGroundingMetadata.Reference.DocumentMetadata</code>
 */
class DocumentMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Document resource name.
     *
     * Generated from protobuf field <code>optional string document = 1 [(.google.api.resource_reference) = {</code>
     */
    protected $document = null;
    /**
     * URI for the document. It may contain a URL that redirects to the
     * actual website.
     *
     * Generated from protobuf field <code>optional string uri = 2;</code>
     */
    protected $uri = null;
    /**
     * Title.
     *
     * Generated from protobuf field <code>optional string title = 3;</code>
     */
    protected $title = null;
    /**
     * Page identifier.
     *
     * Generated from protobuf field <code>optional string page_identifier = 4;</code>
     */
    protected $page_identifier = null;
    /**
     * Domain name from the document URI. Note that the `uri` field may
     * contain a URL that redirects to the actual website, in which case
     * this will contain the domain name of the target site.
     *
     * Generated from protobuf field <code>optional string domain = 5;</code>
     */
    protected $domain = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $document
     *           Document resource name.
     *     @type string $uri
     *           URI for the document. It may contain a URL that redirects to the
     *           actual website.
     *     @type string $title
     *           Title.
     *     @type string $page_identifier
     *           Page identifier.
     *     @type string $domain
     *           Domain name from the document URI. Note that the `uri` field may
     *           contain a URL that redirects to the actual website, in which case
     *           this will contain the domain name of the target site.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Discoveryengine\V1\AssistAnswer::initOnce();
        parent::__construct($data);
    }

    /**
     * Document resource name.
     *
     * Generated from protobuf field <code>optional string document = 1 [(.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getDocument()
    {
        return isset($this->document) ? $this->document : '';
    }

    public function hasDocument()
    {
        return isset($this->document);
    }

    public function clearDocument()
    {
        unset($this->document);
    }

    /**
     * Document resource name.
     *
     * Generated from protobuf field <code>optional string document = 1 [(.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setDocument($var)
    {
        GPBUtil::checkString($var, True);
        $this->document = $var;

        return $this;
    }

    /**
     * URI for the document. It may contain a URL that redirects to the
     * actual website.
     *
     * Generated from protobuf field <code>optional string uri = 2;</code>
     * @return string
     */
    public function getUri()
    {
        return isset($this->uri) ? $this->uri : '';
    }

    public function hasUri()
    {
        return isset($this->uri);
    }

    public function clearUri()
    {
        unset($this->uri);
    }

    /**
     * URI for the document. It may contain a URL that redirects to the
     * actual website.
     *
     * Generated from protobuf field <code>optional string uri = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->uri = $var;

        return $this;
    }

    /**
     * Title.
     *
     * Generated from protobuf field <code>optional string title = 3;</code>
     * @return string
     */
    public function getTitle()
    {
        return isset($this->title) ? $this->title : '';
    }

    public function hasTitle()
    {
        return isset($this->title);
    }

    public function clearTitle()
    {
        unset($this->title);
    }

    /**
     * Title.
     *
     * Generated from protobuf field <code>optional string title = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTitle($var)
    {
        GPBUtil::checkString($var, True);
        $this->title = $var;

        return $this;
    }

    /**
     * Page identifier.
     *
     * Generated from protobuf field <code>optional string page_identifier = 4;</code>
     * @return string
     */
    public function getPageIdentifier()
    {
        return isset($this->page_identifier) ? $this->page_identifier : '';
    }

    public function hasPageIdentifier()
    {
        return isset($this->page_identifier);
    }

    public function clearPageIdentifier()
    {
        unset($this->page_identifier);
    }

    /**
     * Page identifier.
     *
     * Generated from protobuf field <code>optional string page_identifier = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPageIdentifier($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_identifier = $var;

        return $this;
    }

    /**
     * Domain name from the document URI. Note that the `uri` field may
     * contain a URL that redirects to the actual website, in which case
     * this will contain the domain name of the target site.
     *
     * Generated from protobuf field <code>optional string domain = 5;</code>
     * @return string
     */
    public function getDomain()
    {
        return isset($this->domain) ? $this->domain : '';
    }

    public function hasDomain()
    {
        return isset($this->domain);
    }

    public function clearDomain()
    {
        unset($this->domain);
    }

    /**
     * Domain name from the document URI. Note that the `uri` field may
     * contain a URL that redirects to the actual website, in which case
     * this will contain the domain name of the target site.
     *
     * Generated from protobuf field <code>optional string domain = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setDomain($var)
    {
        GPBUtil::checkString($var, True);
        $this->domain = $var;

        return $this;
    }

}


