<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/grounded_generation_service.proto

namespace Google\Cloud\DiscoveryEngine\V1\CheckGroundingResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Text and citation info for a claim in the answer candidate.
 *
 * Generated from protobuf message <code>google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim</code>
 */
class Claim extends \Google\Protobuf\Internal\Message
{
    /**
     * Position indicating the start of the claim in the answer candidate,
     * measured in bytes.
     *
     * Generated from protobuf field <code>optional int32 start_pos = 1;</code>
     */
    protected $start_pos = null;
    /**
     * Position indicating the end of the claim in the answer candidate,
     * exclusive.
     *
     * Generated from protobuf field <code>optional int32 end_pos = 2;</code>
     */
    protected $end_pos = null;
    /**
     * Text for the claim in the answer candidate. Always provided regardless of
     * whether citations or anti-citations are found.
     *
     * Generated from protobuf field <code>string claim_text = 3;</code>
     */
    protected $claim_text = '';
    /**
     * A list of indices (into 'cited_chunks') specifying the citations
     * associated with the claim. For instance [1,3,4] means that
     * cited_chunks[1], cited_chunks[3], cited_chunks[4] are the facts cited
     * supporting for the claim. A citation to a fact indicates that the claim
     * is supported by the fact.
     *
     * Generated from protobuf field <code>repeated int32 citation_indices = 4;</code>
     */
    private $citation_indices;
    /**
     * Indicates that this claim required grounding check. When the system
     * decided this claim doesn't require attribution/grounding check, this
     * field will be set to false. In that case, no grounding check was done for
     * the claim and therefore
     * [citation_indices][google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim.citation_indices],
     * [anti_citation_indices][google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim.anti_citation_indices],
     * and
     * [score][google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim.score]
     * should not be returned.
     *
     * Generated from protobuf field <code>optional bool grounding_check_required = 6;</code>
     */
    protected $grounding_check_required = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $start_pos
     *           Position indicating the start of the claim in the answer candidate,
     *           measured in bytes.
     *     @type int $end_pos
     *           Position indicating the end of the claim in the answer candidate,
     *           exclusive.
     *     @type string $claim_text
     *           Text for the claim in the answer candidate. Always provided regardless of
     *           whether citations or anti-citations are found.
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $citation_indices
     *           A list of indices (into 'cited_chunks') specifying the citations
     *           associated with the claim. For instance [1,3,4] means that
     *           cited_chunks[1], cited_chunks[3], cited_chunks[4] are the facts cited
     *           supporting for the claim. A citation to a fact indicates that the claim
     *           is supported by the fact.
     *     @type bool $grounding_check_required
     *           Indicates that this claim required grounding check. When the system
     *           decided this claim doesn't require attribution/grounding check, this
     *           field will be set to false. In that case, no grounding check was done for
     *           the claim and therefore
     *           [citation_indices][google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim.citation_indices],
     *           [anti_citation_indices][google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim.anti_citation_indices],
     *           and
     *           [score][google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim.score]
     *           should not be returned.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Discoveryengine\V1\GroundedGenerationService::initOnce();
        parent::__construct($data);
    }

    /**
     * Position indicating the start of the claim in the answer candidate,
     * measured in bytes.
     *
     * Generated from protobuf field <code>optional int32 start_pos = 1;</code>
     * @return int
     */
    public function getStartPos()
    {
        return isset($this->start_pos) ? $this->start_pos : 0;
    }

    public function hasStartPos()
    {
        return isset($this->start_pos);
    }

    public function clearStartPos()
    {
        unset($this->start_pos);
    }

    /**
     * Position indicating the start of the claim in the answer candidate,
     * measured in bytes.
     *
     * Generated from protobuf field <code>optional int32 start_pos = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setStartPos($var)
    {
        GPBUtil::checkInt32($var);
        $this->start_pos = $var;

        return $this;
    }

    /**
     * Position indicating the end of the claim in the answer candidate,
     * exclusive.
     *
     * Generated from protobuf field <code>optional int32 end_pos = 2;</code>
     * @return int
     */
    public function getEndPos()
    {
        return isset($this->end_pos) ? $this->end_pos : 0;
    }

    public function hasEndPos()
    {
        return isset($this->end_pos);
    }

    public function clearEndPos()
    {
        unset($this->end_pos);
    }

    /**
     * Position indicating the end of the claim in the answer candidate,
     * exclusive.
     *
     * Generated from protobuf field <code>optional int32 end_pos = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setEndPos($var)
    {
        GPBUtil::checkInt32($var);
        $this->end_pos = $var;

        return $this;
    }

    /**
     * Text for the claim in the answer candidate. Always provided regardless of
     * whether citations or anti-citations are found.
     *
     * Generated from protobuf field <code>string claim_text = 3;</code>
     * @return string
     */
    public function getClaimText()
    {
        return $this->claim_text;
    }

    /**
     * Text for the claim in the answer candidate. Always provided regardless of
     * whether citations or anti-citations are found.
     *
     * Generated from protobuf field <code>string claim_text = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setClaimText($var)
    {
        GPBUtil::checkString($var, True);
        $this->claim_text = $var;

        return $this;
    }

    /**
     * A list of indices (into 'cited_chunks') specifying the citations
     * associated with the claim. For instance [1,3,4] means that
     * cited_chunks[1], cited_chunks[3], cited_chunks[4] are the facts cited
     * supporting for the claim. A citation to a fact indicates that the claim
     * is supported by the fact.
     *
     * Generated from protobuf field <code>repeated int32 citation_indices = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCitationIndices()
    {
        return $this->citation_indices;
    }

    /**
     * A list of indices (into 'cited_chunks') specifying the citations
     * associated with the claim. For instance [1,3,4] means that
     * cited_chunks[1], cited_chunks[3], cited_chunks[4] are the facts cited
     * supporting for the claim. A citation to a fact indicates that the claim
     * is supported by the fact.
     *
     * Generated from protobuf field <code>repeated int32 citation_indices = 4;</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setCitationIndices($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::INT32);
        $this->citation_indices = $arr;

        return $this;
    }

    /**
     * Indicates that this claim required grounding check. When the system
     * decided this claim doesn't require attribution/grounding check, this
     * field will be set to false. In that case, no grounding check was done for
     * the claim and therefore
     * [citation_indices][google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim.citation_indices],
     * [anti_citation_indices][google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim.anti_citation_indices],
     * and
     * [score][google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim.score]
     * should not be returned.
     *
     * Generated from protobuf field <code>optional bool grounding_check_required = 6;</code>
     * @return bool
     */
    public function getGroundingCheckRequired()
    {
        return isset($this->grounding_check_required) ? $this->grounding_check_required : false;
    }

    public function hasGroundingCheckRequired()
    {
        return isset($this->grounding_check_required);
    }

    public function clearGroundingCheckRequired()
    {
        unset($this->grounding_check_required);
    }

    /**
     * Indicates that this claim required grounding check. When the system
     * decided this claim doesn't require attribution/grounding check, this
     * field will be set to false. In that case, no grounding check was done for
     * the claim and therefore
     * [citation_indices][google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim.citation_indices],
     * [anti_citation_indices][google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim.anti_citation_indices],
     * and
     * [score][google.cloud.discoveryengine.v1.CheckGroundingResponse.Claim.score]
     * should not be returned.
     *
     * Generated from protobuf field <code>optional bool grounding_check_required = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setGroundingCheckRequired($var)
    {
        GPBUtil::checkBool($var);
        $this->grounding_check_required = $var;

        return $this;
    }

}


