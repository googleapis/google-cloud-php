<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/user_event_service.proto

namespace Google\Cloud\DiscoveryEngine\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for WriteUserEvent method.
 *
 * Generated from protobuf message <code>google.cloud.discoveryengine.v1.WriteUserEventRequest</code>
 */
class WriteUserEventRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The parent resource name.
     * If the write user event action is applied in
     * [DataStore][google.cloud.discoveryengine.v1.DataStore] level, the format
     * is:
     * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
     * If the write user event action is applied in [Location][] level, for
     * example, the event with
     * [Document][google.cloud.discoveryengine.v1.Document] across multiple
     * [DataStore][google.cloud.discoveryengine.v1.DataStore], the format is:
     * `projects/{project}/locations/{location}`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Required. User event to write.
     *
     * Generated from protobuf field <code>optional .google.cloud.discoveryengine.v1.UserEvent user_event = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $user_event = null;
    /**
     * If set to true, the user event is written asynchronously after
     * validation, and the API responds without waiting for the write.
     *
     * Generated from protobuf field <code>bool write_async = 3;</code>
     */
    protected $write_async = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The parent resource name.
     *           If the write user event action is applied in
     *           [DataStore][google.cloud.discoveryengine.v1.DataStore] level, the format
     *           is:
     *           `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
     *           If the write user event action is applied in [Location][] level, for
     *           example, the event with
     *           [Document][google.cloud.discoveryengine.v1.Document] across multiple
     *           [DataStore][google.cloud.discoveryengine.v1.DataStore], the format is:
     *           `projects/{project}/locations/{location}`.
     *     @type \Google\Cloud\DiscoveryEngine\V1\UserEvent $user_event
     *           Required. User event to write.
     *     @type bool $write_async
     *           If set to true, the user event is written asynchronously after
     *           validation, and the API responds without waiting for the write.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Discoveryengine\V1\UserEventService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The parent resource name.
     * If the write user event action is applied in
     * [DataStore][google.cloud.discoveryengine.v1.DataStore] level, the format
     * is:
     * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
     * If the write user event action is applied in [Location][] level, for
     * example, the event with
     * [Document][google.cloud.discoveryengine.v1.Document] across multiple
     * [DataStore][google.cloud.discoveryengine.v1.DataStore], the format is:
     * `projects/{project}/locations/{location}`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The parent resource name.
     * If the write user event action is applied in
     * [DataStore][google.cloud.discoveryengine.v1.DataStore] level, the format
     * is:
     * `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}`.
     * If the write user event action is applied in [Location][] level, for
     * example, the event with
     * [Document][google.cloud.discoveryengine.v1.Document] across multiple
     * [DataStore][google.cloud.discoveryengine.v1.DataStore], the format is:
     * `projects/{project}/locations/{location}`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Required. User event to write.
     *
     * Generated from protobuf field <code>optional .google.cloud.discoveryengine.v1.UserEvent user_event = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\DiscoveryEngine\V1\UserEvent|null
     */
    public function getUserEvent()
    {
        return $this->user_event;
    }

    public function hasUserEvent()
    {
        return isset($this->user_event);
    }

    public function clearUserEvent()
    {
        unset($this->user_event);
    }

    /**
     * Required. User event to write.
     *
     * Generated from protobuf field <code>optional .google.cloud.discoveryengine.v1.UserEvent user_event = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\DiscoveryEngine\V1\UserEvent $var
     * @return $this
     */
    public function setUserEvent($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DiscoveryEngine\V1\UserEvent::class);
        $this->user_event = $var;

        return $this;
    }

    /**
     * If set to true, the user event is written asynchronously after
     * validation, and the API responds without waiting for the write.
     *
     * Generated from protobuf field <code>bool write_async = 3;</code>
     * @return bool
     */
    public function getWriteAsync()
    {
        return $this->write_async;
    }

    /**
     * If set to true, the user event is written asynchronously after
     * validation, and the API responds without waiting for the write.
     *
     * Generated from protobuf field <code>bool write_async = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setWriteAsync($var)
    {
        GPBUtil::checkBool($var);
        $this->write_async = $var;

        return $this;
    }

}

