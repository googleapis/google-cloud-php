<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/grounded_generation_service.proto

namespace Google\Cloud\DiscoveryEngine\V1\GenerateGroundedContentResponse\Candidate\GroundingMetadata;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describes the metadata about the dynamic retrieval predictor.
 *
 * Generated from protobuf message <code>google.cloud.discoveryengine.v1.GenerateGroundedContentResponse.Candidate.GroundingMetadata.DynamicRetrievalPredictorMetadata</code>
 */
class DynamicRetrievalPredictorMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * The version of the predictor which was used in dynamic retrieval.
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.GenerateGroundedContentResponse.Candidate.GroundingMetadata.DynamicRetrievalPredictorMetadata.Version version = 1;</code>
     */
    protected $version = 0;
    /**
     * The value of the predictor. This should be between [0, 1] where
     * a value of 0 means that the query would not benefit from grounding,
     * while a value of 1.0 means that the query would benefit the most.
     * In between values allow to differentiate between different usefulness
     * scores for grounding.
     *
     * Generated from protobuf field <code>optional float prediction = 2;</code>
     */
    protected $prediction = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $version
     *           The version of the predictor which was used in dynamic retrieval.
     *     @type float $prediction
     *           The value of the predictor. This should be between [0, 1] where
     *           a value of 0 means that the query would not benefit from grounding,
     *           while a value of 1.0 means that the query would benefit the most.
     *           In between values allow to differentiate between different usefulness
     *           scores for grounding.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Discoveryengine\V1\GroundedGenerationService::initOnce();
        parent::__construct($data);
    }

    /**
     * The version of the predictor which was used in dynamic retrieval.
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.GenerateGroundedContentResponse.Candidate.GroundingMetadata.DynamicRetrievalPredictorMetadata.Version version = 1;</code>
     * @return int
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * The version of the predictor which was used in dynamic retrieval.
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.GenerateGroundedContentResponse.Candidate.GroundingMetadata.DynamicRetrievalPredictorMetadata.Version version = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\DiscoveryEngine\V1\GenerateGroundedContentResponse\Candidate\GroundingMetadata\DynamicRetrievalPredictorMetadata\Version::class);
        $this->version = $var;

        return $this;
    }

    /**
     * The value of the predictor. This should be between [0, 1] where
     * a value of 0 means that the query would not benefit from grounding,
     * while a value of 1.0 means that the query would benefit the most.
     * In between values allow to differentiate between different usefulness
     * scores for grounding.
     *
     * Generated from protobuf field <code>optional float prediction = 2;</code>
     * @return float
     */
    public function getPrediction()
    {
        return isset($this->prediction) ? $this->prediction : 0.0;
    }

    public function hasPrediction()
    {
        return isset($this->prediction);
    }

    public function clearPrediction()
    {
        unset($this->prediction);
    }

    /**
     * The value of the predictor. This should be between [0, 1] where
     * a value of 0 means that the query would not benefit from grounding,
     * while a value of 1.0 means that the query would benefit the most.
     * In between values allow to differentiate between different usefulness
     * scores for grounding.
     *
     * Generated from protobuf field <code>optional float prediction = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setPrediction($var)
    {
        GPBUtil::checkFloat($var);
        $this->prediction = $var;

        return $this;
    }

}


