<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/identity_mapping_store_service.proto

namespace Google\Cloud\DiscoveryEngine\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [IdentityMappingStoreService.ImportIdentityMappings][google.cloud.discoveryengine.v1.IdentityMappingStoreService.ImportIdentityMappings]
 *
 * Generated from protobuf message <code>google.cloud.discoveryengine.v1.ImportIdentityMappingsRequest</code>
 */
class ImportIdentityMappingsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the Identity Mapping Store to import Identity Mapping
     * Entries to. Format:
     * `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
     *
     * Generated from protobuf field <code>string identity_mapping_store = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $identity_mapping_store = '';
    protected $source;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\DiscoveryEngine\V1\ImportIdentityMappingsRequest\InlineSource $inline_source
     *           The inline source to import identity mapping entries from.
     *     @type string $identity_mapping_store
     *           Required. The name of the Identity Mapping Store to import Identity Mapping
     *           Entries to. Format:
     *           `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Discoveryengine\V1\IdentityMappingStoreService::initOnce();
        parent::__construct($data);
    }

    /**
     * The inline source to import identity mapping entries from.
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.ImportIdentityMappingsRequest.InlineSource inline_source = 2;</code>
     * @return \Google\Cloud\DiscoveryEngine\V1\ImportIdentityMappingsRequest\InlineSource|null
     */
    public function getInlineSource()
    {
        return $this->readOneof(2);
    }

    public function hasInlineSource()
    {
        return $this->hasOneof(2);
    }

    /**
     * The inline source to import identity mapping entries from.
     *
     * Generated from protobuf field <code>.google.cloud.discoveryengine.v1.ImportIdentityMappingsRequest.InlineSource inline_source = 2;</code>
     * @param \Google\Cloud\DiscoveryEngine\V1\ImportIdentityMappingsRequest\InlineSource $var
     * @return $this
     */
    public function setInlineSource($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\DiscoveryEngine\V1\ImportIdentityMappingsRequest\InlineSource::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Required. The name of the Identity Mapping Store to import Identity Mapping
     * Entries to. Format:
     * `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
     *
     * Generated from protobuf field <code>string identity_mapping_store = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getIdentityMappingStore()
    {
        return $this->identity_mapping_store;
    }

    /**
     * Required. The name of the Identity Mapping Store to import Identity Mapping
     * Entries to. Format:
     * `projects/{project}/locations/{location}/identityMappingStores/{identityMappingStore}`
     *
     * Generated from protobuf field <code>string identity_mapping_store = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setIdentityMappingStore($var)
    {
        GPBUtil::checkString($var, True);
        $this->identity_mapping_store = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getSource()
    {
        return $this->whichOneof("source");
    }

}

