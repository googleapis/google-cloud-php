<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/spanner/v1/transaction.proto

namespace Google\Cloud\Spanner\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * When a read-write transaction is executed on a multiplexed session,
 * this precommit token is sent back to the client
 * as a part of the [Transaction] message in the BeginTransaction response and
 * also as a part of the [ResultSet] and [PartialResultSet] responses.
 *
 * Generated from protobuf message <code>google.spanner.v1.MultiplexedSessionPrecommitToken</code>
 */
class MultiplexedSessionPrecommitToken extends \Google\Protobuf\Internal\Message
{
    /**
     * Opaque precommit token.
     *
     * Generated from protobuf field <code>bytes precommit_token = 1;</code>
     */
    private $precommit_token = '';
    /**
     * An incrementing seq number is generated on every precommit token
     * that is returned. Clients should remember the precommit token with the
     * highest sequence number from the current transaction attempt.
     *
     * Generated from protobuf field <code>int32 seq_num = 2;</code>
     */
    private $seq_num = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $precommit_token
     *           Opaque precommit token.
     *     @type int $seq_num
     *           An incrementing seq number is generated on every precommit token
     *           that is returned. Clients should remember the precommit token with the
     *           highest sequence number from the current transaction attempt.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Spanner\V1\Transaction::initOnce();
        parent::__construct($data);
    }

    /**
     * Opaque precommit token.
     *
     * Generated from protobuf field <code>bytes precommit_token = 1;</code>
     * @return string
     */
    public function getPrecommitToken()
    {
        return $this->precommit_token;
    }

    /**
     * Opaque precommit token.
     *
     * Generated from protobuf field <code>bytes precommit_token = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPrecommitToken($var)
    {
        GPBUtil::checkString($var, False);
        $this->precommit_token = $var;

        return $this;
    }

    /**
     * An incrementing seq number is generated on every precommit token
     * that is returned. Clients should remember the precommit token with the
     * highest sequence number from the current transaction attempt.
     *
     * Generated from protobuf field <code>int32 seq_num = 2;</code>
     * @return int
     */
    public function getSeqNum()
    {
        return $this->seq_num;
    }

    /**
     * An incrementing seq number is generated on every precommit token
     * that is returned. Clients should remember the precommit token with the
     * highest sequence number from the current transaction attempt.
     *
     * Generated from protobuf field <code>int32 seq_num = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setSeqNum($var)
    {
        GPBUtil::checkInt32($var);
        $this->seq_num = $var;

        return $this;
    }

}

