<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/spanner/v1/spanner.proto

namespace Google\Cloud\Spanner\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The result of applying a batch of mutations.
 *
 * Generated from protobuf message <code>google.spanner.v1.BatchWriteResponse</code>
 */
class BatchWriteResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * The mutation groups applied in this batch. The values index into the
     * `mutation_groups` field in the corresponding `BatchWriteRequest`.
     *
     * Generated from protobuf field <code>repeated int32 indexes = 1;</code>
     */
    private $indexes;
    /**
     * An `OK` status indicates success. Any other status indicates a failure.
     *
     * Generated from protobuf field <code>.google.rpc.Status status = 2;</code>
     */
    private $status = null;
    /**
     * The commit timestamp of the transaction that applied this batch.
     * Present if `status` is `OK`, absent otherwise.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp commit_timestamp = 3;</code>
     */
    private $commit_timestamp = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $indexes
     *           The mutation groups applied in this batch. The values index into the
     *           `mutation_groups` field in the corresponding `BatchWriteRequest`.
     *     @type \Google\Rpc\Status $status
     *           An `OK` status indicates success. Any other status indicates a failure.
     *     @type \Google\Protobuf\Timestamp $commit_timestamp
     *           The commit timestamp of the transaction that applied this batch.
     *           Present if `status` is `OK`, absent otherwise.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Spanner\V1\Spanner::initOnce();
        parent::__construct($data);
    }

    /**
     * The mutation groups applied in this batch. The values index into the
     * `mutation_groups` field in the corresponding `BatchWriteRequest`.
     *
     * Generated from protobuf field <code>repeated int32 indexes = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getIndexes()
    {
        return $this->indexes;
    }

    /**
     * The mutation groups applied in this batch. The values index into the
     * `mutation_groups` field in the corresponding `BatchWriteRequest`.
     *
     * Generated from protobuf field <code>repeated int32 indexes = 1;</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setIndexes($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::INT32);
        $this->indexes = $arr;

        return $this;
    }

    /**
     * An `OK` status indicates success. Any other status indicates a failure.
     *
     * Generated from protobuf field <code>.google.rpc.Status status = 2;</code>
     * @return \Google\Rpc\Status|null
     */
    public function getStatus()
    {
        return $this->status;
    }

    public function hasStatus()
    {
        return isset($this->status);
    }

    public function clearStatus()
    {
        unset($this->status);
    }

    /**
     * An `OK` status indicates success. Any other status indicates a failure.
     *
     * Generated from protobuf field <code>.google.rpc.Status status = 2;</code>
     * @param \Google\Rpc\Status $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkMessage($var, \Google\Rpc\Status::class);
        $this->status = $var;

        return $this;
    }

    /**
     * The commit timestamp of the transaction that applied this batch.
     * Present if `status` is `OK`, absent otherwise.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp commit_timestamp = 3;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCommitTimestamp()
    {
        return $this->commit_timestamp;
    }

    public function hasCommitTimestamp()
    {
        return isset($this->commit_timestamp);
    }

    public function clearCommitTimestamp()
    {
        unset($this->commit_timestamp);
    }

    /**
     * The commit timestamp of the transaction that applied this batch.
     * Present if `status` is `OK`, absent otherwise.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp commit_timestamp = 3;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCommitTimestamp($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->commit_timestamp = $var;

        return $this;
    }

}

