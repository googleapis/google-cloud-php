<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/spanner/admin/instance/v1/spanner_instance_admin.proto

namespace Google\Cloud\Spanner\Admin\Instance\V1\Instance;

use UnexpectedValueException;

/**
 * The type of this instance. The type can be used to distinguish product
 * variants, that can affect aspects like: usage restrictions, quotas and
 * billing. Currently this is used to distinguish FREE_INSTANCE vs PROVISIONED
 * instances.
 *
 * Protobuf type <code>google.spanner.admin.instance.v1.Instance.InstanceType</code>
 */
class InstanceType
{
    /**
     * Not specified.
     *
     * Generated from protobuf enum <code>INSTANCE_TYPE_UNSPECIFIED = 0;</code>
     */
    const INSTANCE_TYPE_UNSPECIFIED = 0;
    /**
     * Provisioned instances have dedicated resources, standard usage limits and
     * support.
     *
     * Generated from protobuf enum <code>PROVISIONED = 1;</code>
     */
    const PROVISIONED = 1;
    /**
     * Free instances provide no guarantee for dedicated resources,
     * [node_count, processing_units] should be 0. They come
     * with stricter usage limits and limited support.
     *
     * Generated from protobuf enum <code>FREE_INSTANCE = 2;</code>
     */
    const FREE_INSTANCE = 2;

    private static $valueToName = [
        self::INSTANCE_TYPE_UNSPECIFIED => 'INSTANCE_TYPE_UNSPECIFIED',
        self::PROVISIONED => 'PROVISIONED',
        self::FREE_INSTANCE => 'FREE_INSTANCE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(InstanceType::class, \Google\Cloud\Spanner\Admin\Instance\V1\Instance_InstanceType::class);

