<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/spanner/admin/instance/v1/spanner_instance_admin.proto

namespace Google\Cloud\Spanner\Admin\Instance\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ReplicaComputeCapacity describes the amount of server resources that are
 * allocated to each replica identified by the replica selection.
 *
 * Generated from protobuf message <code>google.spanner.admin.instance.v1.ReplicaComputeCapacity</code>
 */
class ReplicaComputeCapacity extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Identifies replicas by specified properties.
     * All replicas in the selection have the same amount of compute capacity.
     *
     * Generated from protobuf field <code>.google.spanner.admin.instance.v1.ReplicaSelection replica_selection = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $replica_selection = null;
    protected $compute_capacity;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Spanner\Admin\Instance\V1\ReplicaSelection $replica_selection
     *           Required. Identifies replicas by specified properties.
     *           All replicas in the selection have the same amount of compute capacity.
     *     @type int $node_count
     *           The number of nodes allocated to each replica.
     *           This may be zero in API responses for instances that are not yet in
     *           state `READY`.
     *     @type int $processing_units
     *           The number of processing units allocated to each replica.
     *           This may be zero in API responses for instances that are not yet in
     *           state `READY`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Spanner\Admin\Instance\V1\SpannerInstanceAdmin::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Identifies replicas by specified properties.
     * All replicas in the selection have the same amount of compute capacity.
     *
     * Generated from protobuf field <code>.google.spanner.admin.instance.v1.ReplicaSelection replica_selection = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\Spanner\Admin\Instance\V1\ReplicaSelection|null
     */
    public function getReplicaSelection()
    {
        return $this->replica_selection;
    }

    public function hasReplicaSelection()
    {
        return isset($this->replica_selection);
    }

    public function clearReplicaSelection()
    {
        unset($this->replica_selection);
    }

    /**
     * Required. Identifies replicas by specified properties.
     * All replicas in the selection have the same amount of compute capacity.
     *
     * Generated from protobuf field <code>.google.spanner.admin.instance.v1.ReplicaSelection replica_selection = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Spanner\Admin\Instance\V1\ReplicaSelection $var
     * @return $this
     */
    public function setReplicaSelection($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Spanner\Admin\Instance\V1\ReplicaSelection::class);
        $this->replica_selection = $var;

        return $this;
    }

    /**
     * The number of nodes allocated to each replica.
     * This may be zero in API responses for instances that are not yet in
     * state `READY`.
     *
     * Generated from protobuf field <code>int32 node_count = 2;</code>
     * @return int
     */
    public function getNodeCount()
    {
        return $this->readOneof(2);
    }

    public function hasNodeCount()
    {
        return $this->hasOneof(2);
    }

    /**
     * The number of nodes allocated to each replica.
     * This may be zero in API responses for instances that are not yet in
     * state `READY`.
     *
     * Generated from protobuf field <code>int32 node_count = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setNodeCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * The number of processing units allocated to each replica.
     * This may be zero in API responses for instances that are not yet in
     * state `READY`.
     *
     * Generated from protobuf field <code>int32 processing_units = 3;</code>
     * @return int
     */
    public function getProcessingUnits()
    {
        return $this->readOneof(3);
    }

    public function hasProcessingUnits()
    {
        return $this->hasOneof(3);
    }

    /**
     * The number of processing units allocated to each replica.
     * This may be zero in API responses for instances that are not yet in
     * state `READY`.
     *
     * Generated from protobuf field <code>int32 processing_units = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setProcessingUnits($var)
    {
        GPBUtil::checkInt32($var);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getComputeCapacity()
    {
        return $this->whichOneof("compute_capacity");
    }

}

