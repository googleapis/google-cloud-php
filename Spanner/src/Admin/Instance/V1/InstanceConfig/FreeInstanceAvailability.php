<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/spanner/admin/instance/v1/spanner_instance_admin.proto

namespace Google\Cloud\Spanner\Admin\Instance\V1\InstanceConfig;

use UnexpectedValueException;

/**
 * Describes the availability for free instances to be created in an instance
 * configuration.
 *
 * Protobuf type <code>google.spanner.admin.instance.v1.InstanceConfig.FreeInstanceAvailability</code>
 */
class FreeInstanceAvailability
{
    /**
     * Not specified.
     *
     * Generated from protobuf enum <code>FREE_INSTANCE_AVAILABILITY_UNSPECIFIED = 0;</code>
     */
    const FREE_INSTANCE_AVAILABILITY_UNSPECIFIED = 0;
    /**
     * Indicates that free instances are available to be created in this
     * instance configuration.
     *
     * Generated from protobuf enum <code>AVAILABLE = 1;</code>
     */
    const AVAILABLE = 1;
    /**
     * Indicates that free instances are not supported in this instance
     * configuration.
     *
     * Generated from protobuf enum <code>UNSUPPORTED = 2;</code>
     */
    const UNSUPPORTED = 2;
    /**
     * Indicates that free instances are currently not available to be created
     * in this instance configuration.
     *
     * Generated from protobuf enum <code>DISABLED = 3;</code>
     */
    const DISABLED = 3;
    /**
     * Indicates that additional free instances cannot be created in this
     * instance configuration because the project has reached its limit of free
     * instances.
     *
     * Generated from protobuf enum <code>QUOTA_EXCEEDED = 4;</code>
     */
    const QUOTA_EXCEEDED = 4;

    private static $valueToName = [
        self::FREE_INSTANCE_AVAILABILITY_UNSPECIFIED => 'FREE_INSTANCE_AVAILABILITY_UNSPECIFIED',
        self::AVAILABLE => 'AVAILABLE',
        self::UNSUPPORTED => 'UNSUPPORTED',
        self::DISABLED => 'DISABLED',
        self::QUOTA_EXCEEDED => 'QUOTA_EXCEEDED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(FreeInstanceAvailability::class, \Google\Cloud\Spanner\Admin\Instance\V1\InstanceConfig_FreeInstanceAvailability::class);

