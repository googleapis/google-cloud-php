<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/spanner/admin/instance/v1/spanner_instance_admin.proto

namespace Google\Cloud\Spanner\Admin\Instance\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Free instance specific metadata that is kept even after an instance has been
 * upgraded for tracking purposes.
 *
 * Generated from protobuf message <code>google.spanner.admin.instance.v1.FreeInstanceMetadata</code>
 */
class FreeInstanceMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. Timestamp after which the instance will either be upgraded or
     * scheduled for deletion after a grace period. ExpireBehavior is used to
     * choose between upgrading or scheduling the free instance for deletion. This
     * timestamp is set during the creation of a free instance.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $expire_time = null;
    /**
     * Output only. If present, the timestamp at which the free instance was
     * upgraded to a provisioned instance.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp upgrade_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $upgrade_time = null;
    /**
     * Specifies the expiration behavior of a free instance. The default of
     * ExpireBehavior is `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during
     * or after creation, and before expiration.
     *
     * Generated from protobuf field <code>.google.spanner.admin.instance.v1.FreeInstanceMetadata.ExpireBehavior expire_behavior = 3;</code>
     */
    private $expire_behavior = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Timestamp $expire_time
     *           Output only. Timestamp after which the instance will either be upgraded or
     *           scheduled for deletion after a grace period. ExpireBehavior is used to
     *           choose between upgrading or scheduling the free instance for deletion. This
     *           timestamp is set during the creation of a free instance.
     *     @type \Google\Protobuf\Timestamp $upgrade_time
     *           Output only. If present, the timestamp at which the free instance was
     *           upgraded to a provisioned instance.
     *     @type int $expire_behavior
     *           Specifies the expiration behavior of a free instance. The default of
     *           ExpireBehavior is `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during
     *           or after creation, and before expiration.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Spanner\Admin\Instance\V1\SpannerInstanceAdmin::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. Timestamp after which the instance will either be upgraded or
     * scheduled for deletion after a grace period. ExpireBehavior is used to
     * choose between upgrading or scheduling the free instance for deletion. This
     * timestamp is set during the creation of a free instance.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getExpireTime()
    {
        return $this->expire_time;
    }

    public function hasExpireTime()
    {
        return isset($this->expire_time);
    }

    public function clearExpireTime()
    {
        unset($this->expire_time);
    }

    /**
     * Output only. Timestamp after which the instance will either be upgraded or
     * scheduled for deletion after a grace period. ExpireBehavior is used to
     * choose between upgrading or scheduling the free instance for deletion. This
     * timestamp is set during the creation of a free instance.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpireTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expire_time = $var;

        return $this;
    }

    /**
     * Output only. If present, the timestamp at which the free instance was
     * upgraded to a provisioned instance.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp upgrade_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpgradeTime()
    {
        return $this->upgrade_time;
    }

    public function hasUpgradeTime()
    {
        return isset($this->upgrade_time);
    }

    public function clearUpgradeTime()
    {
        unset($this->upgrade_time);
    }

    /**
     * Output only. If present, the timestamp at which the free instance was
     * upgraded to a provisioned instance.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp upgrade_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpgradeTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->upgrade_time = $var;

        return $this;
    }

    /**
     * Specifies the expiration behavior of a free instance. The default of
     * ExpireBehavior is `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during
     * or after creation, and before expiration.
     *
     * Generated from protobuf field <code>.google.spanner.admin.instance.v1.FreeInstanceMetadata.ExpireBehavior expire_behavior = 3;</code>
     * @return int
     */
    public function getExpireBehavior()
    {
        return $this->expire_behavior;
    }

    /**
     * Specifies the expiration behavior of a free instance. The default of
     * ExpireBehavior is `REMOVE_AFTER_GRACE_PERIOD`. This can be modified during
     * or after creation, and before expiration.
     *
     * Generated from protobuf field <code>.google.spanner.admin.instance.v1.FreeInstanceMetadata.ExpireBehavior expire_behavior = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setExpireBehavior($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Spanner\Admin\Instance\V1\FreeInstanceMetadata\ExpireBehavior::class);
        $this->expire_behavior = $var;

        return $this;
    }

}

