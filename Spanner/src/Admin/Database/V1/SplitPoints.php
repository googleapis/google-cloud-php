<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/spanner/admin/database/v1/spanner_database_admin.proto

namespace Google\Cloud\Spanner\Admin\Database\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The split points of a table/index.
 *
 * Generated from protobuf message <code>google.spanner.admin.database.v1.SplitPoints</code>
 */
class SplitPoints extends \Google\Protobuf\Internal\Message
{
    /**
     * The table to split.
     *
     * Generated from protobuf field <code>string table = 1;</code>
     */
    private $table = '';
    /**
     * The index to split.
     * If specified, the `table` field must refer to the index's base table.
     *
     * Generated from protobuf field <code>string index = 2;</code>
     */
    private $index = '';
    /**
     * Required. The list of split keys, i.e., the split boundaries.
     *
     * Generated from protobuf field <code>repeated .google.spanner.admin.database.v1.SplitPoints.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $keys;
    /**
     * Optional. The expiration timestamp of the split points.
     * A timestamp in the past means immediate expiration.
     * The maximum value can be 30 days in the future.
     * Defaults to 10 days in the future if not specified.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $expire_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $table
     *           The table to split.
     *     @type string $index
     *           The index to split.
     *           If specified, the `table` field must refer to the index's base table.
     *     @type array<\Google\Cloud\Spanner\Admin\Database\V1\SplitPoints\Key>|\Google\Protobuf\Internal\RepeatedField $keys
     *           Required. The list of split keys, i.e., the split boundaries.
     *     @type \Google\Protobuf\Timestamp $expire_time
     *           Optional. The expiration timestamp of the split points.
     *           A timestamp in the past means immediate expiration.
     *           The maximum value can be 30 days in the future.
     *           Defaults to 10 days in the future if not specified.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Spanner\Admin\Database\V1\SpannerDatabaseAdmin::initOnce();
        parent::__construct($data);
    }

    /**
     * The table to split.
     *
     * Generated from protobuf field <code>string table = 1;</code>
     * @return string
     */
    public function getTable()
    {
        return $this->table;
    }

    /**
     * The table to split.
     *
     * Generated from protobuf field <code>string table = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTable($var)
    {
        GPBUtil::checkString($var, True);
        $this->table = $var;

        return $this;
    }

    /**
     * The index to split.
     * If specified, the `table` field must refer to the index's base table.
     *
     * Generated from protobuf field <code>string index = 2;</code>
     * @return string
     */
    public function getIndex()
    {
        return $this->index;
    }

    /**
     * The index to split.
     * If specified, the `table` field must refer to the index's base table.
     *
     * Generated from protobuf field <code>string index = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setIndex($var)
    {
        GPBUtil::checkString($var, True);
        $this->index = $var;

        return $this;
    }

    /**
     * Required. The list of split keys, i.e., the split boundaries.
     *
     * Generated from protobuf field <code>repeated .google.spanner.admin.database.v1.SplitPoints.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getKeys()
    {
        return $this->keys;
    }

    /**
     * Required. The list of split keys, i.e., the split boundaries.
     *
     * Generated from protobuf field <code>repeated .google.spanner.admin.database.v1.SplitPoints.Key keys = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param array<\Google\Cloud\Spanner\Admin\Database\V1\SplitPoints\Key>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setKeys($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Spanner\Admin\Database\V1\SplitPoints\Key::class);
        $this->keys = $arr;

        return $this;
    }

    /**
     * Optional. The expiration timestamp of the split points.
     * A timestamp in the past means immediate expiration.
     * The maximum value can be 30 days in the future.
     * Defaults to 10 days in the future if not specified.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getExpireTime()
    {
        return $this->expire_time;
    }

    public function hasExpireTime()
    {
        return isset($this->expire_time);
    }

    public function clearExpireTime()
    {
        unset($this->expire_time);
    }

    /**
     * Optional. The expiration timestamp of the split points.
     * A timestamp in the past means immediate expiration.
     * The maximum value can be 30 days in the future.
     * Defaults to 10 days in the future if not specified.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpireTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expire_time = $var;

        return $this;
    }

}

