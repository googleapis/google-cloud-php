<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/css/v1/css_product_inputs.proto

namespace Google\Shopping\Css\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for the InsertCssProductInput method.
 *
 * Generated from protobuf message <code>google.shopping.css.v1.InsertCssProductInputRequest</code>
 */
class InsertCssProductInputRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The account where this CSS Product will be inserted.
     * Format: accounts/{account}
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Required. The CSS Product Input to insert.
     *
     * Generated from protobuf field <code>.google.shopping.css.v1.CssProductInput css_product_input = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $css_product_input = null;
    /**
     * Required. The primary or supplemental feed id. If CSS Product already
     * exists and feed id provided is different, then the CSS Product will be
     * moved to a new feed. Note: For now, CSSs do not need to provide feed ids as
     * we create feeds on the fly. We do not have supplemental feed support for
     * CSS Products yet.
     *
     * Generated from protobuf field <code>int64 feed_id = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $feed_id = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The account where this CSS Product will be inserted.
     *           Format: accounts/{account}
     *     @type \Google\Shopping\Css\V1\CssProductInput $css_product_input
     *           Required. The CSS Product Input to insert.
     *     @type int|string $feed_id
     *           Required. The primary or supplemental feed id. If CSS Product already
     *           exists and feed id provided is different, then the CSS Product will be
     *           moved to a new feed. Note: For now, CSSs do not need to provide feed ids as
     *           we create feeds on the fly. We do not have supplemental feed support for
     *           CSS Products yet.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Css\V1\CssProductInputs::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The account where this CSS Product will be inserted.
     * Format: accounts/{account}
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The account where this CSS Product will be inserted.
     * Format: accounts/{account}
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Required. The CSS Product Input to insert.
     *
     * Generated from protobuf field <code>.google.shopping.css.v1.CssProductInput css_product_input = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Shopping\Css\V1\CssProductInput|null
     */
    public function getCssProductInput()
    {
        return $this->css_product_input;
    }

    public function hasCssProductInput()
    {
        return isset($this->css_product_input);
    }

    public function clearCssProductInput()
    {
        unset($this->css_product_input);
    }

    /**
     * Required. The CSS Product Input to insert.
     *
     * Generated from protobuf field <code>.google.shopping.css.v1.CssProductInput css_product_input = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Shopping\Css\V1\CssProductInput $var
     * @return $this
     */
    public function setCssProductInput($var)
    {
        GPBUtil::checkMessage($var, \Google\Shopping\Css\V1\CssProductInput::class);
        $this->css_product_input = $var;

        return $this;
    }

    /**
     * Required. The primary or supplemental feed id. If CSS Product already
     * exists and feed id provided is different, then the CSS Product will be
     * moved to a new feed. Note: For now, CSSs do not need to provide feed ids as
     * we create feeds on the fly. We do not have supplemental feed support for
     * CSS Products yet.
     *
     * Generated from protobuf field <code>int64 feed_id = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int|string
     */
    public function getFeedId()
    {
        return $this->feed_id;
    }

    /**
     * Required. The primary or supplemental feed id. If CSS Product already
     * exists and feed id provided is different, then the CSS Product will be
     * moved to a new feed. Note: For now, CSSs do not need to provide feed ids as
     * we create feeds on the fly. We do not have supplemental feed support for
     * CSS Products yet.
     *
     * Generated from protobuf field <code>int64 feed_id = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int|string $var
     * @return $this
     */
    public function setFeedId($var)
    {
        GPBUtil::checkInt64($var);
        $this->feed_id = $var;

        return $this;
    }

}

