<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/css/v1/css_product_inputs.proto

namespace Google\Shopping\Css\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for the UpdateCssProductInput method.
 *
 * Generated from protobuf message <code>google.shopping.css.v1.UpdateCssProductInputRequest</code>
 */
class UpdateCssProductInputRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The CSS product input resource to update. Information you submit
     * will be applied to the processed CSS product as well.
     *
     * Generated from protobuf field <code>.google.shopping.css.v1.CssProductInput css_product_input = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $css_product_input = null;
    /**
     * The list of CSS product attributes to be updated.
     * If the update mask is omitted, then it is treated as implied field mask
     * equivalent to all fields that are populated (have a non-empty value).
     * Attributes specified in the update mask without a value specified in the
     * body will be deleted from the CSS product.
     * Update mask can only be specified for top level fields in
     * attributes and custom attributes.
     * To specify the update mask for custom attributes you need to add the
     * `custom_attribute.` prefix.
     * Providing special "*" value for full CSS product replacement is not
     * supported.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     */
    protected $update_mask = null;

    /**
     * @param \Google\Shopping\Css\V1\CssProductInput $cssProductInput Required. The CSS product input resource to update. Information you submit
     *                                                                 will be applied to the processed CSS product as well.
     * @param \Google\Protobuf\FieldMask              $updateMask      The list of CSS product attributes to be updated.
     *
     *                                                                 If the update mask is omitted, then it is treated as implied field mask
     *                                                                 equivalent to all fields that are populated (have a non-empty value).
     *
     *                                                                 Attributes specified in the update mask without a value specified in the
     *                                                                 body will be deleted from the CSS product.
     *
     *                                                                 Update mask can only be specified for top level fields in
     *                                                                 attributes and custom attributes.
     *
     *                                                                 To specify the update mask for custom attributes you need to add the
     *                                                                 `custom_attribute.` prefix.
     *
     *                                                                 Providing special "*" value for full CSS product replacement is not
     *                                                                 supported.
     *
     * @return \Google\Shopping\Css\V1\UpdateCssProductInputRequest
     *
     * @experimental
     */
    public static function build(\Google\Shopping\Css\V1\CssProductInput $cssProductInput, \Google\Protobuf\FieldMask $updateMask): self
    {
        return (new self())
            ->setCssProductInput($cssProductInput)
            ->setUpdateMask($updateMask);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Shopping\Css\V1\CssProductInput $css_product_input
     *           Required. The CSS product input resource to update. Information you submit
     *           will be applied to the processed CSS product as well.
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           The list of CSS product attributes to be updated.
     *           If the update mask is omitted, then it is treated as implied field mask
     *           equivalent to all fields that are populated (have a non-empty value).
     *           Attributes specified in the update mask without a value specified in the
     *           body will be deleted from the CSS product.
     *           Update mask can only be specified for top level fields in
     *           attributes and custom attributes.
     *           To specify the update mask for custom attributes you need to add the
     *           `custom_attribute.` prefix.
     *           Providing special "*" value for full CSS product replacement is not
     *           supported.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Css\V1\CssProductInputs::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The CSS product input resource to update. Information you submit
     * will be applied to the processed CSS product as well.
     *
     * Generated from protobuf field <code>.google.shopping.css.v1.CssProductInput css_product_input = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Shopping\Css\V1\CssProductInput|null
     */
    public function getCssProductInput()
    {
        return $this->css_product_input;
    }

    public function hasCssProductInput()
    {
        return isset($this->css_product_input);
    }

    public function clearCssProductInput()
    {
        unset($this->css_product_input);
    }

    /**
     * Required. The CSS product input resource to update. Information you submit
     * will be applied to the processed CSS product as well.
     *
     * Generated from protobuf field <code>.google.shopping.css.v1.CssProductInput css_product_input = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Shopping\Css\V1\CssProductInput $var
     * @return $this
     */
    public function setCssProductInput($var)
    {
        GPBUtil::checkMessage($var, \Google\Shopping\Css\V1\CssProductInput::class);
        $this->css_product_input = $var;

        return $this;
    }

    /**
     * The list of CSS product attributes to be updated.
     * If the update mask is omitted, then it is treated as implied field mask
     * equivalent to all fields that are populated (have a non-empty value).
     * Attributes specified in the update mask without a value specified in the
     * body will be deleted from the CSS product.
     * Update mask can only be specified for top level fields in
     * attributes and custom attributes.
     * To specify the update mask for custom attributes you need to add the
     * `custom_attribute.` prefix.
     * Providing special "*" value for full CSS product replacement is not
     * supported.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * The list of CSS product attributes to be updated.
     * If the update mask is omitted, then it is treated as implied field mask
     * equivalent to all fields that are populated (have a non-empty value).
     * Attributes specified in the update mask without a value specified in the
     * body will be deleted from the CSS product.
     * Update mask can only be specified for top level fields in
     * attributes and custom attributes.
     * To specify the update mask for custom attributes you need to add the
     * `custom_attribute.` prefix.
     * Providing special "*" value for full CSS product replacement is not
     * supported.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2;</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

}

