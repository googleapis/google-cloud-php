<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/documentai/v1/document_io.proto

namespace Google\Cloud\DocumentAI\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Specifies a document stored on Cloud Storage.
 *
 * Generated from protobuf message <code>google.cloud.documentai.v1.GcsDocument</code>
 */
class GcsDocument extends \Google\Protobuf\Internal\Message
{
    /**
     * The Cloud Storage object uri.
     *
     * Generated from protobuf field <code>string gcs_uri = 1;</code>
     */
    private $gcs_uri = '';
    /**
     * An IANA MIME type (RFC6838) of the content.
     *
     * Generated from protobuf field <code>string mime_type = 2;</code>
     */
    private $mime_type = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $gcs_uri
     *           The Cloud Storage object uri.
     *     @type string $mime_type
     *           An IANA MIME type (RFC6838) of the content.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Documentai\V1\DocumentIo::initOnce();
        parent::__construct($data);
    }

    /**
     * The Cloud Storage object uri.
     *
     * Generated from protobuf field <code>string gcs_uri = 1;</code>
     * @return string
     */
    public function getGcsUri()
    {
        return $this->gcs_uri;
    }

    /**
     * The Cloud Storage object uri.
     *
     * Generated from protobuf field <code>string gcs_uri = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setGcsUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->gcs_uri = $var;

        return $this;
    }

    /**
     * An IANA MIME type (RFC6838) of the content.
     *
     * Generated from protobuf field <code>string mime_type = 2;</code>
     * @return string
     */
    public function getMimeType()
    {
        return $this->mime_type;
    }

    /**
     * An IANA MIME type (RFC6838) of the content.
     *
     * Generated from protobuf field <code>string mime_type = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setMimeType($var)
    {
        GPBUtil::checkString($var, True);
        $this->mime_type = $var;

        return $this;
    }

}

