<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/documentai/v1/document_processor_service.proto

namespace Google\Cloud\DocumentAI\V1\ProcessOptions\LayoutConfig;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Serving config for chunking.
 *
 * Generated from protobuf message <code>google.cloud.documentai.v1.ProcessOptions.LayoutConfig.ChunkingConfig</code>
 */
class ChunkingConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The chunk sizes to use when splitting documents, in order of
     * level.
     *
     * Generated from protobuf field <code>int32 chunk_size = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $chunk_size = 0;
    /**
     * Optional. Whether or not to include ancestor headings when splitting.
     *
     * Generated from protobuf field <code>bool include_ancestor_headings = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $include_ancestor_headings = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $chunk_size
     *           Optional. The chunk sizes to use when splitting documents, in order of
     *           level.
     *     @type bool $include_ancestor_headings
     *           Optional. Whether or not to include ancestor headings when splitting.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Documentai\V1\DocumentProcessorService::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The chunk sizes to use when splitting documents, in order of
     * level.
     *
     * Generated from protobuf field <code>int32 chunk_size = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getChunkSize()
    {
        return $this->chunk_size;
    }

    /**
     * Optional. The chunk sizes to use when splitting documents, in order of
     * level.
     *
     * Generated from protobuf field <code>int32 chunk_size = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setChunkSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->chunk_size = $var;

        return $this;
    }

    /**
     * Optional. Whether or not to include ancestor headings when splitting.
     *
     * Generated from protobuf field <code>bool include_ancestor_headings = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getIncludeAncestorHeadings()
    {
        return $this->include_ancestor_headings;
    }

    /**
     * Optional. Whether or not to include ancestor headings when splitting.
     *
     * Generated from protobuf field <code>bool include_ancestor_headings = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setIncludeAncestorHeadings($var)
    {
        GPBUtil::checkBool($var);
        $this->include_ancestor_headings = $var;

        return $this;
    }

}


