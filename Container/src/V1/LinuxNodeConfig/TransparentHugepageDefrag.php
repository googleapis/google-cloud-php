<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/container/v1/cluster_service.proto

namespace Google\Cloud\Container\V1\LinuxNodeConfig;

use UnexpectedValueException;

/**
 * Possible values for transparent hugepage defrag support.
 *
 * Protobuf type <code>google.container.v1.LinuxNodeConfig.TransparentHugepageDefrag</code>
 */
class TransparentHugepageDefrag
{
    /**
     * Default value. GKE will not modify the kernel configuration.
     *
     * Generated from protobuf enum <code>TRANSPARENT_HUGEPAGE_DEFRAG_UNSPECIFIED = 0;</code>
     */
    const TRANSPARENT_HUGEPAGE_DEFRAG_UNSPECIFIED = 0;
    /**
     * It means that an application requesting THP will stall on allocation
     * failure and directly reclaim pages and compact memory in an effort to
     * allocate a THP immediately.
     *
     * Generated from protobuf enum <code>TRANSPARENT_HUGEPAGE_DEFRAG_ALWAYS = 1;</code>
     */
    const TRANSPARENT_HUGEPAGE_DEFRAG_ALWAYS = 1;
    /**
     * It means that an application will wake kswapd in the background to
     * reclaim pages and wake kcompactd to compact memory so that THP is
     * available in the near future. Itâ€™s the responsibility of khugepaged to
     * then install the THP pages later.
     *
     * Generated from protobuf enum <code>TRANSPARENT_HUGEPAGE_DEFRAG_DEFER = 2;</code>
     */
    const TRANSPARENT_HUGEPAGE_DEFRAG_DEFER = 2;
    /**
     * It means that an application will enter direct reclaim and compaction
     * like always, but only for regions that have used madvise(MADV_HUGEPAGE);
     * all other regions will wake kswapd in the background to reclaim pages and
     * wake kcompactd to compact memory so that THP is available in the near
     * future.
     *
     * Generated from protobuf enum <code>TRANSPARENT_HUGEPAGE_DEFRAG_DEFER_WITH_MADVISE = 3;</code>
     */
    const TRANSPARENT_HUGEPAGE_DEFRAG_DEFER_WITH_MADVISE = 3;
    /**
     * It means that an application will enter direct reclaim like always but
     * only for regions that are have used madvise(MADV_HUGEPAGE). This is the
     * default kernel configuration.
     *
     * Generated from protobuf enum <code>TRANSPARENT_HUGEPAGE_DEFRAG_MADVISE = 4;</code>
     */
    const TRANSPARENT_HUGEPAGE_DEFRAG_MADVISE = 4;
    /**
     * It means that an application will never enter direct reclaim or
     * compaction.
     *
     * Generated from protobuf enum <code>TRANSPARENT_HUGEPAGE_DEFRAG_NEVER = 5;</code>
     */
    const TRANSPARENT_HUGEPAGE_DEFRAG_NEVER = 5;

    private static $valueToName = [
        self::TRANSPARENT_HUGEPAGE_DEFRAG_UNSPECIFIED => 'TRANSPARENT_HUGEPAGE_DEFRAG_UNSPECIFIED',
        self::TRANSPARENT_HUGEPAGE_DEFRAG_ALWAYS => 'TRANSPARENT_HUGEPAGE_DEFRAG_ALWAYS',
        self::TRANSPARENT_HUGEPAGE_DEFRAG_DEFER => 'TRANSPARENT_HUGEPAGE_DEFRAG_DEFER',
        self::TRANSPARENT_HUGEPAGE_DEFRAG_DEFER_WITH_MADVISE => 'TRANSPARENT_HUGEPAGE_DEFRAG_DEFER_WITH_MADVISE',
        self::TRANSPARENT_HUGEPAGE_DEFRAG_MADVISE => 'TRANSPARENT_HUGEPAGE_DEFRAG_MADVISE',
        self::TRANSPARENT_HUGEPAGE_DEFRAG_NEVER => 'TRANSPARENT_HUGEPAGE_DEFRAG_NEVER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


