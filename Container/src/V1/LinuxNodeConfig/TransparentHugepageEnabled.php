<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/container/v1/cluster_service.proto

namespace Google\Cloud\Container\V1\LinuxNodeConfig;

use UnexpectedValueException;

/**
 * Possible values for transparent hugepage enabled support.
 *
 * Protobuf type <code>google.container.v1.LinuxNodeConfig.TransparentHugepageEnabled</code>
 */
class TransparentHugepageEnabled
{
    /**
     * Default value. GKE will not modify the kernel configuration.
     *
     * Generated from protobuf enum <code>TRANSPARENT_HUGEPAGE_ENABLED_UNSPECIFIED = 0;</code>
     */
    const TRANSPARENT_HUGEPAGE_ENABLED_UNSPECIFIED = 0;
    /**
     * Transparent hugepage support for anonymous memory is enabled system wide.
     *
     * Generated from protobuf enum <code>TRANSPARENT_HUGEPAGE_ENABLED_ALWAYS = 1;</code>
     */
    const TRANSPARENT_HUGEPAGE_ENABLED_ALWAYS = 1;
    /**
     * Transparent hugepage support for anonymous memory is enabled inside
     * MADV_HUGEPAGE regions. This is the default kernel configuration.
     *
     * Generated from protobuf enum <code>TRANSPARENT_HUGEPAGE_ENABLED_MADVISE = 2;</code>
     */
    const TRANSPARENT_HUGEPAGE_ENABLED_MADVISE = 2;
    /**
     * Transparent hugepage support for anonymous memory is disabled.
     *
     * Generated from protobuf enum <code>TRANSPARENT_HUGEPAGE_ENABLED_NEVER = 3;</code>
     */
    const TRANSPARENT_HUGEPAGE_ENABLED_NEVER = 3;

    private static $valueToName = [
        self::TRANSPARENT_HUGEPAGE_ENABLED_UNSPECIFIED => 'TRANSPARENT_HUGEPAGE_ENABLED_UNSPECIFIED',
        self::TRANSPARENT_HUGEPAGE_ENABLED_ALWAYS => 'TRANSPARENT_HUGEPAGE_ENABLED_ALWAYS',
        self::TRANSPARENT_HUGEPAGE_ENABLED_MADVISE => 'TRANSPARENT_HUGEPAGE_ENABLED_MADVISE',
        self::TRANSPARENT_HUGEPAGE_ENABLED_NEVER => 'TRANSPARENT_HUGEPAGE_ENABLED_NEVER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


