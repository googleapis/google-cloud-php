<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/container/v1/cluster_service.proto

namespace Google\Cloud\Container\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Best effort provisioning.
 *
 * Generated from protobuf message <code>google.container.v1.BestEffortProvisioning</code>
 */
class BestEffortProvisioning extends \Google\Protobuf\Internal\Message
{
    /**
     * When this is enabled, cluster/node pool creations will ignore non-fatal
     * errors like stockout to best provision as many nodes as possible right now
     * and eventually bring up all target number of nodes
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     */
    private $enabled = false;
    /**
     * Minimum number of nodes to be provisioned to be considered as succeeded,
     * and the rest of nodes will be provisioned gradually and eventually when
     * stockout issue has been resolved.
     *
     * Generated from protobuf field <code>int32 min_provision_nodes = 2;</code>
     */
    private $min_provision_nodes = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enabled
     *           When this is enabled, cluster/node pool creations will ignore non-fatal
     *           errors like stockout to best provision as many nodes as possible right now
     *           and eventually bring up all target number of nodes
     *     @type int $min_provision_nodes
     *           Minimum number of nodes to be provisioned to be considered as succeeded,
     *           and the rest of nodes will be provisioned gradually and eventually when
     *           stockout issue has been resolved.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Container\V1\ClusterService::initOnce();
        parent::__construct($data);
    }

    /**
     * When this is enabled, cluster/node pool creations will ignore non-fatal
     * errors like stockout to best provision as many nodes as possible right now
     * and eventually bring up all target number of nodes
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     * @return bool
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     * When this is enabled, cluster/node pool creations will ignore non-fatal
     * errors like stockout to best provision as many nodes as possible right now
     * and eventually bring up all target number of nodes
     *
     * Generated from protobuf field <code>bool enabled = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->enabled = $var;

        return $this;
    }

    /**
     * Minimum number of nodes to be provisioned to be considered as succeeded,
     * and the rest of nodes will be provisioned gradually and eventually when
     * stockout issue has been resolved.
     *
     * Generated from protobuf field <code>int32 min_provision_nodes = 2;</code>
     * @return int
     */
    public function getMinProvisionNodes()
    {
        return $this->min_provision_nodes;
    }

    /**
     * Minimum number of nodes to be provisioned to be considered as succeeded,
     * and the rest of nodes will be provisioned gradually and eventually when
     * stockout issue has been resolved.
     *
     * Generated from protobuf field <code>int32 min_provision_nodes = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMinProvisionNodes($var)
    {
        GPBUtil::checkInt32($var);
        $this->min_provision_nodes = $var;

        return $this;
    }

}

