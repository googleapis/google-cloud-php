<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/container/v1/cluster_service.proto

namespace Google\Cloud\Container\V1\DNSConfig;

use UnexpectedValueException;

/**
 * DNSScope lists the various scopes of access to cluster DNS records.
 *
 * Protobuf type <code>google.container.v1.DNSConfig.DNSScope</code>
 */
class DNSScope
{
    /**
     * Default value, will be inferred as cluster scope.
     *
     * Generated from protobuf enum <code>DNS_SCOPE_UNSPECIFIED = 0;</code>
     */
    const DNS_SCOPE_UNSPECIFIED = 0;
    /**
     * DNS records are accessible from within the VPC.
     *
     * Generated from protobuf enum <code>VPC_SCOPE = 2;</code>
     */
    const VPC_SCOPE = 2;

    private static $valueToName = [
        self::DNS_SCOPE_UNSPECIFIED => 'DNS_SCOPE_UNSPECIFIED',
        self::VPC_SCOPE => 'VPC_SCOPE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(DNSScope::class, \Google\Cloud\Container\V1\DNSConfig_DNSScope::class);

