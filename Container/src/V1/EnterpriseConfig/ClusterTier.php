<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/container/v1/cluster_service.proto

namespace Google\Cloud\Container\V1\EnterpriseConfig;

use UnexpectedValueException;

/**
 * Premium tiers for GKE Cluster.
 *
 * Protobuf type <code>google.container.v1.EnterpriseConfig.ClusterTier</code>
 */
class ClusterTier
{
    /**
     * CLUSTER_TIER_UNSPECIFIED is when cluster_tier is not set.
     *
     * Generated from protobuf enum <code>CLUSTER_TIER_UNSPECIFIED = 0;</code>
     */
    const CLUSTER_TIER_UNSPECIFIED = 0;
    /**
     * STANDARD indicates a standard GKE cluster.
     *
     * Generated from protobuf enum <code>STANDARD = 1;</code>
     */
    const STANDARD = 1;
    /**
     * ENTERPRISE indicates a GKE Enterprise cluster.
     *
     * Generated from protobuf enum <code>ENTERPRISE = 2;</code>
     */
    const ENTERPRISE = 2;

    private static $valueToName = [
        self::CLUSTER_TIER_UNSPECIFIED => 'CLUSTER_TIER_UNSPECIFIED',
        self::STANDARD => 'STANDARD',
        self::ENTERPRISE => 'ENTERPRISE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ClusterTier::class, \Google\Cloud\Container\V1\EnterpriseConfig_ClusterTier::class);

