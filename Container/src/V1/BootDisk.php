<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/container/v1/cluster_service.proto

namespace Google\Cloud\Container\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * BootDisk specifies the boot disk configuration for nodepools.
 *
 * Generated from protobuf message <code>google.container.v1.BootDisk</code>
 */
class BootDisk extends \Google\Protobuf\Internal\Message
{
    /**
     * Disk type of the boot disk.
     * (i.e. Hyperdisk-Balanced, PD-Balanced, etc.)
     *
     * Generated from protobuf field <code>string disk_type = 1;</code>
     */
    protected $disk_type = '';
    /**
     * Disk size in GB. Replaces NodeConfig.disk_size_gb
     *
     * Generated from protobuf field <code>int64 size_gb = 2;</code>
     */
    protected $size_gb = 0;
    /**
     * For Hyperdisk-Balanced only, the provisioned IOPS config value.
     *
     * Generated from protobuf field <code>int64 provisioned_iops = 3;</code>
     */
    protected $provisioned_iops = 0;
    /**
     * For Hyperdisk-Balanced only, the provisioned throughput config value.
     *
     * Generated from protobuf field <code>int64 provisioned_throughput = 4;</code>
     */
    protected $provisioned_throughput = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $disk_type
     *           Disk type of the boot disk.
     *           (i.e. Hyperdisk-Balanced, PD-Balanced, etc.)
     *     @type int|string $size_gb
     *           Disk size in GB. Replaces NodeConfig.disk_size_gb
     *     @type int|string $provisioned_iops
     *           For Hyperdisk-Balanced only, the provisioned IOPS config value.
     *     @type int|string $provisioned_throughput
     *           For Hyperdisk-Balanced only, the provisioned throughput config value.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Container\V1\ClusterService::initOnce();
        parent::__construct($data);
    }

    /**
     * Disk type of the boot disk.
     * (i.e. Hyperdisk-Balanced, PD-Balanced, etc.)
     *
     * Generated from protobuf field <code>string disk_type = 1;</code>
     * @return string
     */
    public function getDiskType()
    {
        return $this->disk_type;
    }

    /**
     * Disk type of the boot disk.
     * (i.e. Hyperdisk-Balanced, PD-Balanced, etc.)
     *
     * Generated from protobuf field <code>string disk_type = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDiskType($var)
    {
        GPBUtil::checkString($var, True);
        $this->disk_type = $var;

        return $this;
    }

    /**
     * Disk size in GB. Replaces NodeConfig.disk_size_gb
     *
     * Generated from protobuf field <code>int64 size_gb = 2;</code>
     * @return int|string
     */
    public function getSizeGb()
    {
        return $this->size_gb;
    }

    /**
     * Disk size in GB. Replaces NodeConfig.disk_size_gb
     *
     * Generated from protobuf field <code>int64 size_gb = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSizeGb($var)
    {
        GPBUtil::checkInt64($var);
        $this->size_gb = $var;

        return $this;
    }

    /**
     * For Hyperdisk-Balanced only, the provisioned IOPS config value.
     *
     * Generated from protobuf field <code>int64 provisioned_iops = 3;</code>
     * @return int|string
     */
    public function getProvisionedIops()
    {
        return $this->provisioned_iops;
    }

    /**
     * For Hyperdisk-Balanced only, the provisioned IOPS config value.
     *
     * Generated from protobuf field <code>int64 provisioned_iops = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setProvisionedIops($var)
    {
        GPBUtil::checkInt64($var);
        $this->provisioned_iops = $var;

        return $this;
    }

    /**
     * For Hyperdisk-Balanced only, the provisioned throughput config value.
     *
     * Generated from protobuf field <code>int64 provisioned_throughput = 4;</code>
     * @return int|string
     */
    public function getProvisionedThroughput()
    {
        return $this->provisioned_throughput;
    }

    /**
     * For Hyperdisk-Balanced only, the provisioned throughput config value.
     *
     * Generated from protobuf field <code>int64 provisioned_throughput = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setProvisionedThroughput($var)
    {
        GPBUtil::checkInt64($var);
        $this->provisioned_throughput = $var;

        return $this;
    }

}

