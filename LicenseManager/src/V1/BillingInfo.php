<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/licensemanager/v1/api_entities.proto

namespace Google\Cloud\LicenseManager\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Billing Information.
 *
 * Generated from protobuf message <code>google.cloud.licensemanager.v1.BillingInfo</code>
 */
class BillingInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. When the billing starts.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $start_time = null;
    /**
     * Output only. When the billing ends.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $end_time = null;
    protected $current_billing_info;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\LicenseManager\V1\UserCountBillingInfo $user_count_billing
     *           Required. This type of billing uses user count for computing total
     *           charge.
     *     @type \Google\Protobuf\Timestamp $start_time
     *           Output only. When the billing starts.
     *     @type \Google\Protobuf\Timestamp $end_time
     *           Output only. When the billing ends.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Licensemanager\V1\ApiEntities::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. This type of billing uses user count for computing total
     * charge.
     *
     * Generated from protobuf field <code>.google.cloud.licensemanager.v1.UserCountBillingInfo user_count_billing = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\LicenseManager\V1\UserCountBillingInfo|null
     */
    public function getUserCountBilling()
    {
        return $this->readOneof(1);
    }

    public function hasUserCountBilling()
    {
        return $this->hasOneof(1);
    }

    /**
     * Required. This type of billing uses user count for computing total
     * charge.
     *
     * Generated from protobuf field <code>.google.cloud.licensemanager.v1.UserCountBillingInfo user_count_billing = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\LicenseManager\V1\UserCountBillingInfo $var
     * @return $this
     */
    public function setUserCountBilling($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\LicenseManager\V1\UserCountBillingInfo::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Output only. When the billing starts.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getStartTime()
    {
        return $this->start_time;
    }

    public function hasStartTime()
    {
        return isset($this->start_time);
    }

    public function clearStartTime()
    {
        unset($this->start_time);
    }

    /**
     * Output only. When the billing starts.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp start_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setStartTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->start_time = $var;

        return $this;
    }

    /**
     * Output only. When the billing ends.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getEndTime()
    {
        return $this->end_time;
    }

    public function hasEndTime()
    {
        return isset($this->end_time);
    }

    public function clearEndTime()
    {
        unset($this->end_time);
    }

    /**
     * Output only. When the billing ends.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp end_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setEndTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->end_time = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getCurrentBillingInfo()
    {
        return $this->whichOneof("current_billing_info");
    }

}

