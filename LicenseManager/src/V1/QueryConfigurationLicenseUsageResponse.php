<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/licensemanager/v1/licensemanager.proto

namespace Google\Cloud\LicenseManager\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Message for response to get the license usage per configuration.
 *
 * Generated from protobuf message <code>google.cloud.licensemanager.v1.QueryConfigurationLicenseUsageResponse</code>
 */
class QueryConfigurationLicenseUsageResponse extends \Google\Protobuf\Internal\Message
{
    protected $details;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\LicenseManager\V1\UserCountUsage $user_count_usage
     *           Usage information for license types which use user-count billing.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Licensemanager\V1\Licensemanager::initOnce();
        parent::__construct($data);
    }

    /**
     * Usage information for license types which use user-count billing.
     *
     * Generated from protobuf field <code>.google.cloud.licensemanager.v1.UserCountUsage user_count_usage = 1;</code>
     * @return \Google\Cloud\LicenseManager\V1\UserCountUsage|null
     */
    public function getUserCountUsage()
    {
        return $this->readOneof(1);
    }

    public function hasUserCountUsage()
    {
        return $this->hasOneof(1);
    }

    /**
     * Usage information for license types which use user-count billing.
     *
     * Generated from protobuf field <code>.google.cloud.licensemanager.v1.UserCountUsage user_count_usage = 1;</code>
     * @param \Google\Cloud\LicenseManager\V1\UserCountUsage $var
     * @return $this
     */
    public function setUserCountUsage($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\LicenseManager\V1\UserCountUsage::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getDetails()
    {
        return $this->whichOneof("details");
    }

}

