<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/maintenance/api/v1beta/maintenance_service.proto

namespace Google\Cloud\Maintenance\Api\V1beta\MaintenanceSummary;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>google.cloud.maintenance.api.v1beta.MaintenanceSummary.Aggregate</code>
 */
class Aggregate extends \Google\Protobuf\Internal\Message
{
    /**
     * Specifies what specific value of the group_by the count represents. For
     * example if group_by is `"state"` its corresponding group could be
     * `"SCHEDULED"`.
     *
     * Generated from protobuf field <code>string group = 1;</code>
     */
    protected $group = '';
    /**
     * The count of the group.
     *
     * Generated from protobuf field <code>int64 count = 2;</code>
     */
    protected $count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $group
     *           Specifies what specific value of the group_by the count represents. For
     *           example if group_by is `"state"` its corresponding group could be
     *           `"SCHEDULED"`.
     *     @type int|string $count
     *           The count of the group.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Maintenance\Api\V1Beta\MaintenanceService::initOnce();
        parent::__construct($data);
    }

    /**
     * Specifies what specific value of the group_by the count represents. For
     * example if group_by is `"state"` its corresponding group could be
     * `"SCHEDULED"`.
     *
     * Generated from protobuf field <code>string group = 1;</code>
     * @return string
     */
    public function getGroup()
    {
        return $this->group;
    }

    /**
     * Specifies what specific value of the group_by the count represents. For
     * example if group_by is `"state"` its corresponding group could be
     * `"SCHEDULED"`.
     *
     * Generated from protobuf field <code>string group = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setGroup($var)
    {
        GPBUtil::checkString($var, True);
        $this->group = $var;

        return $this;
    }

    /**
     * The count of the group.
     *
     * Generated from protobuf field <code>int64 count = 2;</code>
     * @return int|string
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * The count of the group.
     *
     * Generated from protobuf field <code>int64 count = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->count = $var;

        return $this;
    }

}


