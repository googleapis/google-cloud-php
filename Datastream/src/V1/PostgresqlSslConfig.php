<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datastream/v1/datastream_resources.proto

namespace Google\Cloud\Datastream\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * PostgreSQL SSL configuration information.
 *
 * Generated from protobuf message <code>google.cloud.datastream.v1.PostgresqlSslConfig</code>
 */
class PostgresqlSslConfig extends \Google\Protobuf\Internal\Message
{
    protected $encryption_setting;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Datastream\V1\PostgresqlSslConfig\ServerVerification $server_verification
     *            If this field is set, the communication will be encrypted with TLS
     *            encryption and the server identity will be authenticated.
     *     @type \Google\Cloud\Datastream\V1\PostgresqlSslConfig\ServerAndClientVerification $server_and_client_verification
     *           If this field is set, the communication will be encrypted with TLS
     *           encryption and both the server identity and the client identity will be
     *           authenticated.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Datastream\V1\DatastreamResources::initOnce();
        parent::__construct($data);
    }

    /**
     *  If this field is set, the communication will be encrypted with TLS
     *  encryption and the server identity will be authenticated.
     *
     * Generated from protobuf field <code>.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;</code>
     * @return \Google\Cloud\Datastream\V1\PostgresqlSslConfig\ServerVerification|null
     */
    public function getServerVerification()
    {
        return $this->readOneof(1);
    }

    public function hasServerVerification()
    {
        return $this->hasOneof(1);
    }

    /**
     *  If this field is set, the communication will be encrypted with TLS
     *  encryption and the server identity will be authenticated.
     *
     * Generated from protobuf field <code>.google.cloud.datastream.v1.PostgresqlSslConfig.ServerVerification server_verification = 1;</code>
     * @param \Google\Cloud\Datastream\V1\PostgresqlSslConfig\ServerVerification $var
     * @return $this
     */
    public function setServerVerification($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Datastream\V1\PostgresqlSslConfig\ServerVerification::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * If this field is set, the communication will be encrypted with TLS
     * encryption and both the server identity and the client identity will be
     * authenticated.
     *
     * Generated from protobuf field <code>.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;</code>
     * @return \Google\Cloud\Datastream\V1\PostgresqlSslConfig\ServerAndClientVerification|null
     */
    public function getServerAndClientVerification()
    {
        return $this->readOneof(2);
    }

    public function hasServerAndClientVerification()
    {
        return $this->hasOneof(2);
    }

    /**
     * If this field is set, the communication will be encrypted with TLS
     * encryption and both the server identity and the client identity will be
     * authenticated.
     *
     * Generated from protobuf field <code>.google.cloud.datastream.v1.PostgresqlSslConfig.ServerAndClientVerification server_and_client_verification = 2;</code>
     * @param \Google\Cloud\Datastream\V1\PostgresqlSslConfig\ServerAndClientVerification $var
     * @return $this
     */
    public function setServerAndClientVerification($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Datastream\V1\PostgresqlSslConfig\ServerAndClientVerification::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getEncryptionSetting()
    {
        return $this->whichOneof("encryption_setting");
    }

}

