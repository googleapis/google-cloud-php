<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/datastore/v1/datastore.proto

namespace Google\Cloud\Datastore\V1\Mutation;

use UnexpectedValueException;

/**
 * The possible ways to resolve a conflict detected in a mutation.
 *
 * Protobuf type <code>google.datastore.v1.Mutation.ConflictResolutionStrategy</code>
 */
class ConflictResolutionStrategy
{
    /**
     * Unspecified. Defaults to `SERVER_VALUE`.
     *
     * Generated from protobuf enum <code>STRATEGY_UNSPECIFIED = 0;</code>
     */
    const STRATEGY_UNSPECIFIED = 0;
    /**
     * The server entity is kept.
     *
     * Generated from protobuf enum <code>SERVER_VALUE = 1;</code>
     */
    const SERVER_VALUE = 1;
    /**
     * The whole commit request fails.
     *
     * Generated from protobuf enum <code>FAIL = 3;</code>
     */
    const FAIL = 3;

    private static $valueToName = [
        self::STRATEGY_UNSPECIFIED => 'STRATEGY_UNSPECIFIED',
        self::SERVER_VALUE => 'SERVER_VALUE',
        self::FAIL => 'FAIL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ConflictResolutionStrategy::class, \Google\Cloud\Datastore\V1\Mutation_ConflictResolutionStrategy::class);

