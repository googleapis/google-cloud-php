<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/ads/admanager/v1/report_definition.proto

namespace Google\Ads\AdManager\V1\ReportDefinition;

use UnexpectedValueException;

/**
 * Supported report types.
 *
 * Protobuf type <code>google.ads.admanager.v1.ReportDefinition.ReportType</code>
 */
class ReportType
{
    /**
     * Default value. This value is unused.
     *
     * Generated from protobuf enum <code>REPORT_TYPE_UNSPECIFIED = 0;</code>
     */
    const REPORT_TYPE_UNSPECIFIED = 0;
    /**
     * Historical.
     *
     * Generated from protobuf enum <code>HISTORICAL = 1;</code>
     */
    const HISTORICAL = 1;
    /**
     * Reach.
     *
     * Generated from protobuf enum <code>REACH = 5;</code>
     */
    const REACH = 5;
    /**
     * Privacy and messaging.
     *
     * Generated from protobuf enum <code>PRIVACY_AND_MESSAGING = 6;</code>
     */
    const PRIVACY_AND_MESSAGING = 6;
    /**
     * Ad speed.
     *
     * Generated from protobuf enum <code>AD_SPEED = 13;</code>
     */
    const AD_SPEED = 13;

    private static $valueToName = [
        self::REPORT_TYPE_UNSPECIFIED => 'REPORT_TYPE_UNSPECIFIED',
        self::HISTORICAL => 'HISTORICAL',
        self::REACH => 'REACH',
        self::PRIVACY_AND_MESSAGING => 'PRIVACY_AND_MESSAGING',
        self::AD_SPEED => 'AD_SPEED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ReportType::class, \Google\Ads\AdManager\V1\ReportDefinition_ReportType::class);

