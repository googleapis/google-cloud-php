<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/ads/admanager/v1/report_definition.proto

namespace Google\Ads\AdManager\V1\ReportDefinition;

use UnexpectedValueException;

/**
 * Reporting metrics.
 *
 * Protobuf type <code>google.ads.admanager.v1.ReportDefinition.Metric</code>
 */
class Metric
{
    /**
     * Default value. This value is unused.
     *
     * Generated from protobuf enum <code>METRIC_UNSPECIFIED = 0;</code>
     */
    const METRIC_UNSPECIFIED = 0;
    /**
     * The number of people who engaged with your site or app in the specified
     *  date range from Google Analytics.
     * Corresponds to "Active users" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ACTIVE_USERS = 223;</code>
     */
    const ACTIVE_USERS = 223;
    /**
     * Number of impressions with unmuted playback at start.
     * Corresponds to "Active View % audible at start" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_AUDIBLE_AT_START_PERCENT = 445;</code>
     */
    const ACTIVE_VIEW_AUDIBLE_AT_START_PERCENT = 445;
    /**
     * Total Active View audible impressions
     * Corresponds to "Total Active View audible impressions" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_AUDIBLE_IMPRESSIONS = 659;</code>
     */
    const ACTIVE_VIEW_AUDIBLE_IMPRESSIONS = 659;
    /**
     * Number of impressions with unmuted playback through the entire stream.
     * Corresponds to "Active View % audible through completion" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_AUDIBLE_THROUGH_COMPLETION_PERCENT = 446;</code>
     */
    const ACTIVE_VIEW_AUDIBLE_THROUGH_COMPLETION_PERCENT = 446;
    /**
     * Number of impressions with unmuted playback through at least 25%.
     * Corresponds to "Active View % audible through first quartile" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_AUDIBLE_THROUGH_FIRST_QUARTILE_PERCENT = 447;</code>
     */
    const ACTIVE_VIEW_AUDIBLE_THROUGH_FIRST_QUARTILE_PERCENT = 447;
    /**
     * Number of impressions with unmuted playback through at least 50%.
     * Corresponds to "Active View % audible through midpoint" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_AUDIBLE_THROUGH_MIDPOINT_PERCENT = 448;</code>
     */
    const ACTIVE_VIEW_AUDIBLE_THROUGH_MIDPOINT_PERCENT = 448;
    /**
     * Number of impressions with unmuted playback through at least 75%.
     * Corresponds to "Active View % audible through third quartile" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_AUDIBLE_THROUGH_THIRD_QUARTILE_PERCENT = 449;</code>
     */
    const ACTIVE_VIEW_AUDIBLE_THROUGH_THIRD_QUARTILE_PERCENT = 449;
    /**
     * Total Active View audio enabled impressions
     * Corresponds to "Total Active View audio eligible impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_AUDIO_ENABLED_IMPRESSIONS = 660;</code>
     */
    const ACTIVE_VIEW_AUDIO_ENABLED_IMPRESSIONS = 660;
    /**
     * Total Active View audio measurable impressions
     * Corresponds to "Total Active View audio measurable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_AUDIO_MEASURABLE_IMPRESSIONS = 661;</code>
     */
    const ACTIVE_VIEW_AUDIO_MEASURABLE_IMPRESSIONS = 661;
    /**
     * Active View total average time in seconds that specific impressions are
     *  reported as being viewable.
     * Corresponds to "Total Active View average viewable time (seconds)" in the
     * Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 61;</code>
     */
    const ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 61;
    /**
     * Total number of impressions that were eligible to measure viewability.
     * Corresponds to "Total Active View eligible impressions" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 58;</code>
     */
    const ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 58;
    /**
     * Number of impressions where the ad player is in the background at any
     *  point during playback with volume > 0.
     * Corresponds to "Active View % ever audible while backgrounded" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_EVER_AUDIBLE_BACKGROUNDED_PERCENT = 450;</code>
     */
    const ACTIVE_VIEW_EVER_AUDIBLE_BACKGROUNDED_PERCENT = 450;
    /**
     * Number of impressions where volume > 0 at any point.
     * Corresponds to "Active View % ever audible" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_EVER_AUDIBLE_PERCENT = 451;</code>
     */
    const ACTIVE_VIEW_EVER_AUDIBLE_PERCENT = 451;
    /**
     * Number of impressions where the ad player is in the background at any
     *  point during playback.
     * Corresponds to "Active View % ever backgrounded" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_EVER_BACKGROUNDED_PERCENT = 452;</code>
     */
    const ACTIVE_VIEW_EVER_BACKGROUNDED_PERCENT = 452;
    /**
     * Number of impressions where volume = 0 at any point.
     * Corresponds to "Active View % ever muted" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_EVER_MUTED_PERCENT = 453;</code>
     */
    const ACTIVE_VIEW_EVER_MUTED_PERCENT = 453;
    /**
     * The number of measurable impressions that were played to video
     *  completion, and also audible and visible at the time of completion.
     * Corresponds to "Total Active View impressions audible and visible at
     * completion" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_IMPRESSIONS_AUDIBLE_AND_VISIBLIE_AT_COMPLETION = 411;</code>
     */
    const ACTIVE_VIEW_IMPRESSIONS_AUDIBLE_AND_VISIBLIE_AT_COMPLETION = 411;
    /**
     * The total number of impressions that were sampled and measured by active
     *  view.
     * Corresponds to "Total Active View measurable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 57;</code>
     */
    const ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 57;
    /**
     * The percentage of total impressions that were measurable by active view
     *  (out of all the total impressions sampled for active view).
     * Corresponds to "Total Active View % measurable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 60;</code>
     */
    const ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 60;
    /**
     * Total Active View non-measurable impressions
     * Corresponds to "Total Active View non-measurable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS = 662;</code>
     */
    const ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS = 662;
    /**
     * Total Active View non-viewable impressions
     * Corresponds to "Total Active View non-viewable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS = 663;</code>
     */
    const ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS = 663;
    /**
     * Total Active View non-viewable impressions distribution
     * Corresponds to "Total Active View non-viewable impression distribution"
     * in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 664;</code>
     */
    const ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 664;
    /**
     * Total Active View percent audible impressions
     * Corresponds to "Total Active View % audible impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_PERCENT_AUDIBLE_IMPRESSIONS = 665;</code>
     */
    const ACTIVE_VIEW_PERCENT_AUDIBLE_IMPRESSIONS = 665;
    /**
     * Number of impressions where we were able to collect Active View+ signals.
     * Corresponds to "Active View+ measurable impressions" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_PLUS_MEASURABLE_COUNT = 454;</code>
     */
    const ACTIVE_VIEW_PLUS_MEASURABLE_COUNT = 454;
    /**
     * Revenue generated from Active View impressions.
     * Corresponds to "Total Active View revenue" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_REVENUE = 414;</code>
     */
    const ACTIVE_VIEW_REVENUE = 414;
    /**
     * Total Active View undetermined impressions distribution
     * Corresponds to "Total Active View undetermined impression distribution"
     * in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION = 666;</code>
     */
    const ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION = 666;
    /**
     * The total number of impressions viewed on the user's screen.
     * Corresponds to "Total Active View viewable impressions" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 56;</code>
     */
    const ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 56;
    /**
     * Total Active View viewable impressions distribution
     * Corresponds to "Total Active View viewable impression distribution" in
     * the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 667;</code>
     */
    const ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 667;
    /**
     * The percentage of total impressions viewed on the user's screen (out of
     *  the total impressions measurable by active view).
     * Corresponds to "Total Active View % viewable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 59;</code>
     */
    const ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 59;
    /**
     * Active View AdSense average time in seconds that specific impressions are
     *  reported as being viewable.
     * Corresponds to "AdSense Active View average viewable time (seconds)" in
     * the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 73;</code>
     */
    const ADSENSE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 73;
    /**
     * Total number of impressions delivered by AdSense that were eligible to
     *  measure viewability.
     * Corresponds to "AdSense Active View eligible impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 70;</code>
     */
    const ADSENSE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 70;
    /**
     * The number of impressions delivered by AdSense that were sampled, and
     *  measurable by active view.
     * Corresponds to "AdSense Active View measurable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 69;</code>
     */
    const ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 69;
    /**
     * The percentage of impressions delivered by AdSense that were measurable
     *  by active view (out of all AdSense impressions sampled for active view).
     * Corresponds to "AdSense Active View % measurable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 72;</code>
     */
    const ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 72;
    /**
     * AdSense Active View non-measurable impressions
     * Corresponds to "AdSense Active View non-measurable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS = 642;</code>
     */
    const ADSENSE_ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS = 642;
    /**
     * AdSense Active View non-viewable impressions
     * Corresponds to "AdSense Active View non-viewable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS = 643;</code>
     */
    const ADSENSE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS = 643;
    /**
     * AdSense Active View non-viewable impressions distribution
     * Corresponds to "AdSense Active View non-viewable impression distribution"
     * in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 644;</code>
     */
    const ADSENSE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 644;
    /**
     * AdSense Active View undetermined impressions distribution
     * Corresponds to "AdSense Active View undetermined impression distribution"
     * in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION = 645;</code>
     */
    const ADSENSE_ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION = 645;
    /**
     * The number of impressions delivered by AdSense viewed on the user's
     *  screen.
     * Corresponds to "AdSense Active View viewable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 68;</code>
     */
    const ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 68;
    /**
     * AdSense Active View viewable impressions distribution
     * Corresponds to "AdSense Active View viewable impression distribution" in
     * the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 646;</code>
     */
    const ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 646;
    /**
     * The percentage of impressions delivered by AdSense viewed on the user's
     *  screen (out of AdSense impressions measurable by active view).
     * Corresponds to "AdSense Active View % viewable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 71;</code>
     */
    const ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 71;
    /**
     * The average effective cost-per-thousand-impressions earned from the ads
     *  delivered by AdSense through line item dynamic allocation.
     * Corresponds to "AdSense average eCPM" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>ADSENSE_AVERAGE_ECPM = 26;</code>
     */
    const ADSENSE_AVERAGE_ECPM = 26;
    /**
     * Number of clicks delivered by AdSense demand channel.
     * Corresponds to "AdSense clicks" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ADSENSE_CLICKS = 23;</code>
     */
    const ADSENSE_CLICKS = 23;
    /**
     * The ratio of impressions served by AdSense that resulted in users
     *  clicking on an ad. The clickthrough rate (CTR) is updated nightly. The
     *  AdSense CTR is calculated as: (AdSense clicks / AdSense impressions).
     * Corresponds to "AdSense CTR" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ADSENSE_CTR = 24;</code>
     */
    const ADSENSE_CTR = 24;
    /**
     * Total impressions delivered by AdSense.
     * Corresponds to "AdSense impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ADSENSE_IMPRESSIONS = 22;</code>
     */
    const ADSENSE_IMPRESSIONS = 22;
    /**
     * Ratio of clicks delivered by AdSense through line item dynamic allocation
     *  in relation to the total clicks delivered.
     * Corresponds to "AdSense clicks (%)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ADSENSE_PERCENT_CLICKS = 28;</code>
     */
    const ADSENSE_PERCENT_CLICKS = 28;
    /**
     * Ratio of impressions delivered by AdSense through line item dynamic
     *  allocation in relation to the total impressions delivered.
     * Corresponds to "AdSense impressions (%)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ADSENSE_PERCENT_IMPRESSIONS = 27;</code>
     */
    const ADSENSE_PERCENT_IMPRESSIONS = 27;
    /**
     * Ratio of revenue generated by AdSense through line item dynamic
     *  allocation in relation to the total revenue.
     * Corresponds to "AdSense revenue (%)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ADSENSE_PERCENT_REVENUE = 29;</code>
     */
    const ADSENSE_PERCENT_REVENUE = 29;
    /**
     * Ratio of revenue generated by AdSense through line item dynamic
     *  allocation in relation to the total revenue (excluding CPD).
     * Corresponds to "AdSense revenue w/o CPD (%)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ADSENSE_PERCENT_REVENUE_WITHOUT_CPD = 30;</code>
     */
    const ADSENSE_PERCENT_REVENUE_WITHOUT_CPD = 30;
    /**
     * The total number of times that an AdSense ad is delivered.
     * Corresponds to "AdSense responses served" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ADSENSE_RESPONSES_SERVED = 41;</code>
     */
    const ADSENSE_RESPONSES_SERVED = 41;
    /**
     * Revenue generated from AdSense through line item dynamic allocation,
     *  calculated in the network's currency and time zone.
     * Corresponds to "AdSense revenue" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>ADSENSE_REVENUE = 25;</code>
     */
    const ADSENSE_REVENUE = 25;
    /**
     * Active View AdExchange average time in seconds that specific impressions
     *  are reported as being viewable.
     * Corresponds to "Ad Exchange Active View average viewable time (seconds)"
     * in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 79;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 79;
    /**
     * Total number of impressions delivered by Ad Exchange that were eligible
     *  to measure viewability.
     * Corresponds to "Ad Exchange Active View eligible impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 76;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 76;
    /**
     * The number of impressions delivered by Ad Exchange that were sampled, and
     *  measurable by active view.
     * Corresponds to "Ad Exchange Active View measurable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 75;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 75;
    /**
     * The percentage of impressions delivered by Ad Exchange that were
     *  measurable by active view (out of all Ad Exchange impressions sampled
     *  for active view).
     * Corresponds to "Ad Exchange Active View % measurable impressions" in the
     * Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 78;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 78;
    /**
     * Ad Exchange Active View non-measurable impressions
     * Corresponds to "Ad Exchange Active View non-measurable impressions" in
     * the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS = 654;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS = 654;
    /**
     * Ad Exchange Active View non-viewable impressions
     * Corresponds to "Ad Exchange Active View non-viewable impressions" in the
     * Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS = 655;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS = 655;
    /**
     * Ad Exchange Active View non-viewable impressions distribution
     * Corresponds to "Ad Exchange Active View non-viewable impression
     * distribution" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 656;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 656;
    /**
     * Ad Exchange Active View undetermined impressions distribution
     * Corresponds to "Ad Exchange Active View undetermined impression
     * distribution" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION = 657;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION = 657;
    /**
     * The number of impressions delivered by Ad Exchange viewed on the user's
     *  screen.
     * Corresponds to "Ad Exchange Active View viewable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 74;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 74;
    /**
     * Ad Exchange Active View viewable impressions distribution
     * Corresponds to "Ad Exchange Active View viewable impression distribution"
     * in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 658;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 658;
    /**
     * The percentage of impressions delivered by Ad Exchange viewed on the
     *  user's screen (out of Ad Exchange impressions measurable by active
     *  view).
     * Corresponds to "Ad Exchange Active View % viewable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 77;</code>
     */
    const AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 77;
    /**
     * The average effective cost-per-thousand-impressions earned from the ads
     *  delivered by Ad Exchange through line item dynamic allocation.
     * Corresponds to "Ad Exchange average eCPM" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_AVERAGE_ECPM = 18;</code>
     */
    const AD_EXCHANGE_AVERAGE_ECPM = 18;
    /**
     * Number of clicks delivered by the Ad Exchange.
     * Corresponds to "Ad Exchange clicks" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_CLICKS = 15;</code>
     */
    const AD_EXCHANGE_CLICKS = 15;
    /**
     * The average effective cost-per-click earned from the ads delivered by Ad
     *  Exchange through line item dynamic allocation.
     * Corresponds to "Ad Exchange CPC" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_CPC = 244;</code>
     */
    const AD_EXCHANGE_CPC = 244;
    /**
     * The ratio of impressions served by the Ad Exchange that resulted in users
     *  clicking on an ad. The clickthrough rate (CTR) is updated nightly. Ad
     *  Exchange CTR is calculated as: (Ad Exchange clicks / Ad Exchange
     *  impressions).
     * Corresponds to "Ad Exchange CTR" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_CTR = 16;</code>
     */
    const AD_EXCHANGE_CTR = 16;
    /**
     * Ratio of impressions delivered by Ad Exchange through line item dynamic
     *  allocation to ad requests.
     * Corresponds to "Ad Exchange delivery rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_DELIVERY_RATE = 245;</code>
     */
    const AD_EXCHANGE_DELIVERY_RATE = 245;
    /**
     * Total impressions delivered by the Ad Exchange.
     * Corresponds to "Ad Exchange impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_IMPRESSIONS = 14;</code>
     */
    const AD_EXCHANGE_IMPRESSIONS = 14;
    /**
     * The total number of impressions based on the number of ad viewers.
     * Corresponds to "Ad Exchange impressions per ad viewer" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_IMPRESSIONS_PER_AD_VIEWER = 427;</code>
     */
    const AD_EXCHANGE_IMPRESSIONS_PER_AD_VIEWER = 427;
    /**
     * The total number of impressions based on the number of sessions.
     * Corresponds to "Ad Exchange impressions per session" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_IMPRESSIONS_PER_SESSION = 428;</code>
     */
    const AD_EXCHANGE_IMPRESSIONS_PER_SESSION = 428;
    /**
     * The increase in revenue gained for won impressions over the applicable
     *  third party price (the minimum CPM or the best price specified during
     *  dynamic allocation),
     * Corresponds to "Ad Exchange lift earnings" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_LIFT = 246;</code>
     */
    const AD_EXCHANGE_LIFT = 246;
    /**
     * The ratio of matched ad requests served by the Ad Exchange that
     *  resulted in users clicking on an ad. The clickthrough rate (CTR) is
     *  updated nightly. Ad Exchange Matched Request CTR is calculated as:
     *  (Ad Exchange clicks / Ad Exchange Macthed Ad Requests).
     * Corresponds to "Ad Exchange matched request CTR" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_MATCHED_REQUEST_CTR = 247;</code>
     */
    const AD_EXCHANGE_MATCHED_REQUEST_CTR = 247;
    /**
     * The average effective cost per thousand matched ad requests earned from
     *  the ads delivered by Ad Exchange through line item dynamic allocation.
     * Corresponds to "Ad Exchange matched request eCPM" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_MATCHED_REQUEST_ECPM = 248;</code>
     */
    const AD_EXCHANGE_MATCHED_REQUEST_ECPM = 248;
    /**
     * The number of responses served divided by the number of queries eligible
     *  in ad exchange.
     * Corresponds to "Ad Exchange match rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_MATCH_RATE = 249;</code>
     */
    const AD_EXCHANGE_MATCH_RATE = 249;
    /**
     * Total opportunities from video VAST error within the waterfall for
     *  backfill ads.
     * Corresponds to "Ad Exchange opportunities from errors" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_OPPORTUNITIES_FROM_ERRORS = 250;</code>
     */
    const AD_EXCHANGE_OPPORTUNITIES_FROM_ERRORS = 250;
    /**
     * Number of opportunities from impressions within the waterfall for
     *  backfill ads.
     * Corresponds to "Ad Exchange opportunities from impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_OPPORTUNITIES_FROM_IMPRESSIONS = 251;</code>
     */
    const AD_EXCHANGE_OPPORTUNITIES_FROM_IMPRESSIONS = 251;
    /**
     * Ratio of clicks delivered by Ad Exchange through line item dynamic
     *  allocation in relation to the total clicks delivered.
     * Corresponds to "Ad Exchange clicks (%)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_PERCENT_CLICKS = 20;</code>
     */
    const AD_EXCHANGE_PERCENT_CLICKS = 20;
    /**
     * Ratio of impressions delivered by Ad Exchange through line item dynamic
     *  allocation in relation to the total impressions delivered.
     * Corresponds to "Ad Exchange impressions (%)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_PERCENT_IMPRESSIONS = 19;</code>
     */
    const AD_EXCHANGE_PERCENT_IMPRESSIONS = 19;
    /**
     * Ratio of revenue generated by Ad Exchange through line item dynamic
     *  allocation in relation to the total revenue.
     * Corresponds to "Ad Exchange revenue (%)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_PERCENT_REVENUE = 21;</code>
     */
    const AD_EXCHANGE_PERCENT_REVENUE = 21;
    /**
     * Ratio of revenue generated by Ad Exchange through line item dynamic
     *  allocation in relation to the total revenue (excluding CPD).
     * Corresponds to "Ad Exchange revenue w/o CPD (%)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_PERCENT_REVENUE_WITHOUT_CPD = 31;</code>
     */
    const AD_EXCHANGE_PERCENT_REVENUE_WITHOUT_CPD = 31;
    /**
     * The average effective cost-per-thousand-impressions earned from the ads
     *  delivered by Ad Exchange through line item dynamic allocation and yield
     *  group partners.
     * Corresponds to "Ad Exchange plus yield group eCPM" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_PLUS_YIELD_GROUP_ECPM = 252;</code>
     */
    const AD_EXCHANGE_PLUS_YIELD_GROUP_ECPM = 252;
    /**
     * Total impressions delivered by the Ad Exchange and third-party networks.
     * Corresponds to "Ad Exchange plus yield group impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_PLUS_YIELD_GROUP_IMPRESSIONS = 253;</code>
     */
    const AD_EXCHANGE_PLUS_YIELD_GROUP_IMPRESSIONS = 253;
    /**
     * Revenue generated from the Ad Exchange and Yield Group, calculated in
     *   your network's currency and time zone.
     * Corresponds to "Ad Exchange plus yield group revenue" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_PLUS_YIELD_GROUP_REVENUE = 254;</code>
     */
    const AD_EXCHANGE_PLUS_YIELD_GROUP_REVENUE = 254;
    /**
     * The total number of times that an Ad Exchange ad is delivered.
     * Corresponds to "Ad Exchange responses served" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_RESPONSES_SERVED = 42;</code>
     */
    const AD_EXCHANGE_RESPONSES_SERVED = 42;
    /**
     * Revenue generated from the Ad Exchange through line item dynamic
     *  allocation, calculated in your network's currency and time zone.
     * Corresponds to "Ad Exchange revenue" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_REVENUE = 17;</code>
     */
    const AD_EXCHANGE_REVENUE = 17;
    /**
     * The Ad Exchange revenue accrued in the child network's own account but
     *  paid to their parent network through auto-payment. This metric is only
     *  relevant for a "Manage Account" child network.
     * Corresponds to "Ad Exchange revenue paid through MCM auto-payment" in the
     * Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT = 212;</code>
     */
    const AD_EXCHANGE_REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT = 212;
    /**
     * The total amount of Ad Exchange revenue based on the
     *  number of ad viewers.
     * Corresponds to "Ad Exchange revenue per ad viewer" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_REVENUE_PER_AD_VIEWER = 429;</code>
     */
    const AD_EXCHANGE_REVENUE_PER_AD_VIEWER = 429;
    /**
     * The number of programmatic eligible queries in Ad Exchange.
     * Corresponds to "Ad Exchange total requests" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_TOTAL_REQUESTS = 255;</code>
     */
    const AD_EXCHANGE_TOTAL_REQUESTS = 255;
    /**
     * The ratio of total ad requests served by the Ad Exchange that
     *  resulted in users clicking on an ad. The clickthrough rate (CTR) is
     *  updated nightly. Ad Exchange Total Request CTR is calculated as:
     *  (Ad Exchange clicks / Ad Exchange Total Ad Requests).
     * Corresponds to "Ad Exchange total request CTR" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_TOTAL_REQUEST_CTR = 256;</code>
     */
    const AD_EXCHANGE_TOTAL_REQUEST_CTR = 256;
    /**
     * The average effective cost per thousand ad requests earned from the ads
     *  delivered by Ad Exchange through line item dynamic allocation and yield
     *   group partners.
     * Corresponds to "Ad Exchange total request eCPM" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_EXCHANGE_TOTAL_REQUEST_ECPM = 257;</code>
     */
    const AD_EXCHANGE_TOTAL_REQUEST_ECPM = 257;
    /**
     * Length of time in seconds that an ad is visible on the user's screen from
     *  Google Analytics.
     * Corresponds to "Ad exposure (seconds)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>AD_EXPOSURE_SECONDS = 241;</code>
     */
    const AD_EXPOSURE_SECONDS = 241;
    /**
     * The total number of times that an ad request is sent to the ad server
     *  including dynamic allocation.
     * Corresponds to "Total ad requests" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_REQUESTS = 38;</code>
     */
    const AD_REQUESTS = 38;
    /**
     * Active View ad server average time in seconds that specific impressions
     *  are reported as being viewable.
     * Corresponds to "Ad server Active View average viewable time (seconds)" in
     * the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 67;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME = 67;
    /**
     * Total number of impressions delivered by the ad server that were eligible
     *  to measure viewability.
     * Corresponds to "Ad server Active View eligible impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 64;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS = 64;
    /**
     * The number of impressions delivered by the ad server that were sampled,
     *  and measurable by active view.
     * Corresponds to "Ad server Active View measurable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 63;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS = 63;
    /**
     * The percentage of impressions delivered by the ad server that were
     *  measurable by active view (out of all the ad server impressions sampled
     *  for active view).
     * Corresponds to "Ad server Active View % measurable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 66;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE = 66;
    /**
     * The number of impressions delivered by Ad Server that were not measured.
     *  For example, impressions where measurement was attempted but failed.
     * Corresponds to "Ad server Active View non-measurable impressions" in the
     * Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS = 332;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS = 332;
    /**
     * The number of impressions delivered by Ad Server that were measured by
     *  active view, but deemed not viewable.
     * Corresponds to "Ad server Active View non-viewable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS = 331;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS = 331;
    /**
     * The fraction of non-viewable impressions among eligible impressions from
     *  Ad Server in Active View reporting."
     * Corresponds to "Ad server Active View non-viewable impression
     * distribution" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 334;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 334;
    /**
     * The fraction of non-eligible impressions among eligible impressions from
     *  Ad Server in Active View reporting."
     * Corresponds to "Ad server Active View undetermined impression
     * distribution" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION = 335;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION = 335;
    /**
     * The number of impressions delivered by the ad server viewed on the user's
     *  screen.
     * Corresponds to "Ad server Active View viewable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 62;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS = 62;
    /**
     * The fraction of viewable impressions among eligible impressions from Ad
     *  Server in Active View reporting.
     * Corresponds to "Ad server Active View viewable impression distribution"
     * in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 333;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION = 333;
    /**
     * The percentage of impressions delivered by the ad server viewed on the
     *  user's screen (out of the ad server impressions measurable by active
     *  view).
     * Corresponds to "Ad server Active View % viewable impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 65;</code>
     */
    const AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE = 65;
    /**
     * Average effective cost-per-thousand-impressions earned from the ads
     *  delivered by the Google Ad Manager server.
     * Corresponds to "Ad server average eCPM" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_SERVER_AVERAGE_ECPM = 34;</code>
     */
    const AD_SERVER_AVERAGE_ECPM = 34;
    /**
     * Average effective cost-per-thousand-impressions earned from the ads
     *  delivered by the Google Ad Manager server, excluding CPD value.
     * Corresponds to "Ad server average eCPM w/o CPD" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_SERVER_AVERAGE_ECPM_WITHOUT_CPD = 10;</code>
     */
    const AD_SERVER_AVERAGE_ECPM_WITHOUT_CPD = 10;
    /**
     * Total raw impressions counted when creative begins to render or the
     *  first frame of a video is shown.
     * Corresponds to "Ad server begin to render impressions" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_BEGIN_TO_RENDER_IMPRESSIONS = 262;</code>
     */
    const AD_SERVER_BEGIN_TO_RENDER_IMPRESSIONS = 262;
    /**
     * Total clicks served by the Google Ad Manager server. It usually takes
     *  about 30 minutes for new clicks to be recorded and added to the total
     *  displayed in reporting.
     * Corresponds to "Ad server clicks" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_CLICKS = 7;</code>
     */
    const AD_SERVER_CLICKS = 7;
    /**
     * The number of completed views for ad server.
     * Corresponds to "Ad server completed views" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_COMPLETED_VIEWS = 431;</code>
     */
    const AD_SERVER_COMPLETED_VIEWS = 431;
    /**
     * Total coviewed impressions delivered by the Ad Server.
     * Corresponds to "Ad server impressions (co-viewed)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_COVIEWED_IMPRESSIONS = 554;</code>
     */
    const AD_SERVER_COVIEWED_IMPRESSIONS = 554;
    /**
     * CPD revenue earned, calculated in your network's currency, for
     *  the ads delivered by the Google Ad Manager server. Sum of all booked
     *  revenue.
     * Corresponds to "Ad server CPD revenue" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_SERVER_CPD_REVENUE = 32;</code>
     */
    const AD_SERVER_CPD_REVENUE = 32;
    /**
     * Ratio of impressions served by the Google Ad Manager server that resulted
     *  in users clicking on an ad. The clickthrough rate (CTR) is updated
     *  nightly. The ad server CTR is calculated as: (Ad server clicks / Ad
     *  server impressions).
     * Corresponds to "Ad server CTR" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_SERVER_CTR = 8;</code>
     */
    const AD_SERVER_CTR = 8;
    /**
     * Gross revenue earned, calculated in your network's currency, for the ads
     *  delivered by the Google Ad Manager server.  This includes pre-rev-share
     *  revenue for Programmatic traffic. This metric is to help with the
     *  transition from gross to net revenue reporting.
     * Corresponds to "Ad server total revenue (gross)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_SERVER_GROSS_REVENUE = 483;</code>
     */
    const AD_SERVER_GROSS_REVENUE = 483;
    /**
     * Gross revenue earned, calculated in your network's currency, for the ads
     *  delivered by the Google Ad Manager server, excluding CPD revenue. This
     *  includes pre-rev-share revenue for Programmatic traffic. This metric is
     *  to help with the transition from gross to net revenue reporting.
     * Corresponds to "Ad server CPM and CPC revenue (gross)" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_SERVER_GROSS_REVENUE_WITHOUT_CPD = 484;</code>
     */
    const AD_SERVER_GROSS_REVENUE_WITHOUT_CPD = 484;
    /**
     * Total impressions delivered by the Ad Server.
     * Corresponds to "Ad server impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_IMPRESSIONS = 6;</code>
     */
    const AD_SERVER_IMPRESSIONS = 6;
    /**
     * Total impressions delivered by the Ad Server with companion impressions.
     * Corresponds to "Ad server impressions with companion" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_IMPRESSIONS_WITH_COMPANION = 222;</code>
     */
    const AD_SERVER_IMPRESSIONS_WITH_COMPANION = 222;
    /**
     * Impressions (via begin to render methodology) delivered by the Google Ad
     *  Manager server considered inactive, as defined by served to a device
     *  receiving ad or bid requests continuously for a session of greater than
     *  16 hours without a "reset" event.
     * Corresponds to "Ad server inactive begin to render impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_INACTIVE_BEGIN_TO_RENDER_IMPRESSIONS = 338;</code>
     */
    const AD_SERVER_INACTIVE_BEGIN_TO_RENDER_IMPRESSIONS = 338;
    /**
     * Ratio of clicks delivered by the Google Ad Manager server in relation to
     *  the total clicks delivered.
     * Corresponds to "Ad server clicks (%)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_SERVER_PERCENT_CLICKS = 12;</code>
     */
    const AD_SERVER_PERCENT_CLICKS = 12;
    /**
     * Ratio of impressions delivered by the Google Ad Manager server in
     *  relation to the total impressions delivered.
     * Corresponds to "Ad server impressions (%)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_SERVER_PERCENT_IMPRESSIONS = 11;</code>
     */
    const AD_SERVER_PERCENT_IMPRESSIONS = 11;
    /**
     * Ratio of revenue generated by the Google Ad Manager server in relation
     *  to the total revenue.
     * Corresponds to "Ad server revenue (%)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_SERVER_PERCENT_REVENUE = 35;</code>
     */
    const AD_SERVER_PERCENT_REVENUE = 35;
    /**
     * Ratio of revenue generated by the Google Ad Manager server (excluding
     *  CPD) in relation to the total revenue.
     * Corresponds to "Ad server revenue w/o CPD (%)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>AD_SERVER_PERCENT_REVENUE_WITHOUT_CPD = 13;</code>
     */
    const AD_SERVER_PERCENT_REVENUE_WITHOUT_CPD = 13;
    /**
     * The total number of times that an ad is served by the ad server.
     * Corresponds to "Ad server responses served" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_RESPONSES_SERVED = 40;</code>
     */
    const AD_SERVER_RESPONSES_SERVED = 40;
    /**
     * All CPM, CPC, and CPD revenue earned, calculated in your network's
     *  currency, for the ads delivered by the Google Ad Manager server.
     *  Sum of all booked revenue.
     * Corresponds to "Ad server total revenue" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_SERVER_REVENUE = 33;</code>
     */
    const AD_SERVER_REVENUE = 33;
    /**
     * The Google Ad Manager server revenue accrued in the child network's own
     *  account but paid to their parent network through auto-payment. This
     *  metric is only relevant for a "Manage Account" child network.
     * Corresponds to "Ad server revenue paid through MCM auto-payment" in the
     * Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_SERVER_REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT = 213;</code>
     */
    const AD_SERVER_REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT = 213;
    /**
     * Revenue (excluding CPD) earned, calculated in your network's currency,
     *  for the ads delivered by the Google Ad Manager server. Sum of all booked
     *  revenue.
     * Corresponds to "Ad server CPM and CPC revenue" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AD_SERVER_REVENUE_WITHOUT_CPD = 9;</code>
     */
    const AD_SERVER_REVENUE_WITHOUT_CPD = 9;
    /**
     * The number of clicks delivered by the ad server by explicit custom
     *  criteria targeting.
     * Corresponds to "Ad server targeted clicks" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_TARGETED_CLICKS = 274;</code>
     */
    const AD_SERVER_TARGETED_CLICKS = 274;
    /**
     * The number of impressions delivered by the ad server by explicit custom
     *  criteria targeting.
     * Corresponds to "Ad server targeted impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_TARGETED_IMPRESSIONS = 275;</code>
     */
    const AD_SERVER_TARGETED_IMPRESSIONS = 275;
    /**
     * The number of tracked ads delivered by the ad server.
     * Corresponds to "Ad server tracked ads" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_TRACKED_ADS = 264;</code>
     */
    const AD_SERVER_TRACKED_ADS = 264;
    /**
     * Total raw impressions counted when creative begins to render or the
     *  first frame of a video is shown, before invalid traffic filtrations by
     *  Ad Server.
     * Corresponds to "Ad server unfiltered begin to render impressions" in the
     * Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_UNFILTERED_BEGIN_TO_RENDER_IMPRESSIONS = 261;</code>
     */
    const AD_SERVER_UNFILTERED_BEGIN_TO_RENDER_IMPRESSIONS = 261;
    /**
     * Total clicks delivered by the Ad Server before spam filtering.
     * Corresponds to "Ad server unfiltered clicks" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_UNFILTERED_CLICKS = 259;</code>
     */
    const AD_SERVER_UNFILTERED_CLICKS = 259;
    /**
     * Total downloaded impressions delivered by the Ad Server before spam
     *  filtering.
     * Corresponds to "Ad server unfiltered downloaded impressions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_UNFILTERED_DOWNLOADED_IMPRESSIONS = 260;</code>
     */
    const AD_SERVER_UNFILTERED_DOWNLOADED_IMPRESSIONS = 260;
    /**
     * Deprecated. This metric has been renamed to
     * `AD_SERVER_UNFILTERED_DOWNLOADED_IMPRESSIONS`.
     * The server will normalize any requests using this value to
     * `AD_SERVER_UNFILTERED_DOWNLOADED_IMPRESSIONS`.
     * This value will be removed on or after October 1, 2025.
     *
     * Generated from protobuf enum <code>AD_SERVER_UNFILTERED_IMPRESSIONS = 260 [deprecated = true];</code>
     */
    const AD_SERVER_UNFILTERED_IMPRESSIONS = 260;
    /**
     * The number of tracked ads delivered by the ad server before invalid
     *  traffic filtrations.
     * Corresponds to "Ad server unfiltered tracked ads" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_SERVER_UNFILTERED_TRACKED_ADS = 263;</code>
     */
    const AD_SERVER_UNFILTERED_TRACKED_ADS = 263;
    /**
     * Length of time in seconds that an ad unit is visible on the user's screen
     *  from Google Analytics.
     * Corresponds to "Ad unit exposure (seconds)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>AD_UNIT_EXPOSURE_SECONDS = 242;</code>
     */
    const AD_UNIT_EXPOSURE_SECONDS = 242;
    /**
     * The number of users who viewed an ads on your site or app in the
     *  specified date range from Google Analytics.
     * Corresponds to "Ad viewers" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>AD_VIEWERS = 425;</code>
     */
    const AD_VIEWERS = 425;
    /**
     * Number of ads that Ad Manager failed to render in the Ads traffic
     *  navigator report.
     * Corresponds to "Ads failed to render" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_ADS_FAILED_TO_RENDER = 430;</code>
     */
    const ATN_ADS_FAILED_TO_RENDER = 430;
    /**
     * Number of line items that matched an ad request in the Ads traffic
     *  navigator report.
     * Corresponds to "Eligible line items" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_ELIGIBLE_LINE_ITEMS = 342;</code>
     */
    const ATN_ELIGIBLE_LINE_ITEMS = 342;
    /**
     * Number of ad requests that contain eligible line items for the auction in
     *  the Ads traffic navigator report.
     * Corresponds to "Ad requests with eligible line items" in the Ad Manager
     * UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_ELIGIBLE_LINE_ITEMS_AD_REQUESTS = 343;</code>
     */
    const ATN_ELIGIBLE_LINE_ITEMS_AD_REQUESTS = 343;
    /**
     * Number of ad requests that have header bidding trafficking demand in the
     *  Ads traffic navigator report.
     * Corresponds to "Ad requests allowing header bidding trafficking" in the
     * Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_HBT_ALLOWED_AD_REQUESTS = 344;</code>
     */
    const ATN_HBT_ALLOWED_AD_REQUESTS = 344;
    /**
     * Number of header bidding trafficking bids that are able to match an ad
     *  request and enter the auction in the Ads traffic navigator report.
     * Corresponds to "Competing header bidding trafficking bids" in the Ad
     * Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_HBT_BIDS_IN_AUCTION = 345;</code>
     */
    const ATN_HBT_BIDS_IN_AUCTION = 345;
    /**
     * Number of header bidding trafficking ad requests with bids in auction in
     *  the Ads traffic navigator report.
     * Corresponds to "Ad requests with competing header bidding trafficking
     * bids" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_HBT_BIDS_IN_AUCTION_AD_REQUESTS = 346;</code>
     */
    const ATN_HBT_BIDS_IN_AUCTION_AD_REQUESTS = 346;
    /**
     * Number of header bidding trafficking candidate bids that match an ad
     *  request in the Ads traffic navigator report.
     * Corresponds to "Header bidding trafficking bids" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_HBT_CANDIDATE_BIDS = 347;</code>
     */
    const ATN_HBT_CANDIDATE_BIDS = 347;
    /**
     * Number of invalid header bidding trafficking ad requests in the Ads
     *  traffic navigator report.
     * Corresponds to "Invalid ad requests allowing header bidding trafficking"
     * in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_HBT_INVALID_AD_REQUESTS = 348;</code>
     */
    const ATN_HBT_INVALID_AD_REQUESTS = 348;
    /**
     * Number of header bidding trafficking ad requests with no bids in the Ads
     *  traffic navigator report.
     * Corresponds to "Header bidding trafficking ad requests with no bids" in
     * the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_HBT_NO_BIDS_AD_REQUESTS = 472;</code>
     */
    const ATN_HBT_NO_BIDS_AD_REQUESTS = 472;
    /**
     * Number of header bidding trafficking bids that didn't match the ad
     *  request in the Ads traffic navigator report.
     * Corresponds to "Rejected header bidding trafficking bids" in the Ad
     * Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_HBT_REJECTED_BIDS = 349;</code>
     */
    const ATN_HBT_REJECTED_BIDS = 349;
    /**
     * Number of ad requests with the header bidding trafficking demand that are
     *  valid in the Ads traffic navigator report.
     * Corresponds to "Valid header bidding trafficking ad requests" in the Ad
     * Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_HBT_VALID_AD_REQUESTS = 350;</code>
     */
    const ATN_HBT_VALID_AD_REQUESTS = 350;
    /**
     * Number of header bidding trafficking ad requests with bids in the Ads
     *  traffic navigator report.
     * Corresponds to "Header bidding trafficking ad requests with bids" in the
     * Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_HBT_WITH_BIDS_AD_REQUESTS = 473;</code>
     */
    const ATN_HBT_WITH_BIDS_AD_REQUESTS = 473;
    /**
     * Ad requests that are not valid in the Ads traffic navigator report.
     * Corresponds to "Invalid ad requests" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_INVALID_AD_REQUESTS = 351;</code>
     */
    const ATN_INVALID_AD_REQUESTS = 351;
    /**
     * Number of line items with no creative retrieved in the Ads
     *  traffic navigator report.
     * Corresponds to "Creative not retrieved" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_LINE_ITEMS_CREATIVE_NOT_RETRIEVED = 476;</code>
     */
    const ATN_LINE_ITEMS_CREATIVE_NOT_RETRIEVED = 476;
    /**
     * Number of line items that matched an ad request and entered in auction in
     *  the Ads traffic navigator report.
     * Corresponds to "Competing line items" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_LINE_ITEMS_IN_AUCTION = 352;</code>
     */
    const ATN_LINE_ITEMS_IN_AUCTION = 352;
    /**
     * Number of line items that were ranked but did not compete in auction in
     *  the Ads traffic navigator report.
     * Corresponds to "Non-competing line items" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_LINE_ITEMS_NOT_COMPETING = 515;</code>
     */
    const ATN_LINE_ITEMS_NOT_COMPETING = 515;
    /**
     * Number of line items that matched an ad request but were not selected to
     *  compete in the auction in the Ads traffic navigator report.
     * Corresponds to "Not selected to compete" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_LINE_ITEMS_NOT_SELECTED = 353;</code>
     */
    const ATN_LINE_ITEMS_NOT_SELECTED = 353;
    /**
     * Number of line item ad requests in auction in the Ads traffic navigator
     *  report.
     * Corresponds to "Ad requests with competing line items" in the Ad Manager
     * UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_LINE_ITEM_IN_AUCTION_AD_REQUESTS = 354;</code>
     */
    const ATN_LINE_ITEM_IN_AUCTION_AD_REQUESTS = 354;
    /**
     * Number of line item targeted ad requests in the Ads traffic navigator
     *  report.
     * Corresponds to "Ad requests with targeted line items" in the Ad Manager
     * UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_LINE_ITEM_TARGETED_AD_REQUESTS = 355;</code>
     */
    const ATN_LINE_ITEM_TARGETED_AD_REQUESTS = 355;
    /**
     * Number of ad requests with the mediation demand in the Ads traffic
     *  navigator report.
     * Corresponds to "Ad requests allowing mediation" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_ALLOWED_AD_REQUESTS = 356;</code>
     */
    const ATN_MEDIATION_ALLOWED_AD_REQUESTS = 356;
    /**
     * Number of invalid mediation ad requests in the Ads traffic navigator
     *  report.
     * Corresponds to "Invalid ad requests allowing mediation" in the Ad Manager
     * UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_INVALID_AD_REQUESTS = 357;</code>
     */
    const ATN_MEDIATION_INVALID_AD_REQUESTS = 357;
    /**
     * Number of times the Yield Partner's ad was loaded in the Ads traffic
     *  navigator report.
     * Corresponds to "Loaded ads from chains" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_LOADED_ADS_FROM_CHAINS = 358;</code>
     */
    const ATN_MEDIATION_LOADED_ADS_FROM_CHAINS = 358;
    /**
     * Number of ad requests with mediation demand having no partners in the Ads
     *  traffic navigator report.
     * Corresponds to "Mediation requests with no partners" in the Ad Manager
     * UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_NO_PARTNER_AD_REQUESTS = 474;</code>
     */
    const ATN_MEDIATION_NO_PARTNER_AD_REQUESTS = 474;
    /**
     * Number of mediation yield partners in auction in the Ads traffic
     *  navigator report.
     * Corresponds to "Competing mediation partners" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_PARTNERS_IN_AUCTION = 359;</code>
     */
    const ATN_MEDIATION_PARTNERS_IN_AUCTION = 359;
    /**
     * Number of ad requests in auction that serve mediation chains in the Ads
     *  traffic navigator report.
     * Corresponds to "Ad requests with competing mediation partners" in the Ad
     * Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_PARTNERS_IN_AUCTION_AD_REQUESTS = 360;</code>
     */
    const ATN_MEDIATION_PARTNERS_IN_AUCTION_AD_REQUESTS = 360;
    /**
     * Number of mediation partners that didn't match an ad request in the Ads
     *  traffic navigator report.
     * Corresponds to "Rejected partners" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_REJECTED_PARTNERS = 361;</code>
     */
    const ATN_MEDIATION_REJECTED_PARTNERS = 361;
    /**
     * Number of mediation partners that have targeted an ad request and are
     *  able to match it in the Ads traffic navigator report.
     * Corresponds to "Targeted mediation partners" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_TARGETED_PARTNERS = 362;</code>
     */
    const ATN_MEDIATION_TARGETED_PARTNERS = 362;
    /**
     * Number of partners on served mediation chains in the Ads traffic
     *  navigator report.
     * Corresponds to "Total yield partners" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_TOTAL_YIELD_PARTNERS = 442;</code>
     */
    const ATN_MEDIATION_TOTAL_YIELD_PARTNERS = 442;
    /**
     * Number of ads from mediation chains that Ad Manager won't serve in the
     *  Ads traffic navigator report.
     * Corresponds to "Unloaded ads from chains" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_UNLOADED_ADS_FROM_CHAINS = 363;</code>
     */
    const ATN_MEDIATION_UNLOADED_ADS_FROM_CHAINS = 363;
    /**
     * Number of times the Yield Partner's mediation chain ad was not reached
     *  in the Ads traffic navigator report.
     * Corresponds to "Unused bids or partners" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_UNUSED_BIDS_OR_PARTNERS = 364;</code>
     */
    const ATN_MEDIATION_UNUSED_BIDS_OR_PARTNERS = 364;
    /**
     * Number of ad requests that have mediation demand in the Ads traffic
     *  navigator report.
     * Corresponds to "Valid mediation ad requests" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_VALID_AD_REQUESTS = 365;</code>
     */
    const ATN_MEDIATION_VALID_AD_REQUESTS = 365;
    /**
     * Number of ad requests with mediation demand having partners in the Ads
     *  traffic navigator report.
     * Corresponds to "Ad requests with targeted mediation partners" in the Ad
     * Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_MEDIATION_WITH_PARTNERS_AD_REQUESTS = 475;</code>
     */
    const ATN_MEDIATION_WITH_PARTNERS_AD_REQUESTS = 475;
    /**
     * Number of ad requests with programmatic demand that have received a bid
     *  in the Ads traffic navigator report.
     * Corresponds to "Ad requests with bids" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_AD_REQUESTS_WITH_BIDS = 366;</code>
     */
    const ATN_PROGRAMMATIC_AD_REQUESTS_WITH_BIDS = 366;
    /**
     * Number of ad requests with programmatic demand that have sent a bid to at
     *  least one buyer in the Ads traffic navigator report.
     * Corresponds to "Ad requests with bid requests sent" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_AD_REQUESTS_WITH_BID_REQUESTS_SENT = 367;</code>
     */
    const ATN_PROGRAMMATIC_AD_REQUESTS_WITH_BID_REQUESTS_SENT = 367;
    /**
     * Number of ad requests with programmatic demand in the Ads traffic
     *  navigator report.
     * Corresponds to "Ad requests allowing programmatic" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_ALLOWED_AD_REQUESTS = 368;</code>
     */
    const ATN_PROGRAMMATIC_ALLOWED_AD_REQUESTS = 368;
    /**
     * Number of ads with programmatic bids that entered the auction
     *  in the Ads traffic navigator report.
     * Corresponds to "Competing programmatic bids" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_BIDS_IN_AUCTION = 369;</code>
     */
    const ATN_PROGRAMMATIC_BIDS_IN_AUCTION = 369;
    /**
     * Number of ad requests that have received eligible programmatic bids to
     *  compete in the auction in the Ads traffic navigator report.
     * Corresponds to "Ad requests with competing programmatic bids" in the Ad
     * Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_BID_IN_AUCTION_AD_REQUESTS = 370;</code>
     */
    const ATN_PROGRAMMATIC_BID_IN_AUCTION_AD_REQUESTS = 370;
    /**
     * Number of programmatic callout bid requests sent to buyers in the Ads
     *  traffic navigator report.
     * Corresponds to "Bid requests sent" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_BID_REQUESTS_SENT = 371;</code>
     */
    const ATN_PROGRAMMATIC_BID_REQUESTS_SENT = 371;
    /**
     * Number of programmatic callout bid requests that resulted with a response
     *  in the Ads traffic navigator report.
     * Corresponds to "Bid requests with response" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_BID_REQUESTS_WITH_RESPONSE = 372;</code>
     */
    const ATN_PROGRAMMATIC_BID_REQUESTS_WITH_RESPONSE = 372;
    /**
     * All buyers that Ad Manager could potentially send a programmatic bid
     *  request to in the Ads traffic navigator report.
     * Corresponds to "Bid request candidates" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_BID_REQUEST_CANDIDATES = 373;</code>
     */
    const ATN_PROGRAMMATIC_BID_REQUEST_CANDIDATES = 373;
    /**
     * Number of programmatic callout bid requests with errors in the Ads
     *  traffic navigator report.
     * Corresponds to "Bid request errors" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_BID_REQUEST_ERRORS = 374;</code>
     */
    const ATN_PROGRAMMATIC_BID_REQUEST_ERRORS = 374;
    /**
     * Number of ad requests that are ineligible for programmatic in the Ads
     *  traffic navigator report.
     * Corresponds to "Invalid ad requests allowing programmatic" in the Ad
     * Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_INELIGIBLE_AD_REQUESTS = 375;</code>
     */
    const ATN_PROGRAMMATIC_INELIGIBLE_AD_REQUESTS = 375;
    /**
     * Number of programmatic callout bids rejected in the Ads traffic navigator
     *  report.
     * Corresponds to "Rejected bids" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_REJECTED_BIDS = 376;</code>
     */
    const ATN_PROGRAMMATIC_REJECTED_BIDS = 376;
    /**
     * Number of programmatic callout bid requests Ad Manager won't send to
     *  buyers in the Ads traffic navigator report.
     * Corresponds to "Skipped bid requests" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_SKIPPED_BID_REQUESTS = 377;</code>
     */
    const ATN_PROGRAMMATIC_SKIPPED_BID_REQUESTS = 377;
    /**
     * Number of programmatic bids that Ad Manager received from buyers in the
     *  Ads traffic navigator report.
     * Corresponds to "Total programmatic bids" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_TOTAL_BIDS = 378;</code>
     */
    const ATN_PROGRAMMATIC_TOTAL_BIDS = 378;
    /**
     * Number of ad requests that allow programmatic in the Ads traffic
     *  navigator report.
     * Corresponds to "Valid ad requests allowing programmatic" in the Ad
     * Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_PROGRAMMATIC_VALID_AD_REQUESTS = 379;</code>
     */
    const ATN_PROGRAMMATIC_VALID_AD_REQUESTS = 379;
    /**
     * Number of line items targeted that didn't match an ad request in the Ads
     *  traffic navigator report.
     * Corresponds to "Rejected line items" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_REJECTED_LINE_ITEMS = 380;</code>
     */
    const ATN_REJECTED_LINE_ITEMS = 380;
    /**
     * Number of mediation chains Ad Manager serves in the Ads traffic navigator
     *  report.
     * Corresponds to "Served mediation chains" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_SERVED_MEDIATION_CHAINS = 381;</code>
     */
    const ATN_SERVED_MEDIATION_CHAINS = 381;
    /**
     * Number of single ads served in the Ads traffic navigator report.
     * Corresponds to "Served single ads" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_SERVED_SINGLE_ADS = 382;</code>
     */
    const ATN_SERVED_SINGLE_ADS = 382;
    /**
     * Number of line items with targeting that matches an ad request in the Ads
     *  traffic navigator report.
     * Corresponds to "Targeted line items" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_TARGETED_LINE_ITEMS = 383;</code>
     */
    const ATN_TARGETED_LINE_ITEMS = 383;
    /**
     * Total number of ad requests which counts optimized pod request as a
     *  single request in the Ads traffic navigator report.
     * Corresponds to "Total ad requests (ATN)" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_TOTAL_AD_REQUESTS = 384;</code>
     */
    const ATN_TOTAL_AD_REQUESTS = 384;
    /**
     * Number of competing ads in auction in the Ads traffic navigator report.
     * Corresponds to "Total competing ads" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_TOTAL_COMPETING_ADS_IN_AUCTION = 385;</code>
     */
    const ATN_TOTAL_COMPETING_ADS_IN_AUCTION = 385;
    /**
     * Total number of ads loaded in the Ads traffic navigator report.
     * Corresponds to "Total loaded ads" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_TOTAL_LOADED_ADS = 387;</code>
     */
    const ATN_TOTAL_LOADED_ADS = 387;
    /**
     * Ad requests that are valid in the Ads traffic navigator report.
     * Corresponds to "Valid ad requests" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_VALID_AD_REQUESTS = 389;</code>
     */
    const ATN_VALID_AD_REQUESTS = 389;
    /**
     * Number of times the Yield Partner passed-back on a Mediation chain ad in
     *  the Ads traffic navigator report.
     * Corresponds to "Yield group mediation passbacks" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ATN_YIELD_GROUP_MEDIATION_PASSBACKS = 390;</code>
     */
    const ATN_YIELD_GROUP_MEDIATION_PASSBACKS = 390;
    /**
     * eCPM averaged across the Google Ad Manager server, AdSense,
     *  and Ad Exchange.
     * Corresponds to "Total average eCPM" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AVERAGE_ECPM = 37;</code>
     */
    const AVERAGE_ECPM = 37;
    /**
     * eCPM averaged across the Google Ad Manager server (excluding CPD),
     *  AdSense, and Ad Exchange.
     * Corresponds to "Total average eCPM w/o CPD" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AVERAGE_ECPM_WITHOUT_CPD = 5;</code>
     */
    const AVERAGE_ECPM_WITHOUT_CPD = 5;
    /**
     * Average user engagement seconds per session in Google Analytics.
     * Corresponds to "Average engagement time per session (seconds)" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>AVERAGE_ENGAGEMENT_SECONDS_PER_SESSION = 224;</code>
     */
    const AVERAGE_ENGAGEMENT_SECONDS_PER_SESSION = 224;
    /**
     * Average user engagement seconds per user in Google Analytics.
     * Corresponds to "Average engagement time per user (seconds)" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>AVERAGE_ENGAGEMENT_SECONDS_PER_USER = 225;</code>
     */
    const AVERAGE_ENGAGEMENT_SECONDS_PER_USER = 225;
    /**
     * The average number of unique users reached per ad impression.
     * Corresponds to "Average impressions/unique visitor" in the Ad Manager UI.
     * Compatible with the following report types: `REACH`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>AVERAGE_IMPRESSIONS_PER_UNIQUE_VISITOR = 418;</code>
     */
    const AVERAGE_IMPRESSIONS_PER_UNIQUE_VISITOR = 418;
    /**
     * Average total purchase revenue per user in Google Analytics.
     * Corresponds to "ARPPU" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AVERAGE_PURCHASE_REVENUE_PER_PAYING_USER = 226;</code>
     */
    const AVERAGE_PURCHASE_REVENUE_PER_PAYING_USER = 226;
    /**
     * Average revenue earned from each active user in Google Analytics.
     * Corresponds to "ARPU" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>AVERAGE_REVENUE_PER_USER = 227;</code>
     */
    const AVERAGE_REVENUE_PER_USER = 227;
    /**
     * Average length of a session in Google Analytics.
     * Corresponds to "Average session duration (seconds)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>AVERAGE_SESSION_SECONDS = 228;</code>
     */
    const AVERAGE_SESSION_SECONDS = 228;
    /**
     * The number of bids.
     * Corresponds to "Bids" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>BIDS = 443;</code>
     */
    const BIDS = 443;
    /**
     * The average CPM of the bids submitted by bidders.
     * Corresponds to "Average bid CPM" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>BID_AVERAGE_CPM = 444;</code>
     */
    const BID_AVERAGE_CPM = 444;
    /**
     * The ratio of (sessions - engaged sessions) / sessions.
     * Corresponds to "Bounce rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>BOUNCE_RATE = 433;</code>
     */
    const BOUNCE_RATE = 433;
    /**
     * The number of times a user clicked on an ad.
     * Corresponds to "Total clicks" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>CLICKS = 2;</code>
     */
    const CLICKS = 2;
    /**
     * The total number of times that the code for an ad is served by the ad
     *  server including dynamic allocation.
     * Corresponds to "Total code served count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>CODE_SERVED_COUNT = 44;</code>
     */
    const CODE_SERVED_COUNT = 44;
    /**
     * Total amount of CPC revenue.
     * Corresponds to "CPC revenue" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>CPC_REVENUE = 440;</code>
     */
    const CPC_REVENUE = 440;
    /**
     * Total amount of CPM revenue.
     * Corresponds to "CPM revenue" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>CPM_REVENUE = 441;</code>
     */
    const CPM_REVENUE = 441;
    /**
     * Percent of creatives whose load time is between [0, 500ms).
     * Corresponds to "Creative load time 0 - 500ms (%)" in the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>CREATIVE_LOAD_TIME_0_500_PERCENT = 324;</code>
     */
    const CREATIVE_LOAD_TIME_0_500_PERCENT = 324;
    /**
     * Percent of creatives whose load time is between [1000, 2000ms).
     * Corresponds to "Creative load time 1s - 2s (%)" in the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>CREATIVE_LOAD_TIME_1000_2000_PERCENT = 326;</code>
     */
    const CREATIVE_LOAD_TIME_1000_2000_PERCENT = 326;
    /**
     * Percent of creatives whose load time is between [2000, 4000ms).
     * Corresponds to "Creative load time 2s - 4s (%)" in the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>CREATIVE_LOAD_TIME_2000_4000_PERCENT = 327;</code>
     */
    const CREATIVE_LOAD_TIME_2000_4000_PERCENT = 327;
    /**
     * Percent of creatives whose load time is between [4000, 8000ms).
     * Corresponds to "Creative load time 4s - 8s (%)" in the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>CREATIVE_LOAD_TIME_4000_8000_PERCENT = 328;</code>
     */
    const CREATIVE_LOAD_TIME_4000_8000_PERCENT = 328;
    /**
     * Percent of creatives whose load time is between [500, 1000ms).
     * Corresponds to "Creative load time 500ms - 1s (%)" in the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>CREATIVE_LOAD_TIME_500_1000_PERCENT = 325;</code>
     */
    const CREATIVE_LOAD_TIME_500_1000_PERCENT = 325;
    /**
     * Percent of creatives load time is greater than 8000ms.
     * Corresponds to "Creative load time >8s (%)" in the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>CREATIVE_LOAD_TIME_GT_8000_PERCENT = 329;</code>
     */
    const CREATIVE_LOAD_TIME_GT_8000_PERCENT = 329;
    /**
     * For standard ads, your ad clickthrough rate (CTR) is the number of ad
     *  clicks divided by the number of individual ad impressions expressed as a
     *  fraction. Ad CTR = Clicks / Ad impressions.
     * Corresponds to "Total CTR" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>CTR = 3;</code>
     */
    const CTR = 3;
    /**
     * Number of bids received for a deal.
     * Corresponds to "Deals bids" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>DEALS_BIDS = 542;</code>
     */
    const DEALS_BIDS = 542;
    /**
     * Bid rate for a deal.
     * Corresponds to "Deals bid rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DEALS_BID_RATE = 543;</code>
     */
    const DEALS_BID_RATE = 543;
    /**
     * Number of bid requests sent for a deal.
     * Corresponds to "Deals bid requests" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>DEALS_BID_REQUESTS = 544;</code>
     */
    const DEALS_BID_REQUESTS = 544;
    /**
     * Number of winning bids for a deal.
     * Corresponds to "Deals winning bids" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>DEALS_WINNING_BIDS = 545;</code>
     */
    const DEALS_WINNING_BIDS = 545;
    /**
     * Bid win rate for a deal.
     * Corresponds to "Deals win rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DEALS_WIN_RATE = 546;</code>
     */
    const DEALS_WIN_RATE = 546;
    /**
     * Percent of dom load time to 1st ad request in [0, 500ms) range.
     * Corresponds to "Page navigation to first ad request time 0 - 500ms (%)"
     * in the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DOM_LOAD_TO_FIRST_AD_REQUEST_0_500_PERCENT = 521;</code>
     */
    const DOM_LOAD_TO_FIRST_AD_REQUEST_0_500_PERCENT = 521;
    /**
     * Percent of dom load time to 1st ad request in [1000ms, 2000ms) range.
     * Corresponds to "Page navigation to first ad request time 1s - 2s (%)" in
     * the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DOM_LOAD_TO_FIRST_AD_REQUEST_1000_2000_PERCENT = 522;</code>
     */
    const DOM_LOAD_TO_FIRST_AD_REQUEST_1000_2000_PERCENT = 522;
    /**
     * Percent of dom load time to 1st ad request in [2000ms, 4000ms) range.
     * Corresponds to "Page navigation to first ad request time 2s - 4s (%)" in
     * the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DOM_LOAD_TO_FIRST_AD_REQUEST_2000_4000_PERCENT = 523;</code>
     */
    const DOM_LOAD_TO_FIRST_AD_REQUEST_2000_4000_PERCENT = 523;
    /**
     * Percent of dom load time to 1st ad request in [4000ms, 8000ms) range.
     * Corresponds to "Page navigation to first ad request time 4s - 8s (%)" in
     * the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DOM_LOAD_TO_FIRST_AD_REQUEST_4000_8000_PERCENT = 524;</code>
     */
    const DOM_LOAD_TO_FIRST_AD_REQUEST_4000_8000_PERCENT = 524;
    /**
     * Percent of dom load time to 1st ad request in [500ms, 1000ms) range.
     * Corresponds to "Page navigation to first ad request time 500ms - 1s (%)"
     * in the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DOM_LOAD_TO_FIRST_AD_REQUEST_500_1000_PERCENT = 525;</code>
     */
    const DOM_LOAD_TO_FIRST_AD_REQUEST_500_1000_PERCENT = 525;
    /**
     * Percent of dom load time to 1st ad request in [8000ms, +inf) range.
     * Corresponds to "Page navigation to first ad request time >8s (%)" in the
     * Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DOM_LOAD_TO_FIRST_AD_REQUEST_GT_8000_PERCENT = 520;</code>
     */
    const DOM_LOAD_TO_FIRST_AD_REQUEST_GT_8000_PERCENT = 520;
    /**
     * Percent of dom load time to tag load time in [0, 500ms) range.
     * Corresponds to "Page navigation to tag loaded time 0 - 500ms (%)" in the
     * Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DOM_LOAD_TO_TAG_LOAD_TIME_0_500_PERCENT = 526;</code>
     */
    const DOM_LOAD_TO_TAG_LOAD_TIME_0_500_PERCENT = 526;
    /**
     * Percent of dom load time to tag load time in [1000ms, 2000ms) range.
     * Corresponds to "Page navigation to tag loaded time 1s - 2s (%)" in the Ad
     * Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DOM_LOAD_TO_TAG_LOAD_TIME_1000_2000_PERCENT = 527;</code>
     */
    const DOM_LOAD_TO_TAG_LOAD_TIME_1000_2000_PERCENT = 527;
    /**
     * Percent of dom load time to tag load time in [2000ms, 4000ms) range.
     * Corresponds to "Page navigation to tag loaded time 2s - 4s (%)" in the Ad
     * Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DOM_LOAD_TO_TAG_LOAD_TIME_2000_4000_PERCENT = 528;</code>
     */
    const DOM_LOAD_TO_TAG_LOAD_TIME_2000_4000_PERCENT = 528;
    /**
     * Percent of dom load time to tag load time in [4000ms, 8000ms) range.
     * Corresponds to "Page navigation to tag loaded time 4s - 8s (%)" in the Ad
     * Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DOM_LOAD_TO_TAG_LOAD_TIME_4000_8000_PERCENT = 529;</code>
     */
    const DOM_LOAD_TO_TAG_LOAD_TIME_4000_8000_PERCENT = 529;
    /**
     * Percent of dom load time to tag load time in [500ms, 1000ms) range.
     * Corresponds to "Page navigation to tag loaded time 500ms - 1s (%)" in the
     * Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DOM_LOAD_TO_TAG_LOAD_TIME_500_1000_PERCENT = 531;</code>
     */
    const DOM_LOAD_TO_TAG_LOAD_TIME_500_1000_PERCENT = 531;
    /**
     * Percent of dom load time to tag load time in [8000ms, +inf) range.
     * Corresponds to "Page navigation to tag loaded time >8s (%)" in the Ad
     * Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DOM_LOAD_TO_TAG_LOAD_TIME_GT_8000_PERCENT = 530;</code>
     */
    const DOM_LOAD_TO_TAG_LOAD_TIME_GT_8000_PERCENT = 530;
    /**
     * Percentage of ad responses that didn't result in an impression.
     * Corresponds to "Drop-off rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>DROPOFF_RATE = 415;</code>
     */
    const DROPOFF_RATE = 415;
    /**
     * Engaged session count from Google Analytics.
     * Corresponds to "Engaged sessions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>ENGAGED_SESSIONS = 229;</code>
     */
    const ENGAGED_SESSIONS = 229;
    /**
     * Engaged sessions per user from Google Analytics.
     * Corresponds to "Engaged sessions per user" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>ENGAGED_SESSIONS_PER_USER = 230;</code>
     */
    const ENGAGED_SESSIONS_PER_USER = 230;
    /**
     * The ratio of engaged sessions to sessions.
     * Corresponds to "Engagement rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>ENGAGEMENT_RATE = 426;</code>
     */
    const ENGAGEMENT_RATE = 426;
    /**
     * Percentage of European regulations messages where the user consented to
     *  all of the purposes and vendors.
     * Corresponds to "European regulations consent rate" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>EUROPEAN_REGULATIONS_CONSENT_RATE = 270;</code>
     */
    const EUROPEAN_REGULATIONS_CONSENT_RATE = 270;
    /**
     * Percentage of European regulations messages where users made a consent
     *  choice after selecting "Manage options".
     * Corresponds to "European regulations custom consent rate" in the Ad
     * Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>EUROPEAN_REGULATIONS_CUSTOM_CONSENT_RATE = 271;</code>
     */
    const EUROPEAN_REGULATIONS_CUSTOM_CONSENT_RATE = 271;
    /**
     * Number of times a European regulations message was shown to users.
     * Corresponds to "European regulations messages shown" in the Ad Manager
     * UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>EUROPEAN_REGULATIONS_MESSAGES_SHOWN = 272;</code>
     */
    const EUROPEAN_REGULATIONS_MESSAGES_SHOWN = 272;
    /**
     * Percentage of European regulations messages where the user rejected all
     *  purposes and vendors.
     * Corresponds to "European regulations no consent rate" in the Ad Manager
     * UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>EUROPEAN_REGULATIONS_NO_CONSENT_RATE = 273;</code>
     */
    const EUROPEAN_REGULATIONS_NO_CONSENT_RATE = 273;
    /**
     * The rate at which an ad request is filled by the ad server including
     *  dynamic allocation.
     * Corresponds to "Total fill rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>FILL_RATE = 258;</code>
     */
    const FILL_RATE = 258;
    /**
     * The number of clicks joined with Google Analytics data.
     * Corresponds to "Google Analytics clicks" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>GOOGLE_ANALYTICS_CLICKS = 231;</code>
     */
    const GOOGLE_ANALYTICS_CLICKS = 231;
    /**
     * The click-through rate from Google Analytics data.
     * Corresponds to "Google Analytics CTR" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>GOOGLE_ANALYTICS_CTR = 232;</code>
     */
    const GOOGLE_ANALYTICS_CTR = 232;
    /**
     * The eCPM revenue data from Google Analytics.
     * Corresponds to "Google Analytics eCPM" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>GOOGLE_ANALYTICS_ECPM = 233;</code>
     */
    const GOOGLE_ANALYTICS_ECPM = 233;
    /**
     * The number of impressions joined with Google Analytics data.
     * Corresponds to "Google Analytics impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>GOOGLE_ANALYTICS_IMPRESSIONS = 234;</code>
     */
    const GOOGLE_ANALYTICS_IMPRESSIONS = 234;
    /**
     * The amount of revenue joined with Google Analytics data.
     * Corresponds to "Google Analytics revenue" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>GOOGLE_ANALYTICS_REVENUE = 235;</code>
     */
    const GOOGLE_ANALYTICS_REVENUE = 235;
    /**
     * Number of views of a web site or mobile screen from Google Analytics.
     * Corresponds to "Views" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>GOOGLE_ANALYTICS_VIEWS = 236;</code>
     */
    const GOOGLE_ANALYTICS_VIEWS = 236;
    /**
     * Number of views per user from Google Analytics.
     * Corresponds to "Views per user" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>GOOGLE_ANALYTICS_VIEWS_PER_USER = 237;</code>
     */
    const GOOGLE_ANALYTICS_VIEWS_PER_USER = 237;
    /**
     * The number of coviewed impressions sold by Google in partner sales.
     * Corresponds to "Google-sold auction impressions (co-viewed)" in the Ad
     * Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>GOOGLE_SOLD_AUCTION_COVIEWED_IMPRESSIONS = 129;</code>
     */
    const GOOGLE_SOLD_AUCTION_COVIEWED_IMPRESSIONS = 129;
    /**
     * The number of auction impressions sold by Google in partner sales.
     * Corresponds to "Google-sold auction impressions" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>GOOGLE_SOLD_AUCTION_IMPRESSIONS = 128;</code>
     */
    const GOOGLE_SOLD_AUCTION_IMPRESSIONS = 128;
    /**
     * The number of coviewed impressions sold by Google in partner sales.
     * Corresponds to "Google-sold impressions (co-viewed)" in the Ad Manager
     * UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>GOOGLE_SOLD_COVIEWED_IMPRESSIONS = 131;</code>
     */
    const GOOGLE_SOLD_COVIEWED_IMPRESSIONS = 131;
    /**
     * The number of impressions sold by Google in partner sales.
     * Corresponds to "Google-sold impressions" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>GOOGLE_SOLD_IMPRESSIONS = 130;</code>
     */
    const GOOGLE_SOLD_IMPRESSIONS = 130;
    /**
     * The number of coviewed impressions sold by Google in partner sales.
     * Corresponds to "Google-sold reservation impressions (co-viewed)" in the
     * Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>GOOGLE_SOLD_RESERVATION_COVIEWED_IMPRESSIONS = 127;</code>
     */
    const GOOGLE_SOLD_RESERVATION_COVIEWED_IMPRESSIONS = 127;
    /**
     * The number of reservation impressions sold by Google in partner sales.
     * Corresponds to "Google-sold reservation impressions" in the Ad Manager
     * UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>GOOGLE_SOLD_RESERVATION_IMPRESSIONS = 126;</code>
     */
    const GOOGLE_SOLD_RESERVATION_IMPRESSIONS = 126;
    /**
     * Total impressions from the Google Ad Manager server, AdSense,
     *  Ad Exchange, and yield group partners.
     * Corresponds to "Total impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>IMPRESSIONS = 1;</code>
     */
    const IMPRESSIONS = 1;
    /**
     * The number of impressions (via begin to render methodology) considered
     *  inactive, as defined by served to a device receiving ad or bid requests
     *  continuously for a session of greater than 16 hours without a "reset"
     *  event. Only applied to CTV ads.
     * Corresponds to "Inactive begin to render impressions" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>INACTIVE_BEGIN_TO_RENDER_IMPRESSIONS = 407;</code>
     */
    const INACTIVE_BEGIN_TO_RENDER_IMPRESSIONS = 407;
    /**
     * The total number of inventory shares
     * Corresponds to "Inventory shares" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>INVENTORY_SHARES = 547;</code>
     */
    const INVENTORY_SHARES = 547;
    /**
     * The total number of partner unfilled opportunities from an inventory
     *  share
     * Corresponds to "Inventory share partner unfilled opportunities" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>INVENTORY_SHARE_PARTNER_UNFILLED_OPPORTUNITIES = 548;</code>
     */
    const INVENTORY_SHARE_PARTNER_UNFILLED_OPPORTUNITIES = 548;
    /**
     * The number of invoiced impressions.
     * Corresponds to "Invoiced impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>INVOICED_IMPRESSIONS = 404;</code>
     */
    const INVOICED_IMPRESSIONS = 404;
    /**
     * The number of invoiced unfilled impressions.
     * Corresponds to "Invoiced unfilled impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>INVOICED_UNFILLED_IMPRESSIONS = 405;</code>
     */
    const INVOICED_UNFILLED_IMPRESSIONS = 405;
    /**
     * The number of mediation chains that were filled.
     * Corresponds to "Mediation chains filled" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>MEDIATION_CHAINS_FILLED = 584;</code>
     */
    const MEDIATION_CHAINS_FILLED = 584;
    /**
     * The number of impressions where the user chose to mute the ad.
     * Corresponds to "Total muted impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>MUTED_IMPRESSIONS = 412;</code>
     */
    const MUTED_IMPRESSIONS = 412;
    /**
     * The number of impressions that had the "Mute This Ad" overlay applied.
     * Corresponds to "Total mute eligible impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>MUTE_ELIGIBLE_IMPRESSIONS = 409;</code>
     */
    const MUTE_ELIGIBLE_IMPRESSIONS = 409;
    /**
     * The total number of opportunities from impressions and errors.
     * Corresponds to "Total opportunities" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>OPPORTUNITIES = 463;</code>
     */
    const OPPORTUNITIES = 463;
    /**
     * The number of impressions that were overdelivered.
     * Corresponds to "Total overdelivered impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>OVERDELIVERED_IMPRESSIONS = 432;</code>
     */
    const OVERDELIVERED_IMPRESSIONS = 432;
    /**
     * The number of filled pod requests (filled by partner or Google) in
     *  partner sales.
     * Corresponds to "Filled pod requests" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>PARTNER_SALES_FILLED_POD_REQUESTS = 135;</code>
     */
    const PARTNER_SALES_FILLED_POD_REQUESTS = 135;
    /**
     * The percent of filled requests to total ad requests in
     *  partner sales.
     * Corresponds to "Fill rate" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>PARTNER_SALES_FILL_RATE = 136;</code>
     */
    const PARTNER_SALES_FILL_RATE = 136;
    /**
     * The percent of partner filled requests to total ad requests
     *  in partner sales.
     * Corresponds to "Partner match rate" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>PARTNER_SALES_PARTNER_MATCH_RATE = 137;</code>
     */
    const PARTNER_SALES_PARTNER_MATCH_RATE = 137;
    /**
     * The number of queries eligible for partner sales.
     * Corresponds to "Total partner sales ad requests" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>PARTNER_SALES_QUERIES = 132;</code>
     */
    const PARTNER_SALES_QUERIES = 132;
    /**
     * The number of partner unfilled impressions in partner sales.
     *  If a pod request is not filled by partner but filled by Google, this
     *  metric will still count 1.
     * Corresponds to "Partner unfilled impressions" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>PARTNER_SALES_UNFILLED_IMPRESSIONS = 133;</code>
     */
    const PARTNER_SALES_UNFILLED_IMPRESSIONS = 133;
    /**
     * The number of partner unmatched queries in partner sales.
     *  If an ad request is not filled by partner but filled by Google, this
     *  metric will still count 1.
     * Corresponds to "Partner unmatched ad requests" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>PARTNER_SALES_UNMATCHED_QUERIES = 134;</code>
     */
    const PARTNER_SALES_UNMATCHED_QUERIES = 134;
    /**
     * The number of code served sold by partner in partner sales.
     * Corresponds to "Partner-sold code served count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>PARTNER_SOLD_CODE_SERVED = 125;</code>
     */
    const PARTNER_SOLD_CODE_SERVED = 125;
    /**
     * The number of coviewed impressions sold by partner in partner sales.
     * Corresponds to "Partner-sold impressions (co-viewed)" in the Ad Manager
     * UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>PARTNER_SOLD_COVIEWED_IMPRESSIONS = 124;</code>
     */
    const PARTNER_SOLD_COVIEWED_IMPRESSIONS = 124;
    /**
     * The number of impressions sold by partner in partner sales.
     * Corresponds to "Partner-sold impressions" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>PARTNER_SOLD_IMPRESSIONS = 123;</code>
     */
    const PARTNER_SOLD_IMPRESSIONS = 123;
    /**
     * The total number of ad requests eligible for programmatic inventory,
     *  including Programmatic Guaranteed, Preferred Deals, backfill, and open
     *  auction.
     * Corresponds to "Programmatic eligible ad requests" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>PROGRAMMATIC_ELIGIBLE_AD_REQUESTS = 177;</code>
     */
    const PROGRAMMATIC_ELIGIBLE_AD_REQUESTS = 177;
    /**
     * The number of programmatic responses served divided by the number of
     *  programmatic eligible ad requests. Includes Ad Exchange, Open Bidding,
     *  and Preferred Deals.
     * Corresponds to "Programmatic match rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>PROGRAMMATIC_MATCH_RATE = 178;</code>
     */
    const PROGRAMMATIC_MATCH_RATE = 178;
    /**
     * Total number of ad responses served from programmatic demand sources.
     *  Includes Ad Exchange, Open Bidding, and Preferred Deals.
     *  Differs from AD_EXCHANGE_RESPONSES_SERVED, which doesn't include Open
     *  Bidding ad requests.
     * Corresponds to "Programmatic responses served" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>PROGRAMMATIC_RESPONSES_SERVED = 176;</code>
     */
    const PROGRAMMATIC_RESPONSES_SERVED = 176;
    /**
     * Number of impressions for reach reports.
     * Corresponds to "Total reach impressions" in the Ad Manager UI.
     * Compatible with the following report types: `REACH`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>REACH_IMPRESSIONS = 416;</code>
     */
    const REACH_IMPRESSIONS = 416;
    /**
     * The total number of times that an ad is served by the ad server including
     *  dynamic allocation.
     * Corresponds to "Total responses served" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RESPONSES_SERVED = 39;</code>
     */
    const RESPONSES_SERVED = 39;
    /**
     * Retention of users in Google Analytics
     * Corresponds to "Retention" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>RETENTION = 238;</code>
     */
    const RETENTION = 238;
    /**
     * Total amount of CPM, CPC, and CPD revenue based on the number of units
     *  served by the Google Ad Manager server, AdSense, Ad Exchange, and
     *  third-party Mediation networks.
     * Corresponds to "Total revenue" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>REVENUE = 36;</code>
     */
    const REVENUE = 36;
    /**
     * The total revenue accrued in the child network's own account but paid to
     *  their parent network through auto-payment. This metric is only relevant
     *  for a "Manage Account" child network.
     * Corresponds to "Total revenue paid through MCM auto-payment" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT = 214;</code>
     */
    const REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT = 214;
    /**
     * Total amount of revenue (excluding CPD) based on the number of units
     *  served by the Google Ad Manager server, AdSense, Ad Exchange, and
     *  third-party Mediation networks.
     * Corresponds to "Total CPM and CPC revenue" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>REVENUE_WITHOUT_CPD = 4;</code>
     */
    const REVENUE_WITHOUT_CPD = 4;
    /**
     * The number of rewards granted to users from watching ads.
     * Corresponds to "Total rewards granted" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>REWARDS_GRANTED = 413;</code>
     */
    const REWARDS_GRANTED = 413;
    /**
     * The average amount of time (in seconds) that each rich media ad is
     *  displayed to users.
     * Corresponds to "Average display time" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_AVERAGE_DISPLAY_TIME = 587;</code>
     */
    const RICH_MEDIA_AVERAGE_DISPLAY_TIME = 587;
    /**
     * The average amount of time (in seconds) that a user interacts with a rich
     *  media ad.
     * Corresponds to "Average interaction time" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_AVERAGE_INTERACTION_TIME = 588;</code>
     */
    const RICH_MEDIA_AVERAGE_INTERACTION_TIME = 588;
    /**
     * The total number of times a backup image is served in place of a rich
     *  media ad.
     * Corresponds to "Backup image impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_BACKUP_IMAGES = 589;</code>
     */
    const RICH_MEDIA_BACKUP_IMAGES = 589;
    /**
     * The number of times a user interacts with a specific part of a rich media
     *  ad.
     * Corresponds to "Custom event - count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_CUSTOM_EVENT_COUNT = 599;</code>
     */
    const RICH_MEDIA_CUSTOM_EVENT_COUNT = 599;
    /**
     * The amount of time (in seconds) that a user interacts with a specific
     *  part of a rich media ad.
     * Corresponds to "Custom event - time" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_CUSTOM_EVENT_TIME = 600;</code>
     */
    const RICH_MEDIA_CUSTOM_EVENT_TIME = 600;
    /**
     * The amount of time (in seconds) that each rich media ad is displayed to
     *  users.
     * Corresponds to "Total display time" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_DISPLAY_TIME = 590;</code>
     */
    const RICH_MEDIA_DISPLAY_TIME = 590;
    /**
     * The average amount of time (in seconds) that an expanding ad is viewed in
     *  an expanded state.
     * Corresponds to "Average expanding time" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_EXPANDING_TIME = 591;</code>
     */
    const RICH_MEDIA_EXPANDING_TIME = 591;
    /**
     * The number of times an expanding ad was expanded.
     * Corresponds to "Total expansions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_EXPANSIONS = 592;</code>
     */
    const RICH_MEDIA_EXPANSIONS = 592;
    /**
     * The number of times a user opens a rich media ad in full screen mode.
     * Corresponds to "Full-screen impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_FULL_SCREEN_IMPRESSIONS = 593;</code>
     */
    const RICH_MEDIA_FULL_SCREEN_IMPRESSIONS = 593;
    /**
     * The number of times that a user interacts with a rich media ad.
     * Corresponds to "Total interactions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_INTERACTION_COUNT = 594;</code>
     */
    const RICH_MEDIA_INTERACTION_COUNT = 594;
    /**
     * The ratio of rich media ad interactions to the number of times the ad
     *  was displayed.
     * Corresponds to "Interaction rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_INTERACTION_RATE = 595;</code>
     */
    const RICH_MEDIA_INTERACTION_RATE = 595;
    /**
     * The total amount of time (in seconds) that a user interacts with a rich
     *  media ad.
     * Corresponds to "Interaction time" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_INTERACTION_TIME = 596;</code>
     */
    const RICH_MEDIA_INTERACTION_TIME = 596;
    /**
     * The number of impressions where a user interacted with a rich media ad.
     * Corresponds to "Interactive impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_INTERACTIVE_IMPRESSIONS = 597;</code>
     */
    const RICH_MEDIA_INTERACTIVE_IMPRESSIONS = 597;
    /**
     * The number of times that a user manually closes a rich media ad.
     * Corresponds to "Manual closes" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_MANUAL_CLOSES = 598;</code>
     */
    const RICH_MEDIA_MANUAL_CLOSES = 598;
    /**
     * The number of times a rich media video was fully played.
     * Corresponds to "Rich media video completes" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_VIDEO_COMPLETES = 503;</code>
     */
    const RICH_MEDIA_VIDEO_COMPLETES = 503;
    /**
     * The number of times a user clicked on the graphical controls of a video
     *  player.
     * Corresponds to "Rich media total video interactions" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_VIDEO_INTERACTIONS = 505;</code>
     */
    const RICH_MEDIA_VIDEO_INTERACTIONS = 505;
    /**
     * The ratio of video interactions to video plays. Represented as a
     *  percentage.
     * Corresponds to "Rich media video interaction rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_VIDEO_INTERACTION_RATE = 504;</code>
     */
    const RICH_MEDIA_VIDEO_INTERACTION_RATE = 504;
    /**
     * The number of times a rich media video was played up to midpoint.
     * Corresponds to "Rich media video midpoints" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_VIDEO_MIDPOINTS = 506;</code>
     */
    const RICH_MEDIA_VIDEO_MIDPOINTS = 506;
    /**
     * The number of times a rich media video was muted.
     * Corresponds to "Rich media video mutes" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_VIDEO_MUTES = 507;</code>
     */
    const RICH_MEDIA_VIDEO_MUTES = 507;
    /**
     * The number of times a rich media video was paused.
     * Corresponds to "Rich media video pauses" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_VIDEO_PAUSES = 508;</code>
     */
    const RICH_MEDIA_VIDEO_PAUSES = 508;
    /**
     * The number of times a rich media video was played.
     * Corresponds to "Rich media video plays" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_VIDEO_PLAYS = 509;</code>
     */
    const RICH_MEDIA_VIDEO_PLAYS = 509;
    /**
     * The number of times a rich media video was restarted.
     * Corresponds to "Rich media video replays" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_VIDEO_REPLAYS = 510;</code>
     */
    const RICH_MEDIA_VIDEO_REPLAYS = 510;
    /**
     * The number of times a rich media video was stopped.
     * Corresponds to "Rich media video stops" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_VIDEO_STOPS = 511;</code>
     */
    const RICH_MEDIA_VIDEO_STOPS = 511;
    /**
     * The number of times a rich media video was unmuted.
     * Corresponds to "Rich media video unmutes" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_VIDEO_UNMUTES = 512;</code>
     */
    const RICH_MEDIA_VIDEO_UNMUTES = 512;
    /**
     * The percentage of a video watched by a user.
     * Corresponds to "Rich media video view rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_VIDEO_VIEW_RATE = 513;</code>
     */
    const RICH_MEDIA_VIDEO_VIEW_RATE = 513;
    /**
     * The average amount of time(seconds) that a rich media video was viewed
     *  per view.
     * Corresponds to "Rich media video average view time" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>RICH_MEDIA_VIDEO_VIEW_TIME = 514;</code>
     */
    const RICH_MEDIA_VIDEO_VIEW_TIME = 514;
    /**
     * The number of forecasted impressions not reserved by any line item.
     * Corresponds to "Available impressions" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>SELL_THROUGH_AVAILABLE_IMPRESSIONS = 477;</code>
     */
    const SELL_THROUGH_AVAILABLE_IMPRESSIONS = 477;
    /**
     * The total number of forecasted impressions.
     * Corresponds to "Forecasted impressions" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>SELL_THROUGH_FORECASTED_IMPRESSIONS = 478;</code>
     */
    const SELL_THROUGH_FORECASTED_IMPRESSIONS = 478;
    /**
     * The number of forecasted impressions reserved by line items.
     * Corresponds to "Reserved impressions" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>SELL_THROUGH_RESERVED_IMPRESSIONS = 479;</code>
     */
    const SELL_THROUGH_RESERVED_IMPRESSIONS = 479;
    /**
     * The fraction of forecasted impressions reserved by line items.
     * Corresponds to "Sell-through rate" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>SELL_THROUGH_SELL_THROUGH_RATE = 480;</code>
     */
    const SELL_THROUGH_SELL_THROUGH_RATE = 480;
    /**
     * The average latency in milliseconds across all server-side unwrapping
     *  callout requests. There is no special handling for error or timeout
     *  responses. This reflects the entire chain of a parent callout request,
     *  which may result in multiple child callouts. This metric is not sliced
     *  by child callout dimensions.
     * Corresponds to "Server-side unwrapping average latency (milliseconds)" in
     * the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>SERVER_SIDE_UNWRAPPING_AVERAGE_LATENCY_MS = 434;</code>
     */
    const SERVER_SIDE_UNWRAPPING_AVERAGE_LATENCY_MS = 434;
    /**
     * The total number of server-side unwrapping callout requests.
     * Corresponds to "Server-side unwrapping callouts" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>SERVER_SIDE_UNWRAPPING_CALLOUTS = 435;</code>
     */
    const SERVER_SIDE_UNWRAPPING_CALLOUTS = 435;
    /**
     * The total number of server-side unwrapping callouts that returned an
     *  empty response. Timeouts are not considered empty responses.
     * Corresponds to "Server-side unwrapping empty responses" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>SERVER_SIDE_UNWRAPPING_EMPTY_RESPONSES = 436;</code>
     */
    const SERVER_SIDE_UNWRAPPING_EMPTY_RESPONSES = 436;
    /**
     * The total number of server-side unwrapping callouts that returned an
     *  error response. Timeouts and empty responses are not considered errors.
     * Corresponds to "Server-side unwrapping error responses" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>SERVER_SIDE_UNWRAPPING_ERROR_RESPONSES = 437;</code>
     */
    const SERVER_SIDE_UNWRAPPING_ERROR_RESPONSES = 437;
    /**
     * The total number of successfully unwrapped, non-empty server-side
     *  wrapping callouts. Successful unwrapping does not indicate that the
     *  resulting creative was served.
     * Corresponds to "Server-side unwrapping successful responses" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>SERVER_SIDE_UNWRAPPING_SUCCESSFUL_RESPONSES = 438;</code>
     */
    const SERVER_SIDE_UNWRAPPING_SUCCESSFUL_RESPONSES = 438;
    /**
     * The total number of server-side unwrapping callouts that timed out before
     *  returning a response.
     * Corresponds to "Server-side unwrapping timeouts" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>SERVER_SIDE_UNWRAPPING_TIMEOUTS = 439;</code>
     */
    const SERVER_SIDE_UNWRAPPING_TIMEOUTS = 439;
    /**
     * Count of sessions from Google Analytics.
     * Corresponds to "Sessions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>SESSIONS = 239;</code>
     */
    const SESSIONS = 239;
    /**
     * Percent of tag load time to 1st ad request in [0, 500ms) range.
     * Corresponds to "Tag loaded to first ad request time 0 - 500ms (%)" in the
     * Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>TAG_LOAD_TO_FIRST_AD_REQUEST_0_500_PERCENT = 455;</code>
     */
    const TAG_LOAD_TO_FIRST_AD_REQUEST_0_500_PERCENT = 455;
    /**
     * Percent of tag load time to 1st ad request in [1000ms, 2000ms) range.
     * Corresponds to "Tag loaded to first ad request time 1s - 2s (%)" in the
     * Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>TAG_LOAD_TO_FIRST_AD_REQUEST_1000_2000_PERCENT = 457;</code>
     */
    const TAG_LOAD_TO_FIRST_AD_REQUEST_1000_2000_PERCENT = 457;
    /**
     * Percent of tag load time to 1st ad request in [2000ms, 4000ms) range.
     * Corresponds to "Tag loaded to first ad request time 2s - 4s (%)" in the
     * Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>TAG_LOAD_TO_FIRST_AD_REQUEST_2000_4000_PERCENT = 458;</code>
     */
    const TAG_LOAD_TO_FIRST_AD_REQUEST_2000_4000_PERCENT = 458;
    /**
     * Percent of tag load time to 1st ad request in [4000ms, 8000ms) range.
     * Corresponds to "Tag loaded to first ad request time 4s - 8s (%)" in the
     * Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>TAG_LOAD_TO_FIRST_AD_REQUEST_4000_8000_PERCENT = 459;</code>
     */
    const TAG_LOAD_TO_FIRST_AD_REQUEST_4000_8000_PERCENT = 459;
    /**
     * Percent of tag load time to 1st ad request in [500ms, 1000ms) range.
     * Corresponds to "Tag loaded to first ad request time 500ms - 1s (%)" in
     * the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>TAG_LOAD_TO_FIRST_AD_REQUEST_500_1000_PERCENT = 456;</code>
     */
    const TAG_LOAD_TO_FIRST_AD_REQUEST_500_1000_PERCENT = 456;
    /**
     * Percent of tag load time to 1st ad request in [8000ms, +inf) range.
     * Corresponds to "Tag loaded to first ad request time >8s (%)" in the Ad
     * Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>TAG_LOAD_TO_FIRST_AD_REQUEST_GT_8000_PERCENT = 460;</code>
     */
    const TAG_LOAD_TO_FIRST_AD_REQUEST_GT_8000_PERCENT = 460;
    /**
     * The total number of clicks delivered including line item-level dynamic
     *  allocation by explicit custom criteria targeting.
     * Corresponds to "Total targeted clicks" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>TARGETED_CLICKS = 276;</code>
     */
    const TARGETED_CLICKS = 276;
    /**
     * The total number of impressions delivered including line item-level
     *  dynamic allocation by explicit custom criteria targeting.
     * Corresponds to "Total targeted impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>TARGETED_IMPRESSIONS = 277;</code>
     */
    const TARGETED_IMPRESSIONS = 277;
    /**
     * The total number of missed impressions due to the ad servers' inability
     *  to find ads to serve including dynamic allocation.
     * Corresponds to "Unfilled impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>UNFILLED_IMPRESSIONS = 45;</code>
     */
    const UNFILLED_IMPRESSIONS = 45;
    /**
     * The total number of unique users who viewed the ad.
     * Corresponds to "Total unique visitors" in the Ad Manager UI.
     * Compatible with the following report types: `REACH`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>UNIQUE_VISITORS = 417;</code>
     */
    const UNIQUE_VISITORS = 417;
    /**
     * The number of impressions impacted by Chrome Ads Intervention due to CPU
     *  usage.
     * Corresponds to "Total unloaded impressions due to CPU" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>UNLOADED_IMPRESSIONS_DUE_TO_CPU = 408;</code>
     */
    const UNLOADED_IMPRESSIONS_DUE_TO_CPU = 408;
    /**
     * The number of impressions impacted by Chrome Ads Intervention due to
     *  network usage.
     * Corresponds to "Total unloaded impressions due to Network" in the Ad
     * Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>UNLOADED_IMPRESSIONS_DUE_TO_NETWORK = 406;</code>
     */
    const UNLOADED_IMPRESSIONS_DUE_TO_NETWORK = 406;
    /**
     * The total number of times that an ad is not returned by the ad server.
     * Corresponds to "Total unmatched ad requests" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>UNMATCHED_AD_REQUESTS = 43;</code>
     */
    const UNMATCHED_AD_REQUESTS = 43;
    /**
     * The percentage of unviewed impressions due to other reasons.
     * Corresponds to "Other non-viewable impression reasons (%)" in the Ad
     * Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>UNVIEWED_REASON_OTHER_PERCENT = 550;</code>
     */
    const UNVIEWED_REASON_OTHER_PERCENT = 550;
    /**
     * The percentage of unviewed impressions due to slot never entered
     *  viewport.
     * Corresponds to "Slot never entered viewport (%)" in the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>UNVIEWED_REASON_SLOT_NEVER_ENTERED_VIEWPORT_PERCENT = 553;</code>
     */
    const UNVIEWED_REASON_SLOT_NEVER_ENTERED_VIEWPORT_PERCENT = 553;
    /**
     * The percentage of unviewed impressions due to scrolled past before ad
     *  filled.
     * Corresponds to "User scrolled before ad filled (%)" in the Ad Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>UNVIEWED_REASON_USER_SCROLLED_BEFORE_AD_FILLED_PERCENT = 551;</code>
     */
    const UNVIEWED_REASON_USER_SCROLLED_BEFORE_AD_FILLED_PERCENT = 551;
    /**
     * The percentage of unviewed impressions due to scrolled past before ad
     *  loaded.
     * Corresponds to "User scrolled/navigated before ad loaded (%)" in the Ad
     * Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>UNVIEWED_REASON_USER_SCROLLED_BEFORE_AD_LOADED_PERCENT = 552;</code>
     */
    const UNVIEWED_REASON_USER_SCROLLED_BEFORE_AD_LOADED_PERCENT = 552;
    /**
     * The percentage of unviewed impressions due to insufficient time on
     *  screen.
     * Corresponds to "User scrolled/navigated before 1 second (%)" in the Ad
     * Manager UI.
     * Compatible with the following report types: `AD_SPEED`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>UNVIEWED_REASON_USER_SCROLLED_BEFORE_ONE_SECOND_PERCENT = 549;</code>
     */
    const UNVIEWED_REASON_USER_SCROLLED_BEFORE_ONE_SECOND_PERCENT = 549;
    /**
     * Time of users interacting with web site or mobile app from Google
     *  Analytics in seconds.
     * Corresponds to "User engagement duration (seconds)" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_ENGAGEMENT_DURATION_IN_SECONDS = 240;</code>
     */
    const USER_ENGAGEMENT_DURATION_IN_SECONDS = 240;
    /**
     * Fraction of page views where users had ad blocker extensions installed.
     *  Includes only Desktop page views.
     * Corresponds to "Ad blocking extension rate" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_AD_BLOCKING_EXTENSION_RATE = 486;</code>
     */
    const USER_MESSAGES_AD_BLOCKING_EXTENSION_RATE = 486;
    /**
     * Number of ad-blocking messages shown in the selected date range that
     *  resulted in users adding the site to their allowlist to view ads
     * Corresponds to "Ad blocking recovery message conversions" in the Ad
     * Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_AD_BLOCKING_RECOVERY_ALLOWLISTED_COUNT = 487;</code>
     */
    const USER_MESSAGES_AD_BLOCKING_RECOVERY_ALLOWLISTED_COUNT = 487;
    /**
     * Number of times an ad blocking recovery message was shown to users.
     * Corresponds to "Ad blocking recovery messages shown" in the Ad Manager
     * UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_AD_BLOCKING_RECOVERY_MESSAGES_SHOWN = 488;</code>
     */
    const USER_MESSAGES_AD_BLOCKING_RECOVERY_MESSAGES_SHOWN = 488;
    /**
     * The number of page views generated by users with an ad blocking extension
     *  installed who were shown the ad blocking recovery message and later
     *  allowed ads.
     * Corresponds to "Allow-ads page views" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_ALLOW_ADS_PAGEVIEWS = 489;</code>
     */
    const USER_MESSAGES_ALLOW_ADS_PAGEVIEWS = 489;
    /**
     * Number of times a US state regulations message was shown to users.
     * Corresponds to "US states messages shown" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_CCPA_MESSAGES_SHOWN = 490;</code>
     */
    const USER_MESSAGES_CCPA_MESSAGES_SHOWN = 490;
    /**
     * Number of iOS ATT alerts that were triggered by an IDFA message (IDFA
     *  messages can be IDFA explainers or GDPR messages).
     * Corresponds to "IDFA ATT alerts shown" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_IDFA_ATT_ALERTS_SHOWN = 491;</code>
     */
    const USER_MESSAGES_IDFA_ATT_ALERTS_SHOWN = 491;
    /**
     * Number of iOS ATT alerts triggered by the IDFA message where the user
     *  chose to allow tracking.
     * Corresponds to "IDFA ATT consent" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_IDFA_ATT_CONSENT = 492;</code>
     */
    const USER_MESSAGES_IDFA_ATT_CONSENT = 492;
    /**
     * Percentage of iOS ATT alerts triggered by the IDFA message where the
     *  outcome was to allow tracking.
     * Corresponds to "IDFA ATT consent rate" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_IDFA_ATT_CONSENT_RATE = 493;</code>
     */
    const USER_MESSAGES_IDFA_ATT_CONSENT_RATE = 493;
    /**
     * Number of iOS ATT alerts triggered by the IDFA message where the user
     *  chose to deny tracking.
     * Corresponds to "IDFA ATT decline consent" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_IDFA_ATT_DECLINE_CONSENT = 494;</code>
     */
    const USER_MESSAGES_IDFA_ATT_DECLINE_CONSENT = 494;
    /**
     * Percentage of iOS ATT alerts triggered by the IDFA message where the user
     *  chose to deny tracking.
     * Corresponds to "IDFA ATT decline rate" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_IDFA_ATT_DECLINE_RATE = 495;</code>
     */
    const USER_MESSAGES_IDFA_ATT_DECLINE_RATE = 495;
    /**
     * Number of times an IDFA explainer message was shown to users.
     * Corresponds to "IDFA explainers shown" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_IDFA_EXPLAINERS_SHOWN = 496;</code>
     */
    const USER_MESSAGES_IDFA_EXPLAINERS_SHOWN = 496;
    /**
     * Number of times a European regulations message was shown immediately
     *  before the iOS ATT alert.
     * Corresponds to "IDFA IAB messages shown" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_IDFA_IAB_MESSAGES_SHOWN = 497;</code>
     */
    const USER_MESSAGES_IDFA_IAB_MESSAGES_SHOWN = 497;
    /**
     * Number of IDFA explainer messages where the user didn't choose anything.
     * Corresponds to "IDFA no decision" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_IDFA_NO_DECISION = 498;</code>
     */
    const USER_MESSAGES_IDFA_NO_DECISION = 498;
    /**
     * Number of times an Offerwall message was shown to users.
     * Corresponds to "Offerwall messages shown" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_OFFERWALL_MESSAGES_SHOWN = 121;</code>
     */
    const USER_MESSAGES_OFFERWALL_MESSAGES_SHOWN = 121;
    /**
     * The number of messages where the user gained an entitlement.
     * Corresponds to "Monetized Offerwall engagements" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_OFFERWALL_SUCCESSFUL_ENGAGEMENTS = 122;</code>
     */
    const USER_MESSAGES_OFFERWALL_SUCCESSFUL_ENGAGEMENTS = 122;
    /**
     * The number of pages viewed by users after gaining an entitlement. Only
     *  counts pages included for Offerwall.
     * Corresponds to "Post-offerwall page views" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_POST_OFFERWALL_PAGEVIEWS = 499;</code>
     */
    const USER_MESSAGES_POST_OFFERWALL_PAGEVIEWS = 499;
    /**
     * Revenue earned through Offerwall, including Rewarded ad revenue and
     *  third-party integrations.
     * Corresponds to "Estimated Offerwall revenue" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_TOTAL_ESTIMATED_REVENUE = 500;</code>
     */
    const USER_MESSAGES_TOTAL_ESTIMATED_REVENUE = 500;
    /**
     * Number of times an ads personalization controls message was shown to
     *  users.
     * Corresponds to "Ads personalization messages shown" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_UPTC_MESSAGES_SHOWN = 501;</code>
     */
    const USER_MESSAGES_UPTC_MESSAGES_SHOWN = 501;
    /**
     * Percentage of ads personalization controls messages where users chose the
     *  opt-out option.
     * Corresponds to "Personalization opt-out ratio" in the Ad Manager UI.
     * Compatible with the following report types: `PRIVACY_AND_MESSAGING`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>USER_MESSAGES_UPTC_PERSONALIZATION_OPT_OUT_RATIO = 502;</code>
     */
    const USER_MESSAGES_UPTC_PERSONALIZATION_OPT_OUT_RATIO = 502;
    /**
     * The number of errors of type 100 in reporting.
     * Corresponds to "VAST error 100 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_100_COUNT = 180;</code>
     */
    const VIDEO_ERROR_100_COUNT = 180;
    /**
     * The number of errors of type 101 in reporting.
     * Corresponds to "VAST error 101 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_101_COUNT = 181;</code>
     */
    const VIDEO_ERROR_101_COUNT = 181;
    /**
     * The number of errors of type 102 in reporting.
     * Corresponds to "VAST error 102 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_102_COUNT = 182;</code>
     */
    const VIDEO_ERROR_102_COUNT = 182;
    /**
     * The number of errors of type 200 in reporting.
     * Corresponds to "VAST error 200 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_200_COUNT = 183;</code>
     */
    const VIDEO_ERROR_200_COUNT = 183;
    /**
     * The number of errors of type 201 in reporting.
     * Corresponds to "VAST error 201 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_201_COUNT = 184;</code>
     */
    const VIDEO_ERROR_201_COUNT = 184;
    /**
     * The number of errors of type 202 in reporting.
     * Corresponds to "VAST error 202 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_202_COUNT = 185;</code>
     */
    const VIDEO_ERROR_202_COUNT = 185;
    /**
     * The number of errors of type 203 in reporting.
     * Corresponds to "VAST error 203 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_203_COUNT = 186;</code>
     */
    const VIDEO_ERROR_203_COUNT = 186;
    /**
     * The number of errors of type 300 in reporting.
     * Corresponds to "VAST error 300 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_300_COUNT = 187;</code>
     */
    const VIDEO_ERROR_300_COUNT = 187;
    /**
     * The number of errors of type 301 in reporting.
     * Corresponds to "VAST error 301 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_301_COUNT = 188;</code>
     */
    const VIDEO_ERROR_301_COUNT = 188;
    /**
     * The number of errors of type 302 in reporting.
     * Corresponds to "VAST error 302 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_302_COUNT = 189;</code>
     */
    const VIDEO_ERROR_302_COUNT = 189;
    /**
     * The number of errors of type 303 in reporting.
     * Corresponds to "VAST error 303 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_303_COUNT = 190;</code>
     */
    const VIDEO_ERROR_303_COUNT = 190;
    /**
     * The number of errors of type 400 in reporting.
     * Corresponds to "VAST error 400 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_400_COUNT = 191;</code>
     */
    const VIDEO_ERROR_400_COUNT = 191;
    /**
     * The number of errors of type 401 in reporting.
     * Corresponds to "VAST error 401 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_401_COUNT = 192;</code>
     */
    const VIDEO_ERROR_401_COUNT = 192;
    /**
     * The number of errors of type 402 in reporting.
     * Corresponds to "VAST error 402 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_402_COUNT = 193;</code>
     */
    const VIDEO_ERROR_402_COUNT = 193;
    /**
     * The number of errors of type 403 in reporting.
     * Corresponds to "VAST error 403 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_403_COUNT = 194;</code>
     */
    const VIDEO_ERROR_403_COUNT = 194;
    /**
     * The number of errors of type 405 in reporting.
     * Corresponds to "VAST error 405 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_405_COUNT = 195;</code>
     */
    const VIDEO_ERROR_405_COUNT = 195;
    /**
     * The number of errors of type 406 in reporting.
     * Corresponds to "VAST error 406 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_406_COUNT = 196;</code>
     */
    const VIDEO_ERROR_406_COUNT = 196;
    /**
     * The number of errors of type 407 in reporting.
     * Corresponds to "VAST error 407 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_407_COUNT = 197;</code>
     */
    const VIDEO_ERROR_407_COUNT = 197;
    /**
     * The number of errors of type 408 in reporting.
     * Corresponds to "VAST error 408 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_408_COUNT = 198;</code>
     */
    const VIDEO_ERROR_408_COUNT = 198;
    /**
     * The number of errors of type 409 in reporting.
     * Corresponds to "VAST error 409 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_409_COUNT = 199;</code>
     */
    const VIDEO_ERROR_409_COUNT = 199;
    /**
     * The number of errors of type 410 in reporting.
     * Corresponds to "VAST error 410 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_410_COUNT = 200;</code>
     */
    const VIDEO_ERROR_410_COUNT = 200;
    /**
     * The number of errors of type 500 in reporting.
     * Corresponds to "VAST error 500 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_500_COUNT = 201;</code>
     */
    const VIDEO_ERROR_500_COUNT = 201;
    /**
     * The number of errors of type 501 in reporting.
     * Corresponds to "VAST error 501 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_501_COUNT = 202;</code>
     */
    const VIDEO_ERROR_501_COUNT = 202;
    /**
     * The number of errors of type 502 in reporting.
     * Corresponds to "VAST error 502 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_502_COUNT = 203;</code>
     */
    const VIDEO_ERROR_502_COUNT = 203;
    /**
     * The number of errors of type 503 in reporting.
     * Corresponds to "VAST error 503 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_503_COUNT = 204;</code>
     */
    const VIDEO_ERROR_503_COUNT = 204;
    /**
     * The number of errors of type 600 in reporting.
     * Corresponds to "VAST error 600 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_600_COUNT = 205;</code>
     */
    const VIDEO_ERROR_600_COUNT = 205;
    /**
     * The number of errors of type 601 in reporting.
     * Corresponds to "VAST error 601 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_601_COUNT = 206;</code>
     */
    const VIDEO_ERROR_601_COUNT = 206;
    /**
     * The number of errors of type 602 in reporting.
     * Corresponds to "VAST error 602 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_602_COUNT = 207;</code>
     */
    const VIDEO_ERROR_602_COUNT = 207;
    /**
     * The number of errors of type 603 in reporting.
     * Corresponds to "VAST error 603 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_603_COUNT = 208;</code>
     */
    const VIDEO_ERROR_603_COUNT = 208;
    /**
     * The number of errors of type 604 in reporting.
     * Corresponds to "VAST error 604 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_604_COUNT = 209;</code>
     */
    const VIDEO_ERROR_604_COUNT = 209;
    /**
     * The number of errors of type 900 in reporting.
     * Corresponds to "VAST error 900 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_900_COUNT = 210;</code>
     */
    const VIDEO_ERROR_900_COUNT = 210;
    /**
     * The number of errors of type 901 in reporting.
     * Corresponds to "VAST error 901 count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_ERROR_901_COUNT = 211;</code>
     */
    const VIDEO_ERROR_901_COUNT = 211;
    /**
     * The number of user interactions with a video, on average, such as pause,
     *  full screen, mute, etc.
     * Corresponds to "Average interaction rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_AVERAGE_INTERACTION_RATE = 92;</code>
     */
    const VIDEO_INTERACTION_AVERAGE_INTERACTION_RATE = 92;
    /**
     * The number of times a user collapses a video, either to its original size
     *  or to a different size.
     * Corresponds to "Collapses" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_COLLAPSES = 93;</code>
     */
    const VIDEO_INTERACTION_COLLAPSES = 93;
    /**
     * The number of times a user expands a video.
     * Corresponds to "Expands" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_EXPANDS = 95;</code>
     */
    const VIDEO_INTERACTION_EXPANDS = 95;
    /**
     * The number of times ad clip played in full screen mode.
     * Corresponds to "Full screens" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_FULL_SCREENS = 96;</code>
     */
    const VIDEO_INTERACTION_FULL_SCREENS = 96;
    /**
     * The number of times video player was in mute state during play of ad
     *  clip.
     * Corresponds to "Mutes" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_MUTES = 97;</code>
     */
    const VIDEO_INTERACTION_MUTES = 97;
    /**
     * The number of times user paused ad clip.
     * Corresponds to "Pauses" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_PAUSES = 98;</code>
     */
    const VIDEO_INTERACTION_PAUSES = 98;
    /**
     * The number of times the user unpaused the video.
     * Corresponds to "Resumes" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_RESUMES = 99;</code>
     */
    const VIDEO_INTERACTION_RESUMES = 99;
    /**
     * The number of times a user rewinds the video.
     * Corresponds to "Rewinds" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_REWINDS = 100;</code>
     */
    const VIDEO_INTERACTION_REWINDS = 100;
    /**
     * The number of times a user unmutes the video.
     * Corresponds to "Unmutes" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_UNMUTES = 101;</code>
     */
    const VIDEO_INTERACTION_UNMUTES = 101;
    /**
     * The number of times a skippable video is skipped.
     * Corresponds to "Skips" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_INTERACTION_VIDEO_SKIPS = 102;</code>
     */
    const VIDEO_INTERACTION_VIDEO_SKIPS = 102;
    /**
     * The number of views for monetizable video content.
     * Corresponds to "Monetizable content views" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_MONETIZABLE_CONTENT_VIEWS = 601;</code>
     */
    const VIDEO_MONETIZABLE_CONTENT_VIEWS = 601;
    /**
     * The number of total creative serves in video realtime reporting.
     * Corresponds to "Total creative serves" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_CREATIVE_SERVES = 139;</code>
     */
    const VIDEO_REAL_TIME_CREATIVE_SERVES = 139;
    /**
     * The number of errors of type 100 in video realtime reporting.
     * Corresponds to "VAST error 100 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_100_COUNT = 143;</code>
     */
    const VIDEO_REAL_TIME_ERROR_100_COUNT = 143;
    /**
     * The number of errors of type 101 in video realtime reporting.
     * Corresponds to "VAST error 101 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_101_COUNT = 144;</code>
     */
    const VIDEO_REAL_TIME_ERROR_101_COUNT = 144;
    /**
     * The number of errors of type 102 in video realtime reporting.
     * Corresponds to "VAST error 102 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_102_COUNT = 145;</code>
     */
    const VIDEO_REAL_TIME_ERROR_102_COUNT = 145;
    /**
     * The number of errors of type 200 in video realtime reporting.
     * Corresponds to "VAST error 200 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_200_COUNT = 146;</code>
     */
    const VIDEO_REAL_TIME_ERROR_200_COUNT = 146;
    /**
     * The number of errors of type 201 in video realtime reporting.
     * Corresponds to "VAST error 201 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_201_COUNT = 147;</code>
     */
    const VIDEO_REAL_TIME_ERROR_201_COUNT = 147;
    /**
     * The number of errors of type 202 in video realtime reporting.
     * Corresponds to "VAST error 202 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_202_COUNT = 148;</code>
     */
    const VIDEO_REAL_TIME_ERROR_202_COUNT = 148;
    /**
     * The number of errors of type 203 in video realtime reporting.
     * Corresponds to "VAST error 203 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_203_COUNT = 149;</code>
     */
    const VIDEO_REAL_TIME_ERROR_203_COUNT = 149;
    /**
     * The number of errors of type 300 in video realtime reporting.
     * Corresponds to "VAST error 300 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_300_COUNT = 150;</code>
     */
    const VIDEO_REAL_TIME_ERROR_300_COUNT = 150;
    /**
     * The number of errors of type 301 in video realtime reporting.
     * Corresponds to "VAST error 301 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_301_COUNT = 151;</code>
     */
    const VIDEO_REAL_TIME_ERROR_301_COUNT = 151;
    /**
     * The number of errors of type 302 in video realtime reporting.
     * Corresponds to "VAST error 302 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_302_COUNT = 152;</code>
     */
    const VIDEO_REAL_TIME_ERROR_302_COUNT = 152;
    /**
     * The number of errors of type 303 in video realtime reporting.
     * Corresponds to "VAST error 303 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_303_COUNT = 153;</code>
     */
    const VIDEO_REAL_TIME_ERROR_303_COUNT = 153;
    /**
     * The number of errors of type 400 in video realtime reporting.
     * Corresponds to "VAST error 400 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_400_COUNT = 154;</code>
     */
    const VIDEO_REAL_TIME_ERROR_400_COUNT = 154;
    /**
     * The number of errors of type 401 in video realtime reporting.
     * Corresponds to "VAST error 401 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_401_COUNT = 155;</code>
     */
    const VIDEO_REAL_TIME_ERROR_401_COUNT = 155;
    /**
     * The number of errors of type 402 in video realtime reporting.
     * Corresponds to "VAST error 402 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_402_COUNT = 156;</code>
     */
    const VIDEO_REAL_TIME_ERROR_402_COUNT = 156;
    /**
     * The number of errors of type 403 in video realtime reporting.
     * Corresponds to "VAST error 403 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_403_COUNT = 157;</code>
     */
    const VIDEO_REAL_TIME_ERROR_403_COUNT = 157;
    /**
     * The number of errors of type 405 in video realtime reporting.
     * Corresponds to "VAST error 405 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_405_COUNT = 158;</code>
     */
    const VIDEO_REAL_TIME_ERROR_405_COUNT = 158;
    /**
     * The number of errors of type 406 in video realtime reporting.
     * Corresponds to "VAST error 406 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_406_COUNT = 159;</code>
     */
    const VIDEO_REAL_TIME_ERROR_406_COUNT = 159;
    /**
     * The number of errors of type 407 in video realtime reporting.
     * Corresponds to "VAST error 407 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_407_COUNT = 160;</code>
     */
    const VIDEO_REAL_TIME_ERROR_407_COUNT = 160;
    /**
     * The number of errors of type 408 in video realtime reporting.
     * Corresponds to "VAST error 408 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_408_COUNT = 161;</code>
     */
    const VIDEO_REAL_TIME_ERROR_408_COUNT = 161;
    /**
     * The number of errors of type 409 in video realtime reporting.
     * Corresponds to "VAST error 409 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_409_COUNT = 162;</code>
     */
    const VIDEO_REAL_TIME_ERROR_409_COUNT = 162;
    /**
     * The number of errors of type 410 in video realtime reporting.
     * Corresponds to "VAST error 410 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_410_COUNT = 163;</code>
     */
    const VIDEO_REAL_TIME_ERROR_410_COUNT = 163;
    /**
     * The number of errors of type 500 in video realtime reporting.
     * Corresponds to "VAST error 500 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_500_COUNT = 164;</code>
     */
    const VIDEO_REAL_TIME_ERROR_500_COUNT = 164;
    /**
     * The number of errors of type 501 in video realtime reporting.
     * Corresponds to "VAST error 501 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_501_COUNT = 165;</code>
     */
    const VIDEO_REAL_TIME_ERROR_501_COUNT = 165;
    /**
     * The number of errors of type 502 in video realtime reporting.
     * Corresponds to "VAST error 502 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_502_COUNT = 166;</code>
     */
    const VIDEO_REAL_TIME_ERROR_502_COUNT = 166;
    /**
     * The number of errors of type 503 in video realtime reporting.
     * Corresponds to "VAST error 503 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_503_COUNT = 167;</code>
     */
    const VIDEO_REAL_TIME_ERROR_503_COUNT = 167;
    /**
     * The number of errors of type 600 in video realtime reporting.
     * Corresponds to "VAST error 600 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_600_COUNT = 168;</code>
     */
    const VIDEO_REAL_TIME_ERROR_600_COUNT = 168;
    /**
     * The number of errors of type 601 in video realtime reporting.
     * Corresponds to "VAST error 601 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_601_COUNT = 169;</code>
     */
    const VIDEO_REAL_TIME_ERROR_601_COUNT = 169;
    /**
     * The number of errors of type 602 in video realtime reporting.
     * Corresponds to "VAST error 602 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_602_COUNT = 170;</code>
     */
    const VIDEO_REAL_TIME_ERROR_602_COUNT = 170;
    /**
     * The number of errors of type 603 in video realtime reporting.
     * Corresponds to "VAST error 603 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_603_COUNT = 171;</code>
     */
    const VIDEO_REAL_TIME_ERROR_603_COUNT = 171;
    /**
     * The number of errors of type 604 in video realtime reporting.
     * Corresponds to "VAST error 604 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_604_COUNT = 172;</code>
     */
    const VIDEO_REAL_TIME_ERROR_604_COUNT = 172;
    /**
     * The number of errors of type 900 in video realtime reporting.
     * Corresponds to "VAST error 900 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_900_COUNT = 173;</code>
     */
    const VIDEO_REAL_TIME_ERROR_900_COUNT = 173;
    /**
     * The number of errors of type 901 in video realtime reporting.
     * Corresponds to "VAST error 901 count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_ERROR_901_COUNT = 174;</code>
     */
    const VIDEO_REAL_TIME_ERROR_901_COUNT = 174;
    /**
     * The number of total impressions in video realtime reporting.
     * Corresponds to "Total impressions" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_IMPRESSIONS = 138;</code>
     */
    const VIDEO_REAL_TIME_IMPRESSIONS = 138;
    /**
     * The number of matched queries in video realtime reporting.
     * Corresponds to "Total responses served" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_MATCHED_QUERIES = 140;</code>
     */
    const VIDEO_REAL_TIME_MATCHED_QUERIES = 140;
    /**
     * The number of all errors in video realtime reporting.
     * Corresponds to "Total error count" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_TOTAL_ERROR_COUNT = 175;</code>
     */
    const VIDEO_REAL_TIME_TOTAL_ERROR_COUNT = 175;
    /**
     * The number of total queries in video realtime reporting.
     * Corresponds to "Total ad requests" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_TOTAL_QUERIES = 142;</code>
     */
    const VIDEO_REAL_TIME_TOTAL_QUERIES = 142;
    /**
     * The number of unmatched queries in video realtime reporting.
     * Corresponds to "Total unmatched ad requests" in the Ad Manager UI.
     * Compatible with the following report types:
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_REAL_TIME_UNMATCHED_QUERIES = 141;</code>
     */
    const VIDEO_REAL_TIME_UNMATCHED_QUERIES = 141;
    /**
     * Number of times that the publisher specified a video ad played
     *  automatically.
     * Corresponds to "Auto-plays" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_AUTO_PLAYS = 103;</code>
     */
    const VIDEO_VIEWERSHIP_AUTO_PLAYS = 103;
    /**
     * Average percentage of the video watched by users.
     * Corresponds to "Average view rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_AVERAGE_VIEW_RATE = 104;</code>
     */
    const VIDEO_VIEWERSHIP_AVERAGE_VIEW_RATE = 104;
    /**
     * Average time(seconds) users watched the video.
     * Corresponds to "Average view time" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_AVERAGE_VIEW_TIME = 105;</code>
     */
    const VIDEO_VIEWERSHIP_AVERAGE_VIEW_TIME = 105;
    /**
     * Number of times that the publisher specified a video ad was clicked to
     *  play.
     * Corresponds to "Click-to-plays" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_CLICK_TO_PLAYS = 106;</code>
     */
    const VIDEO_VIEWERSHIP_CLICK_TO_PLAYS = 106;
    /**
     * The number of times the video played to completion.
     * Corresponds to "Completes" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_COMPLETES = 107;</code>
     */
    const VIDEO_VIEWERSHIP_COMPLETES = 107;
    /**
     * Percentage of times the video played to the end.
     * Corresponds to "Completion rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_COMPLETION_RATE = 108;</code>
     */
    const VIDEO_VIEWERSHIP_COMPLETION_RATE = 108;
    /**
     * The number of engaged views: ad is viewed to completion or for 30s,
     *  whichever comes first.
     * Corresponds to "Engaged views" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_ENGAGED_VIEWS = 109;</code>
     */
    const VIDEO_VIEWERSHIP_ENGAGED_VIEWS = 109;
    /**
     * The number of times the video played to 25% of its length.
     * Corresponds to "First quartiles" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_FIRST_QUARTILES = 110;</code>
     */
    const VIDEO_VIEWERSHIP_FIRST_QUARTILES = 110;
    /**
     * The number of times the video reached its midpoint during play.
     * Corresponds to "Midpoints" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_MIDPOINTS = 111;</code>
     */
    const VIDEO_VIEWERSHIP_MIDPOINTS = 111;
    /**
     * The number of times a skip button is shown in video.
     * Corresponds to "Skip buttons shown" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_SKIP_BUTTONS_SHOWN = 112;</code>
     */
    const VIDEO_VIEWERSHIP_SKIP_BUTTONS_SHOWN = 112;
    /**
     * The number of impressions where the video was played.
     * Corresponds to "Starts" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_STARTS = 113;</code>
     */
    const VIDEO_VIEWERSHIP_STARTS = 113;
    /**
     * The number of times the video played to 75% of its length.
     * Corresponds to "Third quartiles" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_THIRD_QUARTILES = 114;</code>
     */
    const VIDEO_VIEWERSHIP_THIRD_QUARTILES = 114;
    /**
     * The number of times an error occurred, such as a VAST redirect error, a
     *  video playback error, or an invalid response error.
     * Corresponds to "Total error count" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_TOTAL_ERROR_COUNT = 115;</code>
     */
    const VIDEO_VIEWERSHIP_TOTAL_ERROR_COUNT = 115;
    /**
     * The percentage of video error count.
     * Corresponds to "Total error rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_TOTAL_ERROR_RATE = 94;</code>
     */
    const VIDEO_VIEWERSHIP_TOTAL_ERROR_RATE = 94;
    /**
     * Duration of the video creative.
     * Corresponds to "Video length" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_VIDEO_LENGTH = 116;</code>
     */
    const VIDEO_VIEWERSHIP_VIDEO_LENGTH = 116;
    /**
     * View-through rate represented as a percentage.
     * Corresponds to "Video view through rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `PERCENT`
     *
     * Generated from protobuf enum <code>VIDEO_VIEWERSHIP_VIEW_THROUGH_RATE = 117;</code>
     */
    const VIDEO_VIEWERSHIP_VIEW_THROUGH_RATE = 117;
    /**
     * Number of winning bids received from Open Bidding buyers, even when the
     *  winning bid is placed at the end of a mediation for mobile apps chain.
     * Corresponds to "Yield group auctions won" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_AUCTIONS_WON = 80;</code>
     */
    const YIELD_GROUP_AUCTIONS_WON = 80;
    /**
     * Number of bids received from Open Bidding buyers, regardless of whether
     *  the returned bid competes in an auction.
     * Corresponds to "Yield group bids" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_BIDS = 81;</code>
     */
    const YIELD_GROUP_BIDS = 81;
    /**
     * Number of bids received from Open Bidding buyers that competed in
     *  the auction.
     * Corresponds to "Yield group bids in auction" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_BIDS_IN_AUCTION = 82;</code>
     */
    const YIELD_GROUP_BIDS_IN_AUCTION = 82;
    /**
     * Number of times a yield partner is asked to return bid to fill
     *  a yield group request.
     * Corresponds to "Yield group callouts" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_CALLOUTS = 83;</code>
     */
    const YIELD_GROUP_CALLOUTS = 83;
    /**
     * The estimated net rate for yield groups or individual
     *  yield group partners.
     * Corresponds to "Yield group estimated CPM" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_ESTIMATED_CPM = 88;</code>
     */
    const YIELD_GROUP_ESTIMATED_CPM = 88;
    /**
     * Total net revenue earned by a yield group, based upon the yield group
     *  estimated CPM and yield group impressions recorded.
     * Corresponds to "Yield group estimated revenue" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_ESTIMATED_REVENUE = 87;</code>
     */
    const YIELD_GROUP_ESTIMATED_REVENUE = 87;
    /**
     * Number of matched yield group requests where a yield partner delivered
     *  their ad to publisher inventory.
     * Corresponds to "Yield group impressions" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_IMPRESSIONS = 85;</code>
     */
    const YIELD_GROUP_IMPRESSIONS = 85;
    /**
     * Yield group Mediation fill rate indicating how often a network
     *  fills an ad request.
     * Corresponds to "Yield group mediation fill rate" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_MEDIATION_FILL_RATE = 89;</code>
     */
    const YIELD_GROUP_MEDIATION_FILL_RATE = 89;
    /**
     * Total requests where a Mediation chain was served.
     * Corresponds to "Yield group mediation matched queries" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_MEDIATION_MATCHED_QUERIES = 86;</code>
     */
    const YIELD_GROUP_MEDIATION_MATCHED_QUERIES = 86;
    /**
     * The number of mediation chain passback across all channels.
     * Corresponds to "Yield group mediation passbacks" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_MEDIATION_PASSBACKS = 118;</code>
     */
    const YIELD_GROUP_MEDIATION_PASSBACKS = 118;
    /**
     * Revenue per thousand impressions based on data collected by Ad Manager
     *  from third-party ad network reports.
     * Corresponds to "Yield group mediation third party ECPM" in the Ad Manager
     * UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `DOUBLE`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_MEDIATION_THIRD_PARTY_ECPM = 90;</code>
     */
    const YIELD_GROUP_MEDIATION_THIRD_PARTY_ECPM = 90;
    /**
     * The yield group revenue accrued in the child network's own account but
     *  paid to their parent network through auto-payment. This metric is only
     *  relevant for a "Manage Account" child network.
     * Corresponds to "Yield group revenue paid through MCM auto-payment" in the
     * Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `MONEY`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT = 215;</code>
     */
    const YIELD_GROUP_REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT = 215;
    /**
     * Number of times a yield group buyer successfully returned a bid in
     *  response to a yield group callout.
     * Corresponds to "Yield group successful responses" in the Ad Manager UI.
     * Compatible with the following report types: `HISTORICAL`
     * Data format: `INTEGER`
     *
     * Generated from protobuf enum <code>YIELD_GROUP_SUCCESSFUL_RESPONSES = 84;</code>
     */
    const YIELD_GROUP_SUCCESSFUL_RESPONSES = 84;

    private static $valueToName = [
        self::METRIC_UNSPECIFIED => 'METRIC_UNSPECIFIED',
        self::ACTIVE_USERS => 'ACTIVE_USERS',
        self::ACTIVE_VIEW_AUDIBLE_AT_START_PERCENT => 'ACTIVE_VIEW_AUDIBLE_AT_START_PERCENT',
        self::ACTIVE_VIEW_AUDIBLE_IMPRESSIONS => 'ACTIVE_VIEW_AUDIBLE_IMPRESSIONS',
        self::ACTIVE_VIEW_AUDIBLE_THROUGH_COMPLETION_PERCENT => 'ACTIVE_VIEW_AUDIBLE_THROUGH_COMPLETION_PERCENT',
        self::ACTIVE_VIEW_AUDIBLE_THROUGH_FIRST_QUARTILE_PERCENT => 'ACTIVE_VIEW_AUDIBLE_THROUGH_FIRST_QUARTILE_PERCENT',
        self::ACTIVE_VIEW_AUDIBLE_THROUGH_MIDPOINT_PERCENT => 'ACTIVE_VIEW_AUDIBLE_THROUGH_MIDPOINT_PERCENT',
        self::ACTIVE_VIEW_AUDIBLE_THROUGH_THIRD_QUARTILE_PERCENT => 'ACTIVE_VIEW_AUDIBLE_THROUGH_THIRD_QUARTILE_PERCENT',
        self::ACTIVE_VIEW_AUDIO_ENABLED_IMPRESSIONS => 'ACTIVE_VIEW_AUDIO_ENABLED_IMPRESSIONS',
        self::ACTIVE_VIEW_AUDIO_MEASURABLE_IMPRESSIONS => 'ACTIVE_VIEW_AUDIO_MEASURABLE_IMPRESSIONS',
        self::ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME => 'ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME',
        self::ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS => 'ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS',
        self::ACTIVE_VIEW_EVER_AUDIBLE_BACKGROUNDED_PERCENT => 'ACTIVE_VIEW_EVER_AUDIBLE_BACKGROUNDED_PERCENT',
        self::ACTIVE_VIEW_EVER_AUDIBLE_PERCENT => 'ACTIVE_VIEW_EVER_AUDIBLE_PERCENT',
        self::ACTIVE_VIEW_EVER_BACKGROUNDED_PERCENT => 'ACTIVE_VIEW_EVER_BACKGROUNDED_PERCENT',
        self::ACTIVE_VIEW_EVER_MUTED_PERCENT => 'ACTIVE_VIEW_EVER_MUTED_PERCENT',
        self::ACTIVE_VIEW_IMPRESSIONS_AUDIBLE_AND_VISIBLIE_AT_COMPLETION => 'ACTIVE_VIEW_IMPRESSIONS_AUDIBLE_AND_VISIBLIE_AT_COMPLETION',
        self::ACTIVE_VIEW_MEASURABLE_IMPRESSIONS => 'ACTIVE_VIEW_MEASURABLE_IMPRESSIONS',
        self::ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE => 'ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE',
        self::ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS => 'ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS',
        self::ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS => 'ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS',
        self::ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION => 'ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION',
        self::ACTIVE_VIEW_PERCENT_AUDIBLE_IMPRESSIONS => 'ACTIVE_VIEW_PERCENT_AUDIBLE_IMPRESSIONS',
        self::ACTIVE_VIEW_PLUS_MEASURABLE_COUNT => 'ACTIVE_VIEW_PLUS_MEASURABLE_COUNT',
        self::ACTIVE_VIEW_REVENUE => 'ACTIVE_VIEW_REVENUE',
        self::ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION => 'ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION',
        self::ACTIVE_VIEW_VIEWABLE_IMPRESSIONS => 'ACTIVE_VIEW_VIEWABLE_IMPRESSIONS',
        self::ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION => 'ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION',
        self::ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE => 'ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE',
        self::ADSENSE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME => 'ADSENSE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME',
        self::ADSENSE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS => 'ADSENSE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS',
        self::ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS => 'ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS',
        self::ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE => 'ADSENSE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE',
        self::ADSENSE_ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS => 'ADSENSE_ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS',
        self::ADSENSE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS => 'ADSENSE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS',
        self::ADSENSE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION => 'ADSENSE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION',
        self::ADSENSE_ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION => 'ADSENSE_ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION',
        self::ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS => 'ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS',
        self::ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION => 'ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION',
        self::ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE => 'ADSENSE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE',
        self::ADSENSE_AVERAGE_ECPM => 'ADSENSE_AVERAGE_ECPM',
        self::ADSENSE_CLICKS => 'ADSENSE_CLICKS',
        self::ADSENSE_CTR => 'ADSENSE_CTR',
        self::ADSENSE_IMPRESSIONS => 'ADSENSE_IMPRESSIONS',
        self::ADSENSE_PERCENT_CLICKS => 'ADSENSE_PERCENT_CLICKS',
        self::ADSENSE_PERCENT_IMPRESSIONS => 'ADSENSE_PERCENT_IMPRESSIONS',
        self::ADSENSE_PERCENT_REVENUE => 'ADSENSE_PERCENT_REVENUE',
        self::ADSENSE_PERCENT_REVENUE_WITHOUT_CPD => 'ADSENSE_PERCENT_REVENUE_WITHOUT_CPD',
        self::ADSENSE_RESPONSES_SERVED => 'ADSENSE_RESPONSES_SERVED',
        self::ADSENSE_REVENUE => 'ADSENSE_REVENUE',
        self::AD_EXCHANGE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME => 'AD_EXCHANGE_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME',
        self::AD_EXCHANGE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS => 'AD_EXCHANGE_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS',
        self::AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS => 'AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS',
        self::AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE => 'AD_EXCHANGE_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE',
        self::AD_EXCHANGE_ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS => 'AD_EXCHANGE_ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS',
        self::AD_EXCHANGE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS => 'AD_EXCHANGE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS',
        self::AD_EXCHANGE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION => 'AD_EXCHANGE_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION',
        self::AD_EXCHANGE_ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION => 'AD_EXCHANGE_ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION',
        self::AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS => 'AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS',
        self::AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION => 'AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION',
        self::AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE => 'AD_EXCHANGE_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE',
        self::AD_EXCHANGE_AVERAGE_ECPM => 'AD_EXCHANGE_AVERAGE_ECPM',
        self::AD_EXCHANGE_CLICKS => 'AD_EXCHANGE_CLICKS',
        self::AD_EXCHANGE_CPC => 'AD_EXCHANGE_CPC',
        self::AD_EXCHANGE_CTR => 'AD_EXCHANGE_CTR',
        self::AD_EXCHANGE_DELIVERY_RATE => 'AD_EXCHANGE_DELIVERY_RATE',
        self::AD_EXCHANGE_IMPRESSIONS => 'AD_EXCHANGE_IMPRESSIONS',
        self::AD_EXCHANGE_IMPRESSIONS_PER_AD_VIEWER => 'AD_EXCHANGE_IMPRESSIONS_PER_AD_VIEWER',
        self::AD_EXCHANGE_IMPRESSIONS_PER_SESSION => 'AD_EXCHANGE_IMPRESSIONS_PER_SESSION',
        self::AD_EXCHANGE_LIFT => 'AD_EXCHANGE_LIFT',
        self::AD_EXCHANGE_MATCHED_REQUEST_CTR => 'AD_EXCHANGE_MATCHED_REQUEST_CTR',
        self::AD_EXCHANGE_MATCHED_REQUEST_ECPM => 'AD_EXCHANGE_MATCHED_REQUEST_ECPM',
        self::AD_EXCHANGE_MATCH_RATE => 'AD_EXCHANGE_MATCH_RATE',
        self::AD_EXCHANGE_OPPORTUNITIES_FROM_ERRORS => 'AD_EXCHANGE_OPPORTUNITIES_FROM_ERRORS',
        self::AD_EXCHANGE_OPPORTUNITIES_FROM_IMPRESSIONS => 'AD_EXCHANGE_OPPORTUNITIES_FROM_IMPRESSIONS',
        self::AD_EXCHANGE_PERCENT_CLICKS => 'AD_EXCHANGE_PERCENT_CLICKS',
        self::AD_EXCHANGE_PERCENT_IMPRESSIONS => 'AD_EXCHANGE_PERCENT_IMPRESSIONS',
        self::AD_EXCHANGE_PERCENT_REVENUE => 'AD_EXCHANGE_PERCENT_REVENUE',
        self::AD_EXCHANGE_PERCENT_REVENUE_WITHOUT_CPD => 'AD_EXCHANGE_PERCENT_REVENUE_WITHOUT_CPD',
        self::AD_EXCHANGE_PLUS_YIELD_GROUP_ECPM => 'AD_EXCHANGE_PLUS_YIELD_GROUP_ECPM',
        self::AD_EXCHANGE_PLUS_YIELD_GROUP_IMPRESSIONS => 'AD_EXCHANGE_PLUS_YIELD_GROUP_IMPRESSIONS',
        self::AD_EXCHANGE_PLUS_YIELD_GROUP_REVENUE => 'AD_EXCHANGE_PLUS_YIELD_GROUP_REVENUE',
        self::AD_EXCHANGE_RESPONSES_SERVED => 'AD_EXCHANGE_RESPONSES_SERVED',
        self::AD_EXCHANGE_REVENUE => 'AD_EXCHANGE_REVENUE',
        self::AD_EXCHANGE_REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT => 'AD_EXCHANGE_REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT',
        self::AD_EXCHANGE_REVENUE_PER_AD_VIEWER => 'AD_EXCHANGE_REVENUE_PER_AD_VIEWER',
        self::AD_EXCHANGE_TOTAL_REQUESTS => 'AD_EXCHANGE_TOTAL_REQUESTS',
        self::AD_EXCHANGE_TOTAL_REQUEST_CTR => 'AD_EXCHANGE_TOTAL_REQUEST_CTR',
        self::AD_EXCHANGE_TOTAL_REQUEST_ECPM => 'AD_EXCHANGE_TOTAL_REQUEST_ECPM',
        self::AD_EXPOSURE_SECONDS => 'AD_EXPOSURE_SECONDS',
        self::AD_REQUESTS => 'AD_REQUESTS',
        self::AD_SERVER_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME => 'AD_SERVER_ACTIVE_VIEW_AVERAGE_VIEWABLE_TIME',
        self::AD_SERVER_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS => 'AD_SERVER_ACTIVE_VIEW_ELIGIBLE_IMPRESSIONS',
        self::AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS => 'AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS',
        self::AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE => 'AD_SERVER_ACTIVE_VIEW_MEASURABLE_IMPRESSIONS_RATE',
        self::AD_SERVER_ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS => 'AD_SERVER_ACTIVE_VIEW_NON_MEASURABLE_IMPRESSIONS',
        self::AD_SERVER_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS => 'AD_SERVER_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS',
        self::AD_SERVER_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION => 'AD_SERVER_ACTIVE_VIEW_NON_VIEWABLE_IMPRESSIONS_DISTRIBUTION',
        self::AD_SERVER_ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION => 'AD_SERVER_ACTIVE_VIEW_UNDETERMINED_IMPRESSIONS_DISTRIBUTION',
        self::AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS => 'AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS',
        self::AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION => 'AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_DISTRIBUTION',
        self::AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE => 'AD_SERVER_ACTIVE_VIEW_VIEWABLE_IMPRESSIONS_RATE',
        self::AD_SERVER_AVERAGE_ECPM => 'AD_SERVER_AVERAGE_ECPM',
        self::AD_SERVER_AVERAGE_ECPM_WITHOUT_CPD => 'AD_SERVER_AVERAGE_ECPM_WITHOUT_CPD',
        self::AD_SERVER_BEGIN_TO_RENDER_IMPRESSIONS => 'AD_SERVER_BEGIN_TO_RENDER_IMPRESSIONS',
        self::AD_SERVER_CLICKS => 'AD_SERVER_CLICKS',
        self::AD_SERVER_COMPLETED_VIEWS => 'AD_SERVER_COMPLETED_VIEWS',
        self::AD_SERVER_COVIEWED_IMPRESSIONS => 'AD_SERVER_COVIEWED_IMPRESSIONS',
        self::AD_SERVER_CPD_REVENUE => 'AD_SERVER_CPD_REVENUE',
        self::AD_SERVER_CTR => 'AD_SERVER_CTR',
        self::AD_SERVER_GROSS_REVENUE => 'AD_SERVER_GROSS_REVENUE',
        self::AD_SERVER_GROSS_REVENUE_WITHOUT_CPD => 'AD_SERVER_GROSS_REVENUE_WITHOUT_CPD',
        self::AD_SERVER_IMPRESSIONS => 'AD_SERVER_IMPRESSIONS',
        self::AD_SERVER_IMPRESSIONS_WITH_COMPANION => 'AD_SERVER_IMPRESSIONS_WITH_COMPANION',
        self::AD_SERVER_INACTIVE_BEGIN_TO_RENDER_IMPRESSIONS => 'AD_SERVER_INACTIVE_BEGIN_TO_RENDER_IMPRESSIONS',
        self::AD_SERVER_PERCENT_CLICKS => 'AD_SERVER_PERCENT_CLICKS',
        self::AD_SERVER_PERCENT_IMPRESSIONS => 'AD_SERVER_PERCENT_IMPRESSIONS',
        self::AD_SERVER_PERCENT_REVENUE => 'AD_SERVER_PERCENT_REVENUE',
        self::AD_SERVER_PERCENT_REVENUE_WITHOUT_CPD => 'AD_SERVER_PERCENT_REVENUE_WITHOUT_CPD',
        self::AD_SERVER_RESPONSES_SERVED => 'AD_SERVER_RESPONSES_SERVED',
        self::AD_SERVER_REVENUE => 'AD_SERVER_REVENUE',
        self::AD_SERVER_REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT => 'AD_SERVER_REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT',
        self::AD_SERVER_REVENUE_WITHOUT_CPD => 'AD_SERVER_REVENUE_WITHOUT_CPD',
        self::AD_SERVER_TARGETED_CLICKS => 'AD_SERVER_TARGETED_CLICKS',
        self::AD_SERVER_TARGETED_IMPRESSIONS => 'AD_SERVER_TARGETED_IMPRESSIONS',
        self::AD_SERVER_TRACKED_ADS => 'AD_SERVER_TRACKED_ADS',
        self::AD_SERVER_UNFILTERED_BEGIN_TO_RENDER_IMPRESSIONS => 'AD_SERVER_UNFILTERED_BEGIN_TO_RENDER_IMPRESSIONS',
        self::AD_SERVER_UNFILTERED_CLICKS => 'AD_SERVER_UNFILTERED_CLICKS',
        self::AD_SERVER_UNFILTERED_DOWNLOADED_IMPRESSIONS => 'AD_SERVER_UNFILTERED_DOWNLOADED_IMPRESSIONS',
        self::AD_SERVER_UNFILTERED_IMPRESSIONS => 'AD_SERVER_UNFILTERED_IMPRESSIONS',
        self::AD_SERVER_UNFILTERED_TRACKED_ADS => 'AD_SERVER_UNFILTERED_TRACKED_ADS',
        self::AD_UNIT_EXPOSURE_SECONDS => 'AD_UNIT_EXPOSURE_SECONDS',
        self::AD_VIEWERS => 'AD_VIEWERS',
        self::ATN_ADS_FAILED_TO_RENDER => 'ATN_ADS_FAILED_TO_RENDER',
        self::ATN_ELIGIBLE_LINE_ITEMS => 'ATN_ELIGIBLE_LINE_ITEMS',
        self::ATN_ELIGIBLE_LINE_ITEMS_AD_REQUESTS => 'ATN_ELIGIBLE_LINE_ITEMS_AD_REQUESTS',
        self::ATN_HBT_ALLOWED_AD_REQUESTS => 'ATN_HBT_ALLOWED_AD_REQUESTS',
        self::ATN_HBT_BIDS_IN_AUCTION => 'ATN_HBT_BIDS_IN_AUCTION',
        self::ATN_HBT_BIDS_IN_AUCTION_AD_REQUESTS => 'ATN_HBT_BIDS_IN_AUCTION_AD_REQUESTS',
        self::ATN_HBT_CANDIDATE_BIDS => 'ATN_HBT_CANDIDATE_BIDS',
        self::ATN_HBT_INVALID_AD_REQUESTS => 'ATN_HBT_INVALID_AD_REQUESTS',
        self::ATN_HBT_NO_BIDS_AD_REQUESTS => 'ATN_HBT_NO_BIDS_AD_REQUESTS',
        self::ATN_HBT_REJECTED_BIDS => 'ATN_HBT_REJECTED_BIDS',
        self::ATN_HBT_VALID_AD_REQUESTS => 'ATN_HBT_VALID_AD_REQUESTS',
        self::ATN_HBT_WITH_BIDS_AD_REQUESTS => 'ATN_HBT_WITH_BIDS_AD_REQUESTS',
        self::ATN_INVALID_AD_REQUESTS => 'ATN_INVALID_AD_REQUESTS',
        self::ATN_LINE_ITEMS_CREATIVE_NOT_RETRIEVED => 'ATN_LINE_ITEMS_CREATIVE_NOT_RETRIEVED',
        self::ATN_LINE_ITEMS_IN_AUCTION => 'ATN_LINE_ITEMS_IN_AUCTION',
        self::ATN_LINE_ITEMS_NOT_COMPETING => 'ATN_LINE_ITEMS_NOT_COMPETING',
        self::ATN_LINE_ITEMS_NOT_SELECTED => 'ATN_LINE_ITEMS_NOT_SELECTED',
        self::ATN_LINE_ITEM_IN_AUCTION_AD_REQUESTS => 'ATN_LINE_ITEM_IN_AUCTION_AD_REQUESTS',
        self::ATN_LINE_ITEM_TARGETED_AD_REQUESTS => 'ATN_LINE_ITEM_TARGETED_AD_REQUESTS',
        self::ATN_MEDIATION_ALLOWED_AD_REQUESTS => 'ATN_MEDIATION_ALLOWED_AD_REQUESTS',
        self::ATN_MEDIATION_INVALID_AD_REQUESTS => 'ATN_MEDIATION_INVALID_AD_REQUESTS',
        self::ATN_MEDIATION_LOADED_ADS_FROM_CHAINS => 'ATN_MEDIATION_LOADED_ADS_FROM_CHAINS',
        self::ATN_MEDIATION_NO_PARTNER_AD_REQUESTS => 'ATN_MEDIATION_NO_PARTNER_AD_REQUESTS',
        self::ATN_MEDIATION_PARTNERS_IN_AUCTION => 'ATN_MEDIATION_PARTNERS_IN_AUCTION',
        self::ATN_MEDIATION_PARTNERS_IN_AUCTION_AD_REQUESTS => 'ATN_MEDIATION_PARTNERS_IN_AUCTION_AD_REQUESTS',
        self::ATN_MEDIATION_REJECTED_PARTNERS => 'ATN_MEDIATION_REJECTED_PARTNERS',
        self::ATN_MEDIATION_TARGETED_PARTNERS => 'ATN_MEDIATION_TARGETED_PARTNERS',
        self::ATN_MEDIATION_TOTAL_YIELD_PARTNERS => 'ATN_MEDIATION_TOTAL_YIELD_PARTNERS',
        self::ATN_MEDIATION_UNLOADED_ADS_FROM_CHAINS => 'ATN_MEDIATION_UNLOADED_ADS_FROM_CHAINS',
        self::ATN_MEDIATION_UNUSED_BIDS_OR_PARTNERS => 'ATN_MEDIATION_UNUSED_BIDS_OR_PARTNERS',
        self::ATN_MEDIATION_VALID_AD_REQUESTS => 'ATN_MEDIATION_VALID_AD_REQUESTS',
        self::ATN_MEDIATION_WITH_PARTNERS_AD_REQUESTS => 'ATN_MEDIATION_WITH_PARTNERS_AD_REQUESTS',
        self::ATN_PROGRAMMATIC_AD_REQUESTS_WITH_BIDS => 'ATN_PROGRAMMATIC_AD_REQUESTS_WITH_BIDS',
        self::ATN_PROGRAMMATIC_AD_REQUESTS_WITH_BID_REQUESTS_SENT => 'ATN_PROGRAMMATIC_AD_REQUESTS_WITH_BID_REQUESTS_SENT',
        self::ATN_PROGRAMMATIC_ALLOWED_AD_REQUESTS => 'ATN_PROGRAMMATIC_ALLOWED_AD_REQUESTS',
        self::ATN_PROGRAMMATIC_BIDS_IN_AUCTION => 'ATN_PROGRAMMATIC_BIDS_IN_AUCTION',
        self::ATN_PROGRAMMATIC_BID_IN_AUCTION_AD_REQUESTS => 'ATN_PROGRAMMATIC_BID_IN_AUCTION_AD_REQUESTS',
        self::ATN_PROGRAMMATIC_BID_REQUESTS_SENT => 'ATN_PROGRAMMATIC_BID_REQUESTS_SENT',
        self::ATN_PROGRAMMATIC_BID_REQUESTS_WITH_RESPONSE => 'ATN_PROGRAMMATIC_BID_REQUESTS_WITH_RESPONSE',
        self::ATN_PROGRAMMATIC_BID_REQUEST_CANDIDATES => 'ATN_PROGRAMMATIC_BID_REQUEST_CANDIDATES',
        self::ATN_PROGRAMMATIC_BID_REQUEST_ERRORS => 'ATN_PROGRAMMATIC_BID_REQUEST_ERRORS',
        self::ATN_PROGRAMMATIC_INELIGIBLE_AD_REQUESTS => 'ATN_PROGRAMMATIC_INELIGIBLE_AD_REQUESTS',
        self::ATN_PROGRAMMATIC_REJECTED_BIDS => 'ATN_PROGRAMMATIC_REJECTED_BIDS',
        self::ATN_PROGRAMMATIC_SKIPPED_BID_REQUESTS => 'ATN_PROGRAMMATIC_SKIPPED_BID_REQUESTS',
        self::ATN_PROGRAMMATIC_TOTAL_BIDS => 'ATN_PROGRAMMATIC_TOTAL_BIDS',
        self::ATN_PROGRAMMATIC_VALID_AD_REQUESTS => 'ATN_PROGRAMMATIC_VALID_AD_REQUESTS',
        self::ATN_REJECTED_LINE_ITEMS => 'ATN_REJECTED_LINE_ITEMS',
        self::ATN_SERVED_MEDIATION_CHAINS => 'ATN_SERVED_MEDIATION_CHAINS',
        self::ATN_SERVED_SINGLE_ADS => 'ATN_SERVED_SINGLE_ADS',
        self::ATN_TARGETED_LINE_ITEMS => 'ATN_TARGETED_LINE_ITEMS',
        self::ATN_TOTAL_AD_REQUESTS => 'ATN_TOTAL_AD_REQUESTS',
        self::ATN_TOTAL_COMPETING_ADS_IN_AUCTION => 'ATN_TOTAL_COMPETING_ADS_IN_AUCTION',
        self::ATN_TOTAL_LOADED_ADS => 'ATN_TOTAL_LOADED_ADS',
        self::ATN_VALID_AD_REQUESTS => 'ATN_VALID_AD_REQUESTS',
        self::ATN_YIELD_GROUP_MEDIATION_PASSBACKS => 'ATN_YIELD_GROUP_MEDIATION_PASSBACKS',
        self::AVERAGE_ECPM => 'AVERAGE_ECPM',
        self::AVERAGE_ECPM_WITHOUT_CPD => 'AVERAGE_ECPM_WITHOUT_CPD',
        self::AVERAGE_ENGAGEMENT_SECONDS_PER_SESSION => 'AVERAGE_ENGAGEMENT_SECONDS_PER_SESSION',
        self::AVERAGE_ENGAGEMENT_SECONDS_PER_USER => 'AVERAGE_ENGAGEMENT_SECONDS_PER_USER',
        self::AVERAGE_IMPRESSIONS_PER_UNIQUE_VISITOR => 'AVERAGE_IMPRESSIONS_PER_UNIQUE_VISITOR',
        self::AVERAGE_PURCHASE_REVENUE_PER_PAYING_USER => 'AVERAGE_PURCHASE_REVENUE_PER_PAYING_USER',
        self::AVERAGE_REVENUE_PER_USER => 'AVERAGE_REVENUE_PER_USER',
        self::AVERAGE_SESSION_SECONDS => 'AVERAGE_SESSION_SECONDS',
        self::BIDS => 'BIDS',
        self::BID_AVERAGE_CPM => 'BID_AVERAGE_CPM',
        self::BOUNCE_RATE => 'BOUNCE_RATE',
        self::CLICKS => 'CLICKS',
        self::CODE_SERVED_COUNT => 'CODE_SERVED_COUNT',
        self::CPC_REVENUE => 'CPC_REVENUE',
        self::CPM_REVENUE => 'CPM_REVENUE',
        self::CREATIVE_LOAD_TIME_0_500_PERCENT => 'CREATIVE_LOAD_TIME_0_500_PERCENT',
        self::CREATIVE_LOAD_TIME_1000_2000_PERCENT => 'CREATIVE_LOAD_TIME_1000_2000_PERCENT',
        self::CREATIVE_LOAD_TIME_2000_4000_PERCENT => 'CREATIVE_LOAD_TIME_2000_4000_PERCENT',
        self::CREATIVE_LOAD_TIME_4000_8000_PERCENT => 'CREATIVE_LOAD_TIME_4000_8000_PERCENT',
        self::CREATIVE_LOAD_TIME_500_1000_PERCENT => 'CREATIVE_LOAD_TIME_500_1000_PERCENT',
        self::CREATIVE_LOAD_TIME_GT_8000_PERCENT => 'CREATIVE_LOAD_TIME_GT_8000_PERCENT',
        self::CTR => 'CTR',
        self::DEALS_BIDS => 'DEALS_BIDS',
        self::DEALS_BID_RATE => 'DEALS_BID_RATE',
        self::DEALS_BID_REQUESTS => 'DEALS_BID_REQUESTS',
        self::DEALS_WINNING_BIDS => 'DEALS_WINNING_BIDS',
        self::DEALS_WIN_RATE => 'DEALS_WIN_RATE',
        self::DOM_LOAD_TO_FIRST_AD_REQUEST_0_500_PERCENT => 'DOM_LOAD_TO_FIRST_AD_REQUEST_0_500_PERCENT',
        self::DOM_LOAD_TO_FIRST_AD_REQUEST_1000_2000_PERCENT => 'DOM_LOAD_TO_FIRST_AD_REQUEST_1000_2000_PERCENT',
        self::DOM_LOAD_TO_FIRST_AD_REQUEST_2000_4000_PERCENT => 'DOM_LOAD_TO_FIRST_AD_REQUEST_2000_4000_PERCENT',
        self::DOM_LOAD_TO_FIRST_AD_REQUEST_4000_8000_PERCENT => 'DOM_LOAD_TO_FIRST_AD_REQUEST_4000_8000_PERCENT',
        self::DOM_LOAD_TO_FIRST_AD_REQUEST_500_1000_PERCENT => 'DOM_LOAD_TO_FIRST_AD_REQUEST_500_1000_PERCENT',
        self::DOM_LOAD_TO_FIRST_AD_REQUEST_GT_8000_PERCENT => 'DOM_LOAD_TO_FIRST_AD_REQUEST_GT_8000_PERCENT',
        self::DOM_LOAD_TO_TAG_LOAD_TIME_0_500_PERCENT => 'DOM_LOAD_TO_TAG_LOAD_TIME_0_500_PERCENT',
        self::DOM_LOAD_TO_TAG_LOAD_TIME_1000_2000_PERCENT => 'DOM_LOAD_TO_TAG_LOAD_TIME_1000_2000_PERCENT',
        self::DOM_LOAD_TO_TAG_LOAD_TIME_2000_4000_PERCENT => 'DOM_LOAD_TO_TAG_LOAD_TIME_2000_4000_PERCENT',
        self::DOM_LOAD_TO_TAG_LOAD_TIME_4000_8000_PERCENT => 'DOM_LOAD_TO_TAG_LOAD_TIME_4000_8000_PERCENT',
        self::DOM_LOAD_TO_TAG_LOAD_TIME_500_1000_PERCENT => 'DOM_LOAD_TO_TAG_LOAD_TIME_500_1000_PERCENT',
        self::DOM_LOAD_TO_TAG_LOAD_TIME_GT_8000_PERCENT => 'DOM_LOAD_TO_TAG_LOAD_TIME_GT_8000_PERCENT',
        self::DROPOFF_RATE => 'DROPOFF_RATE',
        self::ENGAGED_SESSIONS => 'ENGAGED_SESSIONS',
        self::ENGAGED_SESSIONS_PER_USER => 'ENGAGED_SESSIONS_PER_USER',
        self::ENGAGEMENT_RATE => 'ENGAGEMENT_RATE',
        self::EUROPEAN_REGULATIONS_CONSENT_RATE => 'EUROPEAN_REGULATIONS_CONSENT_RATE',
        self::EUROPEAN_REGULATIONS_CUSTOM_CONSENT_RATE => 'EUROPEAN_REGULATIONS_CUSTOM_CONSENT_RATE',
        self::EUROPEAN_REGULATIONS_MESSAGES_SHOWN => 'EUROPEAN_REGULATIONS_MESSAGES_SHOWN',
        self::EUROPEAN_REGULATIONS_NO_CONSENT_RATE => 'EUROPEAN_REGULATIONS_NO_CONSENT_RATE',
        self::FILL_RATE => 'FILL_RATE',
        self::GOOGLE_ANALYTICS_CLICKS => 'GOOGLE_ANALYTICS_CLICKS',
        self::GOOGLE_ANALYTICS_CTR => 'GOOGLE_ANALYTICS_CTR',
        self::GOOGLE_ANALYTICS_ECPM => 'GOOGLE_ANALYTICS_ECPM',
        self::GOOGLE_ANALYTICS_IMPRESSIONS => 'GOOGLE_ANALYTICS_IMPRESSIONS',
        self::GOOGLE_ANALYTICS_REVENUE => 'GOOGLE_ANALYTICS_REVENUE',
        self::GOOGLE_ANALYTICS_VIEWS => 'GOOGLE_ANALYTICS_VIEWS',
        self::GOOGLE_ANALYTICS_VIEWS_PER_USER => 'GOOGLE_ANALYTICS_VIEWS_PER_USER',
        self::GOOGLE_SOLD_AUCTION_COVIEWED_IMPRESSIONS => 'GOOGLE_SOLD_AUCTION_COVIEWED_IMPRESSIONS',
        self::GOOGLE_SOLD_AUCTION_IMPRESSIONS => 'GOOGLE_SOLD_AUCTION_IMPRESSIONS',
        self::GOOGLE_SOLD_COVIEWED_IMPRESSIONS => 'GOOGLE_SOLD_COVIEWED_IMPRESSIONS',
        self::GOOGLE_SOLD_IMPRESSIONS => 'GOOGLE_SOLD_IMPRESSIONS',
        self::GOOGLE_SOLD_RESERVATION_COVIEWED_IMPRESSIONS => 'GOOGLE_SOLD_RESERVATION_COVIEWED_IMPRESSIONS',
        self::GOOGLE_SOLD_RESERVATION_IMPRESSIONS => 'GOOGLE_SOLD_RESERVATION_IMPRESSIONS',
        self::IMPRESSIONS => 'IMPRESSIONS',
        self::INACTIVE_BEGIN_TO_RENDER_IMPRESSIONS => 'INACTIVE_BEGIN_TO_RENDER_IMPRESSIONS',
        self::INVENTORY_SHARES => 'INVENTORY_SHARES',
        self::INVENTORY_SHARE_PARTNER_UNFILLED_OPPORTUNITIES => 'INVENTORY_SHARE_PARTNER_UNFILLED_OPPORTUNITIES',
        self::INVOICED_IMPRESSIONS => 'INVOICED_IMPRESSIONS',
        self::INVOICED_UNFILLED_IMPRESSIONS => 'INVOICED_UNFILLED_IMPRESSIONS',
        self::MEDIATION_CHAINS_FILLED => 'MEDIATION_CHAINS_FILLED',
        self::MUTED_IMPRESSIONS => 'MUTED_IMPRESSIONS',
        self::MUTE_ELIGIBLE_IMPRESSIONS => 'MUTE_ELIGIBLE_IMPRESSIONS',
        self::OPPORTUNITIES => 'OPPORTUNITIES',
        self::OVERDELIVERED_IMPRESSIONS => 'OVERDELIVERED_IMPRESSIONS',
        self::PARTNER_SALES_FILLED_POD_REQUESTS => 'PARTNER_SALES_FILLED_POD_REQUESTS',
        self::PARTNER_SALES_FILL_RATE => 'PARTNER_SALES_FILL_RATE',
        self::PARTNER_SALES_PARTNER_MATCH_RATE => 'PARTNER_SALES_PARTNER_MATCH_RATE',
        self::PARTNER_SALES_QUERIES => 'PARTNER_SALES_QUERIES',
        self::PARTNER_SALES_UNFILLED_IMPRESSIONS => 'PARTNER_SALES_UNFILLED_IMPRESSIONS',
        self::PARTNER_SALES_UNMATCHED_QUERIES => 'PARTNER_SALES_UNMATCHED_QUERIES',
        self::PARTNER_SOLD_CODE_SERVED => 'PARTNER_SOLD_CODE_SERVED',
        self::PARTNER_SOLD_COVIEWED_IMPRESSIONS => 'PARTNER_SOLD_COVIEWED_IMPRESSIONS',
        self::PARTNER_SOLD_IMPRESSIONS => 'PARTNER_SOLD_IMPRESSIONS',
        self::PROGRAMMATIC_ELIGIBLE_AD_REQUESTS => 'PROGRAMMATIC_ELIGIBLE_AD_REQUESTS',
        self::PROGRAMMATIC_MATCH_RATE => 'PROGRAMMATIC_MATCH_RATE',
        self::PROGRAMMATIC_RESPONSES_SERVED => 'PROGRAMMATIC_RESPONSES_SERVED',
        self::REACH_IMPRESSIONS => 'REACH_IMPRESSIONS',
        self::RESPONSES_SERVED => 'RESPONSES_SERVED',
        self::RETENTION => 'RETENTION',
        self::REVENUE => 'REVENUE',
        self::REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT => 'REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT',
        self::REVENUE_WITHOUT_CPD => 'REVENUE_WITHOUT_CPD',
        self::REWARDS_GRANTED => 'REWARDS_GRANTED',
        self::RICH_MEDIA_AVERAGE_DISPLAY_TIME => 'RICH_MEDIA_AVERAGE_DISPLAY_TIME',
        self::RICH_MEDIA_AVERAGE_INTERACTION_TIME => 'RICH_MEDIA_AVERAGE_INTERACTION_TIME',
        self::RICH_MEDIA_BACKUP_IMAGES => 'RICH_MEDIA_BACKUP_IMAGES',
        self::RICH_MEDIA_CUSTOM_EVENT_COUNT => 'RICH_MEDIA_CUSTOM_EVENT_COUNT',
        self::RICH_MEDIA_CUSTOM_EVENT_TIME => 'RICH_MEDIA_CUSTOM_EVENT_TIME',
        self::RICH_MEDIA_DISPLAY_TIME => 'RICH_MEDIA_DISPLAY_TIME',
        self::RICH_MEDIA_EXPANDING_TIME => 'RICH_MEDIA_EXPANDING_TIME',
        self::RICH_MEDIA_EXPANSIONS => 'RICH_MEDIA_EXPANSIONS',
        self::RICH_MEDIA_FULL_SCREEN_IMPRESSIONS => 'RICH_MEDIA_FULL_SCREEN_IMPRESSIONS',
        self::RICH_MEDIA_INTERACTION_COUNT => 'RICH_MEDIA_INTERACTION_COUNT',
        self::RICH_MEDIA_INTERACTION_RATE => 'RICH_MEDIA_INTERACTION_RATE',
        self::RICH_MEDIA_INTERACTION_TIME => 'RICH_MEDIA_INTERACTION_TIME',
        self::RICH_MEDIA_INTERACTIVE_IMPRESSIONS => 'RICH_MEDIA_INTERACTIVE_IMPRESSIONS',
        self::RICH_MEDIA_MANUAL_CLOSES => 'RICH_MEDIA_MANUAL_CLOSES',
        self::RICH_MEDIA_VIDEO_COMPLETES => 'RICH_MEDIA_VIDEO_COMPLETES',
        self::RICH_MEDIA_VIDEO_INTERACTIONS => 'RICH_MEDIA_VIDEO_INTERACTIONS',
        self::RICH_MEDIA_VIDEO_INTERACTION_RATE => 'RICH_MEDIA_VIDEO_INTERACTION_RATE',
        self::RICH_MEDIA_VIDEO_MIDPOINTS => 'RICH_MEDIA_VIDEO_MIDPOINTS',
        self::RICH_MEDIA_VIDEO_MUTES => 'RICH_MEDIA_VIDEO_MUTES',
        self::RICH_MEDIA_VIDEO_PAUSES => 'RICH_MEDIA_VIDEO_PAUSES',
        self::RICH_MEDIA_VIDEO_PLAYS => 'RICH_MEDIA_VIDEO_PLAYS',
        self::RICH_MEDIA_VIDEO_REPLAYS => 'RICH_MEDIA_VIDEO_REPLAYS',
        self::RICH_MEDIA_VIDEO_STOPS => 'RICH_MEDIA_VIDEO_STOPS',
        self::RICH_MEDIA_VIDEO_UNMUTES => 'RICH_MEDIA_VIDEO_UNMUTES',
        self::RICH_MEDIA_VIDEO_VIEW_RATE => 'RICH_MEDIA_VIDEO_VIEW_RATE',
        self::RICH_MEDIA_VIDEO_VIEW_TIME => 'RICH_MEDIA_VIDEO_VIEW_TIME',
        self::SELL_THROUGH_AVAILABLE_IMPRESSIONS => 'SELL_THROUGH_AVAILABLE_IMPRESSIONS',
        self::SELL_THROUGH_FORECASTED_IMPRESSIONS => 'SELL_THROUGH_FORECASTED_IMPRESSIONS',
        self::SELL_THROUGH_RESERVED_IMPRESSIONS => 'SELL_THROUGH_RESERVED_IMPRESSIONS',
        self::SELL_THROUGH_SELL_THROUGH_RATE => 'SELL_THROUGH_SELL_THROUGH_RATE',
        self::SERVER_SIDE_UNWRAPPING_AVERAGE_LATENCY_MS => 'SERVER_SIDE_UNWRAPPING_AVERAGE_LATENCY_MS',
        self::SERVER_SIDE_UNWRAPPING_CALLOUTS => 'SERVER_SIDE_UNWRAPPING_CALLOUTS',
        self::SERVER_SIDE_UNWRAPPING_EMPTY_RESPONSES => 'SERVER_SIDE_UNWRAPPING_EMPTY_RESPONSES',
        self::SERVER_SIDE_UNWRAPPING_ERROR_RESPONSES => 'SERVER_SIDE_UNWRAPPING_ERROR_RESPONSES',
        self::SERVER_SIDE_UNWRAPPING_SUCCESSFUL_RESPONSES => 'SERVER_SIDE_UNWRAPPING_SUCCESSFUL_RESPONSES',
        self::SERVER_SIDE_UNWRAPPING_TIMEOUTS => 'SERVER_SIDE_UNWRAPPING_TIMEOUTS',
        self::SESSIONS => 'SESSIONS',
        self::TAG_LOAD_TO_FIRST_AD_REQUEST_0_500_PERCENT => 'TAG_LOAD_TO_FIRST_AD_REQUEST_0_500_PERCENT',
        self::TAG_LOAD_TO_FIRST_AD_REQUEST_1000_2000_PERCENT => 'TAG_LOAD_TO_FIRST_AD_REQUEST_1000_2000_PERCENT',
        self::TAG_LOAD_TO_FIRST_AD_REQUEST_2000_4000_PERCENT => 'TAG_LOAD_TO_FIRST_AD_REQUEST_2000_4000_PERCENT',
        self::TAG_LOAD_TO_FIRST_AD_REQUEST_4000_8000_PERCENT => 'TAG_LOAD_TO_FIRST_AD_REQUEST_4000_8000_PERCENT',
        self::TAG_LOAD_TO_FIRST_AD_REQUEST_500_1000_PERCENT => 'TAG_LOAD_TO_FIRST_AD_REQUEST_500_1000_PERCENT',
        self::TAG_LOAD_TO_FIRST_AD_REQUEST_GT_8000_PERCENT => 'TAG_LOAD_TO_FIRST_AD_REQUEST_GT_8000_PERCENT',
        self::TARGETED_CLICKS => 'TARGETED_CLICKS',
        self::TARGETED_IMPRESSIONS => 'TARGETED_IMPRESSIONS',
        self::UNFILLED_IMPRESSIONS => 'UNFILLED_IMPRESSIONS',
        self::UNIQUE_VISITORS => 'UNIQUE_VISITORS',
        self::UNLOADED_IMPRESSIONS_DUE_TO_CPU => 'UNLOADED_IMPRESSIONS_DUE_TO_CPU',
        self::UNLOADED_IMPRESSIONS_DUE_TO_NETWORK => 'UNLOADED_IMPRESSIONS_DUE_TO_NETWORK',
        self::UNMATCHED_AD_REQUESTS => 'UNMATCHED_AD_REQUESTS',
        self::UNVIEWED_REASON_OTHER_PERCENT => 'UNVIEWED_REASON_OTHER_PERCENT',
        self::UNVIEWED_REASON_SLOT_NEVER_ENTERED_VIEWPORT_PERCENT => 'UNVIEWED_REASON_SLOT_NEVER_ENTERED_VIEWPORT_PERCENT',
        self::UNVIEWED_REASON_USER_SCROLLED_BEFORE_AD_FILLED_PERCENT => 'UNVIEWED_REASON_USER_SCROLLED_BEFORE_AD_FILLED_PERCENT',
        self::UNVIEWED_REASON_USER_SCROLLED_BEFORE_AD_LOADED_PERCENT => 'UNVIEWED_REASON_USER_SCROLLED_BEFORE_AD_LOADED_PERCENT',
        self::UNVIEWED_REASON_USER_SCROLLED_BEFORE_ONE_SECOND_PERCENT => 'UNVIEWED_REASON_USER_SCROLLED_BEFORE_ONE_SECOND_PERCENT',
        self::USER_ENGAGEMENT_DURATION_IN_SECONDS => 'USER_ENGAGEMENT_DURATION_IN_SECONDS',
        self::USER_MESSAGES_AD_BLOCKING_EXTENSION_RATE => 'USER_MESSAGES_AD_BLOCKING_EXTENSION_RATE',
        self::USER_MESSAGES_AD_BLOCKING_RECOVERY_ALLOWLISTED_COUNT => 'USER_MESSAGES_AD_BLOCKING_RECOVERY_ALLOWLISTED_COUNT',
        self::USER_MESSAGES_AD_BLOCKING_RECOVERY_MESSAGES_SHOWN => 'USER_MESSAGES_AD_BLOCKING_RECOVERY_MESSAGES_SHOWN',
        self::USER_MESSAGES_ALLOW_ADS_PAGEVIEWS => 'USER_MESSAGES_ALLOW_ADS_PAGEVIEWS',
        self::USER_MESSAGES_CCPA_MESSAGES_SHOWN => 'USER_MESSAGES_CCPA_MESSAGES_SHOWN',
        self::USER_MESSAGES_IDFA_ATT_ALERTS_SHOWN => 'USER_MESSAGES_IDFA_ATT_ALERTS_SHOWN',
        self::USER_MESSAGES_IDFA_ATT_CONSENT => 'USER_MESSAGES_IDFA_ATT_CONSENT',
        self::USER_MESSAGES_IDFA_ATT_CONSENT_RATE => 'USER_MESSAGES_IDFA_ATT_CONSENT_RATE',
        self::USER_MESSAGES_IDFA_ATT_DECLINE_CONSENT => 'USER_MESSAGES_IDFA_ATT_DECLINE_CONSENT',
        self::USER_MESSAGES_IDFA_ATT_DECLINE_RATE => 'USER_MESSAGES_IDFA_ATT_DECLINE_RATE',
        self::USER_MESSAGES_IDFA_EXPLAINERS_SHOWN => 'USER_MESSAGES_IDFA_EXPLAINERS_SHOWN',
        self::USER_MESSAGES_IDFA_IAB_MESSAGES_SHOWN => 'USER_MESSAGES_IDFA_IAB_MESSAGES_SHOWN',
        self::USER_MESSAGES_IDFA_NO_DECISION => 'USER_MESSAGES_IDFA_NO_DECISION',
        self::USER_MESSAGES_OFFERWALL_MESSAGES_SHOWN => 'USER_MESSAGES_OFFERWALL_MESSAGES_SHOWN',
        self::USER_MESSAGES_OFFERWALL_SUCCESSFUL_ENGAGEMENTS => 'USER_MESSAGES_OFFERWALL_SUCCESSFUL_ENGAGEMENTS',
        self::USER_MESSAGES_POST_OFFERWALL_PAGEVIEWS => 'USER_MESSAGES_POST_OFFERWALL_PAGEVIEWS',
        self::USER_MESSAGES_TOTAL_ESTIMATED_REVENUE => 'USER_MESSAGES_TOTAL_ESTIMATED_REVENUE',
        self::USER_MESSAGES_UPTC_MESSAGES_SHOWN => 'USER_MESSAGES_UPTC_MESSAGES_SHOWN',
        self::USER_MESSAGES_UPTC_PERSONALIZATION_OPT_OUT_RATIO => 'USER_MESSAGES_UPTC_PERSONALIZATION_OPT_OUT_RATIO',
        self::VIDEO_ERROR_100_COUNT => 'VIDEO_ERROR_100_COUNT',
        self::VIDEO_ERROR_101_COUNT => 'VIDEO_ERROR_101_COUNT',
        self::VIDEO_ERROR_102_COUNT => 'VIDEO_ERROR_102_COUNT',
        self::VIDEO_ERROR_200_COUNT => 'VIDEO_ERROR_200_COUNT',
        self::VIDEO_ERROR_201_COUNT => 'VIDEO_ERROR_201_COUNT',
        self::VIDEO_ERROR_202_COUNT => 'VIDEO_ERROR_202_COUNT',
        self::VIDEO_ERROR_203_COUNT => 'VIDEO_ERROR_203_COUNT',
        self::VIDEO_ERROR_300_COUNT => 'VIDEO_ERROR_300_COUNT',
        self::VIDEO_ERROR_301_COUNT => 'VIDEO_ERROR_301_COUNT',
        self::VIDEO_ERROR_302_COUNT => 'VIDEO_ERROR_302_COUNT',
        self::VIDEO_ERROR_303_COUNT => 'VIDEO_ERROR_303_COUNT',
        self::VIDEO_ERROR_400_COUNT => 'VIDEO_ERROR_400_COUNT',
        self::VIDEO_ERROR_401_COUNT => 'VIDEO_ERROR_401_COUNT',
        self::VIDEO_ERROR_402_COUNT => 'VIDEO_ERROR_402_COUNT',
        self::VIDEO_ERROR_403_COUNT => 'VIDEO_ERROR_403_COUNT',
        self::VIDEO_ERROR_405_COUNT => 'VIDEO_ERROR_405_COUNT',
        self::VIDEO_ERROR_406_COUNT => 'VIDEO_ERROR_406_COUNT',
        self::VIDEO_ERROR_407_COUNT => 'VIDEO_ERROR_407_COUNT',
        self::VIDEO_ERROR_408_COUNT => 'VIDEO_ERROR_408_COUNT',
        self::VIDEO_ERROR_409_COUNT => 'VIDEO_ERROR_409_COUNT',
        self::VIDEO_ERROR_410_COUNT => 'VIDEO_ERROR_410_COUNT',
        self::VIDEO_ERROR_500_COUNT => 'VIDEO_ERROR_500_COUNT',
        self::VIDEO_ERROR_501_COUNT => 'VIDEO_ERROR_501_COUNT',
        self::VIDEO_ERROR_502_COUNT => 'VIDEO_ERROR_502_COUNT',
        self::VIDEO_ERROR_503_COUNT => 'VIDEO_ERROR_503_COUNT',
        self::VIDEO_ERROR_600_COUNT => 'VIDEO_ERROR_600_COUNT',
        self::VIDEO_ERROR_601_COUNT => 'VIDEO_ERROR_601_COUNT',
        self::VIDEO_ERROR_602_COUNT => 'VIDEO_ERROR_602_COUNT',
        self::VIDEO_ERROR_603_COUNT => 'VIDEO_ERROR_603_COUNT',
        self::VIDEO_ERROR_604_COUNT => 'VIDEO_ERROR_604_COUNT',
        self::VIDEO_ERROR_900_COUNT => 'VIDEO_ERROR_900_COUNT',
        self::VIDEO_ERROR_901_COUNT => 'VIDEO_ERROR_901_COUNT',
        self::VIDEO_INTERACTION_AVERAGE_INTERACTION_RATE => 'VIDEO_INTERACTION_AVERAGE_INTERACTION_RATE',
        self::VIDEO_INTERACTION_COLLAPSES => 'VIDEO_INTERACTION_COLLAPSES',
        self::VIDEO_INTERACTION_EXPANDS => 'VIDEO_INTERACTION_EXPANDS',
        self::VIDEO_INTERACTION_FULL_SCREENS => 'VIDEO_INTERACTION_FULL_SCREENS',
        self::VIDEO_INTERACTION_MUTES => 'VIDEO_INTERACTION_MUTES',
        self::VIDEO_INTERACTION_PAUSES => 'VIDEO_INTERACTION_PAUSES',
        self::VIDEO_INTERACTION_RESUMES => 'VIDEO_INTERACTION_RESUMES',
        self::VIDEO_INTERACTION_REWINDS => 'VIDEO_INTERACTION_REWINDS',
        self::VIDEO_INTERACTION_UNMUTES => 'VIDEO_INTERACTION_UNMUTES',
        self::VIDEO_INTERACTION_VIDEO_SKIPS => 'VIDEO_INTERACTION_VIDEO_SKIPS',
        self::VIDEO_MONETIZABLE_CONTENT_VIEWS => 'VIDEO_MONETIZABLE_CONTENT_VIEWS',
        self::VIDEO_REAL_TIME_CREATIVE_SERVES => 'VIDEO_REAL_TIME_CREATIVE_SERVES',
        self::VIDEO_REAL_TIME_ERROR_100_COUNT => 'VIDEO_REAL_TIME_ERROR_100_COUNT',
        self::VIDEO_REAL_TIME_ERROR_101_COUNT => 'VIDEO_REAL_TIME_ERROR_101_COUNT',
        self::VIDEO_REAL_TIME_ERROR_102_COUNT => 'VIDEO_REAL_TIME_ERROR_102_COUNT',
        self::VIDEO_REAL_TIME_ERROR_200_COUNT => 'VIDEO_REAL_TIME_ERROR_200_COUNT',
        self::VIDEO_REAL_TIME_ERROR_201_COUNT => 'VIDEO_REAL_TIME_ERROR_201_COUNT',
        self::VIDEO_REAL_TIME_ERROR_202_COUNT => 'VIDEO_REAL_TIME_ERROR_202_COUNT',
        self::VIDEO_REAL_TIME_ERROR_203_COUNT => 'VIDEO_REAL_TIME_ERROR_203_COUNT',
        self::VIDEO_REAL_TIME_ERROR_300_COUNT => 'VIDEO_REAL_TIME_ERROR_300_COUNT',
        self::VIDEO_REAL_TIME_ERROR_301_COUNT => 'VIDEO_REAL_TIME_ERROR_301_COUNT',
        self::VIDEO_REAL_TIME_ERROR_302_COUNT => 'VIDEO_REAL_TIME_ERROR_302_COUNT',
        self::VIDEO_REAL_TIME_ERROR_303_COUNT => 'VIDEO_REAL_TIME_ERROR_303_COUNT',
        self::VIDEO_REAL_TIME_ERROR_400_COUNT => 'VIDEO_REAL_TIME_ERROR_400_COUNT',
        self::VIDEO_REAL_TIME_ERROR_401_COUNT => 'VIDEO_REAL_TIME_ERROR_401_COUNT',
        self::VIDEO_REAL_TIME_ERROR_402_COUNT => 'VIDEO_REAL_TIME_ERROR_402_COUNT',
        self::VIDEO_REAL_TIME_ERROR_403_COUNT => 'VIDEO_REAL_TIME_ERROR_403_COUNT',
        self::VIDEO_REAL_TIME_ERROR_405_COUNT => 'VIDEO_REAL_TIME_ERROR_405_COUNT',
        self::VIDEO_REAL_TIME_ERROR_406_COUNT => 'VIDEO_REAL_TIME_ERROR_406_COUNT',
        self::VIDEO_REAL_TIME_ERROR_407_COUNT => 'VIDEO_REAL_TIME_ERROR_407_COUNT',
        self::VIDEO_REAL_TIME_ERROR_408_COUNT => 'VIDEO_REAL_TIME_ERROR_408_COUNT',
        self::VIDEO_REAL_TIME_ERROR_409_COUNT => 'VIDEO_REAL_TIME_ERROR_409_COUNT',
        self::VIDEO_REAL_TIME_ERROR_410_COUNT => 'VIDEO_REAL_TIME_ERROR_410_COUNT',
        self::VIDEO_REAL_TIME_ERROR_500_COUNT => 'VIDEO_REAL_TIME_ERROR_500_COUNT',
        self::VIDEO_REAL_TIME_ERROR_501_COUNT => 'VIDEO_REAL_TIME_ERROR_501_COUNT',
        self::VIDEO_REAL_TIME_ERROR_502_COUNT => 'VIDEO_REAL_TIME_ERROR_502_COUNT',
        self::VIDEO_REAL_TIME_ERROR_503_COUNT => 'VIDEO_REAL_TIME_ERROR_503_COUNT',
        self::VIDEO_REAL_TIME_ERROR_600_COUNT => 'VIDEO_REAL_TIME_ERROR_600_COUNT',
        self::VIDEO_REAL_TIME_ERROR_601_COUNT => 'VIDEO_REAL_TIME_ERROR_601_COUNT',
        self::VIDEO_REAL_TIME_ERROR_602_COUNT => 'VIDEO_REAL_TIME_ERROR_602_COUNT',
        self::VIDEO_REAL_TIME_ERROR_603_COUNT => 'VIDEO_REAL_TIME_ERROR_603_COUNT',
        self::VIDEO_REAL_TIME_ERROR_604_COUNT => 'VIDEO_REAL_TIME_ERROR_604_COUNT',
        self::VIDEO_REAL_TIME_ERROR_900_COUNT => 'VIDEO_REAL_TIME_ERROR_900_COUNT',
        self::VIDEO_REAL_TIME_ERROR_901_COUNT => 'VIDEO_REAL_TIME_ERROR_901_COUNT',
        self::VIDEO_REAL_TIME_IMPRESSIONS => 'VIDEO_REAL_TIME_IMPRESSIONS',
        self::VIDEO_REAL_TIME_MATCHED_QUERIES => 'VIDEO_REAL_TIME_MATCHED_QUERIES',
        self::VIDEO_REAL_TIME_TOTAL_ERROR_COUNT => 'VIDEO_REAL_TIME_TOTAL_ERROR_COUNT',
        self::VIDEO_REAL_TIME_TOTAL_QUERIES => 'VIDEO_REAL_TIME_TOTAL_QUERIES',
        self::VIDEO_REAL_TIME_UNMATCHED_QUERIES => 'VIDEO_REAL_TIME_UNMATCHED_QUERIES',
        self::VIDEO_VIEWERSHIP_AUTO_PLAYS => 'VIDEO_VIEWERSHIP_AUTO_PLAYS',
        self::VIDEO_VIEWERSHIP_AVERAGE_VIEW_RATE => 'VIDEO_VIEWERSHIP_AVERAGE_VIEW_RATE',
        self::VIDEO_VIEWERSHIP_AVERAGE_VIEW_TIME => 'VIDEO_VIEWERSHIP_AVERAGE_VIEW_TIME',
        self::VIDEO_VIEWERSHIP_CLICK_TO_PLAYS => 'VIDEO_VIEWERSHIP_CLICK_TO_PLAYS',
        self::VIDEO_VIEWERSHIP_COMPLETES => 'VIDEO_VIEWERSHIP_COMPLETES',
        self::VIDEO_VIEWERSHIP_COMPLETION_RATE => 'VIDEO_VIEWERSHIP_COMPLETION_RATE',
        self::VIDEO_VIEWERSHIP_ENGAGED_VIEWS => 'VIDEO_VIEWERSHIP_ENGAGED_VIEWS',
        self::VIDEO_VIEWERSHIP_FIRST_QUARTILES => 'VIDEO_VIEWERSHIP_FIRST_QUARTILES',
        self::VIDEO_VIEWERSHIP_MIDPOINTS => 'VIDEO_VIEWERSHIP_MIDPOINTS',
        self::VIDEO_VIEWERSHIP_SKIP_BUTTONS_SHOWN => 'VIDEO_VIEWERSHIP_SKIP_BUTTONS_SHOWN',
        self::VIDEO_VIEWERSHIP_STARTS => 'VIDEO_VIEWERSHIP_STARTS',
        self::VIDEO_VIEWERSHIP_THIRD_QUARTILES => 'VIDEO_VIEWERSHIP_THIRD_QUARTILES',
        self::VIDEO_VIEWERSHIP_TOTAL_ERROR_COUNT => 'VIDEO_VIEWERSHIP_TOTAL_ERROR_COUNT',
        self::VIDEO_VIEWERSHIP_TOTAL_ERROR_RATE => 'VIDEO_VIEWERSHIP_TOTAL_ERROR_RATE',
        self::VIDEO_VIEWERSHIP_VIDEO_LENGTH => 'VIDEO_VIEWERSHIP_VIDEO_LENGTH',
        self::VIDEO_VIEWERSHIP_VIEW_THROUGH_RATE => 'VIDEO_VIEWERSHIP_VIEW_THROUGH_RATE',
        self::YIELD_GROUP_AUCTIONS_WON => 'YIELD_GROUP_AUCTIONS_WON',
        self::YIELD_GROUP_BIDS => 'YIELD_GROUP_BIDS',
        self::YIELD_GROUP_BIDS_IN_AUCTION => 'YIELD_GROUP_BIDS_IN_AUCTION',
        self::YIELD_GROUP_CALLOUTS => 'YIELD_GROUP_CALLOUTS',
        self::YIELD_GROUP_ESTIMATED_CPM => 'YIELD_GROUP_ESTIMATED_CPM',
        self::YIELD_GROUP_ESTIMATED_REVENUE => 'YIELD_GROUP_ESTIMATED_REVENUE',
        self::YIELD_GROUP_IMPRESSIONS => 'YIELD_GROUP_IMPRESSIONS',
        self::YIELD_GROUP_MEDIATION_FILL_RATE => 'YIELD_GROUP_MEDIATION_FILL_RATE',
        self::YIELD_GROUP_MEDIATION_MATCHED_QUERIES => 'YIELD_GROUP_MEDIATION_MATCHED_QUERIES',
        self::YIELD_GROUP_MEDIATION_PASSBACKS => 'YIELD_GROUP_MEDIATION_PASSBACKS',
        self::YIELD_GROUP_MEDIATION_THIRD_PARTY_ECPM => 'YIELD_GROUP_MEDIATION_THIRD_PARTY_ECPM',
        self::YIELD_GROUP_REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT => 'YIELD_GROUP_REVENUE_PAID_THROUGH_MCM_AUTOPAYMENT',
        self::YIELD_GROUP_SUCCESSFUL_RESPONSES => 'YIELD_GROUP_SUCCESSFUL_RESPONSES',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Metric::class, \Google\Ads\AdManager\V1\ReportDefinition_Metric::class);

