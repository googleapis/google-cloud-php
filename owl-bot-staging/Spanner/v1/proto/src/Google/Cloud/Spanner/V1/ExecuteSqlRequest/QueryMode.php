<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/spanner/v1/spanner.proto

namespace Google\Cloud\Spanner\V1\ExecuteSqlRequest;

use UnexpectedValueException;

/**
 * Mode in which the statement must be processed.
 *
 * Protobuf type <code>google.spanner.v1.ExecuteSqlRequest.QueryMode</code>
 */
class QueryMode
{
    /**
     * The default mode. Only the statement results are returned.
     *
     * Generated from protobuf enum <code>NORMAL = 0;</code>
     */
    const NORMAL = 0;
    /**
     * This mode returns only the query plan, without any results or
     * execution statistics information.
     *
     * Generated from protobuf enum <code>PLAN = 1;</code>
     */
    const PLAN = 1;
    /**
     * This mode returns the query plan, overall execution statistics,
     * operator level execution statistics along with the results. This has a
     * performance overhead compared to the other modes. It is not recommended
     * to use this mode for production traffic.
     *
     * Generated from protobuf enum <code>PROFILE = 2;</code>
     */
    const PROFILE = 2;
    /**
     * This mode returns the overall (but not operator-level) execution
     * statistics along with the results.
     *
     * Generated from protobuf enum <code>WITH_STATS = 3;</code>
     */
    const WITH_STATS = 3;
    /**
     * This mode returns the query plan, overall (but not operator-level)
     * execution statistics along with the results.
     *
     * Generated from protobuf enum <code>WITH_PLAN_AND_STATS = 4;</code>
     */
    const WITH_PLAN_AND_STATS = 4;

    private static $valueToName = [
        self::NORMAL => 'NORMAL',
        self::PLAN => 'PLAN',
        self::PROFILE => 'PROFILE',
        self::WITH_STATS => 'WITH_STATS',
        self::WITH_PLAN_AND_STATS => 'WITH_PLAN_AND_STATS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(QueryMode::class, \Google\Cloud\Spanner\V1\ExecuteSqlRequest_QueryMode::class);

