<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/spanner/v1/change_stream.proto

namespace Google\Cloud\Spanner\V1\ChangeStreamRecord\DataChangeRecord;

use UnexpectedValueException;

/**
 * Mod type describes the type of change Spanner applied to the data. For
 * example, if the client submits an INSERT_OR_UPDATE request, Spanner will
 * perform an insert if there is no existing row and return ModType INSERT.
 * Alternatively, if there is an existing row, Spanner will perform an
 * update and return ModType UPDATE.
 *
 * Protobuf type <code>google.spanner.v1.ChangeStreamRecord.DataChangeRecord.ModType</code>
 */
class ModType
{
    /**
     * Not specified.
     *
     * Generated from protobuf enum <code>MOD_TYPE_UNSPECIFIED = 0;</code>
     */
    const MOD_TYPE_UNSPECIFIED = 0;
    /**
     * Indicates data was inserted.
     *
     * Generated from protobuf enum <code>INSERT = 10;</code>
     */
    const INSERT = 10;
    /**
     * Indicates existing data was updated.
     *
     * Generated from protobuf enum <code>UPDATE = 20;</code>
     */
    const UPDATE = 20;
    /**
     * Indicates existing data was deleted.
     *
     * Generated from protobuf enum <code>DELETE = 30;</code>
     */
    const DELETE = 30;

    private static $valueToName = [
        self::MOD_TYPE_UNSPECIFIED => 'MOD_TYPE_UNSPECIFIED',
        self::INSERT => 'INSERT',
        self::UPDATE => 'UPDATE',
        self::DELETE => 'DELETE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ModType::class, \Google\Cloud\Spanner\V1\ChangeStreamRecord_DataChangeRecord_ModType::class);

