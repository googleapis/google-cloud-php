<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storage/control/v2/storage_control.proto

namespace Google\Cloud\Storage\Control\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An Anywhere Cache Instance.
 *
 * Generated from protobuf message <code>google.storage.control.v2.AnywhereCache</code>
 */
class AnywhereCache extends \Google\Protobuf\Internal\Message
{
    /**
     * Immutable. The resource name of this AnywhereCache.
     * Format:
     * `projects/{project}/buckets/{bucket}/anywhereCaches/{anywhere_cache}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    protected $name = '';
    /**
     * Immutable. The zone in which the cache instance is running. For example,
     * us-central1-a.
     *
     * Generated from protobuf field <code>string zone = 10 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    protected $zone = '';
    /**
     * Cache entry TTL (ranges between 1h to 7d). This is a cache-level config
     * that defines how long a cache entry can live. Default ttl value (24hrs)
     * is applied if not specified in the create request. TTL must be in whole
     * seconds.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration ttl = 3;</code>
     */
    protected $ttl = null;
    /**
     * Cache admission policy. Valid policies includes:
     * `admit-on-first-miss` and `admit-on-second-miss`. Defaults to
     * `admit-on-first-miss`. Default value is applied if not specified in the
     * create request.
     *
     * Generated from protobuf field <code>string admission_policy = 9;</code>
     */
    protected $admission_policy = '';
    /**
     * Output only. Cache state including RUNNING, CREATING, DISABLED and PAUSED.
     *
     * Generated from protobuf field <code>string state = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $state = '';
    /**
     * Output only. Time when Anywhere cache instance is allocated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $create_time = null;
    /**
     * Output only. Time when Anywhere cache instance is last updated, including
     * creation.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $update_time = null;
    /**
     * Output only. True if there is an active update operation against this cache
     * instance. Subsequential update requests will be rejected if this field is
     * true. Output only.
     *
     * Generated from protobuf field <code>bool pending_update = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $pending_update = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Immutable. The resource name of this AnywhereCache.
     *           Format:
     *           `projects/{project}/buckets/{bucket}/anywhereCaches/{anywhere_cache}`
     *     @type string $zone
     *           Immutable. The zone in which the cache instance is running. For example,
     *           us-central1-a.
     *     @type \Google\Protobuf\Duration $ttl
     *           Cache entry TTL (ranges between 1h to 7d). This is a cache-level config
     *           that defines how long a cache entry can live. Default ttl value (24hrs)
     *           is applied if not specified in the create request. TTL must be in whole
     *           seconds.
     *     @type string $admission_policy
     *           Cache admission policy. Valid policies includes:
     *           `admit-on-first-miss` and `admit-on-second-miss`. Defaults to
     *           `admit-on-first-miss`. Default value is applied if not specified in the
     *           create request.
     *     @type string $state
     *           Output only. Cache state including RUNNING, CREATING, DISABLED and PAUSED.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. Time when Anywhere cache instance is allocated.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. Time when Anywhere cache instance is last updated, including
     *           creation.
     *     @type bool $pending_update
     *           Output only. True if there is an active update operation against this cache
     *           instance. Subsequential update requests will be rejected if this field is
     *           true. Output only.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Storage\Control\V2\StorageControl::initOnce();
        parent::__construct($data);
    }

    /**
     * Immutable. The resource name of this AnywhereCache.
     * Format:
     * `projects/{project}/buckets/{bucket}/anywhereCaches/{anywhere_cache}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Immutable. The resource name of this AnywhereCache.
     * Format:
     * `projects/{project}/buckets/{bucket}/anywhereCaches/{anywhere_cache}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Immutable. The zone in which the cache instance is running. For example,
     * us-central1-a.
     *
     * Generated from protobuf field <code>string zone = 10 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return string
     */
    public function getZone()
    {
        return $this->zone;
    }

    /**
     * Immutable. The zone in which the cache instance is running. For example,
     * us-central1-a.
     *
     * Generated from protobuf field <code>string zone = 10 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param string $var
     * @return $this
     */
    public function setZone($var)
    {
        GPBUtil::checkString($var, True);
        $this->zone = $var;

        return $this;
    }

    /**
     * Cache entry TTL (ranges between 1h to 7d). This is a cache-level config
     * that defines how long a cache entry can live. Default ttl value (24hrs)
     * is applied if not specified in the create request. TTL must be in whole
     * seconds.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration ttl = 3;</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getTtl()
    {
        return $this->ttl;
    }

    public function hasTtl()
    {
        return isset($this->ttl);
    }

    public function clearTtl()
    {
        unset($this->ttl);
    }

    /**
     * Cache entry TTL (ranges between 1h to 7d). This is a cache-level config
     * that defines how long a cache entry can live. Default ttl value (24hrs)
     * is applied if not specified in the create request. TTL must be in whole
     * seconds.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration ttl = 3;</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setTtl($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->ttl = $var;

        return $this;
    }

    /**
     * Cache admission policy. Valid policies includes:
     * `admit-on-first-miss` and `admit-on-second-miss`. Defaults to
     * `admit-on-first-miss`. Default value is applied if not specified in the
     * create request.
     *
     * Generated from protobuf field <code>string admission_policy = 9;</code>
     * @return string
     */
    public function getAdmissionPolicy()
    {
        return $this->admission_policy;
    }

    /**
     * Cache admission policy. Valid policies includes:
     * `admit-on-first-miss` and `admit-on-second-miss`. Defaults to
     * `admit-on-first-miss`. Default value is applied if not specified in the
     * create request.
     *
     * Generated from protobuf field <code>string admission_policy = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setAdmissionPolicy($var)
    {
        GPBUtil::checkString($var, True);
        $this->admission_policy = $var;

        return $this;
    }

    /**
     * Output only. Cache state including RUNNING, CREATING, DISABLED and PAUSED.
     *
     * Generated from protobuf field <code>string state = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * Output only. Cache state including RUNNING, CREATING, DISABLED and PAUSED.
     *
     * Generated from protobuf field <code>string state = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkString($var, True);
        $this->state = $var;

        return $this;
    }

    /**
     * Output only. Time when Anywhere cache instance is allocated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. Time when Anywhere cache instance is allocated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * Output only. Time when Anywhere cache instance is last updated, including
     * creation.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. Time when Anywhere cache instance is last updated, including
     * creation.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Output only. True if there is an active update operation against this cache
     * instance. Subsequential update requests will be rejected if this field is
     * true. Output only.
     *
     * Generated from protobuf field <code>bool pending_update = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return bool
     */
    public function getPendingUpdate()
    {
        return $this->pending_update;
    }

    /**
     * Output only. True if there is an active update operation against this cache
     * instance. Subsequential update requests will be rejected if this field is
     * true. Output only.
     *
     * Generated from protobuf field <code>bool pending_update = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param bool $var
     * @return $this
     */
    public function setPendingUpdate($var)
    {
        GPBUtil::checkBool($var);
        $this->pending_update = $var;

        return $this;
    }

}

