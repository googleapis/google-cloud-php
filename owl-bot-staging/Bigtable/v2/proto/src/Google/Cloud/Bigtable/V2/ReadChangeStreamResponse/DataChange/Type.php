<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/bigtable/v2/bigtable.proto

namespace Google\Cloud\Bigtable\V2\ReadChangeStreamResponse\DataChange;

use UnexpectedValueException;

/**
 * The type of mutation.
 *
 * Protobuf type <code>google.bigtable.v2.ReadChangeStreamResponse.DataChange.Type</code>
 */
class Type
{
    /**
     * The type is unspecified.
     *
     * Generated from protobuf enum <code>TYPE_UNSPECIFIED = 0;</code>
     */
    const TYPE_UNSPECIFIED = 0;
    /**
     * A user-initiated mutation.
     *
     * Generated from protobuf enum <code>USER = 1;</code>
     */
    const USER = 1;
    /**
     * A system-initiated mutation as part of garbage collection.
     * https://cloud.google.com/bigtable/docs/garbage-collection
     *
     * Generated from protobuf enum <code>GARBAGE_COLLECTION = 2;</code>
     */
    const GARBAGE_COLLECTION = 2;
    /**
     * This is a continuation of a multi-message change.
     *
     * Generated from protobuf enum <code>CONTINUATION = 3;</code>
     */
    const CONTINUATION = 3;

    private static $valueToName = [
        self::TYPE_UNSPECIFIED => 'TYPE_UNSPECIFIED',
        self::USER => 'USER',
        self::GARBAGE_COLLECTION => 'GARBAGE_COLLECTION',
        self::CONTINUATION => 'CONTINUATION',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Google\Cloud\Bigtable\V2\ReadChangeStreamResponse_DataChange_Type::class);

