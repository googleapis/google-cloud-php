<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/confidentialcomputing/v1/service.proto

namespace Google\Cloud\ConfidentialComputing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * ContainerImageSignature holds necessary metadata to verify a container image
 * signature.
 *
 * Generated from protobuf message <code>google.cloud.confidentialcomputing.v1.ContainerImageSignature</code>
 */
class ContainerImageSignature extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The binary signature payload following the SimpleSigning format
     * https://github.com/sigstore/cosign/blob/main/specs/SIGNATURE_SPEC.md#simple-signing.
     * This payload includes the container image digest.
     *
     * Generated from protobuf field <code>bytes payload = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $payload = '';
    /**
     * Optional. A signature over the payload.
     * The container image digest is incorporated into the signature as follows:
     * 1. Generate a SimpleSigning format payload that includes the container
     * image digest.
     * 2. Generate a signature over SHA256 digest of the payload.
     * The signature generation process can be represented as follows:
     * `Sign(sha256(SimpleSigningPayload(sha256(Image Manifest))))`
     *
     * Generated from protobuf field <code>bytes signature = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $signature = '';
    /**
     * Optional. Reserved for future use.
     *
     * Generated from protobuf field <code>bytes public_key = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $public_key = '';
    /**
     * Optional. Reserved for future use.
     *
     * Generated from protobuf field <code>.google.cloud.confidentialcomputing.v1.SigningAlgorithm sig_alg = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $sig_alg = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $payload
     *           Optional. The binary signature payload following the SimpleSigning format
     *           https://github.com/sigstore/cosign/blob/main/specs/SIGNATURE_SPEC.md#simple-signing.
     *           This payload includes the container image digest.
     *     @type string $signature
     *           Optional. A signature over the payload.
     *           The container image digest is incorporated into the signature as follows:
     *           1. Generate a SimpleSigning format payload that includes the container
     *           image digest.
     *           2. Generate a signature over SHA256 digest of the payload.
     *           The signature generation process can be represented as follows:
     *           `Sign(sha256(SimpleSigningPayload(sha256(Image Manifest))))`
     *     @type string $public_key
     *           Optional. Reserved for future use.
     *     @type int $sig_alg
     *           Optional. Reserved for future use.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Confidentialcomputing\V1\Service::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The binary signature payload following the SimpleSigning format
     * https://github.com/sigstore/cosign/blob/main/specs/SIGNATURE_SPEC.md#simple-signing.
     * This payload includes the container image digest.
     *
     * Generated from protobuf field <code>bytes payload = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getPayload()
    {
        return $this->payload;
    }

    /**
     * Optional. The binary signature payload following the SimpleSigning format
     * https://github.com/sigstore/cosign/blob/main/specs/SIGNATURE_SPEC.md#simple-signing.
     * This payload includes the container image digest.
     *
     * Generated from protobuf field <code>bytes payload = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setPayload($var)
    {
        GPBUtil::checkString($var, False);
        $this->payload = $var;

        return $this;
    }

    /**
     * Optional. A signature over the payload.
     * The container image digest is incorporated into the signature as follows:
     * 1. Generate a SimpleSigning format payload that includes the container
     * image digest.
     * 2. Generate a signature over SHA256 digest of the payload.
     * The signature generation process can be represented as follows:
     * `Sign(sha256(SimpleSigningPayload(sha256(Image Manifest))))`
     *
     * Generated from protobuf field <code>bytes signature = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     * Optional. A signature over the payload.
     * The container image digest is incorporated into the signature as follows:
     * 1. Generate a SimpleSigning format payload that includes the container
     * image digest.
     * 2. Generate a signature over SHA256 digest of the payload.
     * The signature generation process can be represented as follows:
     * `Sign(sha256(SimpleSigningPayload(sha256(Image Manifest))))`
     *
     * Generated from protobuf field <code>bytes signature = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkString($var, False);
        $this->signature = $var;

        return $this;
    }

    /**
     * Optional. Reserved for future use.
     *
     * Generated from protobuf field <code>bytes public_key = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getPublicKey()
    {
        return $this->public_key;
    }

    /**
     * Optional. Reserved for future use.
     *
     * Generated from protobuf field <code>bytes public_key = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setPublicKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->public_key = $var;

        return $this;
    }

    /**
     * Optional. Reserved for future use.
     *
     * Generated from protobuf field <code>.google.cloud.confidentialcomputing.v1.SigningAlgorithm sig_alg = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getSigAlg()
    {
        return $this->sig_alg;
    }

    /**
     * Optional. Reserved for future use.
     *
     * Generated from protobuf field <code>.google.cloud.confidentialcomputing.v1.SigningAlgorithm sig_alg = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setSigAlg($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\ConfidentialComputing\V1\SigningAlgorithm::class);
        $this->sig_alg = $var;

        return $this;
    }

}

