<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/eventarc/publishing/v1/publisher.proto

namespace Google\Cloud\Eventarc\Publishing\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The request message for the Publish method.
 *
 * Generated from protobuf message <code>google.cloud.eventarc.publishing.v1.PublishRequest</code>
 */
class PublishRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The full name of the message bus to publish events to. Format:
     * `projects/{project}/locations/{location}/messageBuses/{messageBus}`.
     *
     * Generated from protobuf field <code>string message_bus = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $message_bus = '';
    protected $format;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $message_bus
     *           Required. The full name of the message bus to publish events to. Format:
     *           `projects/{project}/locations/{location}/messageBuses/{messageBus}`.
     *     @type \Google\Cloud\Eventarc\Publishing\V1\CloudEvent $proto_message
     *           The Protobuf format of the CloudEvent being published. Specification can
     *           be found here:
     *           https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/formats/protobuf-format.md
     *     @type string $json_message
     *           The JSON format of the CloudEvent being published. Specification can be
     *           found here:
     *           https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/formats/json-format.md
     *     @type string $avro_message
     *           The Avro format of the CloudEvent being published. Specification can
     *           be found here:
     *           https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/formats/avro-format.md
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Eventarc\Publishing\V1\Publisher::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The full name of the message bus to publish events to. Format:
     * `projects/{project}/locations/{location}/messageBuses/{messageBus}`.
     *
     * Generated from protobuf field <code>string message_bus = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getMessageBus()
    {
        return $this->message_bus;
    }

    /**
     * Required. The full name of the message bus to publish events to. Format:
     * `projects/{project}/locations/{location}/messageBuses/{messageBus}`.
     *
     * Generated from protobuf field <code>string message_bus = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setMessageBus($var)
    {
        GPBUtil::checkString($var, True);
        $this->message_bus = $var;

        return $this;
    }

    /**
     * The Protobuf format of the CloudEvent being published. Specification can
     * be found here:
     * https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/formats/protobuf-format.md
     *
     * Generated from protobuf field <code>.google.cloud.eventarc.publishing.v1.CloudEvent proto_message = 2;</code>
     * @return \Google\Cloud\Eventarc\Publishing\V1\CloudEvent|null
     */
    public function getProtoMessage()
    {
        return $this->readOneof(2);
    }

    public function hasProtoMessage()
    {
        return $this->hasOneof(2);
    }

    /**
     * The Protobuf format of the CloudEvent being published. Specification can
     * be found here:
     * https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/formats/protobuf-format.md
     *
     * Generated from protobuf field <code>.google.cloud.eventarc.publishing.v1.CloudEvent proto_message = 2;</code>
     * @param \Google\Cloud\Eventarc\Publishing\V1\CloudEvent $var
     * @return $this
     */
    public function setProtoMessage($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Eventarc\Publishing\V1\CloudEvent::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * The JSON format of the CloudEvent being published. Specification can be
     * found here:
     * https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/formats/json-format.md
     *
     * Generated from protobuf field <code>string json_message = 3;</code>
     * @return string
     */
    public function getJsonMessage()
    {
        return $this->readOneof(3);
    }

    public function hasJsonMessage()
    {
        return $this->hasOneof(3);
    }

    /**
     * The JSON format of the CloudEvent being published. Specification can be
     * found here:
     * https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/formats/json-format.md
     *
     * Generated from protobuf field <code>string json_message = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setJsonMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * The Avro format of the CloudEvent being published. Specification can
     * be found here:
     * https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/formats/avro-format.md
     *
     * Generated from protobuf field <code>bytes avro_message = 4;</code>
     * @return string
     */
    public function getAvroMessage()
    {
        return $this->readOneof(4);
    }

    public function hasAvroMessage()
    {
        return $this->hasOneof(4);
    }

    /**
     * The Avro format of the CloudEvent being published. Specification can
     * be found here:
     * https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/formats/avro-format.md
     *
     * Generated from protobuf field <code>bytes avro_message = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setAvroMessage($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getFormat()
    {
        return $this->whichOneof("format");
    }

}

