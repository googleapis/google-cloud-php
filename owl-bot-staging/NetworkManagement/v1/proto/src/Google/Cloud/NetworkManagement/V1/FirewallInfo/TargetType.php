<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/networkmanagement/v1/trace.proto

namespace Google\Cloud\NetworkManagement\V1\FirewallInfo;

use UnexpectedValueException;

/**
 * Target type of the firewall rule.
 *
 * Protobuf type <code>google.cloud.networkmanagement.v1.FirewallInfo.TargetType</code>
 */
class TargetType
{
    /**
     * Target type is not specified. In this case we treat the rule as applying
     * to INSTANCES target type.
     *
     * Generated from protobuf enum <code>TARGET_TYPE_UNSPECIFIED = 0;</code>
     */
    const TARGET_TYPE_UNSPECIFIED = 0;
    /**
     * Firewall rule applies to instances.
     *
     * Generated from protobuf enum <code>INSTANCES = 1;</code>
     */
    const INSTANCES = 1;
    /**
     * Firewall rule applies to internal managed load balancers.
     *
     * Generated from protobuf enum <code>INTERNAL_MANAGED_LB = 2;</code>
     */
    const INTERNAL_MANAGED_LB = 2;

    private static $valueToName = [
        self::TARGET_TYPE_UNSPECIFIED => 'TARGET_TYPE_UNSPECIFIED',
        self::INSTANCES => 'INSTANCES',
        self::INTERNAL_MANAGED_LB => 'INTERNAL_MANAGED_LB',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(TargetType::class, \Google\Cloud\NetworkManagement\V1\FirewallInfo_TargetType::class);

