<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/accounts/v1/shippingsettings.proto

namespace Google\Shopping\Merchant\Accounts\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Shipping service.
 *
 * Generated from protobuf message <code>google.shopping.merchant.accounts.v1.Service</code>
 */
class Service extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Free-form name of the service. Must be unique within target
     * account.
     *
     * Generated from protobuf field <code>optional string service_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $service_name = null;
    /**
     * Required. A boolean exposing the active status of the shipping service.
     *
     * Generated from protobuf field <code>optional bool active = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $active = null;
    /**
     * Required. The CLDR territory code of the countries to which the service
     * applies.
     *
     * Generated from protobuf field <code>repeated string delivery_countries = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $delivery_countries;
    /**
     * Required. The CLDR code of the currency to which this service applies. Must
     * match that of the prices in rate groups.
     *
     * Generated from protobuf field <code>optional string currency_code = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $currency_code = null;
    /**
     * Required. Time spent in various aspects from order to the delivery of the
     * product.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.DeliveryTime delivery_time = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $delivery_time = null;
    /**
     * Optional. Shipping rate group definitions. Only the last one is allowed to
     * have an empty `applicable_shipping_labels`, which means "everything else".
     * The other `applicable_shipping_labels` must not overlap.
     *
     * Generated from protobuf field <code>repeated .google.shopping.merchant.accounts.v1.RateGroup rate_groups = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $rate_groups;
    /**
     * Optional. Type of locations this service ships orders to.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.Service.ShipmentType shipment_type = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $shipment_type = null;
    /**
     * Optional. Minimum order value for this service. If set, indicates that
     * customers will have to spend at least this amount. All prices within a
     * service must have the same currency. Cannot be set together with
     * `minimum_order_value_table`.
     *
     * Generated from protobuf field <code>optional .google.shopping.type.Price minimum_order_value = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $minimum_order_value = null;
    /**
     * Optional. Table of per store minimum order values for the pickup
     * fulfillment type. Cannot be set together with `minimum_order_value`.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.MinimumOrderValueTable minimum_order_value_table = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $minimum_order_value_table = null;
    /**
     * A list of stores your products are delivered from.
     * This is only valid for the local delivery shipment type.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.Service.StoreConfig store_config = 10;</code>
     */
    protected $store_config = null;
    /**
     * Optional. Loyalty programs that this shipping service is limited to.
     *
     * Generated from protobuf field <code>repeated .google.shopping.merchant.accounts.v1.Service.LoyaltyProgram loyalty_programs = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $loyalty_programs;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $service_name
     *           Required. Free-form name of the service. Must be unique within target
     *           account.
     *     @type bool $active
     *           Required. A boolean exposing the active status of the shipping service.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $delivery_countries
     *           Required. The CLDR territory code of the countries to which the service
     *           applies.
     *     @type string $currency_code
     *           Required. The CLDR code of the currency to which this service applies. Must
     *           match that of the prices in rate groups.
     *     @type \Google\Shopping\Merchant\Accounts\V1\DeliveryTime $delivery_time
     *           Required. Time spent in various aspects from order to the delivery of the
     *           product.
     *     @type array<\Google\Shopping\Merchant\Accounts\V1\RateGroup>|\Google\Protobuf\Internal\RepeatedField $rate_groups
     *           Optional. Shipping rate group definitions. Only the last one is allowed to
     *           have an empty `applicable_shipping_labels`, which means "everything else".
     *           The other `applicable_shipping_labels` must not overlap.
     *     @type int $shipment_type
     *           Optional. Type of locations this service ships orders to.
     *     @type \Google\Shopping\Type\Price $minimum_order_value
     *           Optional. Minimum order value for this service. If set, indicates that
     *           customers will have to spend at least this amount. All prices within a
     *           service must have the same currency. Cannot be set together with
     *           `minimum_order_value_table`.
     *     @type \Google\Shopping\Merchant\Accounts\V1\MinimumOrderValueTable $minimum_order_value_table
     *           Optional. Table of per store minimum order values for the pickup
     *           fulfillment type. Cannot be set together with `minimum_order_value`.
     *     @type \Google\Shopping\Merchant\Accounts\V1\Service\StoreConfig $store_config
     *           A list of stores your products are delivered from.
     *           This is only valid for the local delivery shipment type.
     *     @type array<\Google\Shopping\Merchant\Accounts\V1\Service\LoyaltyProgram>|\Google\Protobuf\Internal\RepeatedField $loyalty_programs
     *           Optional. Loyalty programs that this shipping service is limited to.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Merchant\Accounts\V1\Shippingsettings::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Free-form name of the service. Must be unique within target
     * account.
     *
     * Generated from protobuf field <code>optional string service_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getServiceName()
    {
        return isset($this->service_name) ? $this->service_name : '';
    }

    public function hasServiceName()
    {
        return isset($this->service_name);
    }

    public function clearServiceName()
    {
        unset($this->service_name);
    }

    /**
     * Required. Free-form name of the service. Must be unique within target
     * account.
     *
     * Generated from protobuf field <code>optional string service_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setServiceName($var)
    {
        GPBUtil::checkString($var, True);
        $this->service_name = $var;

        return $this;
    }

    /**
     * Required. A boolean exposing the active status of the shipping service.
     *
     * Generated from protobuf field <code>optional bool active = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return bool
     */
    public function getActive()
    {
        return isset($this->active) ? $this->active : false;
    }

    public function hasActive()
    {
        return isset($this->active);
    }

    public function clearActive()
    {
        unset($this->active);
    }

    /**
     * Required. A boolean exposing the active status of the shipping service.
     *
     * Generated from protobuf field <code>optional bool active = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param bool $var
     * @return $this
     */
    public function setActive($var)
    {
        GPBUtil::checkBool($var);
        $this->active = $var;

        return $this;
    }

    /**
     * Required. The CLDR territory code of the countries to which the service
     * applies.
     *
     * Generated from protobuf field <code>repeated string delivery_countries = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDeliveryCountries()
    {
        return $this->delivery_countries;
    }

    /**
     * Required. The CLDR territory code of the countries to which the service
     * applies.
     *
     * Generated from protobuf field <code>repeated string delivery_countries = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDeliveryCountries($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->delivery_countries = $arr;

        return $this;
    }

    /**
     * Required. The CLDR code of the currency to which this service applies. Must
     * match that of the prices in rate groups.
     *
     * Generated from protobuf field <code>optional string currency_code = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getCurrencyCode()
    {
        return isset($this->currency_code) ? $this->currency_code : '';
    }

    public function hasCurrencyCode()
    {
        return isset($this->currency_code);
    }

    public function clearCurrencyCode()
    {
        unset($this->currency_code);
    }

    /**
     * Required. The CLDR code of the currency to which this service applies. Must
     * match that of the prices in rate groups.
     *
     * Generated from protobuf field <code>optional string currency_code = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setCurrencyCode($var)
    {
        GPBUtil::checkString($var, True);
        $this->currency_code = $var;

        return $this;
    }

    /**
     * Required. Time spent in various aspects from order to the delivery of the
     * product.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.DeliveryTime delivery_time = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Shopping\Merchant\Accounts\V1\DeliveryTime|null
     */
    public function getDeliveryTime()
    {
        return $this->delivery_time;
    }

    public function hasDeliveryTime()
    {
        return isset($this->delivery_time);
    }

    public function clearDeliveryTime()
    {
        unset($this->delivery_time);
    }

    /**
     * Required. Time spent in various aspects from order to the delivery of the
     * product.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.DeliveryTime delivery_time = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Shopping\Merchant\Accounts\V1\DeliveryTime $var
     * @return $this
     */
    public function setDeliveryTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Shopping\Merchant\Accounts\V1\DeliveryTime::class);
        $this->delivery_time = $var;

        return $this;
    }

    /**
     * Optional. Shipping rate group definitions. Only the last one is allowed to
     * have an empty `applicable_shipping_labels`, which means "everything else".
     * The other `applicable_shipping_labels` must not overlap.
     *
     * Generated from protobuf field <code>repeated .google.shopping.merchant.accounts.v1.RateGroup rate_groups = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRateGroups()
    {
        return $this->rate_groups;
    }

    /**
     * Optional. Shipping rate group definitions. Only the last one is allowed to
     * have an empty `applicable_shipping_labels`, which means "everything else".
     * The other `applicable_shipping_labels` must not overlap.
     *
     * Generated from protobuf field <code>repeated .google.shopping.merchant.accounts.v1.RateGroup rate_groups = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Shopping\Merchant\Accounts\V1\RateGroup>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRateGroups($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Shopping\Merchant\Accounts\V1\RateGroup::class);
        $this->rate_groups = $arr;

        return $this;
    }

    /**
     * Optional. Type of locations this service ships orders to.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.Service.ShipmentType shipment_type = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getShipmentType()
    {
        return isset($this->shipment_type) ? $this->shipment_type : 0;
    }

    public function hasShipmentType()
    {
        return isset($this->shipment_type);
    }

    public function clearShipmentType()
    {
        unset($this->shipment_type);
    }

    /**
     * Optional. Type of locations this service ships orders to.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.Service.ShipmentType shipment_type = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setShipmentType($var)
    {
        GPBUtil::checkEnum($var, \Google\Shopping\Merchant\Accounts\V1\Service\ShipmentType::class);
        $this->shipment_type = $var;

        return $this;
    }

    /**
     * Optional. Minimum order value for this service. If set, indicates that
     * customers will have to spend at least this amount. All prices within a
     * service must have the same currency. Cannot be set together with
     * `minimum_order_value_table`.
     *
     * Generated from protobuf field <code>optional .google.shopping.type.Price minimum_order_value = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Shopping\Type\Price|null
     */
    public function getMinimumOrderValue()
    {
        return $this->minimum_order_value;
    }

    public function hasMinimumOrderValue()
    {
        return isset($this->minimum_order_value);
    }

    public function clearMinimumOrderValue()
    {
        unset($this->minimum_order_value);
    }

    /**
     * Optional. Minimum order value for this service. If set, indicates that
     * customers will have to spend at least this amount. All prices within a
     * service must have the same currency. Cannot be set together with
     * `minimum_order_value_table`.
     *
     * Generated from protobuf field <code>optional .google.shopping.type.Price minimum_order_value = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Shopping\Type\Price $var
     * @return $this
     */
    public function setMinimumOrderValue($var)
    {
        GPBUtil::checkMessage($var, \Google\Shopping\Type\Price::class);
        $this->minimum_order_value = $var;

        return $this;
    }

    /**
     * Optional. Table of per store minimum order values for the pickup
     * fulfillment type. Cannot be set together with `minimum_order_value`.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.MinimumOrderValueTable minimum_order_value_table = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Shopping\Merchant\Accounts\V1\MinimumOrderValueTable|null
     */
    public function getMinimumOrderValueTable()
    {
        return $this->minimum_order_value_table;
    }

    public function hasMinimumOrderValueTable()
    {
        return isset($this->minimum_order_value_table);
    }

    public function clearMinimumOrderValueTable()
    {
        unset($this->minimum_order_value_table);
    }

    /**
     * Optional. Table of per store minimum order values for the pickup
     * fulfillment type. Cannot be set together with `minimum_order_value`.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.MinimumOrderValueTable minimum_order_value_table = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Shopping\Merchant\Accounts\V1\MinimumOrderValueTable $var
     * @return $this
     */
    public function setMinimumOrderValueTable($var)
    {
        GPBUtil::checkMessage($var, \Google\Shopping\Merchant\Accounts\V1\MinimumOrderValueTable::class);
        $this->minimum_order_value_table = $var;

        return $this;
    }

    /**
     * A list of stores your products are delivered from.
     * This is only valid for the local delivery shipment type.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.Service.StoreConfig store_config = 10;</code>
     * @return \Google\Shopping\Merchant\Accounts\V1\Service\StoreConfig|null
     */
    public function getStoreConfig()
    {
        return $this->store_config;
    }

    public function hasStoreConfig()
    {
        return isset($this->store_config);
    }

    public function clearStoreConfig()
    {
        unset($this->store_config);
    }

    /**
     * A list of stores your products are delivered from.
     * This is only valid for the local delivery shipment type.
     *
     * Generated from protobuf field <code>optional .google.shopping.merchant.accounts.v1.Service.StoreConfig store_config = 10;</code>
     * @param \Google\Shopping\Merchant\Accounts\V1\Service\StoreConfig $var
     * @return $this
     */
    public function setStoreConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Shopping\Merchant\Accounts\V1\Service\StoreConfig::class);
        $this->store_config = $var;

        return $this;
    }

    /**
     * Optional. Loyalty programs that this shipping service is limited to.
     *
     * Generated from protobuf field <code>repeated .google.shopping.merchant.accounts.v1.Service.LoyaltyProgram loyalty_programs = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLoyaltyPrograms()
    {
        return $this->loyalty_programs;
    }

    /**
     * Optional. Loyalty programs that this shipping service is limited to.
     *
     * Generated from protobuf field <code>repeated .google.shopping.merchant.accounts.v1.Service.LoyaltyProgram loyalty_programs = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Shopping\Merchant\Accounts\V1\Service\LoyaltyProgram>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setLoyaltyPrograms($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Shopping\Merchant\Accounts\V1\Service\LoyaltyProgram::class);
        $this->loyalty_programs = $arr;

        return $this;
    }

}

