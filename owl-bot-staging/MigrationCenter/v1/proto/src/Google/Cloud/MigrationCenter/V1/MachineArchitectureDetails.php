<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/migrationcenter/v1/migrationcenter.proto

namespace Google\Cloud\MigrationCenter\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details of the machine architecture.
 *
 * Generated from protobuf message <code>google.cloud.migrationcenter.v1.MachineArchitectureDetails</code>
 */
class MachineArchitectureDetails extends \Google\Protobuf\Internal\Message
{
    /**
     * CPU architecture, e.g., "x64-based PC", "x86_64", "i686" etc.
     *
     * Generated from protobuf field <code>string cpu_architecture = 1;</code>
     */
    protected $cpu_architecture = '';
    /**
     * CPU name, e.g., "Intel Xeon E5-2690", "AMD EPYC 7571" etc.
     *
     * Generated from protobuf field <code>string cpu_name = 2;</code>
     */
    protected $cpu_name = '';
    /**
     * Hardware vendor.
     *
     * Generated from protobuf field <code>string vendor = 3;</code>
     */
    protected $vendor = '';
    /**
     * Number of CPU threads allocated to the machine.
     *
     * Generated from protobuf field <code>int32 cpu_thread_count = 4;</code>
     */
    protected $cpu_thread_count = 0;
    /**
     * Number of processor sockets allocated to the machine.
     *
     * Generated from protobuf field <code>int32 cpu_socket_count = 5;</code>
     */
    protected $cpu_socket_count = 0;
    /**
     * BIOS Details.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.BiosDetails bios = 6;</code>
     */
    protected $bios = null;
    /**
     * Firmware type.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.MachineArchitectureDetails.FirmwareType firmware_type = 7;</code>
     */
    protected $firmware_type = 0;
    /**
     * CPU hyper-threading support.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.MachineArchitectureDetails.CpuHyperThreading hyperthreading = 8;</code>
     */
    protected $hyperthreading = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $cpu_architecture
     *           CPU architecture, e.g., "x64-based PC", "x86_64", "i686" etc.
     *     @type string $cpu_name
     *           CPU name, e.g., "Intel Xeon E5-2690", "AMD EPYC 7571" etc.
     *     @type string $vendor
     *           Hardware vendor.
     *     @type int $cpu_thread_count
     *           Number of CPU threads allocated to the machine.
     *     @type int $cpu_socket_count
     *           Number of processor sockets allocated to the machine.
     *     @type \Google\Cloud\MigrationCenter\V1\BiosDetails $bios
     *           BIOS Details.
     *     @type int $firmware_type
     *           Firmware type.
     *     @type int $hyperthreading
     *           CPU hyper-threading support.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Migrationcenter\V1\Migrationcenter::initOnce();
        parent::__construct($data);
    }

    /**
     * CPU architecture, e.g., "x64-based PC", "x86_64", "i686" etc.
     *
     * Generated from protobuf field <code>string cpu_architecture = 1;</code>
     * @return string
     */
    public function getCpuArchitecture()
    {
        return $this->cpu_architecture;
    }

    /**
     * CPU architecture, e.g., "x64-based PC", "x86_64", "i686" etc.
     *
     * Generated from protobuf field <code>string cpu_architecture = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCpuArchitecture($var)
    {
        GPBUtil::checkString($var, True);
        $this->cpu_architecture = $var;

        return $this;
    }

    /**
     * CPU name, e.g., "Intel Xeon E5-2690", "AMD EPYC 7571" etc.
     *
     * Generated from protobuf field <code>string cpu_name = 2;</code>
     * @return string
     */
    public function getCpuName()
    {
        return $this->cpu_name;
    }

    /**
     * CPU name, e.g., "Intel Xeon E5-2690", "AMD EPYC 7571" etc.
     *
     * Generated from protobuf field <code>string cpu_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCpuName($var)
    {
        GPBUtil::checkString($var, True);
        $this->cpu_name = $var;

        return $this;
    }

    /**
     * Hardware vendor.
     *
     * Generated from protobuf field <code>string vendor = 3;</code>
     * @return string
     */
    public function getVendor()
    {
        return $this->vendor;
    }

    /**
     * Hardware vendor.
     *
     * Generated from protobuf field <code>string vendor = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setVendor($var)
    {
        GPBUtil::checkString($var, True);
        $this->vendor = $var;

        return $this;
    }

    /**
     * Number of CPU threads allocated to the machine.
     *
     * Generated from protobuf field <code>int32 cpu_thread_count = 4;</code>
     * @return int
     */
    public function getCpuThreadCount()
    {
        return $this->cpu_thread_count;
    }

    /**
     * Number of CPU threads allocated to the machine.
     *
     * Generated from protobuf field <code>int32 cpu_thread_count = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setCpuThreadCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->cpu_thread_count = $var;

        return $this;
    }

    /**
     * Number of processor sockets allocated to the machine.
     *
     * Generated from protobuf field <code>int32 cpu_socket_count = 5;</code>
     * @return int
     */
    public function getCpuSocketCount()
    {
        return $this->cpu_socket_count;
    }

    /**
     * Number of processor sockets allocated to the machine.
     *
     * Generated from protobuf field <code>int32 cpu_socket_count = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setCpuSocketCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->cpu_socket_count = $var;

        return $this;
    }

    /**
     * BIOS Details.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.BiosDetails bios = 6;</code>
     * @return \Google\Cloud\MigrationCenter\V1\BiosDetails|null
     */
    public function getBios()
    {
        return $this->bios;
    }

    public function hasBios()
    {
        return isset($this->bios);
    }

    public function clearBios()
    {
        unset($this->bios);
    }

    /**
     * BIOS Details.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.BiosDetails bios = 6;</code>
     * @param \Google\Cloud\MigrationCenter\V1\BiosDetails $var
     * @return $this
     */
    public function setBios($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\MigrationCenter\V1\BiosDetails::class);
        $this->bios = $var;

        return $this;
    }

    /**
     * Firmware type.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.MachineArchitectureDetails.FirmwareType firmware_type = 7;</code>
     * @return int
     */
    public function getFirmwareType()
    {
        return $this->firmware_type;
    }

    /**
     * Firmware type.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.MachineArchitectureDetails.FirmwareType firmware_type = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setFirmwareType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\MigrationCenter\V1\MachineArchitectureDetails\FirmwareType::class);
        $this->firmware_type = $var;

        return $this;
    }

    /**
     * CPU hyper-threading support.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.MachineArchitectureDetails.CpuHyperThreading hyperthreading = 8;</code>
     * @return int
     */
    public function getHyperthreading()
    {
        return $this->hyperthreading;
    }

    /**
     * CPU hyper-threading support.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.MachineArchitectureDetails.CpuHyperThreading hyperthreading = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setHyperthreading($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\MigrationCenter\V1\MachineArchitectureDetails\CpuHyperThreading::class);
        $this->hyperthreading = $var;

        return $this;
    }

}

