<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/migrationcenter/v1/migrationcenter.proto

namespace Google\Cloud\MigrationCenter\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The user preferences relating to Compute Engine target platform.
 *
 * Generated from protobuf message <code>google.cloud.migrationcenter.v1.ComputeEnginePreferences</code>
 */
class ComputeEnginePreferences extends \Google\Protobuf\Internal\Message
{
    /**
     * Preferences concerning the machine types to consider on Compute Engine.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.MachinePreferences machine_preferences = 2;</code>
     */
    protected $machine_preferences = null;
    /**
     * License type to consider when calculating costs for virtual machine
     * insights and recommendations. If unspecified, costs are calculated
     * based on the default licensing plan.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.LicenseType license_type = 3;</code>
     */
    protected $license_type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\MigrationCenter\V1\MachinePreferences $machine_preferences
     *           Preferences concerning the machine types to consider on Compute Engine.
     *     @type int $license_type
     *           License type to consider when calculating costs for virtual machine
     *           insights and recommendations. If unspecified, costs are calculated
     *           based on the default licensing plan.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Migrationcenter\V1\Migrationcenter::initOnce();
        parent::__construct($data);
    }

    /**
     * Preferences concerning the machine types to consider on Compute Engine.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.MachinePreferences machine_preferences = 2;</code>
     * @return \Google\Cloud\MigrationCenter\V1\MachinePreferences|null
     */
    public function getMachinePreferences()
    {
        return $this->machine_preferences;
    }

    public function hasMachinePreferences()
    {
        return isset($this->machine_preferences);
    }

    public function clearMachinePreferences()
    {
        unset($this->machine_preferences);
    }

    /**
     * Preferences concerning the machine types to consider on Compute Engine.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.MachinePreferences machine_preferences = 2;</code>
     * @param \Google\Cloud\MigrationCenter\V1\MachinePreferences $var
     * @return $this
     */
    public function setMachinePreferences($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\MigrationCenter\V1\MachinePreferences::class);
        $this->machine_preferences = $var;

        return $this;
    }

    /**
     * License type to consider when calculating costs for virtual machine
     * insights and recommendations. If unspecified, costs are calculated
     * based on the default licensing plan.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.LicenseType license_type = 3;</code>
     * @return int
     */
    public function getLicenseType()
    {
        return $this->license_type;
    }

    /**
     * License type to consider when calculating costs for virtual machine
     * insights and recommendations. If unspecified, costs are calculated
     * based on the default licensing plan.
     *
     * Generated from protobuf field <code>.google.cloud.migrationcenter.v1.LicenseType license_type = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setLicenseType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\MigrationCenter\V1\LicenseType::class);
        $this->license_type = $var;

        return $this;
    }

}

