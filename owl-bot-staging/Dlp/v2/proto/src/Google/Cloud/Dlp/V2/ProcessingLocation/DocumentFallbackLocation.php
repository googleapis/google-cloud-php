<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2\ProcessingLocation;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Configure document processing to fall back to any of the following
 * processing options if document processing is unavailable in the original
 * request location.
 *
 * Generated from protobuf message <code>google.privacy.dlp.v2.ProcessingLocation.DocumentFallbackLocation</code>
 */
class DocumentFallbackLocation extends \Google\Protobuf\Internal\Message
{
    /**
     * Processing occurs in a multi-region that contains the current region
     * if available.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.ProcessingLocation.MultiRegionProcessing multi_region_processing = 100;</code>
     */
    protected $multi_region_processing = null;
    /**
     * Processing occurs in the global region.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.ProcessingLocation.GlobalProcessing global_processing = 200;</code>
     */
    protected $global_processing = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Dlp\V2\ProcessingLocation\MultiRegionProcessing $multi_region_processing
     *           Processing occurs in a multi-region that contains the current region
     *           if available.
     *     @type \Google\Cloud\Dlp\V2\ProcessingLocation\GlobalProcessing $global_processing
     *           Processing occurs in the global region.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Privacy\Dlp\V2\Dlp::initOnce();
        parent::__construct($data);
    }

    /**
     * Processing occurs in a multi-region that contains the current region
     * if available.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.ProcessingLocation.MultiRegionProcessing multi_region_processing = 100;</code>
     * @return \Google\Cloud\Dlp\V2\ProcessingLocation\MultiRegionProcessing|null
     */
    public function getMultiRegionProcessing()
    {
        return $this->multi_region_processing;
    }

    public function hasMultiRegionProcessing()
    {
        return isset($this->multi_region_processing);
    }

    public function clearMultiRegionProcessing()
    {
        unset($this->multi_region_processing);
    }

    /**
     * Processing occurs in a multi-region that contains the current region
     * if available.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.ProcessingLocation.MultiRegionProcessing multi_region_processing = 100;</code>
     * @param \Google\Cloud\Dlp\V2\ProcessingLocation\MultiRegionProcessing $var
     * @return $this
     */
    public function setMultiRegionProcessing($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2\ProcessingLocation\MultiRegionProcessing::class);
        $this->multi_region_processing = $var;

        return $this;
    }

    /**
     * Processing occurs in the global region.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.ProcessingLocation.GlobalProcessing global_processing = 200;</code>
     * @return \Google\Cloud\Dlp\V2\ProcessingLocation\GlobalProcessing|null
     */
    public function getGlobalProcessing()
    {
        return $this->global_processing;
    }

    public function hasGlobalProcessing()
    {
        return isset($this->global_processing);
    }

    public function clearGlobalProcessing()
    {
        unset($this->global_processing);
    }

    /**
     * Processing occurs in the global region.
     *
     * Generated from protobuf field <code>.google.privacy.dlp.v2.ProcessingLocation.GlobalProcessing global_processing = 200;</code>
     * @param \Google\Cloud\Dlp\V2\ProcessingLocation\GlobalProcessing $var
     * @return $this
     */
    public function setGlobalProcessing($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dlp\V2\ProcessingLocation\GlobalProcessing::class);
        $this->global_processing = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(DocumentFallbackLocation::class, \Google\Cloud\Dlp\V2\ProcessingLocation_DocumentFallbackLocation::class);

