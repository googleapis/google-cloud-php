<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/privacy/dlp/v2/dlp.proto

namespace Google\Cloud\Dlp\V2;

use UnexpectedValueException;

/**
 * How broadly a resource has been shared. New items may be added over time.
 * A higher number means more restricted.
 *
 * Protobuf type <code>google.privacy.dlp.v2.ResourceVisibility</code>
 */
class ResourceVisibility
{
    /**
     * Unused.
     *
     * Generated from protobuf enum <code>RESOURCE_VISIBILITY_UNSPECIFIED = 0;</code>
     */
    const RESOURCE_VISIBILITY_UNSPECIFIED = 0;
    /**
     * Visible to any user.
     *
     * Generated from protobuf enum <code>RESOURCE_VISIBILITY_PUBLIC = 10;</code>
     */
    const RESOURCE_VISIBILITY_PUBLIC = 10;
    /**
     * Visible only to specific users.
     *
     * Generated from protobuf enum <code>RESOURCE_VISIBILITY_RESTRICTED = 20;</code>
     */
    const RESOURCE_VISIBILITY_RESTRICTED = 20;

    private static $valueToName = [
        self::RESOURCE_VISIBILITY_UNSPECIFIED => 'RESOURCE_VISIBILITY_UNSPECIFIED',
        self::RESOURCE_VISIBILITY_PUBLIC => 'RESOURCE_VISIBILITY_PUBLIC',
        self::RESOURCE_VISIBILITY_RESTRICTED => 'RESOURCE_VISIBILITY_RESTRICTED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

