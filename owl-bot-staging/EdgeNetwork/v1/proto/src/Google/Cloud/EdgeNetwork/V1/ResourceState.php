<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/edgenetwork/v1/resources.proto

namespace Google\Cloud\EdgeNetwork\V1;

use UnexpectedValueException;

/**
 * ResourceState describes the state the resource.
 * A normal lifecycle of a new resource being created would be: PENDING ->
 * PROVISIONING -> RUNNING. A normal lifecycle of an existing resource being
 * deleted would be: RUNNING -> DELETING. Any failures during processing will
 * result the resource to be in a SUSPENDED state.
 *
 * Protobuf type <code>google.cloud.edgenetwork.v1.ResourceState</code>
 */
class ResourceState
{
    /**
     * Unspecified state.
     *
     * Generated from protobuf enum <code>STATE_UNKNOWN = 0;</code>
     */
    const STATE_UNKNOWN = 0;
    /**
     * The resource is being prepared to be applied to the rack.
     *
     * Generated from protobuf enum <code>STATE_PENDING = 1;</code>
     */
    const STATE_PENDING = 1;
    /**
     * The resource has started being applied to the rack.
     *
     * Generated from protobuf enum <code>STATE_PROVISIONING = 2;</code>
     */
    const STATE_PROVISIONING = 2;
    /**
     * The resource has been pushed to the rack.
     *
     * Generated from protobuf enum <code>STATE_RUNNING = 3;</code>
     */
    const STATE_RUNNING = 3;
    /**
     * The resource failed to push to the rack.
     *
     * Generated from protobuf enum <code>STATE_SUSPENDED = 4;</code>
     */
    const STATE_SUSPENDED = 4;
    /**
     * The resource is under deletion.
     *
     * Generated from protobuf enum <code>STATE_DELETING = 5;</code>
     */
    const STATE_DELETING = 5;

    private static $valueToName = [
        self::STATE_UNKNOWN => 'STATE_UNKNOWN',
        self::STATE_PENDING => 'STATE_PENDING',
        self::STATE_PROVISIONING => 'STATE_PROVISIONING',
        self::STATE_RUNNING => 'STATE_RUNNING',
        self::STATE_SUSPENDED => 'STATE_SUSPENDED',
        self::STATE_DELETING => 'STATE_DELETING',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

