<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/run/v2/vendor_settings.proto

namespace Google\Cloud\Run\V2;

use UnexpectedValueException;

/**
 * Allowed ingress traffic for the Container.
 *
 * Protobuf type <code>google.cloud.run.v2.IngressTraffic</code>
 */
class IngressTraffic
{
    /**
     * Unspecified
     *
     * Generated from protobuf enum <code>INGRESS_TRAFFIC_UNSPECIFIED = 0;</code>
     */
    const INGRESS_TRAFFIC_UNSPECIFIED = 0;
    /**
     * All inbound traffic is allowed.
     *
     * Generated from protobuf enum <code>INGRESS_TRAFFIC_ALL = 1;</code>
     */
    const INGRESS_TRAFFIC_ALL = 1;
    /**
     * Only internal traffic is allowed.
     *
     * Generated from protobuf enum <code>INGRESS_TRAFFIC_INTERNAL_ONLY = 2;</code>
     */
    const INGRESS_TRAFFIC_INTERNAL_ONLY = 2;
    /**
     * Both internal and Google Cloud Load Balancer traffic is allowed.
     *
     * Generated from protobuf enum <code>INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER = 3;</code>
     */
    const INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER = 3;

    private static $valueToName = [
        self::INGRESS_TRAFFIC_UNSPECIFIED => 'INGRESS_TRAFFIC_UNSPECIFIED',
        self::INGRESS_TRAFFIC_ALL => 'INGRESS_TRAFFIC_ALL',
        self::INGRESS_TRAFFIC_INTERNAL_ONLY => 'INGRESS_TRAFFIC_INTERNAL_ONLY',
        self::INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER => 'INGRESS_TRAFFIC_INTERNAL_LOAD_BALANCER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

