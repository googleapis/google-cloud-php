<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/chat/v1/reaction.proto

namespace Google\Apps\Chat\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents a [custom emoji](https://support.google.com/chat/answer/12800149).
 *
 * Generated from protobuf message <code>google.chat.v1.CustomEmoji</code>
 */
class CustomEmoji extends \Google\Protobuf\Internal\Message
{
    /**
     * Identifier. The resource name of the custom emoji, assigned by the server.
     * Format: `customEmojis/{customEmoji}`
     *
     * Generated from protobuf field <code>string name = 2 [(.google.api.field_behavior) = IDENTIFIER];</code>
     */
    protected $name = '';
    /**
     * Output only. Unique key for the custom emoji resource.
     *
     * Generated from protobuf field <code>string uid = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_info) = {</code>
     */
    protected $uid = '';
    /**
     * Optional. Immutable. User-provided name for the custom emoji, which is
     * unique within the organization.
     * Required when the custom emoji is created, output only otherwise.
     * Emoji names must start and end with colons, must be lowercase and can only
     * contain alphanumeric characters, hyphens, and underscores.
     * Hyphens and underscores should be used to separate words and cannot be used
     * consecutively.
     * Example: `:valid-emoji-name:`
     *
     * Generated from protobuf field <code>string emoji_name = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     */
    protected $emoji_name = '';
    /**
     * Output only. A temporary image URL for the custom emoji, valid for at least
     * 10 minutes. Note that this is not populated in the response when the custom
     * emoji is created.
     *
     * Generated from protobuf field <code>string temporary_image_uri = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $temporary_image_uri = '';
    /**
     * Optional. Input only. Payload data.
     * Required when the custom emoji is created.
     *
     * Generated from protobuf field <code>.google.chat.v1.CustomEmoji.CustomEmojiPayload payload = 5 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $payload = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Identifier. The resource name of the custom emoji, assigned by the server.
     *           Format: `customEmojis/{customEmoji}`
     *     @type string $uid
     *           Output only. Unique key for the custom emoji resource.
     *     @type string $emoji_name
     *           Optional. Immutable. User-provided name for the custom emoji, which is
     *           unique within the organization.
     *           Required when the custom emoji is created, output only otherwise.
     *           Emoji names must start and end with colons, must be lowercase and can only
     *           contain alphanumeric characters, hyphens, and underscores.
     *           Hyphens and underscores should be used to separate words and cannot be used
     *           consecutively.
     *           Example: `:valid-emoji-name:`
     *     @type string $temporary_image_uri
     *           Output only. A temporary image URL for the custom emoji, valid for at least
     *           10 minutes. Note that this is not populated in the response when the custom
     *           emoji is created.
     *     @type \Google\Apps\Chat\V1\CustomEmoji\CustomEmojiPayload $payload
     *           Optional. Input only. Payload data.
     *           Required when the custom emoji is created.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Chat\V1\Reaction::initOnce();
        parent::__construct($data);
    }

    /**
     * Identifier. The resource name of the custom emoji, assigned by the server.
     * Format: `customEmojis/{customEmoji}`
     *
     * Generated from protobuf field <code>string name = 2 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Identifier. The resource name of the custom emoji, assigned by the server.
     * Format: `customEmojis/{customEmoji}`
     *
     * Generated from protobuf field <code>string name = 2 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Output only. Unique key for the custom emoji resource.
     *
     * Generated from protobuf field <code>string uid = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_info) = {</code>
     * @return string
     */
    public function getUid()
    {
        return $this->uid;
    }

    /**
     * Output only. Unique key for the custom emoji resource.
     *
     * Generated from protobuf field <code>string uid = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.field_info) = {</code>
     * @param string $var
     * @return $this
     */
    public function setUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uid = $var;

        return $this;
    }

    /**
     * Optional. Immutable. User-provided name for the custom emoji, which is
     * unique within the organization.
     * Required when the custom emoji is created, output only otherwise.
     * Emoji names must start and end with colons, must be lowercase and can only
     * contain alphanumeric characters, hyphens, and underscores.
     * Hyphens and underscores should be used to separate words and cannot be used
     * consecutively.
     * Example: `:valid-emoji-name:`
     *
     * Generated from protobuf field <code>string emoji_name = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return string
     */
    public function getEmojiName()
    {
        return $this->emoji_name;
    }

    /**
     * Optional. Immutable. User-provided name for the custom emoji, which is
     * unique within the organization.
     * Required when the custom emoji is created, output only otherwise.
     * Emoji names must start and end with colons, must be lowercase and can only
     * contain alphanumeric characters, hyphens, and underscores.
     * Hyphens and underscores should be used to separate words and cannot be used
     * consecutively.
     * Example: `:valid-emoji-name:`
     *
     * Generated from protobuf field <code>string emoji_name = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param string $var
     * @return $this
     */
    public function setEmojiName($var)
    {
        GPBUtil::checkString($var, True);
        $this->emoji_name = $var;

        return $this;
    }

    /**
     * Output only. A temporary image URL for the custom emoji, valid for at least
     * 10 minutes. Note that this is not populated in the response when the custom
     * emoji is created.
     *
     * Generated from protobuf field <code>string temporary_image_uri = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getTemporaryImageUri()
    {
        return $this->temporary_image_uri;
    }

    /**
     * Output only. A temporary image URL for the custom emoji, valid for at least
     * 10 minutes. Note that this is not populated in the response when the custom
     * emoji is created.
     *
     * Generated from protobuf field <code>string temporary_image_uri = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setTemporaryImageUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->temporary_image_uri = $var;

        return $this;
    }

    /**
     * Optional. Input only. Payload data.
     * Required when the custom emoji is created.
     *
     * Generated from protobuf field <code>.google.chat.v1.CustomEmoji.CustomEmojiPayload payload = 5 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Apps\Chat\V1\CustomEmoji\CustomEmojiPayload|null
     */
    public function getPayload()
    {
        return $this->payload;
    }

    public function hasPayload()
    {
        return isset($this->payload);
    }

    public function clearPayload()
    {
        unset($this->payload);
    }

    /**
     * Optional. Input only. Payload data.
     * Required when the custom emoji is created.
     *
     * Generated from protobuf field <code>.google.chat.v1.CustomEmoji.CustomEmojiPayload payload = 5 [(.google.api.field_behavior) = INPUT_ONLY, (.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Apps\Chat\V1\CustomEmoji\CustomEmojiPayload $var
     * @return $this
     */
    public function setPayload($var)
    {
        GPBUtil::checkMessage($var, \Google\Apps\Chat\V1\CustomEmoji\CustomEmojiPayload::class);
        $this->payload = $var;

        return $this;
    }

}

