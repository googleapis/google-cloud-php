<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/chat/v1/space.proto

namespace Google\Apps\Chat\V1\Space;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents a space permission setting.
 *
 * Generated from protobuf message <code>google.chat.v1.Space.PermissionSetting</code>
 */
class PermissionSetting extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Whether space owners
     * ([`ROLE_MANAGER`][google.chat.v1.Membership.MembershipRole.ROLE_MANAGER])
     * have this permission.
     *
     * Generated from protobuf field <code>bool managers_allowed = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $managers_allowed = false;
    /**
     * Optional. Whether space managers
     * [`ROLE_ASSISTANT_MANAGER`][google.chat.v1.Membership.MembershipRole.ROLE_ASSISTANT_MANAGER])
     * have this permission.
     *
     * Generated from protobuf field <code>optional bool assistant_managers_allowed = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $assistant_managers_allowed = null;
    /**
     * Optional. Whether basic space members
     * ([`ROLE_MEMBER`][google.chat.v1.Membership.MembershipRole.ROLE_MEMBER])
     * have this permission.
     *
     * Generated from protobuf field <code>bool members_allowed = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $members_allowed = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $managers_allowed
     *           Optional. Whether space owners
     *           ([`ROLE_MANAGER`][google.chat.v1.Membership.MembershipRole.ROLE_MANAGER])
     *           have this permission.
     *     @type bool $assistant_managers_allowed
     *           Optional. Whether space managers
     *           [`ROLE_ASSISTANT_MANAGER`][google.chat.v1.Membership.MembershipRole.ROLE_ASSISTANT_MANAGER])
     *           have this permission.
     *     @type bool $members_allowed
     *           Optional. Whether basic space members
     *           ([`ROLE_MEMBER`][google.chat.v1.Membership.MembershipRole.ROLE_MEMBER])
     *           have this permission.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Chat\V1\Space::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Whether space owners
     * ([`ROLE_MANAGER`][google.chat.v1.Membership.MembershipRole.ROLE_MANAGER])
     * have this permission.
     *
     * Generated from protobuf field <code>bool managers_allowed = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getManagersAllowed()
    {
        return $this->managers_allowed;
    }

    /**
     * Optional. Whether space owners
     * ([`ROLE_MANAGER`][google.chat.v1.Membership.MembershipRole.ROLE_MANAGER])
     * have this permission.
     *
     * Generated from protobuf field <code>bool managers_allowed = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setManagersAllowed($var)
    {
        GPBUtil::checkBool($var);
        $this->managers_allowed = $var;

        return $this;
    }

    /**
     * Optional. Whether space managers
     * [`ROLE_ASSISTANT_MANAGER`][google.chat.v1.Membership.MembershipRole.ROLE_ASSISTANT_MANAGER])
     * have this permission.
     *
     * Generated from protobuf field <code>optional bool assistant_managers_allowed = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getAssistantManagersAllowed()
    {
        return isset($this->assistant_managers_allowed) ? $this->assistant_managers_allowed : false;
    }

    public function hasAssistantManagersAllowed()
    {
        return isset($this->assistant_managers_allowed);
    }

    public function clearAssistantManagersAllowed()
    {
        unset($this->assistant_managers_allowed);
    }

    /**
     * Optional. Whether space managers
     * [`ROLE_ASSISTANT_MANAGER`][google.chat.v1.Membership.MembershipRole.ROLE_ASSISTANT_MANAGER])
     * have this permission.
     *
     * Generated from protobuf field <code>optional bool assistant_managers_allowed = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setAssistantManagersAllowed($var)
    {
        GPBUtil::checkBool($var);
        $this->assistant_managers_allowed = $var;

        return $this;
    }

    /**
     * Optional. Whether basic space members
     * ([`ROLE_MEMBER`][google.chat.v1.Membership.MembershipRole.ROLE_MEMBER])
     * have this permission.
     *
     * Generated from protobuf field <code>bool members_allowed = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getMembersAllowed()
    {
        return $this->members_allowed;
    }

    /**
     * Optional. Whether basic space members
     * ([`ROLE_MEMBER`][google.chat.v1.Membership.MembershipRole.ROLE_MEMBER])
     * have this permission.
     *
     * Generated from protobuf field <code>bool members_allowed = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setMembersAllowed($var)
    {
        GPBUtil::checkBool($var);
        $this->members_allowed = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PermissionSetting::class, \Google\Apps\Chat\V1\Space_PermissionSetting::class);

