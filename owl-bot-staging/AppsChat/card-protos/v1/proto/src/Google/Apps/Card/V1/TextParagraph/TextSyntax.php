<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/apps/card/v1/card.proto

namespace Google\Apps\Card\V1\TextParagraph;

use UnexpectedValueException;

/**
 * Syntax to use for formatting text.
 * [Google Chat apps](https://developers.google.com/workspace/chat):
 *
 * Protobuf type <code>google.apps.card.v1.TextParagraph.TextSyntax</code>
 */
class TextSyntax
{
    /**
     * The text is rendered as HTML if unspecified.
     *
     * Generated from protobuf enum <code>TEXT_SYNTAX_UNSPECIFIED = 0;</code>
     */
    const TEXT_SYNTAX_UNSPECIFIED = 0;
    /**
     * The text is rendered as HTML. This is the default value.
     *
     * Generated from protobuf enum <code>HTML = 1;</code>
     */
    const HTML = 1;
    /**
     * The text is rendered as Markdown.
     *
     * Generated from protobuf enum <code>MARKDOWN = 2;</code>
     */
    const MARKDOWN = 2;

    private static $valueToName = [
        self::TEXT_SYNTAX_UNSPECIFIED => 'TEXT_SYNTAX_UNSPECIFIED',
        self::HTML => 'HTML',
        self::MARKDOWN => 'MARKDOWN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(TextSyntax::class, \Google\Apps\Card\V1\TextParagraph_TextSyntax::class);

