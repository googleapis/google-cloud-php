<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/apps/card/v1/card.proto

namespace Google\Apps\Card\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A widget that creates one or more UI items that users can select.
 * For example, a dropdown menu or checkboxes. You can use this widget to
 * collect data that can be predicted or enumerated. For an example in Google
 * Chat apps, see [Add selectable UI
 * elements](/workspace/chat/design-interactive-card-dialog#add_selectable_ui_elements).
 * Chat apps can process the value of items that users select or input. For
 * details about working with form inputs, see [Receive form
 * data](https://developers.google.com/workspace/chat/read-form-data).
 * To collect undefined or abstract data from users, use
 * the [TextInput][google.apps.card.v1.TextInput] widget.
 * [Google Workspace Add-ons
 * and Chat apps](https://developers.google.com/workspace/extend):
 *
 * Generated from protobuf message <code>google.apps.card.v1.SelectionInput</code>
 */
class SelectionInput extends \Google\Protobuf\Internal\Message
{
    /**
     * The name that identifies the selection input in a form input event.
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * The text that appears above the selection input field in the user
     * interface.
     * Specify text that helps the user enter the information your app needs.
     * For example, if users are selecting the urgency of a work ticket from a
     * drop-down menu, the label might be "Urgency" or "Select urgency".
     *
     * Generated from protobuf field <code>string label = 2;</code>
     */
    protected $label = '';
    /**
     * The type of items that are displayed to users in a `SelectionInput` widget.
     * Selection types support different types of interactions. For example, users
     * can select one or more checkboxes, but they can only select one value from
     * a dropdown menu.
     *
     * Generated from protobuf field <code>.google.apps.card.v1.SelectionInput.SelectionType type = 3;</code>
     */
    protected $type = 0;
    /**
     * An array of selectable items. For example, an array of radio buttons or
     * checkboxes. Supports up to 100 items.
     *
     * Generated from protobuf field <code>repeated .google.apps.card.v1.SelectionInput.SelectionItem items = 4;</code>
     */
    private $items;
    /**
     * If specified, the form is submitted when the selection changes. If not
     * specified, you must specify a separate button that submits the form.
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     *
     * Generated from protobuf field <code>.google.apps.card.v1.Action on_change_action = 5;</code>
     */
    protected $on_change_action = null;
    /**
     * For multiselect menus, the maximum number of items that a user can select.
     * Minimum value is 1 item. If unspecified, defaults to 3 items.
     *
     * Generated from protobuf field <code>int32 multi_select_max_selected_items = 6;</code>
     */
    protected $multi_select_max_selected_items = 0;
    /**
     * For multiselect menus, the number of text characters that a user inputs
     * before the app queries autocomplete and displays suggested items
     * in the menu.
     * If unspecified, defaults to 0 characters for static data sources and 3
     * characters for external data sources.
     *
     * Generated from protobuf field <code>int32 multi_select_min_query_length = 7;</code>
     */
    protected $multi_select_min_query_length = 0;
    protected $multi_select_data_source;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           The name that identifies the selection input in a form input event.
     *           For details about working with form inputs, see [Receive form
     *           data](https://developers.google.com/workspace/chat/read-form-data).
     *     @type string $label
     *           The text that appears above the selection input field in the user
     *           interface.
     *           Specify text that helps the user enter the information your app needs.
     *           For example, if users are selecting the urgency of a work ticket from a
     *           drop-down menu, the label might be "Urgency" or "Select urgency".
     *     @type int $type
     *           The type of items that are displayed to users in a `SelectionInput` widget.
     *           Selection types support different types of interactions. For example, users
     *           can select one or more checkboxes, but they can only select one value from
     *           a dropdown menu.
     *     @type array<\Google\Apps\Card\V1\SelectionInput\SelectionItem>|\Google\Protobuf\Internal\RepeatedField $items
     *           An array of selectable items. For example, an array of radio buttons or
     *           checkboxes. Supports up to 100 items.
     *     @type \Google\Apps\Card\V1\Action $on_change_action
     *           If specified, the form is submitted when the selection changes. If not
     *           specified, you must specify a separate button that submits the form.
     *           For details about working with form inputs, see [Receive form
     *           data](https://developers.google.com/workspace/chat/read-form-data).
     *     @type int $multi_select_max_selected_items
     *           For multiselect menus, the maximum number of items that a user can select.
     *           Minimum value is 1 item. If unspecified, defaults to 3 items.
     *     @type int $multi_select_min_query_length
     *           For multiselect menus, the number of text characters that a user inputs
     *           before the app queries autocomplete and displays suggested items
     *           in the menu.
     *           If unspecified, defaults to 0 characters for static data sources and 3
     *           characters for external data sources.
     *     @type \Google\Apps\Card\V1\Action $external_data_source
     *           An external data source, such as a relational data base.
     *     @type \Google\Apps\Card\V1\SelectionInput\PlatformDataSource $platform_data_source
     *           A data source from Google Workspace.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Apps\Card\V1\Card::initOnce();
        parent::__construct($data);
    }

    /**
     * The name that identifies the selection input in a form input event.
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * The name that identifies the selection input in a form input event.
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The text that appears above the selection input field in the user
     * interface.
     * Specify text that helps the user enter the information your app needs.
     * For example, if users are selecting the urgency of a work ticket from a
     * drop-down menu, the label might be "Urgency" or "Select urgency".
     *
     * Generated from protobuf field <code>string label = 2;</code>
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * The text that appears above the selection input field in the user
     * interface.
     * Specify text that helps the user enter the information your app needs.
     * For example, if users are selecting the urgency of a work ticket from a
     * drop-down menu, the label might be "Urgency" or "Select urgency".
     *
     * Generated from protobuf field <code>string label = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLabel($var)
    {
        GPBUtil::checkString($var, True);
        $this->label = $var;

        return $this;
    }

    /**
     * The type of items that are displayed to users in a `SelectionInput` widget.
     * Selection types support different types of interactions. For example, users
     * can select one or more checkboxes, but they can only select one value from
     * a dropdown menu.
     *
     * Generated from protobuf field <code>.google.apps.card.v1.SelectionInput.SelectionType type = 3;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * The type of items that are displayed to users in a `SelectionInput` widget.
     * Selection types support different types of interactions. For example, users
     * can select one or more checkboxes, but they can only select one value from
     * a dropdown menu.
     *
     * Generated from protobuf field <code>.google.apps.card.v1.SelectionInput.SelectionType type = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Google\Apps\Card\V1\SelectionInput\SelectionType::class);
        $this->type = $var;

        return $this;
    }

    /**
     * An array of selectable items. For example, an array of radio buttons or
     * checkboxes. Supports up to 100 items.
     *
     * Generated from protobuf field <code>repeated .google.apps.card.v1.SelectionInput.SelectionItem items = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getItems()
    {
        return $this->items;
    }

    /**
     * An array of selectable items. For example, an array of radio buttons or
     * checkboxes. Supports up to 100 items.
     *
     * Generated from protobuf field <code>repeated .google.apps.card.v1.SelectionInput.SelectionItem items = 4;</code>
     * @param array<\Google\Apps\Card\V1\SelectionInput\SelectionItem>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setItems($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Apps\Card\V1\SelectionInput\SelectionItem::class);
        $this->items = $arr;

        return $this;
    }

    /**
     * If specified, the form is submitted when the selection changes. If not
     * specified, you must specify a separate button that submits the form.
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     *
     * Generated from protobuf field <code>.google.apps.card.v1.Action on_change_action = 5;</code>
     * @return \Google\Apps\Card\V1\Action|null
     */
    public function getOnChangeAction()
    {
        return $this->on_change_action;
    }

    public function hasOnChangeAction()
    {
        return isset($this->on_change_action);
    }

    public function clearOnChangeAction()
    {
        unset($this->on_change_action);
    }

    /**
     * If specified, the form is submitted when the selection changes. If not
     * specified, you must specify a separate button that submits the form.
     * For details about working with form inputs, see [Receive form
     * data](https://developers.google.com/workspace/chat/read-form-data).
     *
     * Generated from protobuf field <code>.google.apps.card.v1.Action on_change_action = 5;</code>
     * @param \Google\Apps\Card\V1\Action $var
     * @return $this
     */
    public function setOnChangeAction($var)
    {
        GPBUtil::checkMessage($var, \Google\Apps\Card\V1\Action::class);
        $this->on_change_action = $var;

        return $this;
    }

    /**
     * For multiselect menus, the maximum number of items that a user can select.
     * Minimum value is 1 item. If unspecified, defaults to 3 items.
     *
     * Generated from protobuf field <code>int32 multi_select_max_selected_items = 6;</code>
     * @return int
     */
    public function getMultiSelectMaxSelectedItems()
    {
        return $this->multi_select_max_selected_items;
    }

    /**
     * For multiselect menus, the maximum number of items that a user can select.
     * Minimum value is 1 item. If unspecified, defaults to 3 items.
     *
     * Generated from protobuf field <code>int32 multi_select_max_selected_items = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setMultiSelectMaxSelectedItems($var)
    {
        GPBUtil::checkInt32($var);
        $this->multi_select_max_selected_items = $var;

        return $this;
    }

    /**
     * For multiselect menus, the number of text characters that a user inputs
     * before the app queries autocomplete and displays suggested items
     * in the menu.
     * If unspecified, defaults to 0 characters for static data sources and 3
     * characters for external data sources.
     *
     * Generated from protobuf field <code>int32 multi_select_min_query_length = 7;</code>
     * @return int
     */
    public function getMultiSelectMinQueryLength()
    {
        return $this->multi_select_min_query_length;
    }

    /**
     * For multiselect menus, the number of text characters that a user inputs
     * before the app queries autocomplete and displays suggested items
     * in the menu.
     * If unspecified, defaults to 0 characters for static data sources and 3
     * characters for external data sources.
     *
     * Generated from protobuf field <code>int32 multi_select_min_query_length = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setMultiSelectMinQueryLength($var)
    {
        GPBUtil::checkInt32($var);
        $this->multi_select_min_query_length = $var;

        return $this;
    }

    /**
     * An external data source, such as a relational data base.
     *
     * Generated from protobuf field <code>.google.apps.card.v1.Action external_data_source = 8;</code>
     * @return \Google\Apps\Card\V1\Action|null
     */
    public function getExternalDataSource()
    {
        return $this->readOneof(8);
    }

    public function hasExternalDataSource()
    {
        return $this->hasOneof(8);
    }

    /**
     * An external data source, such as a relational data base.
     *
     * Generated from protobuf field <code>.google.apps.card.v1.Action external_data_source = 8;</code>
     * @param \Google\Apps\Card\V1\Action $var
     * @return $this
     */
    public function setExternalDataSource($var)
    {
        GPBUtil::checkMessage($var, \Google\Apps\Card\V1\Action::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * A data source from Google Workspace.
     *
     * Generated from protobuf field <code>.google.apps.card.v1.SelectionInput.PlatformDataSource platform_data_source = 9;</code>
     * @return \Google\Apps\Card\V1\SelectionInput\PlatformDataSource|null
     */
    public function getPlatformDataSource()
    {
        return $this->readOneof(9);
    }

    public function hasPlatformDataSource()
    {
        return $this->hasOneof(9);
    }

    /**
     * A data source from Google Workspace.
     *
     * Generated from protobuf field <code>.google.apps.card.v1.SelectionInput.PlatformDataSource platform_data_source = 9;</code>
     * @param \Google\Apps\Card\V1\SelectionInput\PlatformDataSource $var
     * @return $this
     */
    public function setPlatformDataSource($var)
    {
        GPBUtil::checkMessage($var, \Google\Apps\Card\V1\SelectionInput\PlatformDataSource::class);
        $this->writeOneof(9, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getMultiSelectDataSource()
    {
        return $this->whichOneof("multi_select_data_source");
    }

}

