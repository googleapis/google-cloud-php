<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/oracledatabase/v1/db_version.proto

namespace Google\Cloud\OracleDatabase\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The properties of a DbVersion.
 *
 * Generated from protobuf message <code>google.cloud.oracledatabase.v1.DbVersionProperties</code>
 */
class DbVersionProperties extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. A valid Oracle Database version.
     *
     * Generated from protobuf field <code>string version = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $version = '';
    /**
     * Output only. True if this version of the Oracle Database software is the
     * latest version for a release.
     *
     * Generated from protobuf field <code>bool is_latest_for_major_version = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $is_latest_for_major_version = false;
    /**
     * Output only. True if this version of the Oracle Database software supports
     * pluggable databases.
     *
     * Generated from protobuf field <code>bool supports_pdb = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $supports_pdb = false;
    /**
     * Output only. True if this version of the Oracle Database software is the
     * preview version.
     *
     * Generated from protobuf field <code>bool is_preview_db_version = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $is_preview_db_version = false;
    /**
     * Output only. True if this version of the Oracle Database software is
     * supported for Upgrade.
     *
     * Generated from protobuf field <code>bool is_upgrade_supported = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $is_upgrade_supported = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $version
     *           Output only. A valid Oracle Database version.
     *     @type bool $is_latest_for_major_version
     *           Output only. True if this version of the Oracle Database software is the
     *           latest version for a release.
     *     @type bool $supports_pdb
     *           Output only. True if this version of the Oracle Database software supports
     *           pluggable databases.
     *     @type bool $is_preview_db_version
     *           Output only. True if this version of the Oracle Database software is the
     *           preview version.
     *     @type bool $is_upgrade_supported
     *           Output only. True if this version of the Oracle Database software is
     *           supported for Upgrade.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Oracledatabase\V1\DbVersion::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. A valid Oracle Database version.
     *
     * Generated from protobuf field <code>string version = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * Output only. A valid Oracle Database version.
     *
     * Generated from protobuf field <code>string version = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->version = $var;

        return $this;
    }

    /**
     * Output only. True if this version of the Oracle Database software is the
     * latest version for a release.
     *
     * Generated from protobuf field <code>bool is_latest_for_major_version = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return bool
     */
    public function getIsLatestForMajorVersion()
    {
        return $this->is_latest_for_major_version;
    }

    /**
     * Output only. True if this version of the Oracle Database software is the
     * latest version for a release.
     *
     * Generated from protobuf field <code>bool is_latest_for_major_version = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param bool $var
     * @return $this
     */
    public function setIsLatestForMajorVersion($var)
    {
        GPBUtil::checkBool($var);
        $this->is_latest_for_major_version = $var;

        return $this;
    }

    /**
     * Output only. True if this version of the Oracle Database software supports
     * pluggable databases.
     *
     * Generated from protobuf field <code>bool supports_pdb = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return bool
     */
    public function getSupportsPdb()
    {
        return $this->supports_pdb;
    }

    /**
     * Output only. True if this version of the Oracle Database software supports
     * pluggable databases.
     *
     * Generated from protobuf field <code>bool supports_pdb = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param bool $var
     * @return $this
     */
    public function setSupportsPdb($var)
    {
        GPBUtil::checkBool($var);
        $this->supports_pdb = $var;

        return $this;
    }

    /**
     * Output only. True if this version of the Oracle Database software is the
     * preview version.
     *
     * Generated from protobuf field <code>bool is_preview_db_version = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return bool
     */
    public function getIsPreviewDbVersion()
    {
        return $this->is_preview_db_version;
    }

    /**
     * Output only. True if this version of the Oracle Database software is the
     * preview version.
     *
     * Generated from protobuf field <code>bool is_preview_db_version = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param bool $var
     * @return $this
     */
    public function setIsPreviewDbVersion($var)
    {
        GPBUtil::checkBool($var);
        $this->is_preview_db_version = $var;

        return $this;
    }

    /**
     * Output only. True if this version of the Oracle Database software is
     * supported for Upgrade.
     *
     * Generated from protobuf field <code>bool is_upgrade_supported = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return bool
     */
    public function getIsUpgradeSupported()
    {
        return $this->is_upgrade_supported;
    }

    /**
     * Output only. True if this version of the Oracle Database software is
     * supported for Upgrade.
     *
     * Generated from protobuf field <code>bool is_upgrade_supported = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param bool $var
     * @return $this
     */
    public function setIsUpgradeSupported($var)
    {
        GPBUtil::checkBool($var);
        $this->is_upgrade_supported = $var;

        return $this;
    }

}

