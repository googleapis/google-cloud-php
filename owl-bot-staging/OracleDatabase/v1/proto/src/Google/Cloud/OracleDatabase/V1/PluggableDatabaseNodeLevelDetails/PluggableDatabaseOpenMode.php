<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/oracledatabase/v1/pluggable_database.proto

namespace Google\Cloud\OracleDatabase\V1\PluggableDatabaseNodeLevelDetails;

use UnexpectedValueException;

/**
 * The mode that the pluggable database is in to open it.
 *
 * Protobuf type <code>google.cloud.oracledatabase.v1.PluggableDatabaseNodeLevelDetails.PluggableDatabaseOpenMode</code>
 */
class PluggableDatabaseOpenMode
{
    /**
     * The open mode is unspecified.
     *
     * Generated from protobuf enum <code>PLUGGABLE_DATABASE_OPEN_MODE_UNSPECIFIED = 0;</code>
     */
    const PLUGGABLE_DATABASE_OPEN_MODE_UNSPECIFIED = 0;
    /**
     * The pluggable database is opened in read-only mode.
     *
     * Generated from protobuf enum <code>READ_ONLY = 1;</code>
     */
    const READ_ONLY = 1;
    /**
     * The pluggable database is opened in read-write mode.
     *
     * Generated from protobuf enum <code>READ_WRITE = 2;</code>
     */
    const READ_WRITE = 2;
    /**
     * The pluggable database is mounted.
     *
     * Generated from protobuf enum <code>MOUNTED = 3;</code>
     */
    const MOUNTED = 3;
    /**
     * The pluggable database is migrated.
     *
     * Generated from protobuf enum <code>MIGRATE = 4;</code>
     */
    const MIGRATE = 4;

    private static $valueToName = [
        self::PLUGGABLE_DATABASE_OPEN_MODE_UNSPECIFIED => 'PLUGGABLE_DATABASE_OPEN_MODE_UNSPECIFIED',
        self::READ_ONLY => 'READ_ONLY',
        self::READ_WRITE => 'READ_WRITE',
        self::MOUNTED => 'MOUNTED',
        self::MIGRATE => 'MIGRATE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PluggableDatabaseOpenMode::class, \Google\Cloud\OracleDatabase\V1\PluggableDatabaseNodeLevelDetails_PluggableDatabaseOpenMode::class);

