<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/oracledatabase/v1/odb_subnet.proto

namespace Google\Cloud\OracleDatabase\V1\OdbSubnet;

use UnexpectedValueException;

/**
 * Purpose available for the subnet.
 *
 * Protobuf type <code>google.cloud.oracledatabase.v1.OdbSubnet.Purpose</code>
 */
class Purpose
{
    /**
     * Default unspecified value.
     *
     * Generated from protobuf enum <code>PURPOSE_UNSPECIFIED = 0;</code>
     */
    const PURPOSE_UNSPECIFIED = 0;
    /**
     * Subnet to be used for client connections.
     *
     * Generated from protobuf enum <code>CLIENT_SUBNET = 1;</code>
     */
    const CLIENT_SUBNET = 1;
    /**
     * Subnet to be used for backup.
     *
     * Generated from protobuf enum <code>BACKUP_SUBNET = 2;</code>
     */
    const BACKUP_SUBNET = 2;

    private static $valueToName = [
        self::PURPOSE_UNSPECIFIED => 'PURPOSE_UNSPECIFIED',
        self::CLIENT_SUBNET => 'CLIENT_SUBNET',
        self::BACKUP_SUBNET => 'BACKUP_SUBNET',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Purpose::class, \Google\Cloud\OracleDatabase\V1\OdbSubnet_Purpose::class);

