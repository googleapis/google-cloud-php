<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/fleetengine/v1/trip_api.proto

namespace Google\Maps\FleetEngine\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * CreateTrip request message.
 *
 * Generated from protobuf message <code>maps.fleetengine.v1.CreateTripRequest</code>
 */
class CreateTripRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The standard Fleet Engine request header.
     *
     * Generated from protobuf field <code>.maps.fleetengine.v1.RequestHeader header = 1;</code>
     */
    protected $header = null;
    /**
     * Required. Must be in the format `providers/{provider}`.
     * The provider must be the Project ID (for example, `sample-cloud-project`)
     * of the Google Cloud Project of which the service account making
     * this call is a member.
     *
     * Generated from protobuf field <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Required. Unique Trip ID.
     * Subject to the following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     *
     * Generated from protobuf field <code>string trip_id = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $trip_id = '';
    /**
     * Required. Trip entity to create.
     * When creating a Trip, the following fields are required:
     * * `trip_type`
     * * `pickup_point`
     * The following fields are used if you provide them:
     * * `number_of_passengers`
     * * `vehicle_id`
     * * `dropoff_point`
     * * `intermediate_destinations`
     * * `vehicle_waypoints`
     * All other Trip fields are ignored. For example, all trips start with a
     * `trip_status` of `NEW` even if you pass in a `trip_status` of `CANCELED` in
     * the creation request.
     * Only `EXCLUSIVE` trips support `intermediate_destinations`.
     * When `vehicle_id` is set for a shared trip, you must supply
     * the list of `Trip.vehicle_waypoints` to specify the order of the remaining
     * waypoints for the vehicle, otherwise the waypoint order will be
     * undetermined.
     * When you specify `Trip.vehicle_waypoints`, the list must contain all
     * the remaining waypoints of the vehicle's trips, with no extra waypoints.
     * You must order these waypoints such that for a given trip, the pickup
     * point is before intermediate destinations, and all intermediate
     * destinations come before the drop-off point. An `EXCLUSIVE` trip's
     * waypoints must not interleave with any other trips.
     * The `trip_id`, `waypoint_type` and `location` fields are used, and all
     * other TripWaypoint fields in `vehicle_waypoints` are ignored.
     *
     * Generated from protobuf field <code>.maps.fleetengine.v1.Trip trip = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $trip = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Maps\FleetEngine\V1\RequestHeader $header
     *           The standard Fleet Engine request header.
     *     @type string $parent
     *           Required. Must be in the format `providers/{provider}`.
     *           The provider must be the Project ID (for example, `sample-cloud-project`)
     *           of the Google Cloud Project of which the service account making
     *           this call is a member.
     *     @type string $trip_id
     *           Required. Unique Trip ID.
     *           Subject to the following restrictions:
     *           * Must be a valid Unicode string.
     *           * Limited to a maximum length of 64 characters.
     *           * Normalized according to [Unicode Normalization Form C]
     *           (http://www.unicode.org/reports/tr15/).
     *           * May not contain any of the following ASCII characters: '/', ':', '?',
     *           ',', or '#'.
     *     @type \Google\Maps\FleetEngine\V1\Trip $trip
     *           Required. Trip entity to create.
     *           When creating a Trip, the following fields are required:
     *           * `trip_type`
     *           * `pickup_point`
     *           The following fields are used if you provide them:
     *           * `number_of_passengers`
     *           * `vehicle_id`
     *           * `dropoff_point`
     *           * `intermediate_destinations`
     *           * `vehicle_waypoints`
     *           All other Trip fields are ignored. For example, all trips start with a
     *           `trip_status` of `NEW` even if you pass in a `trip_status` of `CANCELED` in
     *           the creation request.
     *           Only `EXCLUSIVE` trips support `intermediate_destinations`.
     *           When `vehicle_id` is set for a shared trip, you must supply
     *           the list of `Trip.vehicle_waypoints` to specify the order of the remaining
     *           waypoints for the vehicle, otherwise the waypoint order will be
     *           undetermined.
     *           When you specify `Trip.vehicle_waypoints`, the list must contain all
     *           the remaining waypoints of the vehicle's trips, with no extra waypoints.
     *           You must order these waypoints such that for a given trip, the pickup
     *           point is before intermediate destinations, and all intermediate
     *           destinations come before the drop-off point. An `EXCLUSIVE` trip's
     *           waypoints must not interleave with any other trips.
     *           The `trip_id`, `waypoint_type` and `location` fields are used, and all
     *           other TripWaypoint fields in `vehicle_waypoints` are ignored.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Maps\Fleetengine\V1\TripApi::initOnce();
        parent::__construct($data);
    }

    /**
     * The standard Fleet Engine request header.
     *
     * Generated from protobuf field <code>.maps.fleetengine.v1.RequestHeader header = 1;</code>
     * @return \Google\Maps\FleetEngine\V1\RequestHeader|null
     */
    public function getHeader()
    {
        return $this->header;
    }

    public function hasHeader()
    {
        return isset($this->header);
    }

    public function clearHeader()
    {
        unset($this->header);
    }

    /**
     * The standard Fleet Engine request header.
     *
     * Generated from protobuf field <code>.maps.fleetengine.v1.RequestHeader header = 1;</code>
     * @param \Google\Maps\FleetEngine\V1\RequestHeader $var
     * @return $this
     */
    public function setHeader($var)
    {
        GPBUtil::checkMessage($var, \Google\Maps\FleetEngine\V1\RequestHeader::class);
        $this->header = $var;

        return $this;
    }

    /**
     * Required. Must be in the format `providers/{provider}`.
     * The provider must be the Project ID (for example, `sample-cloud-project`)
     * of the Google Cloud Project of which the service account making
     * this call is a member.
     *
     * Generated from protobuf field <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. Must be in the format `providers/{provider}`.
     * The provider must be the Project ID (for example, `sample-cloud-project`)
     * of the Google Cloud Project of which the service account making
     * this call is a member.
     *
     * Generated from protobuf field <code>string parent = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Required. Unique Trip ID.
     * Subject to the following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     *
     * Generated from protobuf field <code>string trip_id = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getTripId()
    {
        return $this->trip_id;
    }

    /**
     * Required. Unique Trip ID.
     * Subject to the following restrictions:
     * * Must be a valid Unicode string.
     * * Limited to a maximum length of 64 characters.
     * * Normalized according to [Unicode Normalization Form C]
     * (http://www.unicode.org/reports/tr15/).
     * * May not contain any of the following ASCII characters: '/', ':', '?',
     * ',', or '#'.
     *
     * Generated from protobuf field <code>string trip_id = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setTripId($var)
    {
        GPBUtil::checkString($var, True);
        $this->trip_id = $var;

        return $this;
    }

    /**
     * Required. Trip entity to create.
     * When creating a Trip, the following fields are required:
     * * `trip_type`
     * * `pickup_point`
     * The following fields are used if you provide them:
     * * `number_of_passengers`
     * * `vehicle_id`
     * * `dropoff_point`
     * * `intermediate_destinations`
     * * `vehicle_waypoints`
     * All other Trip fields are ignored. For example, all trips start with a
     * `trip_status` of `NEW` even if you pass in a `trip_status` of `CANCELED` in
     * the creation request.
     * Only `EXCLUSIVE` trips support `intermediate_destinations`.
     * When `vehicle_id` is set for a shared trip, you must supply
     * the list of `Trip.vehicle_waypoints` to specify the order of the remaining
     * waypoints for the vehicle, otherwise the waypoint order will be
     * undetermined.
     * When you specify `Trip.vehicle_waypoints`, the list must contain all
     * the remaining waypoints of the vehicle's trips, with no extra waypoints.
     * You must order these waypoints such that for a given trip, the pickup
     * point is before intermediate destinations, and all intermediate
     * destinations come before the drop-off point. An `EXCLUSIVE` trip's
     * waypoints must not interleave with any other trips.
     * The `trip_id`, `waypoint_type` and `location` fields are used, and all
     * other TripWaypoint fields in `vehicle_waypoints` are ignored.
     *
     * Generated from protobuf field <code>.maps.fleetengine.v1.Trip trip = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Maps\FleetEngine\V1\Trip|null
     */
    public function getTrip()
    {
        return $this->trip;
    }

    public function hasTrip()
    {
        return isset($this->trip);
    }

    public function clearTrip()
    {
        unset($this->trip);
    }

    /**
     * Required. Trip entity to create.
     * When creating a Trip, the following fields are required:
     * * `trip_type`
     * * `pickup_point`
     * The following fields are used if you provide them:
     * * `number_of_passengers`
     * * `vehicle_id`
     * * `dropoff_point`
     * * `intermediate_destinations`
     * * `vehicle_waypoints`
     * All other Trip fields are ignored. For example, all trips start with a
     * `trip_status` of `NEW` even if you pass in a `trip_status` of `CANCELED` in
     * the creation request.
     * Only `EXCLUSIVE` trips support `intermediate_destinations`.
     * When `vehicle_id` is set for a shared trip, you must supply
     * the list of `Trip.vehicle_waypoints` to specify the order of the remaining
     * waypoints for the vehicle, otherwise the waypoint order will be
     * undetermined.
     * When you specify `Trip.vehicle_waypoints`, the list must contain all
     * the remaining waypoints of the vehicle's trips, with no extra waypoints.
     * You must order these waypoints such that for a given trip, the pickup
     * point is before intermediate destinations, and all intermediate
     * destinations come before the drop-off point. An `EXCLUSIVE` trip's
     * waypoints must not interleave with any other trips.
     * The `trip_id`, `waypoint_type` and `location` fields are used, and all
     * other TripWaypoint fields in `vehicle_waypoints` are ignored.
     *
     * Generated from protobuf field <code>.maps.fleetengine.v1.Trip trip = 4 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Maps\FleetEngine\V1\Trip $var
     * @return $this
     */
    public function setTrip($var)
    {
        GPBUtil::checkMessage($var, \Google\Maps\FleetEngine\V1\Trip::class);
        $this->trip = $var;

        return $this;
    }

}

