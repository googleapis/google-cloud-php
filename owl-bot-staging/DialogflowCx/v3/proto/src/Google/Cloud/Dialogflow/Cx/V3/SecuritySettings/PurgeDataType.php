<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dialogflow/cx/v3/security_settings.proto

namespace Google\Cloud\Dialogflow\Cx\V3\SecuritySettings;

use UnexpectedValueException;

/**
 * Type of data we purge after retention settings triggers purge.
 *
 * Protobuf type <code>google.cloud.dialogflow.cx.v3.SecuritySettings.PurgeDataType</code>
 */
class PurgeDataType
{
    /**
     * Unspecified. Do not use.
     *
     * Generated from protobuf enum <code>PURGE_DATA_TYPE_UNSPECIFIED = 0;</code>
     */
    const PURGE_DATA_TYPE_UNSPECIFIED = 0;
    /**
     * Dialogflow history. This does not include Cloud logging, which is
     * owned by the user - not Dialogflow.
     *
     * Generated from protobuf enum <code>DIALOGFLOW_HISTORY = 1;</code>
     */
    const DIALOGFLOW_HISTORY = 1;

    private static $valueToName = [
        self::PURGE_DATA_TYPE_UNSPECIFIED => 'PURGE_DATA_TYPE_UNSPECIFIED',
        self::DIALOGFLOW_HISTORY => 'DIALOGFLOW_HISTORY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PurgeDataType::class, \Google\Cloud\Dialogflow\Cx\V3\SecuritySettings_PurgeDataType::class);

