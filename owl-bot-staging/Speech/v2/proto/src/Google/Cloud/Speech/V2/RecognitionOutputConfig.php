<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/speech/v2/cloud_speech.proto

namespace Google\Cloud\Speech\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Configuration options for the output(s) of recognition.
 *
 * Generated from protobuf message <code>google.cloud.speech.v2.RecognitionOutputConfig</code>
 */
class RecognitionOutputConfig extends \Google\Protobuf\Internal\Message
{
    protected $output;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Speech\V2\GcsOutputConfig $gcs_output_config
     *           If this message is populated, recognition results are written to the
     *           provided Google Cloud Storage URI.
     *     @type \Google\Cloud\Speech\V2\InlineOutputConfig $inline_response_config
     *           If this message is populated, recognition results are provided in the
     *           [BatchRecognizeResponse][google.cloud.speech.v2.BatchRecognizeResponse]
     *           message of the Operation when completed. This is only supported when
     *           calling [BatchRecognize][google.cloud.speech.v2.Speech.BatchRecognize]
     *           with just one audio file.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Speech\V2\CloudSpeech::initOnce();
        parent::__construct($data);
    }

    /**
     * If this message is populated, recognition results are written to the
     * provided Google Cloud Storage URI.
     *
     * Generated from protobuf field <code>.google.cloud.speech.v2.GcsOutputConfig gcs_output_config = 1;</code>
     * @return \Google\Cloud\Speech\V2\GcsOutputConfig|null
     */
    public function getGcsOutputConfig()
    {
        return $this->readOneof(1);
    }

    public function hasGcsOutputConfig()
    {
        return $this->hasOneof(1);
    }

    /**
     * If this message is populated, recognition results are written to the
     * provided Google Cloud Storage URI.
     *
     * Generated from protobuf field <code>.google.cloud.speech.v2.GcsOutputConfig gcs_output_config = 1;</code>
     * @param \Google\Cloud\Speech\V2\GcsOutputConfig $var
     * @return $this
     */
    public function setGcsOutputConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Speech\V2\GcsOutputConfig::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * If this message is populated, recognition results are provided in the
     * [BatchRecognizeResponse][google.cloud.speech.v2.BatchRecognizeResponse]
     * message of the Operation when completed. This is only supported when
     * calling [BatchRecognize][google.cloud.speech.v2.Speech.BatchRecognize]
     * with just one audio file.
     *
     * Generated from protobuf field <code>.google.cloud.speech.v2.InlineOutputConfig inline_response_config = 2;</code>
     * @return \Google\Cloud\Speech\V2\InlineOutputConfig|null
     */
    public function getInlineResponseConfig()
    {
        return $this->readOneof(2);
    }

    public function hasInlineResponseConfig()
    {
        return $this->hasOneof(2);
    }

    /**
     * If this message is populated, recognition results are provided in the
     * [BatchRecognizeResponse][google.cloud.speech.v2.BatchRecognizeResponse]
     * message of the Operation when completed. This is only supported when
     * calling [BatchRecognize][google.cloud.speech.v2.Speech.BatchRecognize]
     * with just one audio file.
     *
     * Generated from protobuf field <code>.google.cloud.speech.v2.InlineOutputConfig inline_response_config = 2;</code>
     * @param \Google\Cloud\Speech\V2\InlineOutputConfig $var
     * @return $this
     */
    public function setInlineResponseConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Speech\V2\InlineOutputConfig::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getOutput()
    {
        return $this->whichOneof("output");
    }

}

