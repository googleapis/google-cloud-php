<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/speech/v2/cloud_speech.proto

namespace Google\Cloud\Speech\V2\BatchRecognizeRequest;

use UnexpectedValueException;

/**
 * Possible processing strategies for batch requests.
 *
 * Protobuf type <code>google.cloud.speech.v2.BatchRecognizeRequest.ProcessingStrategy</code>
 */
class ProcessingStrategy
{
    /**
     * Default value for the processing strategy. The request is processed as
     * soon as its received.
     *
     * Generated from protobuf enum <code>PROCESSING_STRATEGY_UNSPECIFIED = 0;</code>
     */
    const PROCESSING_STRATEGY_UNSPECIFIED = 0;
    /**
     * If selected, processes the request during lower utilization periods for a
     * price discount. The request is fulfilled within 24 hours.
     *
     * Generated from protobuf enum <code>DYNAMIC_BATCHING = 1;</code>
     */
    const DYNAMIC_BATCHING = 1;

    private static $valueToName = [
        self::PROCESSING_STRATEGY_UNSPECIFIED => 'PROCESSING_STRATEGY_UNSPECIFIED',
        self::DYNAMIC_BATCHING => 'DYNAMIC_BATCHING',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ProcessingStrategy::class, \Google\Cloud\Speech\V2\BatchRecognizeRequest_ProcessingStrategy::class);

