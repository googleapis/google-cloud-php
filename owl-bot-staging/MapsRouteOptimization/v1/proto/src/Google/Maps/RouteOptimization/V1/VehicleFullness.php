<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/routeoptimization/v1/route_optimization_service.proto

namespace Google\Maps\RouteOptimization\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * [VehicleFullness][google.maps.routeoptimization.v1.VehicleFullness] is a
 * metric which computes how full a vehicle is. Each
 * [VehicleFullness][google.maps.routeoptimization.v1.VehicleFullness] field is
 * between 0 and 1, computed as the ratio between a capped metric field (e.g.
 * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters])
 * and its related vehicle limit (e.g.
 * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]),
 * if it exists. Otherwise the fullness ratio stays unset. If the limit is 0,
 * the field is set to 1. Note: when a route is subject to traffic
 * infeasibilities, some raw fullness ratios might exceed 1.0, e.g. the vehicle
 * might exceed its distance limit. In these cases, we cap the fullness values
 * at 1.0.
 *
 * Generated from protobuf message <code>google.maps.routeoptimization.v1.VehicleFullness</code>
 */
class VehicleFullness extends \Google\Protobuf\Internal\Message
{
    /**
     * Maximum of all other fields in this message.
     *
     * Generated from protobuf field <code>optional double max_fullness = 1;</code>
     */
    protected $max_fullness = null;
    /**
     * The ratio between
     * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters]
     * and
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit].
     * If
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]
     * is unset, this field will be unset.
     *
     * Generated from protobuf field <code>optional double distance = 2;</code>
     */
    protected $distance = null;
    /**
     * The ratio between [AggregatedMetrics.travel_duration_seconds][] and
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit].
     * If
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit]
     * is unset, this field will be unset.
     *
     * Generated from protobuf field <code>optional double travel_duration = 3;</code>
     */
    protected $travel_duration = null;
    /**
     * The ratio between [AggregatedMetrics.total_duration_seconds][] and
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit].
     * If
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit]
     * is unset, this field will be unset.
     *
     * Generated from protobuf field <code>optional double active_duration = 4;</code>
     */
    protected $active_duration = null;
    /**
     * The maximum ratio among all types of [AggregatedMetrics.max_load][] and
     * their respective
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits].
     * If all
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits]
     * fields are unset, this field will be unset.
     *
     * Generated from protobuf field <code>optional double max_load = 5;</code>
     */
    protected $max_load = null;
    /**
     * The ratio (vehicle_end_time - vehicle_start_time) /
     * (latest_vehicle_end_time - earliest_vehicle_start_time) for a given
     * vehicle. If the denominator is not present, it uses
     * ([ShipmentModel.global_end_time][google.maps.routeoptimization.v1.ShipmentModel.global_end_time]
     * -
     * [ShipmentModel.global_start_time][google.maps.routeoptimization.v1.ShipmentModel.global_start_time])
     * instead.
     *
     * Generated from protobuf field <code>optional double active_span = 6;</code>
     */
    protected $active_span = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type float $max_fullness
     *           Maximum of all other fields in this message.
     *     @type float $distance
     *           The ratio between
     *           [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters]
     *           and
     *           [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit].
     *           If
     *           [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]
     *           is unset, this field will be unset.
     *     @type float $travel_duration
     *           The ratio between [AggregatedMetrics.travel_duration_seconds][] and
     *           [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit].
     *           If
     *           [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit]
     *           is unset, this field will be unset.
     *     @type float $active_duration
     *           The ratio between [AggregatedMetrics.total_duration_seconds][] and
     *           [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit].
     *           If
     *           [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit]
     *           is unset, this field will be unset.
     *     @type float $max_load
     *           The maximum ratio among all types of [AggregatedMetrics.max_load][] and
     *           their respective
     *           [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits].
     *           If all
     *           [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits]
     *           fields are unset, this field will be unset.
     *     @type float $active_span
     *           The ratio (vehicle_end_time - vehicle_start_time) /
     *           (latest_vehicle_end_time - earliest_vehicle_start_time) for a given
     *           vehicle. If the denominator is not present, it uses
     *           ([ShipmentModel.global_end_time][google.maps.routeoptimization.v1.ShipmentModel.global_end_time]
     *           -
     *           [ShipmentModel.global_start_time][google.maps.routeoptimization.v1.ShipmentModel.global_start_time])
     *           instead.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Maps\Routeoptimization\V1\RouteOptimizationService::initOnce();
        parent::__construct($data);
    }

    /**
     * Maximum of all other fields in this message.
     *
     * Generated from protobuf field <code>optional double max_fullness = 1;</code>
     * @return float
     */
    public function getMaxFullness()
    {
        return isset($this->max_fullness) ? $this->max_fullness : 0.0;
    }

    public function hasMaxFullness()
    {
        return isset($this->max_fullness);
    }

    public function clearMaxFullness()
    {
        unset($this->max_fullness);
    }

    /**
     * Maximum of all other fields in this message.
     *
     * Generated from protobuf field <code>optional double max_fullness = 1;</code>
     * @param float $var
     * @return $this
     */
    public function setMaxFullness($var)
    {
        GPBUtil::checkDouble($var);
        $this->max_fullness = $var;

        return $this;
    }

    /**
     * The ratio between
     * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters]
     * and
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit].
     * If
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]
     * is unset, this field will be unset.
     *
     * Generated from protobuf field <code>optional double distance = 2;</code>
     * @return float
     */
    public function getDistance()
    {
        return isset($this->distance) ? $this->distance : 0.0;
    }

    public function hasDistance()
    {
        return isset($this->distance);
    }

    public function clearDistance()
    {
        unset($this->distance);
    }

    /**
     * The ratio between
     * [AggregatedMetrics.travel_distance_meters][google.maps.routeoptimization.v1.AggregatedMetrics.travel_distance_meters]
     * and
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit].
     * If
     * [Vehicle.route_distance_limit][google.maps.routeoptimization.v1.Vehicle.route_distance_limit]
     * is unset, this field will be unset.
     *
     * Generated from protobuf field <code>optional double distance = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setDistance($var)
    {
        GPBUtil::checkDouble($var);
        $this->distance = $var;

        return $this;
    }

    /**
     * The ratio between [AggregatedMetrics.travel_duration_seconds][] and
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit].
     * If
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit]
     * is unset, this field will be unset.
     *
     * Generated from protobuf field <code>optional double travel_duration = 3;</code>
     * @return float
     */
    public function getTravelDuration()
    {
        return isset($this->travel_duration) ? $this->travel_duration : 0.0;
    }

    public function hasTravelDuration()
    {
        return isset($this->travel_duration);
    }

    public function clearTravelDuration()
    {
        unset($this->travel_duration);
    }

    /**
     * The ratio between [AggregatedMetrics.travel_duration_seconds][] and
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit].
     * If
     * [Vehicle.travel_duration_limit][google.maps.routeoptimization.v1.Vehicle.travel_duration_limit]
     * is unset, this field will be unset.
     *
     * Generated from protobuf field <code>optional double travel_duration = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setTravelDuration($var)
    {
        GPBUtil::checkDouble($var);
        $this->travel_duration = $var;

        return $this;
    }

    /**
     * The ratio between [AggregatedMetrics.total_duration_seconds][] and
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit].
     * If
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit]
     * is unset, this field will be unset.
     *
     * Generated from protobuf field <code>optional double active_duration = 4;</code>
     * @return float
     */
    public function getActiveDuration()
    {
        return isset($this->active_duration) ? $this->active_duration : 0.0;
    }

    public function hasActiveDuration()
    {
        return isset($this->active_duration);
    }

    public function clearActiveDuration()
    {
        unset($this->active_duration);
    }

    /**
     * The ratio between [AggregatedMetrics.total_duration_seconds][] and
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit].
     * If
     * [Vehicle.route_duration_limit][google.maps.routeoptimization.v1.Vehicle.route_duration_limit]
     * is unset, this field will be unset.
     *
     * Generated from protobuf field <code>optional double active_duration = 4;</code>
     * @param float $var
     * @return $this
     */
    public function setActiveDuration($var)
    {
        GPBUtil::checkDouble($var);
        $this->active_duration = $var;

        return $this;
    }

    /**
     * The maximum ratio among all types of [AggregatedMetrics.max_load][] and
     * their respective
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits].
     * If all
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits]
     * fields are unset, this field will be unset.
     *
     * Generated from protobuf field <code>optional double max_load = 5;</code>
     * @return float
     */
    public function getMaxLoad()
    {
        return isset($this->max_load) ? $this->max_load : 0.0;
    }

    public function hasMaxLoad()
    {
        return isset($this->max_load);
    }

    public function clearMaxLoad()
    {
        unset($this->max_load);
    }

    /**
     * The maximum ratio among all types of [AggregatedMetrics.max_load][] and
     * their respective
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits].
     * If all
     * [Vehicle.load_limits][google.maps.routeoptimization.v1.Vehicle.load_limits]
     * fields are unset, this field will be unset.
     *
     * Generated from protobuf field <code>optional double max_load = 5;</code>
     * @param float $var
     * @return $this
     */
    public function setMaxLoad($var)
    {
        GPBUtil::checkDouble($var);
        $this->max_load = $var;

        return $this;
    }

    /**
     * The ratio (vehicle_end_time - vehicle_start_time) /
     * (latest_vehicle_end_time - earliest_vehicle_start_time) for a given
     * vehicle. If the denominator is not present, it uses
     * ([ShipmentModel.global_end_time][google.maps.routeoptimization.v1.ShipmentModel.global_end_time]
     * -
     * [ShipmentModel.global_start_time][google.maps.routeoptimization.v1.ShipmentModel.global_start_time])
     * instead.
     *
     * Generated from protobuf field <code>optional double active_span = 6;</code>
     * @return float
     */
    public function getActiveSpan()
    {
        return isset($this->active_span) ? $this->active_span : 0.0;
    }

    public function hasActiveSpan()
    {
        return isset($this->active_span);
    }

    public function clearActiveSpan()
    {
        unset($this->active_span);
    }

    /**
     * The ratio (vehicle_end_time - vehicle_start_time) /
     * (latest_vehicle_end_time - earliest_vehicle_start_time) for a given
     * vehicle. If the denominator is not present, it uses
     * ([ShipmentModel.global_end_time][google.maps.routeoptimization.v1.ShipmentModel.global_end_time]
     * -
     * [ShipmentModel.global_start_time][google.maps.routeoptimization.v1.ShipmentModel.global_start_time])
     * instead.
     *
     * Generated from protobuf field <code>optional double active_span = 6;</code>
     * @param float $var
     * @return $this
     */
    public function setActiveSpan($var)
    {
        GPBUtil::checkDouble($var);
        $this->active_span = $var;

        return $this;
    }

}

