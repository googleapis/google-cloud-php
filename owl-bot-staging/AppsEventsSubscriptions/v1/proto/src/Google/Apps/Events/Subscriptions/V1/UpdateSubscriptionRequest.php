<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/apps/events/subscriptions/v1/subscriptions_service.proto

namespace Google\Apps\Events\Subscriptions\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The request message for
 * [SubscriptionsService.UpdateSubscription][google.apps.events.subscriptions.v1.SubscriptionsService.UpdateSubscription].
 *
 * Generated from protobuf message <code>google.apps.events.subscriptions.v1.UpdateSubscriptionRequest</code>
 */
class UpdateSubscriptionRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The subscription to update.
     * The subscription's `name` field is used to identify the subscription to
     * update.
     *
     * Generated from protobuf field <code>.google.apps.events.subscriptions.v1.Subscription subscription = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $subscription = null;
    /**
     * Optional. Required. The field to update.
     * You can update one of the following fields in a subscription:
     * * [`expire_time`][google.apps.events.subscriptions.v1.Subscription.expire_time]: The timestamp when the
     *   subscription expires.
     * * [`ttl`][google.apps.events.subscriptions.v1.Subscription.ttl]: The
     * time-to-live (TTL) or duration of the
     *   subscription.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $update_mask = null;
    /**
     * Optional. If set to `true`, validates and previews the request, but doesn't
     * update the subscription.
     *
     * Generated from protobuf field <code>bool validate_only = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $validate_only = false;

    /**
     * @param \Google\Apps\Events\Subscriptions\V1\Subscription $subscription Required. The subscription to update.
     *
     *                                                                        The subscription's `name` field is used to identify the subscription to
     *                                                                        update.
     * @param \Google\Protobuf\FieldMask                        $updateMask   Optional. Required. The field to update.
     *
     *                                                                        You can update one of the following fields in a subscription:
     *
     *                                                                        * [`expire_time`][google.apps.events.subscriptions.v1.Subscription.expire_time]: The timestamp when the
     *                                                                        subscription expires.
     *                                                                        * [`ttl`][google.apps.events.subscriptions.v1.Subscription.ttl]: The
     *                                                                        time-to-live (TTL) or duration of the
     *                                                                        subscription.
     *
     * @return \Google\Apps\Events\Subscriptions\V1\UpdateSubscriptionRequest
     *
     * @experimental
     */
    public static function build(\Google\Apps\Events\Subscriptions\V1\Subscription $subscription, \Google\Protobuf\FieldMask $updateMask): self
    {
        return (new self())
            ->setSubscription($subscription)
            ->setUpdateMask($updateMask);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Apps\Events\Subscriptions\V1\Subscription $subscription
     *           Required. The subscription to update.
     *           The subscription's `name` field is used to identify the subscription to
     *           update.
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           Optional. Required. The field to update.
     *           You can update one of the following fields in a subscription:
     *           * [`expire_time`][google.apps.events.subscriptions.v1.Subscription.expire_time]: The timestamp when the
     *             subscription expires.
     *           * [`ttl`][google.apps.events.subscriptions.v1.Subscription.ttl]: The
     *           time-to-live (TTL) or duration of the
     *             subscription.
     *     @type bool $validate_only
     *           Optional. If set to `true`, validates and previews the request, but doesn't
     *           update the subscription.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Apps\Events\Subscriptions\V1\SubscriptionsService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The subscription to update.
     * The subscription's `name` field is used to identify the subscription to
     * update.
     *
     * Generated from protobuf field <code>.google.apps.events.subscriptions.v1.Subscription subscription = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Apps\Events\Subscriptions\V1\Subscription|null
     */
    public function getSubscription()
    {
        return $this->subscription;
    }

    public function hasSubscription()
    {
        return isset($this->subscription);
    }

    public function clearSubscription()
    {
        unset($this->subscription);
    }

    /**
     * Required. The subscription to update.
     * The subscription's `name` field is used to identify the subscription to
     * update.
     *
     * Generated from protobuf field <code>.google.apps.events.subscriptions.v1.Subscription subscription = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Apps\Events\Subscriptions\V1\Subscription $var
     * @return $this
     */
    public function setSubscription($var)
    {
        GPBUtil::checkMessage($var, \Google\Apps\Events\Subscriptions\V1\Subscription::class);
        $this->subscription = $var;

        return $this;
    }

    /**
     * Optional. Required. The field to update.
     * You can update one of the following fields in a subscription:
     * * [`expire_time`][google.apps.events.subscriptions.v1.Subscription.expire_time]: The timestamp when the
     *   subscription expires.
     * * [`ttl`][google.apps.events.subscriptions.v1.Subscription.ttl]: The
     * time-to-live (TTL) or duration of the
     *   subscription.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * Optional. Required. The field to update.
     * You can update one of the following fields in a subscription:
     * * [`expire_time`][google.apps.events.subscriptions.v1.Subscription.expire_time]: The timestamp when the
     *   subscription expires.
     * * [`ttl`][google.apps.events.subscriptions.v1.Subscription.ttl]: The
     * time-to-live (TTL) or duration of the
     *   subscription.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

    /**
     * Optional. If set to `true`, validates and previews the request, but doesn't
     * update the subscription.
     *
     * Generated from protobuf field <code>bool validate_only = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getValidateOnly()
    {
        return $this->validate_only;
    }

    /**
     * Optional. If set to `true`, validates and previews the request, but doesn't
     * update the subscription.
     *
     * Generated from protobuf field <code>bool validate_only = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setValidateOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->validate_only = $var;

        return $this;
    }

}

