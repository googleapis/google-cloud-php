<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/privilegedaccessmanager/v1/privilegedaccessmanager.proto

namespace Google\Cloud\PrivilegedAccessManager\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An entitlement defines the eligibility of a set of users to obtain
 * predefined access for some time possibly after going through an approval
 * workflow.
 *
 * Generated from protobuf message <code>google.cloud.privilegedaccessmanager.v1.Entitlement</code>
 */
class Entitlement extends \Google\Protobuf\Internal\Message
{
    /**
     * Identifier. Name of the entitlement.
     * Possible formats:
     * * `organizations/{organization-number}/locations/{region}/entitlements/{entitlement-id}`
     * * `folders/{folder-number}/locations/{region}/entitlements/{entitlement-id}`
     * * `projects/{project-id|project-number}/locations/{region}/entitlements/{entitlement-id}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     */
    protected $name = '';
    /**
     * Output only. Create time stamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $create_time = null;
    /**
     * Output only. Update time stamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $update_time = null;
    /**
     * Optional. Who can create grants using this entitlement. This list should
     * contain at most one entry.
     *
     * Generated from protobuf field <code>repeated .google.cloud.privilegedaccessmanager.v1.AccessControlEntry eligible_users = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $eligible_users;
    /**
     * Optional. The approvals needed before access are granted to a requester. No
     * approvals are needed if this field is null.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.ApprovalWorkflow approval_workflow = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $approval_workflow = null;
    /**
     * The access granted to a requester on successful approval.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.PrivilegedAccess privileged_access = 7;</code>
     */
    protected $privileged_access = null;
    /**
     * Required. The maximum amount of time that access is granted for a request.
     * A requester can ask for a duration less than this, but never more.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_request_duration = 8 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $max_request_duration = null;
    /**
     * Output only. Current state of this entitlement.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.Entitlement.State state = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $state = 0;
    /**
     * Required. The manner in which the requester should provide a justification
     * for requesting access.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig requester_justification_config = 10 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $requester_justification_config = null;
    /**
     * Optional. Additional email addresses to be notified based on actions taken.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.Entitlement.AdditionalNotificationTargets additional_notification_targets = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $additional_notification_targets = null;
    /**
     * An `etag` is used for optimistic concurrency control as a way to prevent
     * simultaneous updates to the same entitlement. An `etag` is returned in the
     * response to `GetEntitlement` and the caller should put the `etag` in the
     * request to `UpdateEntitlement` so that their change is applied on
     * the same version. If this field is omitted or if there is a mismatch while
     * updating an entitlement, then the server rejects the request.
     *
     * Generated from protobuf field <code>string etag = 12;</code>
     */
    protected $etag = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Identifier. Name of the entitlement.
     *           Possible formats:
     *           * `organizations/{organization-number}/locations/{region}/entitlements/{entitlement-id}`
     *           * `folders/{folder-number}/locations/{region}/entitlements/{entitlement-id}`
     *           * `projects/{project-id|project-number}/locations/{region}/entitlements/{entitlement-id}`
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. Create time stamp.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. Update time stamp.
     *     @type array<\Google\Cloud\PrivilegedAccessManager\V1\AccessControlEntry>|\Google\Protobuf\Internal\RepeatedField $eligible_users
     *           Optional. Who can create grants using this entitlement. This list should
     *           contain at most one entry.
     *     @type \Google\Cloud\PrivilegedAccessManager\V1\ApprovalWorkflow $approval_workflow
     *           Optional. The approvals needed before access are granted to a requester. No
     *           approvals are needed if this field is null.
     *     @type \Google\Cloud\PrivilegedAccessManager\V1\PrivilegedAccess $privileged_access
     *           The access granted to a requester on successful approval.
     *     @type \Google\Protobuf\Duration $max_request_duration
     *           Required. The maximum amount of time that access is granted for a request.
     *           A requester can ask for a duration less than this, but never more.
     *     @type int $state
     *           Output only. Current state of this entitlement.
     *     @type \Google\Cloud\PrivilegedAccessManager\V1\Entitlement\RequesterJustificationConfig $requester_justification_config
     *           Required. The manner in which the requester should provide a justification
     *           for requesting access.
     *     @type \Google\Cloud\PrivilegedAccessManager\V1\Entitlement\AdditionalNotificationTargets $additional_notification_targets
     *           Optional. Additional email addresses to be notified based on actions taken.
     *     @type string $etag
     *           An `etag` is used for optimistic concurrency control as a way to prevent
     *           simultaneous updates to the same entitlement. An `etag` is returned in the
     *           response to `GetEntitlement` and the caller should put the `etag` in the
     *           request to `UpdateEntitlement` so that their change is applied on
     *           the same version. If this field is omitted or if there is a mismatch while
     *           updating an entitlement, then the server rejects the request.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Privilegedaccessmanager\V1\Privilegedaccessmanager::initOnce();
        parent::__construct($data);
    }

    /**
     * Identifier. Name of the entitlement.
     * Possible formats:
     * * `organizations/{organization-number}/locations/{region}/entitlements/{entitlement-id}`
     * * `folders/{folder-number}/locations/{region}/entitlements/{entitlement-id}`
     * * `projects/{project-id|project-number}/locations/{region}/entitlements/{entitlement-id}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Identifier. Name of the entitlement.
     * Possible formats:
     * * `organizations/{organization-number}/locations/{region}/entitlements/{entitlement-id}`
     * * `folders/{folder-number}/locations/{region}/entitlements/{entitlement-id}`
     * * `projects/{project-id|project-number}/locations/{region}/entitlements/{entitlement-id}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Output only. Create time stamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. Create time stamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * Output only. Update time stamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. Update time stamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Optional. Who can create grants using this entitlement. This list should
     * contain at most one entry.
     *
     * Generated from protobuf field <code>repeated .google.cloud.privilegedaccessmanager.v1.AccessControlEntry eligible_users = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getEligibleUsers()
    {
        return $this->eligible_users;
    }

    /**
     * Optional. Who can create grants using this entitlement. This list should
     * contain at most one entry.
     *
     * Generated from protobuf field <code>repeated .google.cloud.privilegedaccessmanager.v1.AccessControlEntry eligible_users = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Cloud\PrivilegedAccessManager\V1\AccessControlEntry>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setEligibleUsers($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\PrivilegedAccessManager\V1\AccessControlEntry::class);
        $this->eligible_users = $arr;

        return $this;
    }

    /**
     * Optional. The approvals needed before access are granted to a requester. No
     * approvals are needed if this field is null.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.ApprovalWorkflow approval_workflow = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\PrivilegedAccessManager\V1\ApprovalWorkflow|null
     */
    public function getApprovalWorkflow()
    {
        return $this->approval_workflow;
    }

    public function hasApprovalWorkflow()
    {
        return isset($this->approval_workflow);
    }

    public function clearApprovalWorkflow()
    {
        unset($this->approval_workflow);
    }

    /**
     * Optional. The approvals needed before access are granted to a requester. No
     * approvals are needed if this field is null.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.ApprovalWorkflow approval_workflow = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\PrivilegedAccessManager\V1\ApprovalWorkflow $var
     * @return $this
     */
    public function setApprovalWorkflow($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\PrivilegedAccessManager\V1\ApprovalWorkflow::class);
        $this->approval_workflow = $var;

        return $this;
    }

    /**
     * The access granted to a requester on successful approval.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.PrivilegedAccess privileged_access = 7;</code>
     * @return \Google\Cloud\PrivilegedAccessManager\V1\PrivilegedAccess|null
     */
    public function getPrivilegedAccess()
    {
        return $this->privileged_access;
    }

    public function hasPrivilegedAccess()
    {
        return isset($this->privileged_access);
    }

    public function clearPrivilegedAccess()
    {
        unset($this->privileged_access);
    }

    /**
     * The access granted to a requester on successful approval.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.PrivilegedAccess privileged_access = 7;</code>
     * @param \Google\Cloud\PrivilegedAccessManager\V1\PrivilegedAccess $var
     * @return $this
     */
    public function setPrivilegedAccess($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\PrivilegedAccessManager\V1\PrivilegedAccess::class);
        $this->privileged_access = $var;

        return $this;
    }

    /**
     * Required. The maximum amount of time that access is granted for a request.
     * A requester can ask for a duration less than this, but never more.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_request_duration = 8 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Duration|null
     */
    public function getMaxRequestDuration()
    {
        return $this->max_request_duration;
    }

    public function hasMaxRequestDuration()
    {
        return isset($this->max_request_duration);
    }

    public function clearMaxRequestDuration()
    {
        unset($this->max_request_duration);
    }

    /**
     * Required. The maximum amount of time that access is granted for a request.
     * A requester can ask for a duration less than this, but never more.
     *
     * Generated from protobuf field <code>.google.protobuf.Duration max_request_duration = 8 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Protobuf\Duration $var
     * @return $this
     */
    public function setMaxRequestDuration($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Duration::class);
        $this->max_request_duration = $var;

        return $this;
    }

    /**
     * Output only. Current state of this entitlement.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.Entitlement.State state = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * Output only. Current state of this entitlement.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.Entitlement.State state = 9 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\PrivilegedAccessManager\V1\Entitlement\State::class);
        $this->state = $var;

        return $this;
    }

    /**
     * Required. The manner in which the requester should provide a justification
     * for requesting access.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig requester_justification_config = 10 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\PrivilegedAccessManager\V1\Entitlement\RequesterJustificationConfig|null
     */
    public function getRequesterJustificationConfig()
    {
        return $this->requester_justification_config;
    }

    public function hasRequesterJustificationConfig()
    {
        return isset($this->requester_justification_config);
    }

    public function clearRequesterJustificationConfig()
    {
        unset($this->requester_justification_config);
    }

    /**
     * Required. The manner in which the requester should provide a justification
     * for requesting access.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.Entitlement.RequesterJustificationConfig requester_justification_config = 10 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\PrivilegedAccessManager\V1\Entitlement\RequesterJustificationConfig $var
     * @return $this
     */
    public function setRequesterJustificationConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\PrivilegedAccessManager\V1\Entitlement\RequesterJustificationConfig::class);
        $this->requester_justification_config = $var;

        return $this;
    }

    /**
     * Optional. Additional email addresses to be notified based on actions taken.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.Entitlement.AdditionalNotificationTargets additional_notification_targets = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\PrivilegedAccessManager\V1\Entitlement\AdditionalNotificationTargets|null
     */
    public function getAdditionalNotificationTargets()
    {
        return $this->additional_notification_targets;
    }

    public function hasAdditionalNotificationTargets()
    {
        return isset($this->additional_notification_targets);
    }

    public function clearAdditionalNotificationTargets()
    {
        unset($this->additional_notification_targets);
    }

    /**
     * Optional. Additional email addresses to be notified based on actions taken.
     *
     * Generated from protobuf field <code>.google.cloud.privilegedaccessmanager.v1.Entitlement.AdditionalNotificationTargets additional_notification_targets = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\PrivilegedAccessManager\V1\Entitlement\AdditionalNotificationTargets $var
     * @return $this
     */
    public function setAdditionalNotificationTargets($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\PrivilegedAccessManager\V1\Entitlement\AdditionalNotificationTargets::class);
        $this->additional_notification_targets = $var;

        return $this;
    }

    /**
     * An `etag` is used for optimistic concurrency control as a way to prevent
     * simultaneous updates to the same entitlement. An `etag` is returned in the
     * response to `GetEntitlement` and the caller should put the `etag` in the
     * request to `UpdateEntitlement` so that their change is applied on
     * the same version. If this field is omitted or if there is a mismatch while
     * updating an entitlement, then the server rejects the request.
     *
     * Generated from protobuf field <code>string etag = 12;</code>
     * @return string
     */
    public function getEtag()
    {
        return $this->etag;
    }

    /**
     * An `etag` is used for optimistic concurrency control as a way to prevent
     * simultaneous updates to the same entitlement. An `etag` is returned in the
     * response to `GetEntitlement` and the caller should put the `etag` in the
     * request to `UpdateEntitlement` so that their change is applied on
     * the same version. If this field is omitted or if there is a mismatch while
     * updating an entitlement, then the server rejects the request.
     *
     * Generated from protobuf field <code>string etag = 12;</code>
     * @param string $var
     * @return $this
     */
    public function setEtag($var)
    {
        GPBUtil::checkString($var, True);
        $this->etag = $var;

        return $this;
    }

}

