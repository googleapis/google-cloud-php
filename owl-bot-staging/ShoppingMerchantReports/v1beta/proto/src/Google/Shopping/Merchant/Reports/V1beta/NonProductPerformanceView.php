<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/shopping/merchant/reports/v1beta/reports.proto

namespace Google\Shopping\Merchant\Reports\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Fields available for query in `non_product_performance_view` table.
 * Performance data on images and website links leading to your non-product
 * website pages. This includes performance metrics (for example, `clicks`)
 * and dimensions according to which performance metrics are segmented (for
 * example, `date`).
 * Segment fields cannot be selected in queries without also selecting at least
 * one metric field.
 * Values are only set for fields requested explicitly in the request's search
 * query.
 *
 * Generated from protobuf message <code>google.shopping.merchant.reports.v1beta.NonProductPerformanceView</code>
 */
class NonProductPerformanceView extends \Google\Protobuf\Internal\Message
{
    /**
     * Date in the merchant timezone to which metrics apply. Segment.
     * Condition on `date` is required in the `WHERE` clause.
     *
     * Generated from protobuf field <code>.google.type.Date date = 1;</code>
     */
    protected $date = null;
    /**
     * First day of the week (Monday) of the metrics date in the merchant
     * timezone. Segment.
     *
     * Generated from protobuf field <code>.google.type.Date week = 2;</code>
     */
    protected $week = null;
    /**
     * Number of clicks on images and website links leading to your non-product
     * website pages. Metric.
     *
     * Generated from protobuf field <code>optional int64 clicks = 3;</code>
     */
    protected $clicks = null;
    /**
     * Number of times images and website links leading to your non-product
     * website pages were shown. Metric.
     *
     * Generated from protobuf field <code>optional int64 impressions = 4;</code>
     */
    protected $impressions = null;
    /**
     * Click-through rate - the number of clicks (`clicks`) divided by the number
     * of impressions (`impressions`) of images and website links leading to your
     * non-product website pages. Metric.
     *
     * Generated from protobuf field <code>optional double click_through_rate = 5;</code>
     */
    protected $click_through_rate = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Type\Date $date
     *           Date in the merchant timezone to which metrics apply. Segment.
     *           Condition on `date` is required in the `WHERE` clause.
     *     @type \Google\Type\Date $week
     *           First day of the week (Monday) of the metrics date in the merchant
     *           timezone. Segment.
     *     @type int|string $clicks
     *           Number of clicks on images and website links leading to your non-product
     *           website pages. Metric.
     *     @type int|string $impressions
     *           Number of times images and website links leading to your non-product
     *           website pages were shown. Metric.
     *     @type float $click_through_rate
     *           Click-through rate - the number of clicks (`clicks`) divided by the number
     *           of impressions (`impressions`) of images and website links leading to your
     *           non-product website pages. Metric.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Shopping\Merchant\Reports\V1Beta\Reports::initOnce();
        parent::__construct($data);
    }

    /**
     * Date in the merchant timezone to which metrics apply. Segment.
     * Condition on `date` is required in the `WHERE` clause.
     *
     * Generated from protobuf field <code>.google.type.Date date = 1;</code>
     * @return \Google\Type\Date|null
     */
    public function getDate()
    {
        return $this->date;
    }

    public function hasDate()
    {
        return isset($this->date);
    }

    public function clearDate()
    {
        unset($this->date);
    }

    /**
     * Date in the merchant timezone to which metrics apply. Segment.
     * Condition on `date` is required in the `WHERE` clause.
     *
     * Generated from protobuf field <code>.google.type.Date date = 1;</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setDate($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->date = $var;

        return $this;
    }

    /**
     * First day of the week (Monday) of the metrics date in the merchant
     * timezone. Segment.
     *
     * Generated from protobuf field <code>.google.type.Date week = 2;</code>
     * @return \Google\Type\Date|null
     */
    public function getWeek()
    {
        return $this->week;
    }

    public function hasWeek()
    {
        return isset($this->week);
    }

    public function clearWeek()
    {
        unset($this->week);
    }

    /**
     * First day of the week (Monday) of the metrics date in the merchant
     * timezone. Segment.
     *
     * Generated from protobuf field <code>.google.type.Date week = 2;</code>
     * @param \Google\Type\Date $var
     * @return $this
     */
    public function setWeek($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Date::class);
        $this->week = $var;

        return $this;
    }

    /**
     * Number of clicks on images and website links leading to your non-product
     * website pages. Metric.
     *
     * Generated from protobuf field <code>optional int64 clicks = 3;</code>
     * @return int|string
     */
    public function getClicks()
    {
        return isset($this->clicks) ? $this->clicks : 0;
    }

    public function hasClicks()
    {
        return isset($this->clicks);
    }

    public function clearClicks()
    {
        unset($this->clicks);
    }

    /**
     * Number of clicks on images and website links leading to your non-product
     * website pages. Metric.
     *
     * Generated from protobuf field <code>optional int64 clicks = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setClicks($var)
    {
        GPBUtil::checkInt64($var);
        $this->clicks = $var;

        return $this;
    }

    /**
     * Number of times images and website links leading to your non-product
     * website pages were shown. Metric.
     *
     * Generated from protobuf field <code>optional int64 impressions = 4;</code>
     * @return int|string
     */
    public function getImpressions()
    {
        return isset($this->impressions) ? $this->impressions : 0;
    }

    public function hasImpressions()
    {
        return isset($this->impressions);
    }

    public function clearImpressions()
    {
        unset($this->impressions);
    }

    /**
     * Number of times images and website links leading to your non-product
     * website pages were shown. Metric.
     *
     * Generated from protobuf field <code>optional int64 impressions = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setImpressions($var)
    {
        GPBUtil::checkInt64($var);
        $this->impressions = $var;

        return $this;
    }

    /**
     * Click-through rate - the number of clicks (`clicks`) divided by the number
     * of impressions (`impressions`) of images and website links leading to your
     * non-product website pages. Metric.
     *
     * Generated from protobuf field <code>optional double click_through_rate = 5;</code>
     * @return float
     */
    public function getClickThroughRate()
    {
        return isset($this->click_through_rate) ? $this->click_through_rate : 0.0;
    }

    public function hasClickThroughRate()
    {
        return isset($this->click_through_rate);
    }

    public function clearClickThroughRate()
    {
        unset($this->click_through_rate);
    }

    /**
     * Click-through rate - the number of clicks (`clicks`) divided by the number
     * of impressions (`impressions`) of images and website links leading to your
     * non-product website pages. Metric.
     *
     * Generated from protobuf field <code>optional double click_through_rate = 5;</code>
     * @param float $var
     * @return $this
     */
    public function setClickThroughRate($var)
    {
        GPBUtil::checkDouble($var);
        $this->click_through_rate = $var;

        return $this;
    }

}

