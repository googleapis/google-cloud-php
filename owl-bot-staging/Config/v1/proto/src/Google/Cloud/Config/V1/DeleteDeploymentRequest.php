<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/config/v1/config.proto

namespace Google\Cloud\Config\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>google.cloud.config.v1.DeleteDeploymentRequest</code>
 */
class DeleteDeploymentRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the Deployment in the format:
     * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $name = '';
    /**
     * Optional. An optional request ID to identify requests. Specify a unique
     * request ID so that if you must retry your request, the server will know to
     * ignore the request if it has already been completed. The server will
     * guarantee that for at least 60 minutes after the first request.
     * For example, consider a situation where you make an initial request and the
     * request times out. If you make the request again with the same request ID,
     * the server can check if original operation with the same request ID was
     * received, and if so, will ignore the second request. This prevents clients
     * from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $request_id = '';
    /**
     * Optional. If set to true, any revisions for this deployment will also be
     * deleted. (Otherwise, the request will only work if the deployment has no
     * revisions.)
     *
     * Generated from protobuf field <code>bool force = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $force = false;
    /**
     * Optional. Policy on how resources actuated by the deployment should be
     * deleted. If unspecified, the default behavior is to delete the underlying
     * resources.
     *
     * Generated from protobuf field <code>.google.cloud.config.v1.DeleteDeploymentRequest.DeletePolicy delete_policy = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $delete_policy = 0;

    /**
     * @param string $name Required. The name of the Deployment in the format:
     *                     'projects/{project_id}/locations/{location}/deployments/{deployment}'. Please see
     *                     {@see ConfigClient::deploymentName()} for help formatting this field.
     *
     * @return \Google\Cloud\Config\V1\DeleteDeploymentRequest
     *
     * @experimental
     */
    public static function build(string $name): self
    {
        return (new self())
            ->setName($name);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The name of the Deployment in the format:
     *           'projects/{project_id}/locations/{location}/deployments/{deployment}'.
     *     @type string $request_id
     *           Optional. An optional request ID to identify requests. Specify a unique
     *           request ID so that if you must retry your request, the server will know to
     *           ignore the request if it has already been completed. The server will
     *           guarantee that for at least 60 minutes after the first request.
     *           For example, consider a situation where you make an initial request and the
     *           request times out. If you make the request again with the same request ID,
     *           the server can check if original operation with the same request ID was
     *           received, and if so, will ignore the second request. This prevents clients
     *           from accidentally creating duplicate commitments.
     *           The request ID must be a valid UUID with the exception that zero UUID is
     *           not supported (00000000-0000-0000-0000-000000000000).
     *     @type bool $force
     *           Optional. If set to true, any revisions for this deployment will also be
     *           deleted. (Otherwise, the request will only work if the deployment has no
     *           revisions.)
     *     @type int $delete_policy
     *           Optional. Policy on how resources actuated by the deployment should be
     *           deleted. If unspecified, the default behavior is to delete the underlying
     *           resources.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Config\V1\Config::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The name of the Deployment in the format:
     * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The name of the Deployment in the format:
     * 'projects/{project_id}/locations/{location}/deployments/{deployment}'.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. An optional request ID to identify requests. Specify a unique
     * request ID so that if you must retry your request, the server will know to
     * ignore the request if it has already been completed. The server will
     * guarantee that for at least 60 minutes after the first request.
     * For example, consider a situation where you make an initial request and the
     * request times out. If you make the request again with the same request ID,
     * the server can check if original operation with the same request ID was
     * received, and if so, will ignore the second request. This prevents clients
     * from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Optional. An optional request ID to identify requests. Specify a unique
     * request ID so that if you must retry your request, the server will know to
     * ignore the request if it has already been completed. The server will
     * guarantee that for at least 60 minutes after the first request.
     * For example, consider a situation where you make an initial request and the
     * request times out. If you make the request again with the same request ID,
     * the server can check if original operation with the same request ID was
     * received, and if so, will ignore the second request. This prevents clients
     * from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

    /**
     * Optional. If set to true, any revisions for this deployment will also be
     * deleted. (Otherwise, the request will only work if the deployment has no
     * revisions.)
     *
     * Generated from protobuf field <code>bool force = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getForce()
    {
        return $this->force;
    }

    /**
     * Optional. If set to true, any revisions for this deployment will also be
     * deleted. (Otherwise, the request will only work if the deployment has no
     * revisions.)
     *
     * Generated from protobuf field <code>bool force = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setForce($var)
    {
        GPBUtil::checkBool($var);
        $this->force = $var;

        return $this;
    }

    /**
     * Optional. Policy on how resources actuated by the deployment should be
     * deleted. If unspecified, the default behavior is to delete the underlying
     * resources.
     *
     * Generated from protobuf field <code>.google.cloud.config.v1.DeleteDeploymentRequest.DeletePolicy delete_policy = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getDeletePolicy()
    {
        return $this->delete_policy;
    }

    /**
     * Optional. Policy on how resources actuated by the deployment should be
     * deleted. If unspecified, the default behavior is to delete the underlying
     * resources.
     *
     * Generated from protobuf field <code>.google.cloud.config.v1.DeleteDeploymentRequest.DeletePolicy delete_policy = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setDeletePolicy($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Config\V1\DeleteDeploymentRequest\DeletePolicy::class);
        $this->delete_policy = $var;

        return $this;
    }

}

