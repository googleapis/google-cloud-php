<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/metastore/v1beta/metastore.proto

namespace Google\Cloud\Metastore\V1beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A securely stored value.
 *
 * Generated from protobuf message <code>google.cloud.metastore.v1beta.Secret</code>
 */
class Secret extends \Google\Protobuf\Internal\Message
{
    protected $value;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $cloud_secret
     *           The relative resource name of a Secret Manager secret version, in the
     *           following form:
     *           `projects/{project_number}/secrets/{secret_id}/versions/{version_id}`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Metastore\V1Beta\Metastore::initOnce();
        parent::__construct($data);
    }

    /**
     * The relative resource name of a Secret Manager secret version, in the
     * following form:
     * `projects/{project_number}/secrets/{secret_id}/versions/{version_id}`.
     *
     * Generated from protobuf field <code>string cloud_secret = 2;</code>
     * @return string
     */
    public function getCloudSecret()
    {
        return $this->readOneof(2);
    }

    public function hasCloudSecret()
    {
        return $this->hasOneof(2);
    }

    /**
     * The relative resource name of a Secret Manager secret version, in the
     * following form:
     * `projects/{project_number}/secrets/{secret_id}/versions/{version_id}`.
     *
     * Generated from protobuf field <code>string cloud_secret = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCloudSecret($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getValue()
    {
        return $this->whichOneof("value");
    }

}

