<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/sql/v1/cloud_sql_instances.proto

namespace Google\Cloud\Sql\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An available database version. It can be a major or a minor version.
 *
 * Generated from protobuf message <code>google.cloud.sql.v1.AvailableDatabaseVersion</code>
 */
class AvailableDatabaseVersion extends \Google\Protobuf\Internal\Message
{
    /**
     * The version's major version name.
     *
     * Generated from protobuf field <code>optional string major_version = 3;</code>
     */
    protected $major_version = null;
    /**
     * The database version name. For MySQL 8.0, this string provides the database
     * major and minor version.
     *
     * Generated from protobuf field <code>optional string name = 8;</code>
     */
    protected $name = null;
    /**
     * The database version's display name.
     *
     * Generated from protobuf field <code>optional string display_name = 9;</code>
     */
    protected $display_name = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $major_version
     *           The version's major version name.
     *     @type string $name
     *           The database version name. For MySQL 8.0, this string provides the database
     *           major and minor version.
     *     @type string $display_name
     *           The database version's display name.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Sql\V1\CloudSqlInstances::initOnce();
        parent::__construct($data);
    }

    /**
     * The version's major version name.
     *
     * Generated from protobuf field <code>optional string major_version = 3;</code>
     * @return string
     */
    public function getMajorVersion()
    {
        return isset($this->major_version) ? $this->major_version : '';
    }

    public function hasMajorVersion()
    {
        return isset($this->major_version);
    }

    public function clearMajorVersion()
    {
        unset($this->major_version);
    }

    /**
     * The version's major version name.
     *
     * Generated from protobuf field <code>optional string major_version = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setMajorVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->major_version = $var;

        return $this;
    }

    /**
     * The database version name. For MySQL 8.0, this string provides the database
     * major and minor version.
     *
     * Generated from protobuf field <code>optional string name = 8;</code>
     * @return string
     */
    public function getName()
    {
        return isset($this->name) ? $this->name : '';
    }

    public function hasName()
    {
        return isset($this->name);
    }

    public function clearName()
    {
        unset($this->name);
    }

    /**
     * The database version name. For MySQL 8.0, this string provides the database
     * major and minor version.
     *
     * Generated from protobuf field <code>optional string name = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * The database version's display name.
     *
     * Generated from protobuf field <code>optional string display_name = 9;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return isset($this->display_name) ? $this->display_name : '';
    }

    public function hasDisplayName()
    {
        return isset($this->display_name);
    }

    public function clearDisplayName()
    {
        unset($this->display_name);
    }

    /**
     * The database version's display name.
     *
     * Generated from protobuf field <code>optional string display_name = 9;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

}

