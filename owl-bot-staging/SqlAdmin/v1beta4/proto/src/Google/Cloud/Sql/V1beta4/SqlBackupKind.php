<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/sql/v1beta4/cloud_sql_resources.proto

namespace Google\Cloud\Sql\V1beta4;

use UnexpectedValueException;

/**
 * Defines the supported backup kinds
 *
 * Protobuf type <code>google.cloud.sql.v1beta4.SqlBackupKind</code>
 */
class SqlBackupKind
{
    /**
     * This is an unknown BackupKind.
     *
     * Generated from protobuf enum <code>SQL_BACKUP_KIND_UNSPECIFIED = 0;</code>
     */
    const SQL_BACKUP_KIND_UNSPECIFIED = 0;
    /**
     * The snapshot based backups
     *
     * Generated from protobuf enum <code>SNAPSHOT = 1;</code>
     */
    const SNAPSHOT = 1;
    /**
     * Physical backups
     *
     * Generated from protobuf enum <code>PHYSICAL = 2;</code>
     */
    const PHYSICAL = 2;

    private static $valueToName = [
        self::SQL_BACKUP_KIND_UNSPECIFIED => 'SQL_BACKUP_KIND_UNSPECIFIED',
        self::SNAPSHOT => 'SNAPSHOT',
        self::PHYSICAL => 'PHYSICAL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

