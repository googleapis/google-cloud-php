<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/cloudsecuritycompliance/v1/common.proto

namespace Google\Cloud\CloudSecurityCompliance\V1;

use UnexpectedValueException;

/**
 * The responsibility type for the regulatory control.
 *
 * Protobuf type <code>google.cloud.cloudsecuritycompliance.v1.RegulatoryControlResponsibilityType</code>
 */
class RegulatoryControlResponsibilityType
{
    /**
     * Default value. This value is unused.
     *
     * Generated from protobuf enum <code>REGULATORY_CONTROL_RESPONSIBILITY_TYPE_UNSPECIFIED = 0;</code>
     */
    const REGULATORY_CONTROL_RESPONSIBILITY_TYPE_UNSPECIFIED = 0;
    /**
     * Google's responsibility.
     *
     * Generated from protobuf enum <code>GOOGLE = 1;</code>
     */
    const GOOGLE = 1;
    /**
     * Your responsibility.
     *
     * Generated from protobuf enum <code>CUSTOMER = 2;</code>
     */
    const CUSTOMER = 2;
    /**
     * Shared responsibility.
     *
     * Generated from protobuf enum <code>SHARED = 3;</code>
     */
    const SHARED = 3;

    private static $valueToName = [
        self::REGULATORY_CONTROL_RESPONSIBILITY_TYPE_UNSPECIFIED => 'REGULATORY_CONTROL_RESPONSIBILITY_TYPE_UNSPECIFIED',
        self::GOOGLE => 'GOOGLE',
        self::CUSTOMER => 'CUSTOMER',
        self::SHARED => 'SHARED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

