<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/cloudsecuritycompliance/v1/common.proto

namespace Google\Cloud\CloudSecurityCompliance\V1\Framework;

use UnexpectedValueException;

/**
 * The type of framework.
 *
 * Protobuf type <code>google.cloud.cloudsecuritycompliance.v1.Framework.FrameworkType</code>
 */
class FrameworkType
{
    /**
     * Default value. This value is unused.
     *
     * Generated from protobuf enum <code>FRAMEWORK_TYPE_UNSPECIFIED = 0;</code>
     */
    const FRAMEWORK_TYPE_UNSPECIFIED = 0;
    /**
     * A framework that's provided and managed by Google.
     *
     * Generated from protobuf enum <code>BUILT_IN = 1;</code>
     */
    const BUILT_IN = 1;
    /**
     * A framework that's created and managed by you.
     *
     * Generated from protobuf enum <code>CUSTOM = 2;</code>
     */
    const CUSTOM = 2;

    private static $valueToName = [
        self::FRAMEWORK_TYPE_UNSPECIFIED => 'FRAMEWORK_TYPE_UNSPECIFIED',
        self::BUILT_IN => 'BUILT_IN',
        self::CUSTOM => 'CUSTOM',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(FrameworkType::class, \Google\Cloud\CloudSecurityCompliance\V1\Framework_FrameworkType::class);

