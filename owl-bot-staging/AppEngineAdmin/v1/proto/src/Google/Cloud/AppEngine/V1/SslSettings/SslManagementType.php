<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/appengine/v1/domain_mapping.proto

namespace Google\Cloud\AppEngine\V1\SslSettings;

use UnexpectedValueException;

/**
 * The SSL management type for this domain.
 *
 * Protobuf type <code>google.appengine.v1.SslSettings.SslManagementType</code>
 */
class SslManagementType
{
    /**
     * Defaults to `AUTOMATIC`.
     *
     * Generated from protobuf enum <code>SSL_MANAGEMENT_TYPE_UNSPECIFIED = 0;</code>
     */
    const SSL_MANAGEMENT_TYPE_UNSPECIFIED = 0;
    /**
     * SSL support for this domain is configured automatically. The mapped SSL
     * certificate will be automatically renewed.
     *
     * Generated from protobuf enum <code>AUTOMATIC = 1;</code>
     */
    const AUTOMATIC = 1;
    /**
     * SSL support for this domain is configured manually by the user. Either
     * the domain has no SSL support or a user-obtained SSL certificate has been
     * explictly mapped to this domain.
     *
     * Generated from protobuf enum <code>MANUAL = 2;</code>
     */
    const MANUAL = 2;

    private static $valueToName = [
        self::SSL_MANAGEMENT_TYPE_UNSPECIFIED => 'SSL_MANAGEMENT_TYPE_UNSPECIFIED',
        self::AUTOMATIC => 'AUTOMATIC',
        self::MANUAL => 'MANUAL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(SslManagementType::class, \Google\Cloud\AppEngine\V1\SslSettings_SslManagementType::class);

