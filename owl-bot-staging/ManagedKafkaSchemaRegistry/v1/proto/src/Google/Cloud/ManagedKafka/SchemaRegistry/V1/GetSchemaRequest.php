<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/managedkafka/schemaregistry/v1/schema_registry.proto

namespace Google\Cloud\ManagedKafka\SchemaRegistry\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for GetSchema.
 *
 * Generated from protobuf message <code>google.cloud.managedkafka.schemaregistry.v1.GetSchemaRequest</code>
 */
class GetSchemaRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the schema to return. Structured like:
     * `projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/schemas/ids/{schema}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $name = '';
    /**
     * Optional. Used to limit the search for the schema ID to a specific subject,
     * otherwise the schema ID will be searched for in all subjects in the given
     * specified context.
     *
     * Generated from protobuf field <code>optional string subject = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $subject = null;

    /**
     * @param string $name Required. The name of the schema to return. Structured like:
     *                     `projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/schemas/ids/{schema}`
     *                     Please see {@see ManagedSchemaRegistryClient::schemaName()} for help formatting this field.
     *
     * @return \Google\Cloud\ManagedKafka\SchemaRegistry\V1\GetSchemaRequest
     *
     * @experimental
     */
    public static function build(string $name): self
    {
        return (new self())
            ->setName($name);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The name of the schema to return. Structured like:
     *           `projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/schemas/ids/{schema}`
     *     @type string $subject
     *           Optional. Used to limit the search for the schema ID to a specific subject,
     *           otherwise the schema ID will be searched for in all subjects in the given
     *           specified context.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Managedkafka\Schemaregistry\V1\SchemaRegistry::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The name of the schema to return. Structured like:
     * `projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/schemas/ids/{schema}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The name of the schema to return. Structured like:
     * `projects/{project}/locations/{location}/schemaRegistries/{schema_registry}/schemas/ids/{schema}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. Used to limit the search for the schema ID to a specific subject,
     * otherwise the schema ID will be searched for in all subjects in the given
     * specified context.
     *
     * Generated from protobuf field <code>optional string subject = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getSubject()
    {
        return isset($this->subject) ? $this->subject : '';
    }

    public function hasSubject()
    {
        return isset($this->subject);
    }

    public function clearSubject()
    {
        unset($this->subject);
    }

    /**
     * Optional. Used to limit the search for the schema ID to a specific subject,
     * otherwise the schema ID will be searched for in all subjects in the given
     * specified context.
     *
     * Generated from protobuf field <code>optional string subject = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setSubject($var)
    {
        GPBUtil::checkString($var, True);
        $this->subject = $var;

        return $this;
    }

}

