<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/discoveryengine/v1/user_license_service.proto

namespace Google\Cloud\DiscoveryEngine\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [UserLicenseService.ListUserLicenses][google.cloud.discoveryengine.v1.UserLicenseService.ListUserLicenses].
 *
 * Generated from protobuf message <code>google.cloud.discoveryengine.v1.ListUserLicensesRequest</code>
 */
class ListUserLicensesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The parent [UserStore][] resource name, format:
     * `projects/{project}/locations/{location}/userStores/{user_store_id}`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Optional. Requested page size. Server may return fewer items than
     * requested. If unspecified, defaults to 10. The maximum value is 50; values
     * above 50 will be coerced to 50.
     * If this field is negative, an INVALID_ARGUMENT error is returned.
     *
     * Generated from protobuf field <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $page_size = 0;
    /**
     * Optional. A page token, received from a previous `ListUserLicenses` call.
     * Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListUserLicenses`
     * must match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $page_token = '';
    /**
     * Optional. Filter for the list request.
     * Supported fields:
     * * `license_assignment_state`
     * Examples:
     * * `license_assignment_state = ASSIGNED` to list assigned user licenses.
     * * `license_assignment_state = NO_LICENSE` to list not licensed users.
     * * `license_assignment_state = NO_LICENSE_ATTEMPTED_LOGIN` to list users
     * who attempted login but no license assigned.
     * * `license_assignment_state != NO_LICENSE_ATTEMPTED_LOGIN` to filter
     * out users who attempted login but no license assigned.
     *
     * Generated from protobuf field <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $filter = '';

    /**
     * @param string $parent Required. The parent [UserStore][] resource name, format:
     *                       `projects/{project}/locations/{location}/userStores/{user_store_id}`. Please see
     *                       {@see UserLicenseServiceClient::userStoreName()} for help formatting this field.
     *
     * @return \Google\Cloud\DiscoveryEngine\V1\ListUserLicensesRequest
     *
     * @experimental
     */
    public static function build(string $parent): self
    {
        return (new self())
            ->setParent($parent);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The parent [UserStore][] resource name, format:
     *           `projects/{project}/locations/{location}/userStores/{user_store_id}`.
     *     @type int $page_size
     *           Optional. Requested page size. Server may return fewer items than
     *           requested. If unspecified, defaults to 10. The maximum value is 50; values
     *           above 50 will be coerced to 50.
     *           If this field is negative, an INVALID_ARGUMENT error is returned.
     *     @type string $page_token
     *           Optional. A page token, received from a previous `ListUserLicenses` call.
     *           Provide this to retrieve the subsequent page.
     *           When paginating, all other parameters provided to `ListUserLicenses`
     *           must match the call that provided the page token.
     *     @type string $filter
     *           Optional. Filter for the list request.
     *           Supported fields:
     *           * `license_assignment_state`
     *           Examples:
     *           * `license_assignment_state = ASSIGNED` to list assigned user licenses.
     *           * `license_assignment_state = NO_LICENSE` to list not licensed users.
     *           * `license_assignment_state = NO_LICENSE_ATTEMPTED_LOGIN` to list users
     *           who attempted login but no license assigned.
     *           * `license_assignment_state != NO_LICENSE_ATTEMPTED_LOGIN` to filter
     *           out users who attempted login but no license assigned.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Discoveryengine\V1\UserLicenseService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The parent [UserStore][] resource name, format:
     * `projects/{project}/locations/{location}/userStores/{user_store_id}`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The parent [UserStore][] resource name, format:
     * `projects/{project}/locations/{location}/userStores/{user_store_id}`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Optional. Requested page size. Server may return fewer items than
     * requested. If unspecified, defaults to 10. The maximum value is 50; values
     * above 50 will be coerced to 50.
     * If this field is negative, an INVALID_ARGUMENT error is returned.
     *
     * Generated from protobuf field <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * Optional. Requested page size. Server may return fewer items than
     * requested. If unspecified, defaults to 10. The maximum value is 50; values
     * above 50 will be coerced to 50.
     * If this field is negative, an INVALID_ARGUMENT error is returned.
     *
     * Generated from protobuf field <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * Optional. A page token, received from a previous `ListUserLicenses` call.
     * Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListUserLicenses`
     * must match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * Optional. A page token, received from a previous `ListUserLicenses` call.
     * Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListUserLicenses`
     * must match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

    /**
     * Optional. Filter for the list request.
     * Supported fields:
     * * `license_assignment_state`
     * Examples:
     * * `license_assignment_state = ASSIGNED` to list assigned user licenses.
     * * `license_assignment_state = NO_LICENSE` to list not licensed users.
     * * `license_assignment_state = NO_LICENSE_ATTEMPTED_LOGIN` to list users
     * who attempted login but no license assigned.
     * * `license_assignment_state != NO_LICENSE_ATTEMPTED_LOGIN` to filter
     * out users who attempted login but no license assigned.
     *
     * Generated from protobuf field <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Optional. Filter for the list request.
     * Supported fields:
     * * `license_assignment_state`
     * Examples:
     * * `license_assignment_state = ASSIGNED` to list assigned user licenses.
     * * `license_assignment_state = NO_LICENSE` to list not licensed users.
     * * `license_assignment_state = NO_LICENSE_ATTEMPTED_LOGIN` to list users
     * who attempted login but no license assigned.
     * * `license_assignment_state != NO_LICENSE_ATTEMPTED_LOGIN` to filter
     * out users who attempted login but no license assigned.
     *
     * Generated from protobuf field <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

}

