<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/servicehealth/v1/event_resources.proto

namespace Google\Cloud\ServiceHealth\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Records an update made to the event.
 *
 * Generated from protobuf message <code>google.cloud.servicehealth.v1.EventUpdate</code>
 */
class EventUpdate extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. The time the update was posted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $update_time = null;
    /**
     * Output only. Brief title for the event.
     *
     * Generated from protobuf field <code>string title = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $title = '';
    /**
     * Output only. Free-form, human-readable description.
     *
     * Generated from protobuf field <code>string description = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $description = '';
    /**
     * Output only. Symptoms of the event, if available.
     *
     * Generated from protobuf field <code>string symptom = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $symptom = '';
    /**
     * Output only. Workaround steps to remediate the event impact, if available.
     *
     * Generated from protobuf field <code>string workaround = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $workaround = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. The time the update was posted.
     *     @type string $title
     *           Output only. Brief title for the event.
     *     @type string $description
     *           Output only. Free-form, human-readable description.
     *     @type string $symptom
     *           Output only. Symptoms of the event, if available.
     *     @type string $workaround
     *           Output only. Workaround steps to remediate the event impact, if available.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Servicehealth\V1\EventResources::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. The time the update was posted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. The time the update was posted.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Output only. Brief title for the event.
     *
     * Generated from protobuf field <code>string title = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Output only. Brief title for the event.
     *
     * Generated from protobuf field <code>string title = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setTitle($var)
    {
        GPBUtil::checkString($var, True);
        $this->title = $var;

        return $this;
    }

    /**
     * Output only. Free-form, human-readable description.
     *
     * Generated from protobuf field <code>string description = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Output only. Free-form, human-readable description.
     *
     * Generated from protobuf field <code>string description = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Output only. Symptoms of the event, if available.
     *
     * Generated from protobuf field <code>string symptom = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getSymptom()
    {
        return $this->symptom;
    }

    /**
     * Output only. Symptoms of the event, if available.
     *
     * Generated from protobuf field <code>string symptom = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setSymptom($var)
    {
        GPBUtil::checkString($var, True);
        $this->symptom = $var;

        return $this;
    }

    /**
     * Output only. Workaround steps to remediate the event impact, if available.
     *
     * Generated from protobuf field <code>string workaround = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getWorkaround()
    {
        return $this->workaround;
    }

    /**
     * Output only. Workaround steps to remediate the event impact, if available.
     *
     * Generated from protobuf field <code>string workaround = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setWorkaround($var)
    {
        GPBUtil::checkString($var, True);
        $this->workaround = $var;

        return $this;
    }

}

