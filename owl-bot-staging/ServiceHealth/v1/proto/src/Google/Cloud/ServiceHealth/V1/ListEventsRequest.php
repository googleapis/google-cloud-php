<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/servicehealth/v1/event_resources.proto

namespace Google\Cloud\ServiceHealth\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>google.cloud.servicehealth.v1.ListEventsRequest</code>
 */
class ListEventsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Parent value using the form
     * `projects/{project_id}/locations/{location}/events`.
     * `project_id` - ID of the project for which to list service health
     * events.
     * `location` - The location to get the service health events from.
     * To retrieve service health events of category = INCIDENT, use `location` =
     * `global`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Optional. The maximum number of events that should be returned.  Acceptable
     * values are 1 to 100, inclusive. (The default value is 10.) If more results
     * are available, the service returns a next_page_token that you can use to
     * get the next page of results in subsequent list requests. The service may
     * return fewer events than the requested page_size.
     *
     * Generated from protobuf field <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $page_size = 0;
    /**
     * Optional. A token identifying a page of results the server should return.
     * Provide Page token returned by a previous `ListEvents` call to retrieve the
     * next page of results. When paginating, all other parameters provided to
     * `ListEvents` must match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $page_token = '';
    /**
     * Optional. A filter expression that filters resources listed in the
     * response. The expression takes the following forms: <br>
     * *   field=value for `category` and `state`<br>
     * *   field &lt;, >, &lt;=, or >= value for `update_time` <br>
     * Examples: `category=INCIDENT`, `update_time>=2000-01-01T11:30:00-04:00`
     * <br>
     * Multiple filter queries are separated by spaces. Example:
     * `category=INCIDENT state=ACTIVE`.
     * By default, each expression is an AND expression. However, you can include
     * AND and OR expressions explicitly.
     * Filter is supported for the following fields: `category`, `state`,
     * `update_time`
     *
     * Generated from protobuf field <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $filter = '';
    /**
     * Optional. Event fields to include in response.
     *
     * Generated from protobuf field <code>.google.cloud.servicehealth.v1.EventView view = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $view = 0;

    /**
     * @param string $parent Required. Parent value using the form
     *                       `projects/{project_id}/locations/{location}/events`.
     *
     *                       `project_id` - ID of the project for which to list service health
     *                       events.
     *                       `location` - The location to get the service health events from.
     *                       To retrieve service health events of category = INCIDENT, use `location` =
     *                       `global`. Please see
     *                       {@see ServiceHealthClient::locationName()} for help formatting this field.
     *
     * @return \Google\Cloud\ServiceHealth\V1\ListEventsRequest
     *
     * @experimental
     */
    public static function build(string $parent): self
    {
        return (new self())
            ->setParent($parent);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. Parent value using the form
     *           `projects/{project_id}/locations/{location}/events`.
     *           `project_id` - ID of the project for which to list service health
     *           events.
     *           `location` - The location to get the service health events from.
     *           To retrieve service health events of category = INCIDENT, use `location` =
     *           `global`.
     *     @type int $page_size
     *           Optional. The maximum number of events that should be returned.  Acceptable
     *           values are 1 to 100, inclusive. (The default value is 10.) If more results
     *           are available, the service returns a next_page_token that you can use to
     *           get the next page of results in subsequent list requests. The service may
     *           return fewer events than the requested page_size.
     *     @type string $page_token
     *           Optional. A token identifying a page of results the server should return.
     *           Provide Page token returned by a previous `ListEvents` call to retrieve the
     *           next page of results. When paginating, all other parameters provided to
     *           `ListEvents` must match the call that provided the page token.
     *     @type string $filter
     *           Optional. A filter expression that filters resources listed in the
     *           response. The expression takes the following forms: <br>
     *           *   field=value for `category` and `state`<br>
     *           *   field &lt;, >, &lt;=, or >= value for `update_time` <br>
     *           Examples: `category=INCIDENT`, `update_time>=2000-01-01T11:30:00-04:00`
     *           <br>
     *           Multiple filter queries are separated by spaces. Example:
     *           `category=INCIDENT state=ACTIVE`.
     *           By default, each expression is an AND expression. However, you can include
     *           AND and OR expressions explicitly.
     *           Filter is supported for the following fields: `category`, `state`,
     *           `update_time`
     *     @type int $view
     *           Optional. Event fields to include in response.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Servicehealth\V1\EventResources::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Parent value using the form
     * `projects/{project_id}/locations/{location}/events`.
     * `project_id` - ID of the project for which to list service health
     * events.
     * `location` - The location to get the service health events from.
     * To retrieve service health events of category = INCIDENT, use `location` =
     * `global`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. Parent value using the form
     * `projects/{project_id}/locations/{location}/events`.
     * `project_id` - ID of the project for which to list service health
     * events.
     * `location` - The location to get the service health events from.
     * To retrieve service health events of category = INCIDENT, use `location` =
     * `global`.
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Optional. The maximum number of events that should be returned.  Acceptable
     * values are 1 to 100, inclusive. (The default value is 10.) If more results
     * are available, the service returns a next_page_token that you can use to
     * get the next page of results in subsequent list requests. The service may
     * return fewer events than the requested page_size.
     *
     * Generated from protobuf field <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * Optional. The maximum number of events that should be returned.  Acceptable
     * values are 1 to 100, inclusive. (The default value is 10.) If more results
     * are available, the service returns a next_page_token that you can use to
     * get the next page of results in subsequent list requests. The service may
     * return fewer events than the requested page_size.
     *
     * Generated from protobuf field <code>int32 page_size = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * Optional. A token identifying a page of results the server should return.
     * Provide Page token returned by a previous `ListEvents` call to retrieve the
     * next page of results. When paginating, all other parameters provided to
     * `ListEvents` must match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * Optional. A token identifying a page of results the server should return.
     * Provide Page token returned by a previous `ListEvents` call to retrieve the
     * next page of results. When paginating, all other parameters provided to
     * `ListEvents` must match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

    /**
     * Optional. A filter expression that filters resources listed in the
     * response. The expression takes the following forms: <br>
     * *   field=value for `category` and `state`<br>
     * *   field &lt;, >, &lt;=, or >= value for `update_time` <br>
     * Examples: `category=INCIDENT`, `update_time>=2000-01-01T11:30:00-04:00`
     * <br>
     * Multiple filter queries are separated by spaces. Example:
     * `category=INCIDENT state=ACTIVE`.
     * By default, each expression is an AND expression. However, you can include
     * AND and OR expressions explicitly.
     * Filter is supported for the following fields: `category`, `state`,
     * `update_time`
     *
     * Generated from protobuf field <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Optional. A filter expression that filters resources listed in the
     * response. The expression takes the following forms: <br>
     * *   field=value for `category` and `state`<br>
     * *   field &lt;, >, &lt;=, or >= value for `update_time` <br>
     * Examples: `category=INCIDENT`, `update_time>=2000-01-01T11:30:00-04:00`
     * <br>
     * Multiple filter queries are separated by spaces. Example:
     * `category=INCIDENT state=ACTIVE`.
     * By default, each expression is an AND expression. However, you can include
     * AND and OR expressions explicitly.
     * Filter is supported for the following fields: `category`, `state`,
     * `update_time`
     *
     * Generated from protobuf field <code>string filter = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

    /**
     * Optional. Event fields to include in response.
     *
     * Generated from protobuf field <code>.google.cloud.servicehealth.v1.EventView view = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getView()
    {
        return $this->view;
    }

    /**
     * Optional. Event fields to include in response.
     *
     * Generated from protobuf field <code>.google.cloud.servicehealth.v1.EventView view = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setView($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\ServiceHealth\V1\EventView::class);
        $this->view = $var;

        return $this;
    }

}

