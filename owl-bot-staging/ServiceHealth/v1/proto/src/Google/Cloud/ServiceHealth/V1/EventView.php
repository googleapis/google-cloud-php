<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/servicehealth/v1/event_resources.proto

namespace Google\Cloud\ServiceHealth\V1;

use UnexpectedValueException;

/**
 * The event fields to include in ListEvents API response. This enum lists all
 * possible event views.
 *
 * Protobuf type <code>google.cloud.servicehealth.v1.EventView</code>
 */
class EventView
{
    /**
     * Unspecified event view. Default to `EVENT_VIEW_BASIC`.
     *
     * Generated from protobuf enum <code>EVENT_VIEW_UNSPECIFIED = 0;</code>
     */
    const EVENT_VIEW_UNSPECIFIED = 0;
    /**
     * Includes all fields except `updates`. This view is the default for
     * ListEvents API.
     *
     * Generated from protobuf enum <code>EVENT_VIEW_BASIC = 1;</code>
     */
    const EVENT_VIEW_BASIC = 1;
    /**
     * Includes all event fields.
     *
     * Generated from protobuf enum <code>EVENT_VIEW_FULL = 2;</code>
     */
    const EVENT_VIEW_FULL = 2;

    private static $valueToName = [
        self::EVENT_VIEW_UNSPECIFIED => 'EVENT_VIEW_UNSPECIFIED',
        self::EVENT_VIEW_BASIC => 'EVENT_VIEW_BASIC',
        self::EVENT_VIEW_FULL => 'EVENT_VIEW_FULL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

