<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1\Interconnect;

use UnexpectedValueException;

/**
 * Specific subzone in the InterconnectLocation that represents where this connection is to be provisioned.
 *
 * Protobuf type <code>google.cloud.compute.v1.Interconnect.Subzone</code>
 */
class Subzone
{
    /**
     * A value indicating that the enum field is not set.
     *
     * Generated from protobuf enum <code>UNDEFINED_SUBZONE = 0;</code>
     */
    const UNDEFINED_SUBZONE = 0;
    /**
     * Subzone A.
     *
     * Generated from protobuf enum <code>SUBZONE_A = 291575438;</code>
     */
    const SUBZONE_A = 291575438;
    /**
     * Subzone B.
     *
     * Generated from protobuf enum <code>SUBZONE_B = 291575439;</code>
     */
    const SUBZONE_B = 291575439;

    private static $valueToName = [
        self::UNDEFINED_SUBZONE => 'UNDEFINED_SUBZONE',
        self::SUBZONE_A => 'SUBZONE_A',
        self::SUBZONE_B => 'SUBZONE_B',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Subzone::class, \Google\Cloud\Compute\V1\Interconnect_Subzone::class);

