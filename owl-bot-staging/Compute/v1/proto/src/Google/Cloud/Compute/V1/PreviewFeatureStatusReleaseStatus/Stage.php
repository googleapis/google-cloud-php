<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1\PreviewFeatureStatusReleaseStatus;

use UnexpectedValueException;

/**
 * [Output Only] The stage of the feature.
 *
 * Protobuf type <code>google.cloud.compute.v1.PreviewFeatureStatusReleaseStatus.Stage</code>
 */
class Stage
{
    /**
     * A value indicating that the enum field is not set.
     *
     * Generated from protobuf enum <code>UNDEFINED_STAGE = 0;</code>
     */
    const UNDEFINED_STAGE = 0;
    /**
     * Generated from protobuf enum <code>DEPRECATED = 463360435;</code>
     */
    const DEPRECATED = 463360435;
    /**
     * Generated from protobuf enum <code>GA = 2266;</code>
     */
    const GA = 2266;
    /**
     * Generated from protobuf enum <code>PREVIEW = 399798184;</code>
     */
    const PREVIEW = 399798184;
    /**
     * Generated from protobuf enum <code>STAGE_UNSPECIFIED = 63695670;</code>
     */
    const STAGE_UNSPECIFIED = 63695670;

    private static $valueToName = [
        self::UNDEFINED_STAGE => 'UNDEFINED_STAGE',
        self::DEPRECATED => 'DEPRECATED',
        self::GA => 'GA',
        self::PREVIEW => 'PREVIEW',
        self::STAGE_UNSPECIFIED => 'STAGE_UNSPECIFIED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Stage::class, \Google\Cloud\Compute\V1\PreviewFeatureStatusReleaseStatus_Stage::class);

