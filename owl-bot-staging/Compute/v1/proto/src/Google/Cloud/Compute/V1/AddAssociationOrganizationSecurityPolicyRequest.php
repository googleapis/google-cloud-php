<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/compute/v1/compute.proto

namespace Google\Cloud\Compute\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A request message for OrganizationSecurityPolicies.AddAssociation. See the method description for details.
 *
 * Generated from protobuf message <code>google.cloud.compute.v1.AddAssociationOrganizationSecurityPolicyRequest</code>
 */
class AddAssociationOrganizationSecurityPolicyRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Indicates whether or not to replace it if an association of the attachment already exists. This is false by default, in which case an error will be returned if an association already exists.
     *
     * Generated from protobuf field <code>optional bool replace_existing_association = 209541240;</code>
     */
    protected $replace_existing_association = null;
    /**
     * An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>optional string request_id = 37109963;</code>
     */
    protected $request_id = null;
    /**
     * Name of the security policy to update.
     *
     * Generated from protobuf field <code>string security_policy = 171082513 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $security_policy = '';
    /**
     * The body resource for this request
     *
     * Generated from protobuf field <code>.google.cloud.compute.v1.SecurityPolicyAssociation security_policy_association_resource = 11761274 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $security_policy_association_resource = null;

    /**
     * @param string                                             $securityPolicy                    Name of the security policy to update.
     * @param \Google\Cloud\Compute\V1\SecurityPolicyAssociation $securityPolicyAssociationResource The body resource for this request
     *
     * @return \Google\Cloud\Compute\V1\AddAssociationOrganizationSecurityPolicyRequest
     *
     * @experimental
     */
    public static function build(string $securityPolicy, \Google\Cloud\Compute\V1\SecurityPolicyAssociation $securityPolicyAssociationResource): self
    {
        return (new self())
            ->setSecurityPolicy($securityPolicy)
            ->setSecurityPolicyAssociationResource($securityPolicyAssociationResource);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $replace_existing_association
     *           Indicates whether or not to replace it if an association of the attachment already exists. This is false by default, in which case an error will be returned if an association already exists.
     *     @type string $request_id
     *           An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
     *     @type string $security_policy
     *           Name of the security policy to update.
     *     @type \Google\Cloud\Compute\V1\SecurityPolicyAssociation $security_policy_association_resource
     *           The body resource for this request
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Compute\V1\Compute::initOnce();
        parent::__construct($data);
    }

    /**
     * Indicates whether or not to replace it if an association of the attachment already exists. This is false by default, in which case an error will be returned if an association already exists.
     *
     * Generated from protobuf field <code>optional bool replace_existing_association = 209541240;</code>
     * @return bool
     */
    public function getReplaceExistingAssociation()
    {
        return isset($this->replace_existing_association) ? $this->replace_existing_association : false;
    }

    public function hasReplaceExistingAssociation()
    {
        return isset($this->replace_existing_association);
    }

    public function clearReplaceExistingAssociation()
    {
        unset($this->replace_existing_association);
    }

    /**
     * Indicates whether or not to replace it if an association of the attachment already exists. This is false by default, in which case an error will be returned if an association already exists.
     *
     * Generated from protobuf field <code>optional bool replace_existing_association = 209541240;</code>
     * @param bool $var
     * @return $this
     */
    public function setReplaceExistingAssociation($var)
    {
        GPBUtil::checkBool($var);
        $this->replace_existing_association = $var;

        return $this;
    }

    /**
     * An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>optional string request_id = 37109963;</code>
     * @return string
     */
    public function getRequestId()
    {
        return isset($this->request_id) ? $this->request_id : '';
    }

    public function hasRequestId()
    {
        return isset($this->request_id);
    }

    public function clearRequestId()
    {
        unset($this->request_id);
    }

    /**
     * An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>optional string request_id = 37109963;</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

    /**
     * Name of the security policy to update.
     *
     * Generated from protobuf field <code>string security_policy = 171082513 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getSecurityPolicy()
    {
        return $this->security_policy;
    }

    /**
     * Name of the security policy to update.
     *
     * Generated from protobuf field <code>string security_policy = 171082513 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setSecurityPolicy($var)
    {
        GPBUtil::checkString($var, True);
        $this->security_policy = $var;

        return $this;
    }

    /**
     * The body resource for this request
     *
     * Generated from protobuf field <code>.google.cloud.compute.v1.SecurityPolicyAssociation security_policy_association_resource = 11761274 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\Compute\V1\SecurityPolicyAssociation|null
     */
    public function getSecurityPolicyAssociationResource()
    {
        return $this->security_policy_association_resource;
    }

    public function hasSecurityPolicyAssociationResource()
    {
        return isset($this->security_policy_association_resource);
    }

    public function clearSecurityPolicyAssociationResource()
    {
        unset($this->security_policy_association_resource);
    }

    /**
     * The body resource for this request
     *
     * Generated from protobuf field <code>.google.cloud.compute.v1.SecurityPolicyAssociation security_policy_association_resource = 11761274 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Compute\V1\SecurityPolicyAssociation $var
     * @return $this
     */
    public function setSecurityPolicyAssociationResource($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Compute\V1\SecurityPolicyAssociation::class);
        $this->security_policy_association_resource = $var;

        return $this;
    }

}

