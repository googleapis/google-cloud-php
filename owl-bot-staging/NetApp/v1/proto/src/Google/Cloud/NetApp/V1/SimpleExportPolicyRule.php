<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/netapp/v1/volume.proto

namespace Google\Cloud\NetApp\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * An export policy rule describing various export options.
 *
 * Generated from protobuf message <code>google.cloud.netapp.v1.SimpleExportPolicyRule</code>
 */
class SimpleExportPolicyRule extends \Google\Protobuf\Internal\Message
{
    /**
     * Comma separated list of allowed clients IP addresses
     *
     * Generated from protobuf field <code>optional string allowed_clients = 1;</code>
     */
    protected $allowed_clients = null;
    /**
     * Whether Unix root access will be granted.
     *
     * Generated from protobuf field <code>optional string has_root_access = 2;</code>
     */
    protected $has_root_access = null;
    /**
     * Access type (ReadWrite, ReadOnly, None)
     *
     * Generated from protobuf field <code>optional .google.cloud.netapp.v1.AccessType access_type = 3;</code>
     */
    protected $access_type = null;
    /**
     * NFS V3 protocol.
     *
     * Generated from protobuf field <code>optional bool nfsv3 = 4;</code>
     */
    protected $nfsv3 = null;
    /**
     * NFS V4 protocol.
     *
     * Generated from protobuf field <code>optional bool nfsv4 = 5;</code>
     */
    protected $nfsv4 = null;
    /**
     * If enabled (true) the rule defines a read only access for clients matching
     * the 'allowedClients' specification. It enables nfs clients to mount using
     * 'authentication' kerberos security mode.
     *
     * Generated from protobuf field <code>optional bool kerberos_5_read_only = 6;</code>
     */
    protected $kerberos_5_read_only = null;
    /**
     * If enabled (true) the rule defines read and write access for clients
     * matching the 'allowedClients' specification. It enables nfs clients to
     * mount using 'authentication' kerberos security mode. The
     * 'kerberos5ReadOnly' value be ignored if this is enabled.
     *
     * Generated from protobuf field <code>optional bool kerberos_5_read_write = 7;</code>
     */
    protected $kerberos_5_read_write = null;
    /**
     * If enabled (true) the rule defines a read only access for clients matching
     * the 'allowedClients' specification. It enables nfs clients to mount using
     * 'integrity' kerberos security mode.
     *
     * Generated from protobuf field <code>optional bool kerberos_5i_read_only = 8;</code>
     */
    protected $kerberos_5i_read_only = null;
    /**
     * If enabled (true) the rule defines read and write access for clients
     * matching the 'allowedClients' specification. It enables nfs clients to
     * mount using 'integrity' kerberos security mode. The 'kerberos5iReadOnly'
     * value be ignored if this is enabled.
     *
     * Generated from protobuf field <code>optional bool kerberos_5i_read_write = 9;</code>
     */
    protected $kerberos_5i_read_write = null;
    /**
     * If enabled (true) the rule defines a read only access for clients matching
     * the 'allowedClients' specification. It enables nfs clients to mount using
     * 'privacy' kerberos security mode.
     *
     * Generated from protobuf field <code>optional bool kerberos_5p_read_only = 10;</code>
     */
    protected $kerberos_5p_read_only = null;
    /**
     * If enabled (true) the rule defines read and write access for clients
     * matching the 'allowedClients' specification. It enables nfs clients to
     * mount using 'privacy' kerberos security mode. The 'kerberos5pReadOnly'
     * value be ignored if this is enabled.
     *
     * Generated from protobuf field <code>optional bool kerberos_5p_read_write = 11;</code>
     */
    protected $kerberos_5p_read_write = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $allowed_clients
     *           Comma separated list of allowed clients IP addresses
     *     @type string $has_root_access
     *           Whether Unix root access will be granted.
     *     @type int $access_type
     *           Access type (ReadWrite, ReadOnly, None)
     *     @type bool $nfsv3
     *           NFS V3 protocol.
     *     @type bool $nfsv4
     *           NFS V4 protocol.
     *     @type bool $kerberos_5_read_only
     *           If enabled (true) the rule defines a read only access for clients matching
     *           the 'allowedClients' specification. It enables nfs clients to mount using
     *           'authentication' kerberos security mode.
     *     @type bool $kerberos_5_read_write
     *           If enabled (true) the rule defines read and write access for clients
     *           matching the 'allowedClients' specification. It enables nfs clients to
     *           mount using 'authentication' kerberos security mode. The
     *           'kerberos5ReadOnly' value be ignored if this is enabled.
     *     @type bool $kerberos_5i_read_only
     *           If enabled (true) the rule defines a read only access for clients matching
     *           the 'allowedClients' specification. It enables nfs clients to mount using
     *           'integrity' kerberos security mode.
     *     @type bool $kerberos_5i_read_write
     *           If enabled (true) the rule defines read and write access for clients
     *           matching the 'allowedClients' specification. It enables nfs clients to
     *           mount using 'integrity' kerberos security mode. The 'kerberos5iReadOnly'
     *           value be ignored if this is enabled.
     *     @type bool $kerberos_5p_read_only
     *           If enabled (true) the rule defines a read only access for clients matching
     *           the 'allowedClients' specification. It enables nfs clients to mount using
     *           'privacy' kerberos security mode.
     *     @type bool $kerberos_5p_read_write
     *           If enabled (true) the rule defines read and write access for clients
     *           matching the 'allowedClients' specification. It enables nfs clients to
     *           mount using 'privacy' kerberos security mode. The 'kerberos5pReadOnly'
     *           value be ignored if this is enabled.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Netapp\V1\Volume::initOnce();
        parent::__construct($data);
    }

    /**
     * Comma separated list of allowed clients IP addresses
     *
     * Generated from protobuf field <code>optional string allowed_clients = 1;</code>
     * @return string
     */
    public function getAllowedClients()
    {
        return isset($this->allowed_clients) ? $this->allowed_clients : '';
    }

    public function hasAllowedClients()
    {
        return isset($this->allowed_clients);
    }

    public function clearAllowedClients()
    {
        unset($this->allowed_clients);
    }

    /**
     * Comma separated list of allowed clients IP addresses
     *
     * Generated from protobuf field <code>optional string allowed_clients = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setAllowedClients($var)
    {
        GPBUtil::checkString($var, True);
        $this->allowed_clients = $var;

        return $this;
    }

    /**
     * Whether Unix root access will be granted.
     *
     * Generated from protobuf field <code>optional string has_root_access = 2;</code>
     * @return string
     */
    public function getHasRootAccess()
    {
        return isset($this->has_root_access) ? $this->has_root_access : '';
    }

    public function hasHasRootAccess()
    {
        return isset($this->has_root_access);
    }

    public function clearHasRootAccess()
    {
        unset($this->has_root_access);
    }

    /**
     * Whether Unix root access will be granted.
     *
     * Generated from protobuf field <code>optional string has_root_access = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setHasRootAccess($var)
    {
        GPBUtil::checkString($var, True);
        $this->has_root_access = $var;

        return $this;
    }

    /**
     * Access type (ReadWrite, ReadOnly, None)
     *
     * Generated from protobuf field <code>optional .google.cloud.netapp.v1.AccessType access_type = 3;</code>
     * @return int
     */
    public function getAccessType()
    {
        return isset($this->access_type) ? $this->access_type : 0;
    }

    public function hasAccessType()
    {
        return isset($this->access_type);
    }

    public function clearAccessType()
    {
        unset($this->access_type);
    }

    /**
     * Access type (ReadWrite, ReadOnly, None)
     *
     * Generated from protobuf field <code>optional .google.cloud.netapp.v1.AccessType access_type = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setAccessType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\NetApp\V1\AccessType::class);
        $this->access_type = $var;

        return $this;
    }

    /**
     * NFS V3 protocol.
     *
     * Generated from protobuf field <code>optional bool nfsv3 = 4;</code>
     * @return bool
     */
    public function getNfsv3()
    {
        return isset($this->nfsv3) ? $this->nfsv3 : false;
    }

    public function hasNfsv3()
    {
        return isset($this->nfsv3);
    }

    public function clearNfsv3()
    {
        unset($this->nfsv3);
    }

    /**
     * NFS V3 protocol.
     *
     * Generated from protobuf field <code>optional bool nfsv3 = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setNfsv3($var)
    {
        GPBUtil::checkBool($var);
        $this->nfsv3 = $var;

        return $this;
    }

    /**
     * NFS V4 protocol.
     *
     * Generated from protobuf field <code>optional bool nfsv4 = 5;</code>
     * @return bool
     */
    public function getNfsv4()
    {
        return isset($this->nfsv4) ? $this->nfsv4 : false;
    }

    public function hasNfsv4()
    {
        return isset($this->nfsv4);
    }

    public function clearNfsv4()
    {
        unset($this->nfsv4);
    }

    /**
     * NFS V4 protocol.
     *
     * Generated from protobuf field <code>optional bool nfsv4 = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setNfsv4($var)
    {
        GPBUtil::checkBool($var);
        $this->nfsv4 = $var;

        return $this;
    }

    /**
     * If enabled (true) the rule defines a read only access for clients matching
     * the 'allowedClients' specification. It enables nfs clients to mount using
     * 'authentication' kerberos security mode.
     *
     * Generated from protobuf field <code>optional bool kerberos_5_read_only = 6;</code>
     * @return bool
     */
    public function getKerberos5ReadOnly()
    {
        return isset($this->kerberos_5_read_only) ? $this->kerberos_5_read_only : false;
    }

    public function hasKerberos5ReadOnly()
    {
        return isset($this->kerberos_5_read_only);
    }

    public function clearKerberos5ReadOnly()
    {
        unset($this->kerberos_5_read_only);
    }

    /**
     * If enabled (true) the rule defines a read only access for clients matching
     * the 'allowedClients' specification. It enables nfs clients to mount using
     * 'authentication' kerberos security mode.
     *
     * Generated from protobuf field <code>optional bool kerberos_5_read_only = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setKerberos5ReadOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->kerberos_5_read_only = $var;

        return $this;
    }

    /**
     * If enabled (true) the rule defines read and write access for clients
     * matching the 'allowedClients' specification. It enables nfs clients to
     * mount using 'authentication' kerberos security mode. The
     * 'kerberos5ReadOnly' value be ignored if this is enabled.
     *
     * Generated from protobuf field <code>optional bool kerberos_5_read_write = 7;</code>
     * @return bool
     */
    public function getKerberos5ReadWrite()
    {
        return isset($this->kerberos_5_read_write) ? $this->kerberos_5_read_write : false;
    }

    public function hasKerberos5ReadWrite()
    {
        return isset($this->kerberos_5_read_write);
    }

    public function clearKerberos5ReadWrite()
    {
        unset($this->kerberos_5_read_write);
    }

    /**
     * If enabled (true) the rule defines read and write access for clients
     * matching the 'allowedClients' specification. It enables nfs clients to
     * mount using 'authentication' kerberos security mode. The
     * 'kerberos5ReadOnly' value be ignored if this is enabled.
     *
     * Generated from protobuf field <code>optional bool kerberos_5_read_write = 7;</code>
     * @param bool $var
     * @return $this
     */
    public function setKerberos5ReadWrite($var)
    {
        GPBUtil::checkBool($var);
        $this->kerberos_5_read_write = $var;

        return $this;
    }

    /**
     * If enabled (true) the rule defines a read only access for clients matching
     * the 'allowedClients' specification. It enables nfs clients to mount using
     * 'integrity' kerberos security mode.
     *
     * Generated from protobuf field <code>optional bool kerberos_5i_read_only = 8;</code>
     * @return bool
     */
    public function getKerberos5IReadOnly()
    {
        return isset($this->kerberos_5i_read_only) ? $this->kerberos_5i_read_only : false;
    }

    public function hasKerberos5IReadOnly()
    {
        return isset($this->kerberos_5i_read_only);
    }

    public function clearKerberos5IReadOnly()
    {
        unset($this->kerberos_5i_read_only);
    }

    /**
     * If enabled (true) the rule defines a read only access for clients matching
     * the 'allowedClients' specification. It enables nfs clients to mount using
     * 'integrity' kerberos security mode.
     *
     * Generated from protobuf field <code>optional bool kerberos_5i_read_only = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setKerberos5IReadOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->kerberos_5i_read_only = $var;

        return $this;
    }

    /**
     * If enabled (true) the rule defines read and write access for clients
     * matching the 'allowedClients' specification. It enables nfs clients to
     * mount using 'integrity' kerberos security mode. The 'kerberos5iReadOnly'
     * value be ignored if this is enabled.
     *
     * Generated from protobuf field <code>optional bool kerberos_5i_read_write = 9;</code>
     * @return bool
     */
    public function getKerberos5IReadWrite()
    {
        return isset($this->kerberos_5i_read_write) ? $this->kerberos_5i_read_write : false;
    }

    public function hasKerberos5IReadWrite()
    {
        return isset($this->kerberos_5i_read_write);
    }

    public function clearKerberos5IReadWrite()
    {
        unset($this->kerberos_5i_read_write);
    }

    /**
     * If enabled (true) the rule defines read and write access for clients
     * matching the 'allowedClients' specification. It enables nfs clients to
     * mount using 'integrity' kerberos security mode. The 'kerberos5iReadOnly'
     * value be ignored if this is enabled.
     *
     * Generated from protobuf field <code>optional bool kerberos_5i_read_write = 9;</code>
     * @param bool $var
     * @return $this
     */
    public function setKerberos5IReadWrite($var)
    {
        GPBUtil::checkBool($var);
        $this->kerberos_5i_read_write = $var;

        return $this;
    }

    /**
     * If enabled (true) the rule defines a read only access for clients matching
     * the 'allowedClients' specification. It enables nfs clients to mount using
     * 'privacy' kerberos security mode.
     *
     * Generated from protobuf field <code>optional bool kerberos_5p_read_only = 10;</code>
     * @return bool
     */
    public function getKerberos5PReadOnly()
    {
        return isset($this->kerberos_5p_read_only) ? $this->kerberos_5p_read_only : false;
    }

    public function hasKerberos5PReadOnly()
    {
        return isset($this->kerberos_5p_read_only);
    }

    public function clearKerberos5PReadOnly()
    {
        unset($this->kerberos_5p_read_only);
    }

    /**
     * If enabled (true) the rule defines a read only access for clients matching
     * the 'allowedClients' specification. It enables nfs clients to mount using
     * 'privacy' kerberos security mode.
     *
     * Generated from protobuf field <code>optional bool kerberos_5p_read_only = 10;</code>
     * @param bool $var
     * @return $this
     */
    public function setKerberos5PReadOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->kerberos_5p_read_only = $var;

        return $this;
    }

    /**
     * If enabled (true) the rule defines read and write access for clients
     * matching the 'allowedClients' specification. It enables nfs clients to
     * mount using 'privacy' kerberos security mode. The 'kerberos5pReadOnly'
     * value be ignored if this is enabled.
     *
     * Generated from protobuf field <code>optional bool kerberos_5p_read_write = 11;</code>
     * @return bool
     */
    public function getKerberos5PReadWrite()
    {
        return isset($this->kerberos_5p_read_write) ? $this->kerberos_5p_read_write : false;
    }

    public function hasKerberos5PReadWrite()
    {
        return isset($this->kerberos_5p_read_write);
    }

    public function clearKerberos5PReadWrite()
    {
        unset($this->kerberos_5p_read_write);
    }

    /**
     * If enabled (true) the rule defines read and write access for clients
     * matching the 'allowedClients' specification. It enables nfs clients to
     * mount using 'privacy' kerberos security mode. The 'kerberos5pReadOnly'
     * value be ignored if this is enabled.
     *
     * Generated from protobuf field <code>optional bool kerberos_5p_read_write = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setKerberos5PReadWrite($var)
    {
        GPBUtil::checkBool($var);
        $this->kerberos_5p_read_write = $var;

        return $this;
    }

}

