<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/netapp/v1/volume.proto

namespace Google\Cloud\NetApp\V1;

use UnexpectedValueException;

/**
 * SMBSettings
 * Modifies the behaviour of a SMB volume.
 *
 * Protobuf type <code>google.cloud.netapp.v1.SMBSettings</code>
 */
class SMBSettings
{
    /**
     * Unspecified default option
     *
     * Generated from protobuf enum <code>SMB_SETTINGS_UNSPECIFIED = 0;</code>
     */
    const SMB_SETTINGS_UNSPECIFIED = 0;
    /**
     * SMB setting encrypt data
     *
     * Generated from protobuf enum <code>ENCRYPT_DATA = 1;</code>
     */
    const ENCRYPT_DATA = 1;
    /**
     * SMB setting browsable
     *
     * Generated from protobuf enum <code>BROWSABLE = 2;</code>
     */
    const BROWSABLE = 2;
    /**
     * SMB setting notify change
     *
     * Generated from protobuf enum <code>CHANGE_NOTIFY = 3;</code>
     */
    const CHANGE_NOTIFY = 3;
    /**
     * SMB setting not to notify change
     *
     * Generated from protobuf enum <code>NON_BROWSABLE = 4;</code>
     */
    const NON_BROWSABLE = 4;
    /**
     * SMB setting oplocks
     *
     * Generated from protobuf enum <code>OPLOCKS = 5;</code>
     */
    const OPLOCKS = 5;
    /**
     * SMB setting to show snapshots
     *
     * Generated from protobuf enum <code>SHOW_SNAPSHOT = 6;</code>
     */
    const SHOW_SNAPSHOT = 6;
    /**
     * SMB setting to show previous versions
     *
     * Generated from protobuf enum <code>SHOW_PREVIOUS_VERSIONS = 7;</code>
     */
    const SHOW_PREVIOUS_VERSIONS = 7;
    /**
     * SMB setting to access volume based on enumerartion
     *
     * Generated from protobuf enum <code>ACCESS_BASED_ENUMERATION = 8;</code>
     */
    const ACCESS_BASED_ENUMERATION = 8;
    /**
     * Continuously available enumeration
     *
     * Generated from protobuf enum <code>CONTINUOUSLY_AVAILABLE = 9;</code>
     */
    const CONTINUOUSLY_AVAILABLE = 9;

    private static $valueToName = [
        self::SMB_SETTINGS_UNSPECIFIED => 'SMB_SETTINGS_UNSPECIFIED',
        self::ENCRYPT_DATA => 'ENCRYPT_DATA',
        self::BROWSABLE => 'BROWSABLE',
        self::CHANGE_NOTIFY => 'CHANGE_NOTIFY',
        self::NON_BROWSABLE => 'NON_BROWSABLE',
        self::OPLOCKS => 'OPLOCKS',
        self::SHOW_SNAPSHOT => 'SHOW_SNAPSHOT',
        self::SHOW_PREVIOUS_VERSIONS => 'SHOW_PREVIOUS_VERSIONS',
        self::ACCESS_BASED_ENUMERATION => 'ACCESS_BASED_ENUMERATION',
        self::CONTINUOUSLY_AVAILABLE => 'CONTINUOUSLY_AVAILABLE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

