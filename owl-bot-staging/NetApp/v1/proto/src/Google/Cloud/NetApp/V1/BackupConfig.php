<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/netapp/v1/volume.proto

namespace Google\Cloud\NetApp\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * BackupConfig contains backup related config on a volume.
 *
 * Generated from protobuf message <code>google.cloud.netapp.v1.BackupConfig</code>
 */
class BackupConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. When specified, schedule backups will be created based on the
     * policy configuration.
     *
     * Generated from protobuf field <code>repeated string backup_policies = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     */
    private $backup_policies;
    /**
     * Optional. Name of backup vault.
     * Format:
     * projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}
     *
     * Generated from protobuf field <code>string backup_vault = 2 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     */
    protected $backup_vault = '';
    /**
     * Optional. When set to true, scheduled backup is enabled on the volume.
     * This field should be nil when there's no backup policy attached.
     *
     * Generated from protobuf field <code>optional bool scheduled_backup_enabled = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $scheduled_backup_enabled = null;
    /**
     * Output only. Total size of all backups in a chain in bytes = baseline
     * backup size + sum(incremental backup size).
     *
     * Generated from protobuf field <code>optional int64 backup_chain_bytes = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $backup_chain_bytes = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $backup_policies
     *           Optional. When specified, schedule backups will be created based on the
     *           policy configuration.
     *     @type string $backup_vault
     *           Optional. Name of backup vault.
     *           Format:
     *           projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}
     *     @type bool $scheduled_backup_enabled
     *           Optional. When set to true, scheduled backup is enabled on the volume.
     *           This field should be nil when there's no backup policy attached.
     *     @type int|string $backup_chain_bytes
     *           Output only. Total size of all backups in a chain in bytes = baseline
     *           backup size + sum(incremental backup size).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Netapp\V1\Volume::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. When specified, schedule backups will be created based on the
     * policy configuration.
     *
     * Generated from protobuf field <code>repeated string backup_policies = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getBackupPolicies()
    {
        return $this->backup_policies;
    }

    /**
     * Optional. When specified, schedule backups will be created based on the
     * policy configuration.
     *
     * Generated from protobuf field <code>repeated string backup_policies = 1 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setBackupPolicies($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->backup_policies = $arr;

        return $this;
    }

    /**
     * Optional. Name of backup vault.
     * Format:
     * projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}
     *
     * Generated from protobuf field <code>string backup_vault = 2 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getBackupVault()
    {
        return $this->backup_vault;
    }

    /**
     * Optional. Name of backup vault.
     * Format:
     * projects/{project_id}/locations/{location}/backupVaults/{backup_vault_id}
     *
     * Generated from protobuf field <code>string backup_vault = 2 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setBackupVault($var)
    {
        GPBUtil::checkString($var, True);
        $this->backup_vault = $var;

        return $this;
    }

    /**
     * Optional. When set to true, scheduled backup is enabled on the volume.
     * This field should be nil when there's no backup policy attached.
     *
     * Generated from protobuf field <code>optional bool scheduled_backup_enabled = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getScheduledBackupEnabled()
    {
        return isset($this->scheduled_backup_enabled) ? $this->scheduled_backup_enabled : false;
    }

    public function hasScheduledBackupEnabled()
    {
        return isset($this->scheduled_backup_enabled);
    }

    public function clearScheduledBackupEnabled()
    {
        unset($this->scheduled_backup_enabled);
    }

    /**
     * Optional. When set to true, scheduled backup is enabled on the volume.
     * This field should be nil when there's no backup policy attached.
     *
     * Generated from protobuf field <code>optional bool scheduled_backup_enabled = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setScheduledBackupEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->scheduled_backup_enabled = $var;

        return $this;
    }

    /**
     * Output only. Total size of all backups in a chain in bytes = baseline
     * backup size + sum(incremental backup size).
     *
     * Generated from protobuf field <code>optional int64 backup_chain_bytes = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int|string
     */
    public function getBackupChainBytes()
    {
        return isset($this->backup_chain_bytes) ? $this->backup_chain_bytes : 0;
    }

    public function hasBackupChainBytes()
    {
        return isset($this->backup_chain_bytes);
    }

    public function clearBackupChainBytes()
    {
        unset($this->backup_chain_bytes);
    }

    /**
     * Output only. Total size of all backups in a chain in bytes = baseline
     * backup size + sum(incremental backup size).
     *
     * Generated from protobuf field <code>optional int64 backup_chain_bytes = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int|string $var
     * @return $this
     */
    public function setBackupChainBytes($var)
    {
        GPBUtil::checkInt64($var);
        $this->backup_chain_bytes = $var;

        return $this;
    }

}

