<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/securitycenter/v1/vulnerability.proto

namespace Google\Cloud\SecurityCenter\V1\Cvssv3;

use UnexpectedValueException;

/**
 * The Scope metric captures whether a vulnerability in one vulnerable
 * component impacts resources in components beyond its security scope.
 *
 * Protobuf type <code>google.cloud.securitycenter.v1.Cvssv3.Scope</code>
 */
class Scope
{
    /**
     * Invalid value.
     *
     * Generated from protobuf enum <code>SCOPE_UNSPECIFIED = 0;</code>
     */
    const SCOPE_UNSPECIFIED = 0;
    /**
     * An exploited vulnerability can only affect resources managed by the same
     * security authority.
     *
     * Generated from protobuf enum <code>SCOPE_UNCHANGED = 1;</code>
     */
    const SCOPE_UNCHANGED = 1;
    /**
     * An exploited vulnerability can affect resources beyond the security scope
     * managed by the security authority of the vulnerable component.
     *
     * Generated from protobuf enum <code>SCOPE_CHANGED = 2;</code>
     */
    const SCOPE_CHANGED = 2;

    private static $valueToName = [
        self::SCOPE_UNSPECIFIED => 'SCOPE_UNSPECIFIED',
        self::SCOPE_UNCHANGED => 'SCOPE_UNCHANGED',
        self::SCOPE_CHANGED => 'SCOPE_CHANGED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Scope::class, \Google\Cloud\SecurityCenter\V1\Cvssv3_Scope::class);

