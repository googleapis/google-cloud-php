<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/vertex_rag_data.proto

namespace Google\Cloud\AIPlatform\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Specifies the transformation config for RagFiles.
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.RagFileTransformationConfig</code>
 */
class RagFileTransformationConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Specifies the chunking config for RagFiles.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagFileChunkingConfig rag_file_chunking_config = 1;</code>
     */
    protected $rag_file_chunking_config = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\AIPlatform\V1\RagFileChunkingConfig $rag_file_chunking_config
     *           Specifies the chunking config for RagFiles.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\VertexRagData::initOnce();
        parent::__construct($data);
    }

    /**
     * Specifies the chunking config for RagFiles.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagFileChunkingConfig rag_file_chunking_config = 1;</code>
     * @return \Google\Cloud\AIPlatform\V1\RagFileChunkingConfig|null
     */
    public function getRagFileChunkingConfig()
    {
        return $this->rag_file_chunking_config;
    }

    public function hasRagFileChunkingConfig()
    {
        return isset($this->rag_file_chunking_config);
    }

    public function clearRagFileChunkingConfig()
    {
        unset($this->rag_file_chunking_config);
    }

    /**
     * Specifies the chunking config for RagFiles.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagFileChunkingConfig rag_file_chunking_config = 1;</code>
     * @param \Google\Cloud\AIPlatform\V1\RagFileChunkingConfig $var
     * @return $this
     */
    public function setRagFileChunkingConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\AIPlatform\V1\RagFileChunkingConfig::class);
        $this->rag_file_chunking_config = $var;

        return $this;
    }

}

