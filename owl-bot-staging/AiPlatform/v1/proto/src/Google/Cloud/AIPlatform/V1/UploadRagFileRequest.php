<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/vertex_rag_data_service.proto

namespace Google\Cloud\AIPlatform\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [VertexRagDataService.UploadRagFile][google.cloud.aiplatform.v1.VertexRagDataService.UploadRagFile].
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.UploadRagFileRequest</code>
 */
class UploadRagFileRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the RagCorpus resource into which to upload the file.
     * Format:
     * `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Required. The RagFile to upload.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagFile rag_file = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $rag_file = null;
    /**
     * Required. The config for the RagFiles to be uploaded into the RagCorpus.
     * [VertexRagDataService.UploadRagFile][google.cloud.aiplatform.v1.VertexRagDataService.UploadRagFile].
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.UploadRagFileConfig upload_rag_file_config = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $upload_rag_file_config = null;

    /**
     * @param string                                          $parent              Required. The name of the RagCorpus resource into which to upload the file.
     *                                                                             Format:
     *                                                                             `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
     *                                                                             Please see {@see VertexRagDataServiceClient::ragCorpusName()} for help formatting this field.
     * @param \Google\Cloud\AIPlatform\V1\RagFile             $ragFile             Required. The RagFile to upload.
     * @param \Google\Cloud\AIPlatform\V1\UploadRagFileConfig $uploadRagFileConfig Required. The config for the RagFiles to be uploaded into the RagCorpus.
     *                                                                             [VertexRagDataService.UploadRagFile][google.cloud.aiplatform.v1.VertexRagDataService.UploadRagFile].
     *
     * @return \Google\Cloud\AIPlatform\V1\UploadRagFileRequest
     *
     * @experimental
     */
    public static function build(string $parent, \Google\Cloud\AIPlatform\V1\RagFile $ragFile, \Google\Cloud\AIPlatform\V1\UploadRagFileConfig $uploadRagFileConfig): self
    {
        return (new self())
            ->setParent($parent)
            ->setRagFile($ragFile)
            ->setUploadRagFileConfig($uploadRagFileConfig);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The name of the RagCorpus resource into which to upload the file.
     *           Format:
     *           `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
     *     @type \Google\Cloud\AIPlatform\V1\RagFile $rag_file
     *           Required. The RagFile to upload.
     *     @type \Google\Cloud\AIPlatform\V1\UploadRagFileConfig $upload_rag_file_config
     *           Required. The config for the RagFiles to be uploaded into the RagCorpus.
     *           [VertexRagDataService.UploadRagFile][google.cloud.aiplatform.v1.VertexRagDataService.UploadRagFile].
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\VertexRagDataService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The name of the RagCorpus resource into which to upload the file.
     * Format:
     * `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The name of the RagCorpus resource into which to upload the file.
     * Format:
     * `projects/{project}/locations/{location}/ragCorpora/{rag_corpus}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Required. The RagFile to upload.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagFile rag_file = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\AIPlatform\V1\RagFile|null
     */
    public function getRagFile()
    {
        return $this->rag_file;
    }

    public function hasRagFile()
    {
        return isset($this->rag_file);
    }

    public function clearRagFile()
    {
        unset($this->rag_file);
    }

    /**
     * Required. The RagFile to upload.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagFile rag_file = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\AIPlatform\V1\RagFile $var
     * @return $this
     */
    public function setRagFile($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\AIPlatform\V1\RagFile::class);
        $this->rag_file = $var;

        return $this;
    }

    /**
     * Required. The config for the RagFiles to be uploaded into the RagCorpus.
     * [VertexRagDataService.UploadRagFile][google.cloud.aiplatform.v1.VertexRagDataService.UploadRagFile].
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.UploadRagFileConfig upload_rag_file_config = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\AIPlatform\V1\UploadRagFileConfig|null
     */
    public function getUploadRagFileConfig()
    {
        return $this->upload_rag_file_config;
    }

    public function hasUploadRagFileConfig()
    {
        return isset($this->upload_rag_file_config);
    }

    public function clearUploadRagFileConfig()
    {
        unset($this->upload_rag_file_config);
    }

    /**
     * Required. The config for the RagFiles to be uploaded into the RagCorpus.
     * [VertexRagDataService.UploadRagFile][google.cloud.aiplatform.v1.VertexRagDataService.UploadRagFile].
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.UploadRagFileConfig upload_rag_file_config = 5 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\AIPlatform\V1\UploadRagFileConfig $var
     * @return $this
     */
    public function setUploadRagFileConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\AIPlatform\V1\UploadRagFileConfig::class);
        $this->upload_rag_file_config = $var;

        return $this;
    }

}

