<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/aiplatform/v1/vertex_rag_service.proto

namespace Google\Cloud\AIPlatform\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Response message for
 * [VertexRagService.RetrieveContexts][google.cloud.aiplatform.v1.VertexRagService.RetrieveContexts].
 *
 * Generated from protobuf message <code>google.cloud.aiplatform.v1.RetrieveContextsResponse</code>
 */
class RetrieveContextsResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * The contexts of the query.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagContexts contexts = 1;</code>
     */
    protected $contexts = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\AIPlatform\V1\RagContexts $contexts
     *           The contexts of the query.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Aiplatform\V1\VertexRagService::initOnce();
        parent::__construct($data);
    }

    /**
     * The contexts of the query.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagContexts contexts = 1;</code>
     * @return \Google\Cloud\AIPlatform\V1\RagContexts|null
     */
    public function getContexts()
    {
        return $this->contexts;
    }

    public function hasContexts()
    {
        return isset($this->contexts);
    }

    public function clearContexts()
    {
        unset($this->contexts);
    }

    /**
     * The contexts of the query.
     *
     * Generated from protobuf field <code>.google.cloud.aiplatform.v1.RagContexts contexts = 1;</code>
     * @param \Google\Cloud\AIPlatform\V1\RagContexts $var
     * @return $this
     */
    public function setContexts($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\AIPlatform\V1\RagContexts::class);
        $this->contexts = $var;

        return $this;
    }

}

