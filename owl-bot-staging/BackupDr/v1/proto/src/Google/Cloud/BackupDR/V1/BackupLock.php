<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/backupdr/v1/backupvault.proto

namespace Google\Cloud\BackupDR\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * BackupLock represents a single lock on a Backup resource.  An unexpired
 * lock on a Backup prevents the Backup from being deleted.
 *
 * Generated from protobuf message <code>google.cloud.backupdr.v1.BackupLock</code>
 */
class BackupLock extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The time after which this lock is not considered valid and will
     * no longer protect the Backup from deletion.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp lock_until_time = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $lock_until_time = null;
    protected $ClientLockInfo;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Timestamp $lock_until_time
     *           Required. The time after which this lock is not considered valid and will
     *           no longer protect the Backup from deletion.
     *     @type \Google\Cloud\BackupDR\V1\BackupApplianceLockInfo $backup_appliance_lock_info
     *           If the client is a backup and recovery appliance, this
     *           contains metadata about why the lock exists.
     *     @type \Google\Cloud\BackupDR\V1\ServiceLockInfo $service_lock_info
     *           Output only. Contains metadata about the lock exist for Google Cloud
     *           native backups.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Backupdr\V1\Backupvault::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The time after which this lock is not considered valid and will
     * no longer protect the Backup from deletion.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp lock_until_time = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getLockUntilTime()
    {
        return $this->lock_until_time;
    }

    public function hasLockUntilTime()
    {
        return isset($this->lock_until_time);
    }

    public function clearLockUntilTime()
    {
        unset($this->lock_until_time);
    }

    /**
     * Required. The time after which this lock is not considered valid and will
     * no longer protect the Backup from deletion.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp lock_until_time = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setLockUntilTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->lock_until_time = $var;

        return $this;
    }

    /**
     * If the client is a backup and recovery appliance, this
     * contains metadata about why the lock exists.
     *
     * Generated from protobuf field <code>.google.cloud.backupdr.v1.BackupApplianceLockInfo backup_appliance_lock_info = 3;</code>
     * @return \Google\Cloud\BackupDR\V1\BackupApplianceLockInfo|null
     */
    public function getBackupApplianceLockInfo()
    {
        return $this->readOneof(3);
    }

    public function hasBackupApplianceLockInfo()
    {
        return $this->hasOneof(3);
    }

    /**
     * If the client is a backup and recovery appliance, this
     * contains metadata about why the lock exists.
     *
     * Generated from protobuf field <code>.google.cloud.backupdr.v1.BackupApplianceLockInfo backup_appliance_lock_info = 3;</code>
     * @param \Google\Cloud\BackupDR\V1\BackupApplianceLockInfo $var
     * @return $this
     */
    public function setBackupApplianceLockInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\BackupDR\V1\BackupApplianceLockInfo::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Output only. Contains metadata about the lock exist for Google Cloud
     * native backups.
     *
     * Generated from protobuf field <code>.google.cloud.backupdr.v1.ServiceLockInfo service_lock_info = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Cloud\BackupDR\V1\ServiceLockInfo|null
     */
    public function getServiceLockInfo()
    {
        return $this->readOneof(4);
    }

    public function hasServiceLockInfo()
    {
        return $this->hasOneof(4);
    }

    /**
     * Output only. Contains metadata about the lock exist for Google Cloud
     * native backups.
     *
     * Generated from protobuf field <code>.google.cloud.backupdr.v1.ServiceLockInfo service_lock_info = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Cloud\BackupDR\V1\ServiceLockInfo $var
     * @return $this
     */
    public function setServiceLockInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\BackupDR\V1\ServiceLockInfo::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getClientLockInfo()
    {
        return $this->whichOneof("ClientLockInfo");
    }

}

