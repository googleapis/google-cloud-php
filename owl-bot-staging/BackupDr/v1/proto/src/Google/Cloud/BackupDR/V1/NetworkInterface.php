<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/backupdr/v1/backupvault_gce.proto

namespace Google\Cloud\BackupDR\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A network interface resource attached to an instance.
 * s
 *
 * Generated from protobuf message <code>google.cloud.backupdr.v1.NetworkInterface</code>
 */
class NetworkInterface extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. URL of the VPC network resource for this instance.
     *
     * Generated from protobuf field <code>optional string network = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $network = null;
    /**
     * Optional. The URL of the Subnetwork resource for this instance.
     *
     * Generated from protobuf field <code>optional string subnetwork = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $subnetwork = null;
    /**
     * Optional. An IPv4 internal IP address to assign to the instance for this
     * network interface. If not specified by the user, an unused internal IP is
     * assigned by the system.
     *
     * Generated from protobuf field <code>optional string ip_address = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     */
    protected $ip_address = null;
    /**
     * Optional. An IPv6 internal network address for this network interface. To
     * use a static internal IP address, it must be unused and in the same region
     * as the instance's zone. If not specified, Google Cloud will automatically
     * assign an internal IPv6 address from the instance's subnetwork.
     *
     * Generated from protobuf field <code>optional string ipv6_address = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     */
    protected $ipv6_address = null;
    /**
     * Optional. The prefix length of the primary internal IPv6 range.
     *
     * Generated from protobuf field <code>optional int32 internal_ipv6_prefix_length = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $internal_ipv6_prefix_length = null;
    /**
     * Output only. [Output Only] The name of the network interface, which is
     * generated by the server.
     *
     * Generated from protobuf field <code>optional string name = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $name = null;
    /**
     * Optional. An array of configurations for this interface. Currently, only
     * one access config,ONE_TO_ONE_NAT is supported. If there are no
     * accessConfigs specified, then this instance will have
     * no external internet access.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.AccessConfig access_configs = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $access_configs;
    /**
     * Optional. An array of IPv6 access configurations for this interface.
     * Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there
     * is no ipv6AccessConfig specified, then this instance will
     * have no external IPv6 Internet access.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.AccessConfig ipv6_access_configs = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $ipv6_access_configs;
    /**
     * Optional. An array of alias IP ranges for this network interface.
     * You can only specify this field for network interfaces in VPC networks.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.AliasIpRange alias_ip_ranges = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $alias_ip_ranges;
    /**
     * The stack type for this network interface.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.NetworkInterface.StackType stack_type = 10;</code>
     */
    protected $stack_type = null;
    /**
     * Optional. [Output Only] One of EXTERNAL, INTERNAL to indicate whether the
     * IP can be accessed from the Internet. This field is always inherited from
     * its subnetwork.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.NetworkInterface.Ipv6AccessType ipv6_access_type = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $ipv6_access_type = null;
    /**
     * Optional. The networking queue count that's specified by users for the
     * network interface. Both Rx and Tx queues will be set to this number. It'll
     * be empty if not specified by the users.
     *
     * Generated from protobuf field <code>optional int32 queue_count = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $queue_count = null;
    /**
     * Optional. The type of vNIC to be used on this interface. This may be gVNIC
     * or VirtioNet.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.NetworkInterface.NicType nic_type = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $nic_type = null;
    /**
     * Optional. The URL of the network attachment that this interface should
     * connect to in the following format:
     * projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.
     *
     * Generated from protobuf field <code>optional string network_attachment = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $network_attachment = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $network
     *           Optional. URL of the VPC network resource for this instance.
     *     @type string $subnetwork
     *           Optional. The URL of the Subnetwork resource for this instance.
     *     @type string $ip_address
     *           Optional. An IPv4 internal IP address to assign to the instance for this
     *           network interface. If not specified by the user, an unused internal IP is
     *           assigned by the system.
     *     @type string $ipv6_address
     *           Optional. An IPv6 internal network address for this network interface. To
     *           use a static internal IP address, it must be unused and in the same region
     *           as the instance's zone. If not specified, Google Cloud will automatically
     *           assign an internal IPv6 address from the instance's subnetwork.
     *     @type int $internal_ipv6_prefix_length
     *           Optional. The prefix length of the primary internal IPv6 range.
     *     @type string $name
     *           Output only. [Output Only] The name of the network interface, which is
     *           generated by the server.
     *     @type array<\Google\Cloud\BackupDR\V1\AccessConfig>|\Google\Protobuf\Internal\RepeatedField $access_configs
     *           Optional. An array of configurations for this interface. Currently, only
     *           one access config,ONE_TO_ONE_NAT is supported. If there are no
     *           accessConfigs specified, then this instance will have
     *           no external internet access.
     *     @type array<\Google\Cloud\BackupDR\V1\AccessConfig>|\Google\Protobuf\Internal\RepeatedField $ipv6_access_configs
     *           Optional. An array of IPv6 access configurations for this interface.
     *           Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there
     *           is no ipv6AccessConfig specified, then this instance will
     *           have no external IPv6 Internet access.
     *     @type array<\Google\Cloud\BackupDR\V1\AliasIpRange>|\Google\Protobuf\Internal\RepeatedField $alias_ip_ranges
     *           Optional. An array of alias IP ranges for this network interface.
     *           You can only specify this field for network interfaces in VPC networks.
     *     @type int $stack_type
     *           The stack type for this network interface.
     *     @type int $ipv6_access_type
     *           Optional. [Output Only] One of EXTERNAL, INTERNAL to indicate whether the
     *           IP can be accessed from the Internet. This field is always inherited from
     *           its subnetwork.
     *     @type int $queue_count
     *           Optional. The networking queue count that's specified by users for the
     *           network interface. Both Rx and Tx queues will be set to this number. It'll
     *           be empty if not specified by the users.
     *     @type int $nic_type
     *           Optional. The type of vNIC to be used on this interface. This may be gVNIC
     *           or VirtioNet.
     *     @type string $network_attachment
     *           Optional. The URL of the network attachment that this interface should
     *           connect to in the following format:
     *           projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Backupdr\V1\BackupvaultGce::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. URL of the VPC network resource for this instance.
     *
     * Generated from protobuf field <code>optional string network = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getNetwork()
    {
        return isset($this->network) ? $this->network : '';
    }

    public function hasNetwork()
    {
        return isset($this->network);
    }

    public function clearNetwork()
    {
        unset($this->network);
    }

    /**
     * Optional. URL of the VPC network resource for this instance.
     *
     * Generated from protobuf field <code>optional string network = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setNetwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->network = $var;

        return $this;
    }

    /**
     * Optional. The URL of the Subnetwork resource for this instance.
     *
     * Generated from protobuf field <code>optional string subnetwork = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getSubnetwork()
    {
        return isset($this->subnetwork) ? $this->subnetwork : '';
    }

    public function hasSubnetwork()
    {
        return isset($this->subnetwork);
    }

    public function clearSubnetwork()
    {
        unset($this->subnetwork);
    }

    /**
     * Optional. The URL of the Subnetwork resource for this instance.
     *
     * Generated from protobuf field <code>optional string subnetwork = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setSubnetwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->subnetwork = $var;

        return $this;
    }

    /**
     * Optional. An IPv4 internal IP address to assign to the instance for this
     * network interface. If not specified by the user, an unused internal IP is
     * assigned by the system.
     *
     * Generated from protobuf field <code>optional string ip_address = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @return string
     */
    public function getIpAddress()
    {
        return isset($this->ip_address) ? $this->ip_address : '';
    }

    public function hasIpAddress()
    {
        return isset($this->ip_address);
    }

    public function clearIpAddress()
    {
        unset($this->ip_address);
    }

    /**
     * Optional. An IPv4 internal IP address to assign to the instance for this
     * network interface. If not specified by the user, an unused internal IP is
     * assigned by the system.
     *
     * Generated from protobuf field <code>optional string ip_address = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @param string $var
     * @return $this
     */
    public function setIpAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->ip_address = $var;

        return $this;
    }

    /**
     * Optional. An IPv6 internal network address for this network interface. To
     * use a static internal IP address, it must be unused and in the same region
     * as the instance's zone. If not specified, Google Cloud will automatically
     * assign an internal IPv6 address from the instance's subnetwork.
     *
     * Generated from protobuf field <code>optional string ipv6_address = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @return string
     */
    public function getIpv6Address()
    {
        return isset($this->ipv6_address) ? $this->ipv6_address : '';
    }

    public function hasIpv6Address()
    {
        return isset($this->ipv6_address);
    }

    public function clearIpv6Address()
    {
        unset($this->ipv6_address);
    }

    /**
     * Optional. An IPv6 internal network address for this network interface. To
     * use a static internal IP address, it must be unused and in the same region
     * as the instance's zone. If not specified, Google Cloud will automatically
     * assign an internal IPv6 address from the instance's subnetwork.
     *
     * Generated from protobuf field <code>optional string ipv6_address = 4 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @param string $var
     * @return $this
     */
    public function setIpv6Address($var)
    {
        GPBUtil::checkString($var, True);
        $this->ipv6_address = $var;

        return $this;
    }

    /**
     * Optional. The prefix length of the primary internal IPv6 range.
     *
     * Generated from protobuf field <code>optional int32 internal_ipv6_prefix_length = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getInternalIpv6PrefixLength()
    {
        return isset($this->internal_ipv6_prefix_length) ? $this->internal_ipv6_prefix_length : 0;
    }

    public function hasInternalIpv6PrefixLength()
    {
        return isset($this->internal_ipv6_prefix_length);
    }

    public function clearInternalIpv6PrefixLength()
    {
        unset($this->internal_ipv6_prefix_length);
    }

    /**
     * Optional. The prefix length of the primary internal IPv6 range.
     *
     * Generated from protobuf field <code>optional int32 internal_ipv6_prefix_length = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setInternalIpv6PrefixLength($var)
    {
        GPBUtil::checkInt32($var);
        $this->internal_ipv6_prefix_length = $var;

        return $this;
    }

    /**
     * Output only. [Output Only] The name of the network interface, which is
     * generated by the server.
     *
     * Generated from protobuf field <code>optional string name = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getName()
    {
        return isset($this->name) ? $this->name : '';
    }

    public function hasName()
    {
        return isset($this->name);
    }

    public function clearName()
    {
        unset($this->name);
    }

    /**
     * Output only. [Output Only] The name of the network interface, which is
     * generated by the server.
     *
     * Generated from protobuf field <code>optional string name = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. An array of configurations for this interface. Currently, only
     * one access config,ONE_TO_ONE_NAT is supported. If there are no
     * accessConfigs specified, then this instance will have
     * no external internet access.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.AccessConfig access_configs = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAccessConfigs()
    {
        return $this->access_configs;
    }

    /**
     * Optional. An array of configurations for this interface. Currently, only
     * one access config,ONE_TO_ONE_NAT is supported. If there are no
     * accessConfigs specified, then this instance will have
     * no external internet access.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.AccessConfig access_configs = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Cloud\BackupDR\V1\AccessConfig>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAccessConfigs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\BackupDR\V1\AccessConfig::class);
        $this->access_configs = $arr;

        return $this;
    }

    /**
     * Optional. An array of IPv6 access configurations for this interface.
     * Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there
     * is no ipv6AccessConfig specified, then this instance will
     * have no external IPv6 Internet access.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.AccessConfig ipv6_access_configs = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getIpv6AccessConfigs()
    {
        return $this->ipv6_access_configs;
    }

    /**
     * Optional. An array of IPv6 access configurations for this interface.
     * Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there
     * is no ipv6AccessConfig specified, then this instance will
     * have no external IPv6 Internet access.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.AccessConfig ipv6_access_configs = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Cloud\BackupDR\V1\AccessConfig>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setIpv6AccessConfigs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\BackupDR\V1\AccessConfig::class);
        $this->ipv6_access_configs = $arr;

        return $this;
    }

    /**
     * Optional. An array of alias IP ranges for this network interface.
     * You can only specify this field for network interfaces in VPC networks.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.AliasIpRange alias_ip_ranges = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAliasIpRanges()
    {
        return $this->alias_ip_ranges;
    }

    /**
     * Optional. An array of alias IP ranges for this network interface.
     * You can only specify this field for network interfaces in VPC networks.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.AliasIpRange alias_ip_ranges = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Cloud\BackupDR\V1\AliasIpRange>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAliasIpRanges($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\BackupDR\V1\AliasIpRange::class);
        $this->alias_ip_ranges = $arr;

        return $this;
    }

    /**
     * The stack type for this network interface.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.NetworkInterface.StackType stack_type = 10;</code>
     * @return int
     */
    public function getStackType()
    {
        return isset($this->stack_type) ? $this->stack_type : 0;
    }

    public function hasStackType()
    {
        return isset($this->stack_type);
    }

    public function clearStackType()
    {
        unset($this->stack_type);
    }

    /**
     * The stack type for this network interface.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.NetworkInterface.StackType stack_type = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setStackType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\BackupDR\V1\NetworkInterface\StackType::class);
        $this->stack_type = $var;

        return $this;
    }

    /**
     * Optional. [Output Only] One of EXTERNAL, INTERNAL to indicate whether the
     * IP can be accessed from the Internet. This field is always inherited from
     * its subnetwork.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.NetworkInterface.Ipv6AccessType ipv6_access_type = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getIpv6AccessType()
    {
        return isset($this->ipv6_access_type) ? $this->ipv6_access_type : 0;
    }

    public function hasIpv6AccessType()
    {
        return isset($this->ipv6_access_type);
    }

    public function clearIpv6AccessType()
    {
        unset($this->ipv6_access_type);
    }

    /**
     * Optional. [Output Only] One of EXTERNAL, INTERNAL to indicate whether the
     * IP can be accessed from the Internet. This field is always inherited from
     * its subnetwork.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.NetworkInterface.Ipv6AccessType ipv6_access_type = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setIpv6AccessType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\BackupDR\V1\NetworkInterface\Ipv6AccessType::class);
        $this->ipv6_access_type = $var;

        return $this;
    }

    /**
     * Optional. The networking queue count that's specified by users for the
     * network interface. Both Rx and Tx queues will be set to this number. It'll
     * be empty if not specified by the users.
     *
     * Generated from protobuf field <code>optional int32 queue_count = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getQueueCount()
    {
        return isset($this->queue_count) ? $this->queue_count : 0;
    }

    public function hasQueueCount()
    {
        return isset($this->queue_count);
    }

    public function clearQueueCount()
    {
        unset($this->queue_count);
    }

    /**
     * Optional. The networking queue count that's specified by users for the
     * network interface. Both Rx and Tx queues will be set to this number. It'll
     * be empty if not specified by the users.
     *
     * Generated from protobuf field <code>optional int32 queue_count = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setQueueCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->queue_count = $var;

        return $this;
    }

    /**
     * Optional. The type of vNIC to be used on this interface. This may be gVNIC
     * or VirtioNet.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.NetworkInterface.NicType nic_type = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getNicType()
    {
        return isset($this->nic_type) ? $this->nic_type : 0;
    }

    public function hasNicType()
    {
        return isset($this->nic_type);
    }

    public function clearNicType()
    {
        unset($this->nic_type);
    }

    /**
     * Optional. The type of vNIC to be used on this interface. This may be gVNIC
     * or VirtioNet.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.NetworkInterface.NicType nic_type = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setNicType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\BackupDR\V1\NetworkInterface\NicType::class);
        $this->nic_type = $var;

        return $this;
    }

    /**
     * Optional. The URL of the network attachment that this interface should
     * connect to in the following format:
     * projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.
     *
     * Generated from protobuf field <code>optional string network_attachment = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getNetworkAttachment()
    {
        return isset($this->network_attachment) ? $this->network_attachment : '';
    }

    public function hasNetworkAttachment()
    {
        return isset($this->network_attachment);
    }

    public function clearNetworkAttachment()
    {
        unset($this->network_attachment);
    }

    /**
     * Optional. The URL of the network attachment that this interface should
     * connect to in the following format:
     * projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.
     *
     * Generated from protobuf field <code>optional string network_attachment = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setNetworkAttachment($var)
    {
        GPBUtil::checkString($var, True);
        $this->network_attachment = $var;

        return $this;
    }

}

