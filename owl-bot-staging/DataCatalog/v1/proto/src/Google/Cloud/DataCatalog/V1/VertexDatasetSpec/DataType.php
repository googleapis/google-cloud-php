<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datacatalog/v1/datacatalog.proto

namespace Google\Cloud\DataCatalog\V1\VertexDatasetSpec;

use UnexpectedValueException;

/**
 * Type of data stored in the dataset.
 *
 * Protobuf type <code>google.cloud.datacatalog.v1.VertexDatasetSpec.DataType</code>
 */
class DataType
{
    /**
     * Should not be used.
     *
     * Generated from protobuf enum <code>DATA_TYPE_UNSPECIFIED = 0;</code>
     */
    const DATA_TYPE_UNSPECIFIED = 0;
    /**
     * Structured data dataset.
     *
     * Generated from protobuf enum <code>TABLE = 1;</code>
     */
    const TABLE = 1;
    /**
     * Image dataset which supports ImageClassification, ImageObjectDetection
     * and ImageSegmentation problems.
     *
     * Generated from protobuf enum <code>IMAGE = 2;</code>
     */
    const IMAGE = 2;
    /**
     * Document dataset which supports TextClassification, TextExtraction and
     * TextSentiment problems.
     *
     * Generated from protobuf enum <code>TEXT = 3;</code>
     */
    const TEXT = 3;
    /**
     * Video dataset which supports VideoClassification, VideoObjectTracking and
     * VideoActionRecognition problems.
     *
     * Generated from protobuf enum <code>VIDEO = 4;</code>
     */
    const VIDEO = 4;
    /**
     * Conversation dataset which supports conversation problems.
     *
     * Generated from protobuf enum <code>CONVERSATION = 5;</code>
     */
    const CONVERSATION = 5;
    /**
     * TimeSeries dataset.
     *
     * Generated from protobuf enum <code>TIME_SERIES = 6;</code>
     */
    const TIME_SERIES = 6;
    /**
     * Document dataset which supports DocumentAnnotation problems.
     *
     * Generated from protobuf enum <code>DOCUMENT = 7;</code>
     */
    const DOCUMENT = 7;
    /**
     * TextToSpeech dataset which supports TextToSpeech problems.
     *
     * Generated from protobuf enum <code>TEXT_TO_SPEECH = 8;</code>
     */
    const TEXT_TO_SPEECH = 8;
    /**
     * Translation dataset which supports Translation problems.
     *
     * Generated from protobuf enum <code>TRANSLATION = 9;</code>
     */
    const TRANSLATION = 9;
    /**
     * Store Vision dataset which is used for HITL integration.
     *
     * Generated from protobuf enum <code>STORE_VISION = 10;</code>
     */
    const STORE_VISION = 10;
    /**
     * Enterprise Knowledge Graph dataset which is used for HITL labeling
     * integration.
     *
     * Generated from protobuf enum <code>ENTERPRISE_KNOWLEDGE_GRAPH = 11;</code>
     */
    const ENTERPRISE_KNOWLEDGE_GRAPH = 11;
    /**
     * Text prompt dataset which supports Large Language Models.
     *
     * Generated from protobuf enum <code>TEXT_PROMPT = 12;</code>
     */
    const TEXT_PROMPT = 12;

    private static $valueToName = [
        self::DATA_TYPE_UNSPECIFIED => 'DATA_TYPE_UNSPECIFIED',
        self::TABLE => 'TABLE',
        self::IMAGE => 'IMAGE',
        self::TEXT => 'TEXT',
        self::VIDEO => 'VIDEO',
        self::CONVERSATION => 'CONVERSATION',
        self::TIME_SERIES => 'TIME_SERIES',
        self::DOCUMENT => 'DOCUMENT',
        self::TEXT_TO_SPEECH => 'TEXT_TO_SPEECH',
        self::TRANSLATION => 'TRANSLATION',
        self::STORE_VISION => 'STORE_VISION',
        self::ENTERPRISE_KNOWLEDGE_GRAPH => 'ENTERPRISE_KNOWLEDGE_GRAPH',
        self::TEXT_PROMPT => 'TEXT_PROMPT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(DataType::class, \Google\Cloud\DataCatalog\V1\VertexDatasetSpec_DataType::class);

