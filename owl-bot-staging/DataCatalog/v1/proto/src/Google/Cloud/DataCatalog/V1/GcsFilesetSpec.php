<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datacatalog/v1/gcs_fileset_spec.proto

namespace Google\Cloud\DataCatalog\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describes a Cloud Storage fileset entry.
 *
 * Generated from protobuf message <code>google.cloud.datacatalog.v1.GcsFilesetSpec</code>
 */
class GcsFilesetSpec extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Patterns to identify a set of files in Google Cloud Storage.
     * For more information, see [Wildcard Names]
     * (https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     * Note: Currently, bucket wildcards are not supported.
     * Examples of valid `file_patterns`:
     *  * `gs://bucket_name/dir/&#42;`: matches all files in `bucket_name/dir`
     *                              directory
     *  * `gs://bucket_name/dir/&#42;*`: matches all files in `bucket_name/dir`
     *                               and all subdirectories
     *  * `gs://bucket_name/file*`: matches files prefixed by `file` in
     *                              `bucket_name`
     *  * `gs://bucket_name/??.txt`: matches files with two characters followed by
     *                               `.txt` in `bucket_name`
     *  * `gs://bucket_name/[aeiou].txt`: matches files that contain a single
     *                                    vowel character followed by `.txt` in
     *                                    `bucket_name`
     *  * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ...
     *                                  or `m` followed by `.txt` in `bucket_name`
     *  * `gs://bucket_name/a/&#42;&#47;b`: matches all files in `bucket_name` that match
     *                              the `a/&#42;&#47;b` pattern, such as `a/c/b`, `a/d/b`
     *  * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
     * You can combine wildcards to match complex sets of files, for example:
     * `gs://bucket_name/[a-m]??.j*g`
     *
     * Generated from protobuf field <code>repeated string file_patterns = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $file_patterns;
    /**
     * Output only. Sample files contained in this fileset, not all files
     * contained in this fileset are represented here.
     *
     * Generated from protobuf field <code>repeated .google.cloud.datacatalog.v1.GcsFileSpec sample_gcs_file_specs = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $sample_gcs_file_specs;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $file_patterns
     *           Required. Patterns to identify a set of files in Google Cloud Storage.
     *           For more information, see [Wildcard Names]
     *           (https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     *           Note: Currently, bucket wildcards are not supported.
     *           Examples of valid `file_patterns`:
     *            * `gs://bucket_name/dir/&#42;`: matches all files in `bucket_name/dir`
     *                                        directory
     *            * `gs://bucket_name/dir/&#42;*`: matches all files in `bucket_name/dir`
     *                                         and all subdirectories
     *            * `gs://bucket_name/file*`: matches files prefixed by `file` in
     *                                        `bucket_name`
     *            * `gs://bucket_name/??.txt`: matches files with two characters followed by
     *                                         `.txt` in `bucket_name`
     *            * `gs://bucket_name/[aeiou].txt`: matches files that contain a single
     *                                              vowel character followed by `.txt` in
     *                                              `bucket_name`
     *            * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ...
     *                                            or `m` followed by `.txt` in `bucket_name`
     *            * `gs://bucket_name/a/&#42;&#47;b`: matches all files in `bucket_name` that match
     *                                        the `a/&#42;&#47;b` pattern, such as `a/c/b`, `a/d/b`
     *            * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
     *           You can combine wildcards to match complex sets of files, for example:
     *           `gs://bucket_name/[a-m]??.j*g`
     *     @type array<\Google\Cloud\DataCatalog\V1\GcsFileSpec>|\Google\Protobuf\Internal\RepeatedField $sample_gcs_file_specs
     *           Output only. Sample files contained in this fileset, not all files
     *           contained in this fileset are represented here.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Datacatalog\V1\GcsFilesetSpec::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Patterns to identify a set of files in Google Cloud Storage.
     * For more information, see [Wildcard Names]
     * (https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     * Note: Currently, bucket wildcards are not supported.
     * Examples of valid `file_patterns`:
     *  * `gs://bucket_name/dir/&#42;`: matches all files in `bucket_name/dir`
     *                              directory
     *  * `gs://bucket_name/dir/&#42;*`: matches all files in `bucket_name/dir`
     *                               and all subdirectories
     *  * `gs://bucket_name/file*`: matches files prefixed by `file` in
     *                              `bucket_name`
     *  * `gs://bucket_name/??.txt`: matches files with two characters followed by
     *                               `.txt` in `bucket_name`
     *  * `gs://bucket_name/[aeiou].txt`: matches files that contain a single
     *                                    vowel character followed by `.txt` in
     *                                    `bucket_name`
     *  * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ...
     *                                  or `m` followed by `.txt` in `bucket_name`
     *  * `gs://bucket_name/a/&#42;&#47;b`: matches all files in `bucket_name` that match
     *                              the `a/&#42;&#47;b` pattern, such as `a/c/b`, `a/d/b`
     *  * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
     * You can combine wildcards to match complex sets of files, for example:
     * `gs://bucket_name/[a-m]??.j*g`
     *
     * Generated from protobuf field <code>repeated string file_patterns = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFilePatterns()
    {
        return $this->file_patterns;
    }

    /**
     * Required. Patterns to identify a set of files in Google Cloud Storage.
     * For more information, see [Wildcard Names]
     * (https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames).
     * Note: Currently, bucket wildcards are not supported.
     * Examples of valid `file_patterns`:
     *  * `gs://bucket_name/dir/&#42;`: matches all files in `bucket_name/dir`
     *                              directory
     *  * `gs://bucket_name/dir/&#42;*`: matches all files in `bucket_name/dir`
     *                               and all subdirectories
     *  * `gs://bucket_name/file*`: matches files prefixed by `file` in
     *                              `bucket_name`
     *  * `gs://bucket_name/??.txt`: matches files with two characters followed by
     *                               `.txt` in `bucket_name`
     *  * `gs://bucket_name/[aeiou].txt`: matches files that contain a single
     *                                    vowel character followed by `.txt` in
     *                                    `bucket_name`
     *  * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ...
     *                                  or `m` followed by `.txt` in `bucket_name`
     *  * `gs://bucket_name/a/&#42;&#47;b`: matches all files in `bucket_name` that match
     *                              the `a/&#42;&#47;b` pattern, such as `a/c/b`, `a/d/b`
     *  * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
     * You can combine wildcards to match complex sets of files, for example:
     * `gs://bucket_name/[a-m]??.j*g`
     *
     * Generated from protobuf field <code>repeated string file_patterns = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFilePatterns($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->file_patterns = $arr;

        return $this;
    }

    /**
     * Output only. Sample files contained in this fileset, not all files
     * contained in this fileset are represented here.
     *
     * Generated from protobuf field <code>repeated .google.cloud.datacatalog.v1.GcsFileSpec sample_gcs_file_specs = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSampleGcsFileSpecs()
    {
        return $this->sample_gcs_file_specs;
    }

    /**
     * Output only. Sample files contained in this fileset, not all files
     * contained in this fileset are represented here.
     *
     * Generated from protobuf field <code>repeated .google.cloud.datacatalog.v1.GcsFileSpec sample_gcs_file_specs = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param array<\Google\Cloud\DataCatalog\V1\GcsFileSpec>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSampleGcsFileSpecs($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\DataCatalog\V1\GcsFileSpec::class);
        $this->sample_gcs_file_specs = $arr;

        return $this;
    }

}

