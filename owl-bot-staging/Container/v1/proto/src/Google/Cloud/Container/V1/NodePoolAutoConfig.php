<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/container/v1/cluster_service.proto

namespace Google\Cloud\Container\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Node pool configs that apply to all auto-provisioned node pools
 * in autopilot clusters and node auto-provisioning enabled clusters.
 *
 * Generated from protobuf message <code>google.container.v1.NodePoolAutoConfig</code>
 */
class NodePoolAutoConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * The list of instance tags applied to all nodes. Tags are used to identify
     * valid sources or targets for network firewalls and are specified by
     * the client during cluster creation. Each tag within the list
     * must comply with RFC1035.
     *
     * Generated from protobuf field <code>.google.container.v1.NetworkTags network_tags = 1;</code>
     */
    protected $network_tags = null;
    /**
     * Resource manager tag keys and values to be attached to the nodes
     * for managing Compute Engine firewalls using Network Firewall Policies.
     *
     * Generated from protobuf field <code>.google.container.v1.ResourceManagerTags resource_manager_tags = 2;</code>
     */
    protected $resource_manager_tags = null;
    /**
     * NodeKubeletConfig controls the defaults for autoprovisioned node-pools.
     * Currently only `insecure_kubelet_readonly_port_enabled` can be set here.
     *
     * Generated from protobuf field <code>.google.container.v1.NodeKubeletConfig node_kubelet_config = 3;</code>
     */
    protected $node_kubelet_config = null;
    /**
     * Output only. Configuration options for Linux nodes.
     *
     * Generated from protobuf field <code>.google.container.v1.LinuxNodeConfig linux_node_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $linux_node_config = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Container\V1\NetworkTags $network_tags
     *           The list of instance tags applied to all nodes. Tags are used to identify
     *           valid sources or targets for network firewalls and are specified by
     *           the client during cluster creation. Each tag within the list
     *           must comply with RFC1035.
     *     @type \Google\Cloud\Container\V1\ResourceManagerTags $resource_manager_tags
     *           Resource manager tag keys and values to be attached to the nodes
     *           for managing Compute Engine firewalls using Network Firewall Policies.
     *     @type \Google\Cloud\Container\V1\NodeKubeletConfig $node_kubelet_config
     *           NodeKubeletConfig controls the defaults for autoprovisioned node-pools.
     *           Currently only `insecure_kubelet_readonly_port_enabled` can be set here.
     *     @type \Google\Cloud\Container\V1\LinuxNodeConfig $linux_node_config
     *           Output only. Configuration options for Linux nodes.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Container\V1\ClusterService::initOnce();
        parent::__construct($data);
    }

    /**
     * The list of instance tags applied to all nodes. Tags are used to identify
     * valid sources or targets for network firewalls and are specified by
     * the client during cluster creation. Each tag within the list
     * must comply with RFC1035.
     *
     * Generated from protobuf field <code>.google.container.v1.NetworkTags network_tags = 1;</code>
     * @return \Google\Cloud\Container\V1\NetworkTags|null
     */
    public function getNetworkTags()
    {
        return $this->network_tags;
    }

    public function hasNetworkTags()
    {
        return isset($this->network_tags);
    }

    public function clearNetworkTags()
    {
        unset($this->network_tags);
    }

    /**
     * The list of instance tags applied to all nodes. Tags are used to identify
     * valid sources or targets for network firewalls and are specified by
     * the client during cluster creation. Each tag within the list
     * must comply with RFC1035.
     *
     * Generated from protobuf field <code>.google.container.v1.NetworkTags network_tags = 1;</code>
     * @param \Google\Cloud\Container\V1\NetworkTags $var
     * @return $this
     */
    public function setNetworkTags($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Container\V1\NetworkTags::class);
        $this->network_tags = $var;

        return $this;
    }

    /**
     * Resource manager tag keys and values to be attached to the nodes
     * for managing Compute Engine firewalls using Network Firewall Policies.
     *
     * Generated from protobuf field <code>.google.container.v1.ResourceManagerTags resource_manager_tags = 2;</code>
     * @return \Google\Cloud\Container\V1\ResourceManagerTags|null
     */
    public function getResourceManagerTags()
    {
        return $this->resource_manager_tags;
    }

    public function hasResourceManagerTags()
    {
        return isset($this->resource_manager_tags);
    }

    public function clearResourceManagerTags()
    {
        unset($this->resource_manager_tags);
    }

    /**
     * Resource manager tag keys and values to be attached to the nodes
     * for managing Compute Engine firewalls using Network Firewall Policies.
     *
     * Generated from protobuf field <code>.google.container.v1.ResourceManagerTags resource_manager_tags = 2;</code>
     * @param \Google\Cloud\Container\V1\ResourceManagerTags $var
     * @return $this
     */
    public function setResourceManagerTags($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Container\V1\ResourceManagerTags::class);
        $this->resource_manager_tags = $var;

        return $this;
    }

    /**
     * NodeKubeletConfig controls the defaults for autoprovisioned node-pools.
     * Currently only `insecure_kubelet_readonly_port_enabled` can be set here.
     *
     * Generated from protobuf field <code>.google.container.v1.NodeKubeletConfig node_kubelet_config = 3;</code>
     * @return \Google\Cloud\Container\V1\NodeKubeletConfig|null
     */
    public function getNodeKubeletConfig()
    {
        return $this->node_kubelet_config;
    }

    public function hasNodeKubeletConfig()
    {
        return isset($this->node_kubelet_config);
    }

    public function clearNodeKubeletConfig()
    {
        unset($this->node_kubelet_config);
    }

    /**
     * NodeKubeletConfig controls the defaults for autoprovisioned node-pools.
     * Currently only `insecure_kubelet_readonly_port_enabled` can be set here.
     *
     * Generated from protobuf field <code>.google.container.v1.NodeKubeletConfig node_kubelet_config = 3;</code>
     * @param \Google\Cloud\Container\V1\NodeKubeletConfig $var
     * @return $this
     */
    public function setNodeKubeletConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Container\V1\NodeKubeletConfig::class);
        $this->node_kubelet_config = $var;

        return $this;
    }

    /**
     * Output only. Configuration options for Linux nodes.
     *
     * Generated from protobuf field <code>.google.container.v1.LinuxNodeConfig linux_node_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Cloud\Container\V1\LinuxNodeConfig|null
     */
    public function getLinuxNodeConfig()
    {
        return $this->linux_node_config;
    }

    public function hasLinuxNodeConfig()
    {
        return isset($this->linux_node_config);
    }

    public function clearLinuxNodeConfig()
    {
        unset($this->linux_node_config);
    }

    /**
     * Output only. Configuration options for Linux nodes.
     *
     * Generated from protobuf field <code>.google.container.v1.LinuxNodeConfig linux_node_config = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Cloud\Container\V1\LinuxNodeConfig $var
     * @return $this
     */
    public function setLinuxNodeConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Container\V1\LinuxNodeConfig::class);
        $this->linux_node_config = $var;

        return $this;
    }

}

