<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/container/v1/cluster_service.proto

namespace Google\Cloud\Container\V1\AdvancedDatapathObservabilityConfig;

use UnexpectedValueException;

/**
 * Supported Relay modes
 *
 * Protobuf type <code>google.container.v1.AdvancedDatapathObservabilityConfig.RelayMode</code>
 */
class RelayMode
{
    /**
     * Default value. This shouldn't be used.
     *
     * Generated from protobuf enum <code>RELAY_MODE_UNSPECIFIED = 0;</code>
     */
    const RELAY_MODE_UNSPECIFIED = 0;
    /**
     * disabled
     *
     * Generated from protobuf enum <code>DISABLED = 1;</code>
     */
    const DISABLED = 1;
    /**
     * exposed via internal load balancer
     *
     * Generated from protobuf enum <code>INTERNAL_VPC_LB = 3;</code>
     */
    const INTERNAL_VPC_LB = 3;
    /**
     * exposed via external load balancer
     *
     * Generated from protobuf enum <code>EXTERNAL_LB = 4;</code>
     */
    const EXTERNAL_LB = 4;

    private static $valueToName = [
        self::RELAY_MODE_UNSPECIFIED => 'RELAY_MODE_UNSPECIFIED',
        self::DISABLED => 'DISABLED',
        self::INTERNAL_VPC_LB => 'INTERNAL_VPC_LB',
        self::EXTERNAL_LB => 'EXTERNAL_LB',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(RelayMode::class, \Google\Cloud\Container\V1\AdvancedDatapathObservabilityConfig_RelayMode::class);

