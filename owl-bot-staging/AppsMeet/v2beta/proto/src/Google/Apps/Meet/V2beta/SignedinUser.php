<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/apps/meet/v2beta/resource.proto

namespace Google\Apps\Meet\V2beta;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A signed-in user can be:
 * a) An individual joining from a personal computer, mobile device, or through
 * companion mode.
 * b) A robot account used by conference room devices.
 *
 * Generated from protobuf message <code>google.apps.meet.v2beta.SignedinUser</code>
 */
class SignedinUser extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. Unique ID for the user. Interoperable with Admin SDK API and
     * People API. Format: `users/{user}`
     *
     * Generated from protobuf field <code>string user = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $user = '';
    /**
     * Output only. For a personal device, it's the user's first and last name.
     * For a robot account, it's the admin specified device name. For example,
     * "Altostrat Room".
     *
     * Generated from protobuf field <code>string display_name = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $display_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $user
     *           Output only. Unique ID for the user. Interoperable with Admin SDK API and
     *           People API. Format: `users/{user}`
     *     @type string $display_name
     *           Output only. For a personal device, it's the user's first and last name.
     *           For a robot account, it's the admin specified device name. For example,
     *           "Altostrat Room".
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Apps\Meet\V2Beta\Resource::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. Unique ID for the user. Interoperable with Admin SDK API and
     * People API. Format: `users/{user}`
     *
     * Generated from protobuf field <code>string user = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getUser()
    {
        return $this->user;
    }

    /**
     * Output only. Unique ID for the user. Interoperable with Admin SDK API and
     * People API. Format: `users/{user}`
     *
     * Generated from protobuf field <code>string user = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setUser($var)
    {
        GPBUtil::checkString($var, True);
        $this->user = $var;

        return $this;
    }

    /**
     * Output only. For a personal device, it's the user's first and last name.
     * For a robot account, it's the admin specified device name. For example,
     * "Altostrat Room".
     *
     * Generated from protobuf field <code>string display_name = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Output only. For a personal device, it's the user's first and last name.
     * For a robot account, it's the admin specified device name. For example,
     * "Altostrat Room".
     *
     * Generated from protobuf field <code>string display_name = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

}

