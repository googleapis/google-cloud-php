<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/apihub/v1/plugin_service.proto

namespace Google\Cloud\ApiHub\V1\Plugin;

use UnexpectedValueException;

/**
 * Ownership type of the plugin.
 *
 * Protobuf type <code>google.cloud.apihub.v1.Plugin.OwnershipType</code>
 */
class OwnershipType
{
    /**
     * Default unspecified type.
     *
     * Generated from protobuf enum <code>OWNERSHIP_TYPE_UNSPECIFIED = 0;</code>
     */
    const OWNERSHIP_TYPE_UNSPECIFIED = 0;
    /**
     * System owned plugins are defined by API hub and are available out of the
     * box in API hub.
     *
     * Generated from protobuf enum <code>SYSTEM_OWNED = 1;</code>
     */
    const SYSTEM_OWNED = 1;
    /**
     * User owned plugins are defined by the user and need to be explicitly
     * added to API hub via
     * [CreatePlugin][google.cloud.apihub.v1.ApiHubPlugin.CreatePlugin] method.
     *
     * Generated from protobuf enum <code>USER_OWNED = 2;</code>
     */
    const USER_OWNED = 2;

    private static $valueToName = [
        self::OWNERSHIP_TYPE_UNSPECIFIED => 'OWNERSHIP_TYPE_UNSPECIFIED',
        self::SYSTEM_OWNED => 'SYSTEM_OWNED',
        self::USER_OWNED => 'USER_OWNED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(OwnershipType::class, \Google\Cloud\ApiHub\V1\Plugin_OwnershipType::class);

