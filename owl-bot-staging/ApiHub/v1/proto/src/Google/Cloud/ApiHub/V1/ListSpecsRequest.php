<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/apihub/v1/apihub_service.proto

namespace Google\Cloud\ApiHub\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The [ListSpecs][ListSpecs] method's request.
 *
 * Generated from protobuf message <code>google.cloud.apihub.v1.ListSpecsRequest</code>
 */
class ListSpecsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The parent, which owns this collection of specs.
     * Format:
     * `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Optional. An expression that filters the list of Specs.
     * A filter expression consists of a field name, a comparison
     * operator, and a value for filtering. The value must be a string. The
     * comparison operator must be one of: `<`, `>`, `:` or `=`. Filters are not
     * case sensitive.
     * The following fields in the `Spec` are eligible for filtering:
     *   * `display_name` - The display name of the Spec. Allowed comparison
     *   operators: `=`.
     *   * `create_time` - The time at which the Spec was created. The
     *   value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339]
     *   format. Allowed comparison operators: `>` and `<`.
     *   * `spec_type.enum_values.values.id` - The allowed value id of the
     *   spec_type attribute associated with the Spec. Allowed comparison
     *   operators: `:`.
     *   * `spec_type.enum_values.values.display_name` - The allowed value display
     *   name of the spec_type attribute associated with the Spec. Allowed
     *   comparison operators: `:`.
     *   * `lint_response.json_values.values` - The json value of the
     *   lint_response attribute associated with the Spec. Allowed comparison
     *   operators: `:`.
     *   * `mime_type` - The MIME type of the Spec. Allowed comparison
     *   operators: `=`.
     * Expressions are combined with either `AND` logic operator or `OR` logical
     * operator but not both of them together i.e. only one of the `AND` or `OR`
     * operator can be used throughout the filter string and both the operators
     * cannot be used together. No other logical operators are
     * supported. At most three filter fields are allowed in the filter
     * string and if provided more than that then `INVALID_ARGUMENT` error is
     * returned by the API.
     * Here are a few examples:
     *   * `spec_type.enum_values.values.id: rest-id` -  The filter
     *   string specifies that the id of the allowed value associated with the
     *   spec_type attribute is _rest-id_.
     *   * `spec_type.enum_values.values.display_name: \"Rest Display Name\"` -
     *   The filter string specifies that the display name of the allowed value
     *   associated with the spec_type attribute is `Rest Display Name`.
     *   * `spec_type.enum_values.values.id: grpc-id AND create_time <
     *   \"2021-08-15T14:50:00Z\" AND create_time > \"2021-08-10T12:00:00Z\"` -
     *   The id of the allowed value associated with the spec_type attribute is
     *   _grpc-id_ and the spec was created before _2021-08-15 14:50:00 UTC_ and
     *   after _2021-08-10 12:00:00 UTC_.
     *   * `spec_type.enum_values.values.id: rest-id OR
     *   spec_type.enum_values.values.id: grpc-id`
     *   - The id of the allowed value associated with the spec_type attribute is
     *   _rest-id_ or _grpc-id_.
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $filter = '';
    /**
     * Optional. The maximum number of specs to return. The service may return
     * fewer than this value. If unspecified, at most 50 specs will be
     * returned. The maximum value is 1000; values above 1000 will be coerced to
     * 1000.
     *
     * Generated from protobuf field <code>int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $page_size = 0;
    /**
     * Optional. A page token, received from a previous `ListSpecs` call.
     * Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListSpecs` must
     * match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $page_token = '';

    /**
     * @param string $parent Required. The parent, which owns this collection of specs.
     *                       Format:
     *                       `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
     *                       Please see {@see ApiHubClient::versionName()} for help formatting this field.
     *
     * @return \Google\Cloud\ApiHub\V1\ListSpecsRequest
     *
     * @experimental
     */
    public static function build(string $parent): self
    {
        return (new self())
            ->setParent($parent);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The parent, which owns this collection of specs.
     *           Format:
     *           `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
     *     @type string $filter
     *           Optional. An expression that filters the list of Specs.
     *           A filter expression consists of a field name, a comparison
     *           operator, and a value for filtering. The value must be a string. The
     *           comparison operator must be one of: `<`, `>`, `:` or `=`. Filters are not
     *           case sensitive.
     *           The following fields in the `Spec` are eligible for filtering:
     *             * `display_name` - The display name of the Spec. Allowed comparison
     *             operators: `=`.
     *             * `create_time` - The time at which the Spec was created. The
     *             value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339]
     *             format. Allowed comparison operators: `>` and `<`.
     *             * `spec_type.enum_values.values.id` - The allowed value id of the
     *             spec_type attribute associated with the Spec. Allowed comparison
     *             operators: `:`.
     *             * `spec_type.enum_values.values.display_name` - The allowed value display
     *             name of the spec_type attribute associated with the Spec. Allowed
     *             comparison operators: `:`.
     *             * `lint_response.json_values.values` - The json value of the
     *             lint_response attribute associated with the Spec. Allowed comparison
     *             operators: `:`.
     *             * `mime_type` - The MIME type of the Spec. Allowed comparison
     *             operators: `=`.
     *           Expressions are combined with either `AND` logic operator or `OR` logical
     *           operator but not both of them together i.e. only one of the `AND` or `OR`
     *           operator can be used throughout the filter string and both the operators
     *           cannot be used together. No other logical operators are
     *           supported. At most three filter fields are allowed in the filter
     *           string and if provided more than that then `INVALID_ARGUMENT` error is
     *           returned by the API.
     *           Here are a few examples:
     *             * `spec_type.enum_values.values.id: rest-id` -  The filter
     *             string specifies that the id of the allowed value associated with the
     *             spec_type attribute is _rest-id_.
     *             * `spec_type.enum_values.values.display_name: \"Rest Display Name\"` -
     *             The filter string specifies that the display name of the allowed value
     *             associated with the spec_type attribute is `Rest Display Name`.
     *             * `spec_type.enum_values.values.id: grpc-id AND create_time <
     *             \"2021-08-15T14:50:00Z\" AND create_time > \"2021-08-10T12:00:00Z\"` -
     *             The id of the allowed value associated with the spec_type attribute is
     *             _grpc-id_ and the spec was created before _2021-08-15 14:50:00 UTC_ and
     *             after _2021-08-10 12:00:00 UTC_.
     *             * `spec_type.enum_values.values.id: rest-id OR
     *             spec_type.enum_values.values.id: grpc-id`
     *             - The id of the allowed value associated with the spec_type attribute is
     *             _rest-id_ or _grpc-id_.
     *     @type int $page_size
     *           Optional. The maximum number of specs to return. The service may return
     *           fewer than this value. If unspecified, at most 50 specs will be
     *           returned. The maximum value is 1000; values above 1000 will be coerced to
     *           1000.
     *     @type string $page_token
     *           Optional. A page token, received from a previous `ListSpecs` call.
     *           Provide this to retrieve the subsequent page.
     *           When paginating, all other parameters provided to `ListSpecs` must
     *           match the call that provided the page token.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Apihub\V1\ApihubService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The parent, which owns this collection of specs.
     * Format:
     * `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The parent, which owns this collection of specs.
     * Format:
     * `projects/{project}/locations/{location}/apis/{api}/versions/{version}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Optional. An expression that filters the list of Specs.
     * A filter expression consists of a field name, a comparison
     * operator, and a value for filtering. The value must be a string. The
     * comparison operator must be one of: `<`, `>`, `:` or `=`. Filters are not
     * case sensitive.
     * The following fields in the `Spec` are eligible for filtering:
     *   * `display_name` - The display name of the Spec. Allowed comparison
     *   operators: `=`.
     *   * `create_time` - The time at which the Spec was created. The
     *   value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339]
     *   format. Allowed comparison operators: `>` and `<`.
     *   * `spec_type.enum_values.values.id` - The allowed value id of the
     *   spec_type attribute associated with the Spec. Allowed comparison
     *   operators: `:`.
     *   * `spec_type.enum_values.values.display_name` - The allowed value display
     *   name of the spec_type attribute associated with the Spec. Allowed
     *   comparison operators: `:`.
     *   * `lint_response.json_values.values` - The json value of the
     *   lint_response attribute associated with the Spec. Allowed comparison
     *   operators: `:`.
     *   * `mime_type` - The MIME type of the Spec. Allowed comparison
     *   operators: `=`.
     * Expressions are combined with either `AND` logic operator or `OR` logical
     * operator but not both of them together i.e. only one of the `AND` or `OR`
     * operator can be used throughout the filter string and both the operators
     * cannot be used together. No other logical operators are
     * supported. At most three filter fields are allowed in the filter
     * string and if provided more than that then `INVALID_ARGUMENT` error is
     * returned by the API.
     * Here are a few examples:
     *   * `spec_type.enum_values.values.id: rest-id` -  The filter
     *   string specifies that the id of the allowed value associated with the
     *   spec_type attribute is _rest-id_.
     *   * `spec_type.enum_values.values.display_name: \"Rest Display Name\"` -
     *   The filter string specifies that the display name of the allowed value
     *   associated with the spec_type attribute is `Rest Display Name`.
     *   * `spec_type.enum_values.values.id: grpc-id AND create_time <
     *   \"2021-08-15T14:50:00Z\" AND create_time > \"2021-08-10T12:00:00Z\"` -
     *   The id of the allowed value associated with the spec_type attribute is
     *   _grpc-id_ and the spec was created before _2021-08-15 14:50:00 UTC_ and
     *   after _2021-08-10 12:00:00 UTC_.
     *   * `spec_type.enum_values.values.id: rest-id OR
     *   spec_type.enum_values.values.id: grpc-id`
     *   - The id of the allowed value associated with the spec_type attribute is
     *   _rest-id_ or _grpc-id_.
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Optional. An expression that filters the list of Specs.
     * A filter expression consists of a field name, a comparison
     * operator, and a value for filtering. The value must be a string. The
     * comparison operator must be one of: `<`, `>`, `:` or `=`. Filters are not
     * case sensitive.
     * The following fields in the `Spec` are eligible for filtering:
     *   * `display_name` - The display name of the Spec. Allowed comparison
     *   operators: `=`.
     *   * `create_time` - The time at which the Spec was created. The
     *   value should be in the (RFC3339)[https://tools.ietf.org/html/rfc3339]
     *   format. Allowed comparison operators: `>` and `<`.
     *   * `spec_type.enum_values.values.id` - The allowed value id of the
     *   spec_type attribute associated with the Spec. Allowed comparison
     *   operators: `:`.
     *   * `spec_type.enum_values.values.display_name` - The allowed value display
     *   name of the spec_type attribute associated with the Spec. Allowed
     *   comparison operators: `:`.
     *   * `lint_response.json_values.values` - The json value of the
     *   lint_response attribute associated with the Spec. Allowed comparison
     *   operators: `:`.
     *   * `mime_type` - The MIME type of the Spec. Allowed comparison
     *   operators: `=`.
     * Expressions are combined with either `AND` logic operator or `OR` logical
     * operator but not both of them together i.e. only one of the `AND` or `OR`
     * operator can be used throughout the filter string and both the operators
     * cannot be used together. No other logical operators are
     * supported. At most three filter fields are allowed in the filter
     * string and if provided more than that then `INVALID_ARGUMENT` error is
     * returned by the API.
     * Here are a few examples:
     *   * `spec_type.enum_values.values.id: rest-id` -  The filter
     *   string specifies that the id of the allowed value associated with the
     *   spec_type attribute is _rest-id_.
     *   * `spec_type.enum_values.values.display_name: \"Rest Display Name\"` -
     *   The filter string specifies that the display name of the allowed value
     *   associated with the spec_type attribute is `Rest Display Name`.
     *   * `spec_type.enum_values.values.id: grpc-id AND create_time <
     *   \"2021-08-15T14:50:00Z\" AND create_time > \"2021-08-10T12:00:00Z\"` -
     *   The id of the allowed value associated with the spec_type attribute is
     *   _grpc-id_ and the spec was created before _2021-08-15 14:50:00 UTC_ and
     *   after _2021-08-10 12:00:00 UTC_.
     *   * `spec_type.enum_values.values.id: rest-id OR
     *   spec_type.enum_values.values.id: grpc-id`
     *   - The id of the allowed value associated with the spec_type attribute is
     *   _rest-id_ or _grpc-id_.
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

    /**
     * Optional. The maximum number of specs to return. The service may return
     * fewer than this value. If unspecified, at most 50 specs will be
     * returned. The maximum value is 1000; values above 1000 will be coerced to
     * 1000.
     *
     * Generated from protobuf field <code>int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * Optional. The maximum number of specs to return. The service may return
     * fewer than this value. If unspecified, at most 50 specs will be
     * returned. The maximum value is 1000; values above 1000 will be coerced to
     * 1000.
     *
     * Generated from protobuf field <code>int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * Optional. A page token, received from a previous `ListSpecs` call.
     * Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListSpecs` must
     * match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * Optional. A page token, received from a previous `ListSpecs` call.
     * Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListSpecs` must
     * match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

}

