<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/apihub/v1/apihub_service.proto

namespace Google\Cloud\ApiHub\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The
 * [ListDependencies][google.cloud.apihub.v1.ApiHubDependencies.ListDependencies]
 * method's request.
 *
 * Generated from protobuf message <code>google.cloud.apihub.v1.ListDependenciesRequest</code>
 */
class ListDependenciesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The parent which owns this collection of dependency resources.
     * Format: `projects/{project}/locations/{location}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $parent = '';
    /**
     * Optional. An expression that filters the list of Dependencies.
     * A filter expression consists of a field name, a comparison operator, and
     * a value for filtering. The value must be a string. Allowed comparison
     * operator is `=`. Filters are not case sensitive.
     * The following fields in the `Dependency` are eligible for filtering:
     *   * `consumer.operation_resource_name` - The operation resource name for
     *   the consumer entity involved in a dependency. Allowed comparison
     *   operators: `=`.
     *   * `consumer.external_api_resource_name` - The external api resource name
     *   for the consumer entity involved in a dependency. Allowed comparison
     *   operators: `=`.
     *   * `supplier.operation_resource_name` - The operation resource name for
     *   the supplier entity involved in a dependency. Allowed comparison
     *   operators: `=`.
     *   * `supplier.external_api_resource_name` - The external api resource name
     *   for the supplier entity involved in a dependency. Allowed comparison
     *   operators: `=`.
     * Expressions are combined with either `AND` logic operator or `OR` logical
     * operator but not both of them together i.e. only one of the `AND` or `OR`
     * operator can be used throughout the filter string and both the operators
     * cannot be used together. No other logical operators are supported. At most
     * three filter fields are allowed in the filter string and if provided
     * more than that then `INVALID_ARGUMENT` error is returned by the API.
     * For example, `consumer.operation_resource_name =
     * \"projects/p1/locations/global/apis/a1/versions/v1/operations/o1\" OR
     * supplier.operation_resource_name =
     * \"projects/p1/locations/global/apis/a1/versions/v1/operations/o1\"` - The
     * dependencies with either consumer or supplier operation resource name as
     * _projects/p1/locations/global/apis/a1/versions/v1/operations/o1_.
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $filter = '';
    /**
     * Optional. The maximum number of dependency resources to return. The service
     * may return fewer than this value. If unspecified, at most 50 dependencies
     * will be returned. The maximum value is 1000; values above 1000 will be
     * coerced to 1000.
     *
     * Generated from protobuf field <code>int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $page_size = 0;
    /**
     * Optional. A page token, received from a previous `ListDependencies` call.
     * Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListDependencies` must
     * match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $page_token = '';

    /**
     * @param string $parent Required. The parent which owns this collection of dependency resources.
     *                       Format: `projects/{project}/locations/{location}`
     *                       Please see {@see ApiHubDependenciesClient::locationName()} for help formatting this field.
     *
     * @return \Google\Cloud\ApiHub\V1\ListDependenciesRequest
     *
     * @experimental
     */
    public static function build(string $parent): self
    {
        return (new self())
            ->setParent($parent);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The parent which owns this collection of dependency resources.
     *           Format: `projects/{project}/locations/{location}`
     *     @type string $filter
     *           Optional. An expression that filters the list of Dependencies.
     *           A filter expression consists of a field name, a comparison operator, and
     *           a value for filtering. The value must be a string. Allowed comparison
     *           operator is `=`. Filters are not case sensitive.
     *           The following fields in the `Dependency` are eligible for filtering:
     *             * `consumer.operation_resource_name` - The operation resource name for
     *             the consumer entity involved in a dependency. Allowed comparison
     *             operators: `=`.
     *             * `consumer.external_api_resource_name` - The external api resource name
     *             for the consumer entity involved in a dependency. Allowed comparison
     *             operators: `=`.
     *             * `supplier.operation_resource_name` - The operation resource name for
     *             the supplier entity involved in a dependency. Allowed comparison
     *             operators: `=`.
     *             * `supplier.external_api_resource_name` - The external api resource name
     *             for the supplier entity involved in a dependency. Allowed comparison
     *             operators: `=`.
     *           Expressions are combined with either `AND` logic operator or `OR` logical
     *           operator but not both of them together i.e. only one of the `AND` or `OR`
     *           operator can be used throughout the filter string and both the operators
     *           cannot be used together. No other logical operators are supported. At most
     *           three filter fields are allowed in the filter string and if provided
     *           more than that then `INVALID_ARGUMENT` error is returned by the API.
     *           For example, `consumer.operation_resource_name =
     *           \"projects/p1/locations/global/apis/a1/versions/v1/operations/o1\" OR
     *           supplier.operation_resource_name =
     *           \"projects/p1/locations/global/apis/a1/versions/v1/operations/o1\"` - The
     *           dependencies with either consumer or supplier operation resource name as
     *           _projects/p1/locations/global/apis/a1/versions/v1/operations/o1_.
     *     @type int $page_size
     *           Optional. The maximum number of dependency resources to return. The service
     *           may return fewer than this value. If unspecified, at most 50 dependencies
     *           will be returned. The maximum value is 1000; values above 1000 will be
     *           coerced to 1000.
     *     @type string $page_token
     *           Optional. A page token, received from a previous `ListDependencies` call.
     *           Provide this to retrieve the subsequent page.
     *           When paginating, all other parameters provided to `ListDependencies` must
     *           match the call that provided the page token.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Apihub\V1\ApihubService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The parent which owns this collection of dependency resources.
     * Format: `projects/{project}/locations/{location}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The parent which owns this collection of dependency resources.
     * Format: `projects/{project}/locations/{location}`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Optional. An expression that filters the list of Dependencies.
     * A filter expression consists of a field name, a comparison operator, and
     * a value for filtering. The value must be a string. Allowed comparison
     * operator is `=`. Filters are not case sensitive.
     * The following fields in the `Dependency` are eligible for filtering:
     *   * `consumer.operation_resource_name` - The operation resource name for
     *   the consumer entity involved in a dependency. Allowed comparison
     *   operators: `=`.
     *   * `consumer.external_api_resource_name` - The external api resource name
     *   for the consumer entity involved in a dependency. Allowed comparison
     *   operators: `=`.
     *   * `supplier.operation_resource_name` - The operation resource name for
     *   the supplier entity involved in a dependency. Allowed comparison
     *   operators: `=`.
     *   * `supplier.external_api_resource_name` - The external api resource name
     *   for the supplier entity involved in a dependency. Allowed comparison
     *   operators: `=`.
     * Expressions are combined with either `AND` logic operator or `OR` logical
     * operator but not both of them together i.e. only one of the `AND` or `OR`
     * operator can be used throughout the filter string and both the operators
     * cannot be used together. No other logical operators are supported. At most
     * three filter fields are allowed in the filter string and if provided
     * more than that then `INVALID_ARGUMENT` error is returned by the API.
     * For example, `consumer.operation_resource_name =
     * \"projects/p1/locations/global/apis/a1/versions/v1/operations/o1\" OR
     * supplier.operation_resource_name =
     * \"projects/p1/locations/global/apis/a1/versions/v1/operations/o1\"` - The
     * dependencies with either consumer or supplier operation resource name as
     * _projects/p1/locations/global/apis/a1/versions/v1/operations/o1_.
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * Optional. An expression that filters the list of Dependencies.
     * A filter expression consists of a field name, a comparison operator, and
     * a value for filtering. The value must be a string. Allowed comparison
     * operator is `=`. Filters are not case sensitive.
     * The following fields in the `Dependency` are eligible for filtering:
     *   * `consumer.operation_resource_name` - The operation resource name for
     *   the consumer entity involved in a dependency. Allowed comparison
     *   operators: `=`.
     *   * `consumer.external_api_resource_name` - The external api resource name
     *   for the consumer entity involved in a dependency. Allowed comparison
     *   operators: `=`.
     *   * `supplier.operation_resource_name` - The operation resource name for
     *   the supplier entity involved in a dependency. Allowed comparison
     *   operators: `=`.
     *   * `supplier.external_api_resource_name` - The external api resource name
     *   for the supplier entity involved in a dependency. Allowed comparison
     *   operators: `=`.
     * Expressions are combined with either `AND` logic operator or `OR` logical
     * operator but not both of them together i.e. only one of the `AND` or `OR`
     * operator can be used throughout the filter string and both the operators
     * cannot be used together. No other logical operators are supported. At most
     * three filter fields are allowed in the filter string and if provided
     * more than that then `INVALID_ARGUMENT` error is returned by the API.
     * For example, `consumer.operation_resource_name =
     * \"projects/p1/locations/global/apis/a1/versions/v1/operations/o1\" OR
     * supplier.operation_resource_name =
     * \"projects/p1/locations/global/apis/a1/versions/v1/operations/o1\"` - The
     * dependencies with either consumer or supplier operation resource name as
     * _projects/p1/locations/global/apis/a1/versions/v1/operations/o1_.
     *
     * Generated from protobuf field <code>string filter = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;

        return $this;
    }

    /**
     * Optional. The maximum number of dependency resources to return. The service
     * may return fewer than this value. If unspecified, at most 50 dependencies
     * will be returned. The maximum value is 1000; values above 1000 will be
     * coerced to 1000.
     *
     * Generated from protobuf field <code>int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * Optional. The maximum number of dependency resources to return. The service
     * may return fewer than this value. If unspecified, at most 50 dependencies
     * will be returned. The maximum value is 1000; values above 1000 will be
     * coerced to 1000.
     *
     * Generated from protobuf field <code>int32 page_size = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * Optional. A page token, received from a previous `ListDependencies` call.
     * Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListDependencies` must
     * match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * Optional. A page token, received from a previous `ListDependencies` call.
     * Provide this to retrieve the subsequent page.
     * When paginating, all other parameters provided to `ListDependencies` must
     * match the call that provided the page token.
     *
     * Generated from protobuf field <code>string page_token = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

}

