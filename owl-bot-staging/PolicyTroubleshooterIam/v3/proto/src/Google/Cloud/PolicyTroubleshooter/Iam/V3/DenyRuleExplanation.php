<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/policytroubleshooter/iam/v3/troubleshooter.proto

namespace Google\Cloud\PolicyTroubleshooter\Iam\V3;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details about how a deny rule in a deny policy affects a principal's ability
 * to use a permission.
 *
 * Generated from protobuf message <code>google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation</code>
 */
class DenyRuleExplanation extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Indicates whether _this rule_ denies the specified permission to
     * the specified principal for the specified resource.
     * This field does _not_ indicate whether the principal is actually denied on
     * the permission for the resource. There might be another rule that overrides
     * this rule. To determine whether the principal actually has the permission,
     * use the `overall_access_state` field in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $deny_access_state = 0;
    /**
     * Indicates whether the permission in the request is listed as a denied
     * permission in the deny rule.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching combined_denied_permission = 2;</code>
     */
    protected $combined_denied_permission = null;
    /**
     * Lists all denied permissions in the deny rule and indicates whether each
     * permission matches the permission in the request.
     * Each key identifies a denied permission in the rule, and each value
     * indicates whether the denied permission matches the permission in the
     * request.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching> denied_permissions = 3;</code>
     */
    private $denied_permissions;
    /**
     * Indicates whether the permission in the request is listed as an exception
     * permission in the deny rule.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching combined_exception_permission = 4;</code>
     */
    protected $combined_exception_permission = null;
    /**
     * Lists all exception permissions in the deny rule and indicates whether each
     * permission matches the permission in the request.
     * Each key identifies a exception permission in the rule, and each value
     * indicates whether the exception permission matches the permission in the
     * request.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching> exception_permissions = 5;</code>
     */
    private $exception_permissions;
    /**
     * Indicates whether the principal is listed as a denied principal in the
     * deny rule, either directly or through membership in a principal set.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching combined_denied_principal = 6;</code>
     */
    protected $combined_denied_principal = null;
    /**
     * Lists all denied principals in the deny rule and indicates whether each
     * principal matches the principal in the request, either directly or through
     * membership in a principal set.
     * Each key identifies a denied principal in the rule, and each value
     * indicates whether the denied principal matches the principal in the
     * request.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching> denied_principals = 7;</code>
     */
    private $denied_principals;
    /**
     * Indicates whether the principal is listed as an exception principal in the
     * deny rule, either directly or through membership in a principal set.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching combined_exception_principal = 8;</code>
     */
    protected $combined_exception_principal = null;
    /**
     * Lists all exception principals in the deny rule and indicates whether each
     * principal matches the principal in the request, either directly or through
     * membership in a principal set.
     * Each key identifies a exception principal in the rule, and each value
     * indicates whether the exception principal matches the principal in the
     * request.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching> exception_principals = 9;</code>
     */
    private $exception_principals;
    /**
     * The relevance of this role binding to the overall determination for the
     * entire policy.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 10;</code>
     */
    protected $relevance = 0;
    /**
     * A condition expression that specifies when the deny rule denies the
     * principal access.
     * To learn about IAM Conditions, see
     * https://cloud.google.com/iam/help/conditions/overview.
     *
     * Generated from protobuf field <code>.google.type.Expr condition = 11;</code>
     */
    protected $condition = null;
    /**
     * Condition evaluation state for this role binding.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 12;</code>
     */
    protected $condition_explanation = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $deny_access_state
     *           Required. Indicates whether _this rule_ denies the specified permission to
     *           the specified principal for the specified resource.
     *           This field does _not_ indicate whether the principal is actually denied on
     *           the permission for the resource. There might be another rule that overrides
     *           this rule. To determine whether the principal actually has the permission,
     *           use the `overall_access_state` field in the
     *           [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     *     @type \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedPermissionMatching $combined_denied_permission
     *           Indicates whether the permission in the request is listed as a denied
     *           permission in the deny rule.
     *     @type array|\Google\Protobuf\Internal\MapField $denied_permissions
     *           Lists all denied permissions in the deny rule and indicates whether each
     *           permission matches the permission in the request.
     *           Each key identifies a denied permission in the rule, and each value
     *           indicates whether the denied permission matches the permission in the
     *           request.
     *     @type \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedPermissionMatching $combined_exception_permission
     *           Indicates whether the permission in the request is listed as an exception
     *           permission in the deny rule.
     *     @type array|\Google\Protobuf\Internal\MapField $exception_permissions
     *           Lists all exception permissions in the deny rule and indicates whether each
     *           permission matches the permission in the request.
     *           Each key identifies a exception permission in the rule, and each value
     *           indicates whether the exception permission matches the permission in the
     *           request.
     *     @type \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedDenyPrincipalMatching $combined_denied_principal
     *           Indicates whether the principal is listed as a denied principal in the
     *           deny rule, either directly or through membership in a principal set.
     *     @type array|\Google\Protobuf\Internal\MapField $denied_principals
     *           Lists all denied principals in the deny rule and indicates whether each
     *           principal matches the principal in the request, either directly or through
     *           membership in a principal set.
     *           Each key identifies a denied principal in the rule, and each value
     *           indicates whether the denied principal matches the principal in the
     *           request.
     *     @type \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedDenyPrincipalMatching $combined_exception_principal
     *           Indicates whether the principal is listed as an exception principal in the
     *           deny rule, either directly or through membership in a principal set.
     *     @type array|\Google\Protobuf\Internal\MapField $exception_principals
     *           Lists all exception principals in the deny rule and indicates whether each
     *           principal matches the principal in the request, either directly or through
     *           membership in a principal set.
     *           Each key identifies a exception principal in the rule, and each value
     *           indicates whether the exception principal matches the principal in the
     *           request.
     *     @type int $relevance
     *           The relevance of this role binding to the overall determination for the
     *           entire policy.
     *     @type \Google\Type\Expr $condition
     *           A condition expression that specifies when the deny rule denies the
     *           principal access.
     *           To learn about IAM Conditions, see
     *           https://cloud.google.com/iam/help/conditions/overview.
     *     @type \Google\Cloud\PolicyTroubleshooter\Iam\V3\ConditionExplanation $condition_explanation
     *           Condition evaluation state for this role binding.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Policytroubleshooter\Iam\V3\Troubleshooter::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Indicates whether _this rule_ denies the specified permission to
     * the specified principal for the specified resource.
     * This field does _not_ indicate whether the principal is actually denied on
     * the permission for the resource. There might be another rule that overrides
     * this rule. To determine whether the principal actually has the permission,
     * use the `overall_access_state` field in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getDenyAccessState()
    {
        return $this->deny_access_state;
    }

    /**
     * Required. Indicates whether _this rule_ denies the specified permission to
     * the specified principal for the specified resource.
     * This field does _not_ indicate whether the principal is actually denied on
     * the permission for the resource. There might be another rule that overrides
     * this rule. To determine whether the principal actually has the permission,
     * use the `overall_access_state` field in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setDenyAccessState($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyAccessState::class);
        $this->deny_access_state = $var;

        return $this;
    }

    /**
     * Indicates whether the permission in the request is listed as a denied
     * permission in the deny rule.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching combined_denied_permission = 2;</code>
     * @return \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedPermissionMatching|null
     */
    public function getCombinedDeniedPermission()
    {
        return $this->combined_denied_permission;
    }

    public function hasCombinedDeniedPermission()
    {
        return isset($this->combined_denied_permission);
    }

    public function clearCombinedDeniedPermission()
    {
        unset($this->combined_denied_permission);
    }

    /**
     * Indicates whether the permission in the request is listed as a denied
     * permission in the deny rule.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching combined_denied_permission = 2;</code>
     * @param \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedPermissionMatching $var
     * @return $this
     */
    public function setCombinedDeniedPermission($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedPermissionMatching::class);
        $this->combined_denied_permission = $var;

        return $this;
    }

    /**
     * Lists all denied permissions in the deny rule and indicates whether each
     * permission matches the permission in the request.
     * Each key identifies a denied permission in the rule, and each value
     * indicates whether the denied permission matches the permission in the
     * request.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching> denied_permissions = 3;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getDeniedPermissions()
    {
        return $this->denied_permissions;
    }

    /**
     * Lists all denied permissions in the deny rule and indicates whether each
     * permission matches the permission in the request.
     * Each key identifies a denied permission in the rule, and each value
     * indicates whether the denied permission matches the permission in the
     * request.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching> denied_permissions = 3;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setDeniedPermissions($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedPermissionMatching::class);
        $this->denied_permissions = $arr;

        return $this;
    }

    /**
     * Indicates whether the permission in the request is listed as an exception
     * permission in the deny rule.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching combined_exception_permission = 4;</code>
     * @return \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedPermissionMatching|null
     */
    public function getCombinedExceptionPermission()
    {
        return $this->combined_exception_permission;
    }

    public function hasCombinedExceptionPermission()
    {
        return isset($this->combined_exception_permission);
    }

    public function clearCombinedExceptionPermission()
    {
        unset($this->combined_exception_permission);
    }

    /**
     * Indicates whether the permission in the request is listed as an exception
     * permission in the deny rule.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching combined_exception_permission = 4;</code>
     * @param \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedPermissionMatching $var
     * @return $this
     */
    public function setCombinedExceptionPermission($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedPermissionMatching::class);
        $this->combined_exception_permission = $var;

        return $this;
    }

    /**
     * Lists all exception permissions in the deny rule and indicates whether each
     * permission matches the permission in the request.
     * Each key identifies a exception permission in the rule, and each value
     * indicates whether the exception permission matches the permission in the
     * request.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching> exception_permissions = 5;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getExceptionPermissions()
    {
        return $this->exception_permissions;
    }

    /**
     * Lists all exception permissions in the deny rule and indicates whether each
     * permission matches the permission in the request.
     * Each key identifies a exception permission in the rule, and each value
     * indicates whether the exception permission matches the permission in the
     * request.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedPermissionMatching> exception_permissions = 5;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setExceptionPermissions($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedPermissionMatching::class);
        $this->exception_permissions = $arr;

        return $this;
    }

    /**
     * Indicates whether the principal is listed as a denied principal in the
     * deny rule, either directly or through membership in a principal set.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching combined_denied_principal = 6;</code>
     * @return \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedDenyPrincipalMatching|null
     */
    public function getCombinedDeniedPrincipal()
    {
        return $this->combined_denied_principal;
    }

    public function hasCombinedDeniedPrincipal()
    {
        return isset($this->combined_denied_principal);
    }

    public function clearCombinedDeniedPrincipal()
    {
        unset($this->combined_denied_principal);
    }

    /**
     * Indicates whether the principal is listed as a denied principal in the
     * deny rule, either directly or through membership in a principal set.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching combined_denied_principal = 6;</code>
     * @param \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedDenyPrincipalMatching $var
     * @return $this
     */
    public function setCombinedDeniedPrincipal($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedDenyPrincipalMatching::class);
        $this->combined_denied_principal = $var;

        return $this;
    }

    /**
     * Lists all denied principals in the deny rule and indicates whether each
     * principal matches the principal in the request, either directly or through
     * membership in a principal set.
     * Each key identifies a denied principal in the rule, and each value
     * indicates whether the denied principal matches the principal in the
     * request.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching> denied_principals = 7;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getDeniedPrincipals()
    {
        return $this->denied_principals;
    }

    /**
     * Lists all denied principals in the deny rule and indicates whether each
     * principal matches the principal in the request, either directly or through
     * membership in a principal set.
     * Each key identifies a denied principal in the rule, and each value
     * indicates whether the denied principal matches the principal in the
     * request.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching> denied_principals = 7;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setDeniedPrincipals($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedDenyPrincipalMatching::class);
        $this->denied_principals = $arr;

        return $this;
    }

    /**
     * Indicates whether the principal is listed as an exception principal in the
     * deny rule, either directly or through membership in a principal set.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching combined_exception_principal = 8;</code>
     * @return \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedDenyPrincipalMatching|null
     */
    public function getCombinedExceptionPrincipal()
    {
        return $this->combined_exception_principal;
    }

    public function hasCombinedExceptionPrincipal()
    {
        return isset($this->combined_exception_principal);
    }

    public function clearCombinedExceptionPrincipal()
    {
        unset($this->combined_exception_principal);
    }

    /**
     * Indicates whether the principal is listed as an exception principal in the
     * deny rule, either directly or through membership in a principal set.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching combined_exception_principal = 8;</code>
     * @param \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedDenyPrincipalMatching $var
     * @return $this
     */
    public function setCombinedExceptionPrincipal($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedDenyPrincipalMatching::class);
        $this->combined_exception_principal = $var;

        return $this;
    }

    /**
     * Lists all exception principals in the deny rule and indicates whether each
     * principal matches the principal in the request, either directly or through
     * membership in a principal set.
     * Each key identifies a exception principal in the rule, and each value
     * indicates whether the exception principal matches the principal in the
     * request.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching> exception_principals = 9;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getExceptionPrincipals()
    {
        return $this->exception_principals;
    }

    /**
     * Lists all exception principals in the deny rule and indicates whether each
     * principal matches the principal in the request, either directly or through
     * membership in a principal set.
     * Each key identifies a exception principal in the rule, and each value
     * indicates whether the exception principal matches the principal in the
     * request.
     *
     * Generated from protobuf field <code>map<string, .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation.AnnotatedDenyPrincipalMatching> exception_principals = 9;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setExceptionPrincipals($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation\AnnotatedDenyPrincipalMatching::class);
        $this->exception_principals = $arr;

        return $this;
    }

    /**
     * The relevance of this role binding to the overall determination for the
     * entire policy.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 10;</code>
     * @return int
     */
    public function getRelevance()
    {
        return $this->relevance;
    }

    /**
     * The relevance of this role binding to the overall determination for the
     * entire policy.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setRelevance($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\PolicyTroubleshooter\Iam\V3\HeuristicRelevance::class);
        $this->relevance = $var;

        return $this;
    }

    /**
     * A condition expression that specifies when the deny rule denies the
     * principal access.
     * To learn about IAM Conditions, see
     * https://cloud.google.com/iam/help/conditions/overview.
     *
     * Generated from protobuf field <code>.google.type.Expr condition = 11;</code>
     * @return \Google\Type\Expr|null
     */
    public function getCondition()
    {
        return $this->condition;
    }

    public function hasCondition()
    {
        return isset($this->condition);
    }

    public function clearCondition()
    {
        unset($this->condition);
    }

    /**
     * A condition expression that specifies when the deny rule denies the
     * principal access.
     * To learn about IAM Conditions, see
     * https://cloud.google.com/iam/help/conditions/overview.
     *
     * Generated from protobuf field <code>.google.type.Expr condition = 11;</code>
     * @param \Google\Type\Expr $var
     * @return $this
     */
    public function setCondition($var)
    {
        GPBUtil::checkMessage($var, \Google\Type\Expr::class);
        $this->condition = $var;

        return $this;
    }

    /**
     * Condition evaluation state for this role binding.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 12;</code>
     * @return \Google\Cloud\PolicyTroubleshooter\Iam\V3\ConditionExplanation|null
     */
    public function getConditionExplanation()
    {
        return $this->condition_explanation;
    }

    public function hasConditionExplanation()
    {
        return isset($this->condition_explanation);
    }

    public function clearConditionExplanation()
    {
        unset($this->condition_explanation);
    }

    /**
     * Condition evaluation state for this role binding.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.ConditionExplanation condition_explanation = 12;</code>
     * @param \Google\Cloud\PolicyTroubleshooter\Iam\V3\ConditionExplanation $var
     * @return $this
     */
    public function setConditionExplanation($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\PolicyTroubleshooter\Iam\V3\ConditionExplanation::class);
        $this->condition_explanation = $var;

        return $this;
    }

}

