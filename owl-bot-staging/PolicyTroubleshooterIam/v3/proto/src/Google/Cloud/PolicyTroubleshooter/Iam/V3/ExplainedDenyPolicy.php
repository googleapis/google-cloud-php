<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/policytroubleshooter/iam/v3/troubleshooter.proto

namespace Google\Cloud\PolicyTroubleshooter\Iam\V3;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details about how a specific IAM deny policy [Policy][google.iam.v2.Policy]
 * contributed to the access check.
 *
 * Generated from protobuf message <code>google.cloud.policytroubleshooter.iam.v3.ExplainedDenyPolicy</code>
 */
class ExplainedDenyPolicy extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Indicates whether _this policy_ denies the specified permission
     * to the specified principal for the specified resource.
     * This field does _not_ indicate whether the principal actually has the
     * permission for the resource. There might be another policy that overrides
     * this policy. To determine whether the principal actually has the
     * permission, use the `overall_access_state` field in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $deny_access_state = 0;
    /**
     * The IAM deny policy attached to the resource.
     * If the sender of the request does not have access to the policy, this field
     * is omitted.
     *
     * Generated from protobuf field <code>.google.iam.v2.Policy policy = 2;</code>
     */
    protected $policy = null;
    /**
     * Details about how each rule in the policy affects the principal's inability
     * to use the permission for the resource. The order of the deny rule matches
     * the order of the rules in the deny policy.
     * If the sender of the request does not have access to the policy, this field
     * is omitted.
     *
     * Generated from protobuf field <code>repeated .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation rule_explanations = 3;</code>
     */
    private $rule_explanations;
    /**
     * The relevance of this policy to the overall access state in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     * If the sender of the request does not have access to the policy, this field
     * is omitted.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 4;</code>
     */
    protected $relevance = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $deny_access_state
     *           Required. Indicates whether _this policy_ denies the specified permission
     *           to the specified principal for the specified resource.
     *           This field does _not_ indicate whether the principal actually has the
     *           permission for the resource. There might be another policy that overrides
     *           this policy. To determine whether the principal actually has the
     *           permission, use the `overall_access_state` field in the
     *           [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     *     @type \Google\Cloud\Iam\V2\Policy $policy
     *           The IAM deny policy attached to the resource.
     *           If the sender of the request does not have access to the policy, this field
     *           is omitted.
     *     @type array<\Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation>|\Google\Protobuf\Internal\RepeatedField $rule_explanations
     *           Details about how each rule in the policy affects the principal's inability
     *           to use the permission for the resource. The order of the deny rule matches
     *           the order of the rules in the deny policy.
     *           If the sender of the request does not have access to the policy, this field
     *           is omitted.
     *     @type int $relevance
     *           The relevance of this policy to the overall access state in the
     *           [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     *           If the sender of the request does not have access to the policy, this field
     *           is omitted.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Policytroubleshooter\Iam\V3\Troubleshooter::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Indicates whether _this policy_ denies the specified permission
     * to the specified principal for the specified resource.
     * This field does _not_ indicate whether the principal actually has the
     * permission for the resource. There might be another policy that overrides
     * this policy. To determine whether the principal actually has the
     * permission, use the `overall_access_state` field in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getDenyAccessState()
    {
        return $this->deny_access_state;
    }

    /**
     * Required. Indicates whether _this policy_ denies the specified permission
     * to the specified principal for the specified resource.
     * This field does _not_ indicate whether the principal actually has the
     * permission for the resource. There might be another policy that overrides
     * this policy. To determine whether the principal actually has the
     * permission, use the `overall_access_state` field in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.DenyAccessState deny_access_state = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setDenyAccessState($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyAccessState::class);
        $this->deny_access_state = $var;

        return $this;
    }

    /**
     * The IAM deny policy attached to the resource.
     * If the sender of the request does not have access to the policy, this field
     * is omitted.
     *
     * Generated from protobuf field <code>.google.iam.v2.Policy policy = 2;</code>
     * @return \Google\Cloud\Iam\V2\Policy|null
     */
    public function getPolicy()
    {
        return $this->policy;
    }

    public function hasPolicy()
    {
        return isset($this->policy);
    }

    public function clearPolicy()
    {
        unset($this->policy);
    }

    /**
     * The IAM deny policy attached to the resource.
     * If the sender of the request does not have access to the policy, this field
     * is omitted.
     *
     * Generated from protobuf field <code>.google.iam.v2.Policy policy = 2;</code>
     * @param \Google\Cloud\Iam\V2\Policy $var
     * @return $this
     */
    public function setPolicy($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Iam\V2\Policy::class);
        $this->policy = $var;

        return $this;
    }

    /**
     * Details about how each rule in the policy affects the principal's inability
     * to use the permission for the resource. The order of the deny rule matches
     * the order of the rules in the deny policy.
     * If the sender of the request does not have access to the policy, this field
     * is omitted.
     *
     * Generated from protobuf field <code>repeated .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation rule_explanations = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRuleExplanations()
    {
        return $this->rule_explanations;
    }

    /**
     * Details about how each rule in the policy affects the principal's inability
     * to use the permission for the resource. The order of the deny rule matches
     * the order of the rules in the deny policy.
     * If the sender of the request does not have access to the policy, this field
     * is omitted.
     *
     * Generated from protobuf field <code>repeated .google.cloud.policytroubleshooter.iam.v3.DenyRuleExplanation rule_explanations = 3;</code>
     * @param array<\Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRuleExplanations($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\PolicyTroubleshooter\Iam\V3\DenyRuleExplanation::class);
        $this->rule_explanations = $arr;

        return $this;
    }

    /**
     * The relevance of this policy to the overall access state in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     * If the sender of the request does not have access to the policy, this field
     * is omitted.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 4;</code>
     * @return int
     */
    public function getRelevance()
    {
        return $this->relevance;
    }

    /**
     * The relevance of this policy to the overall access state in the
     * [TroubleshootIamPolicyResponse][google.cloud.policytroubleshooter.iam.v3.TroubleshootIamPolicyResponse].
     * If the sender of the request does not have access to the policy, this field
     * is omitted.
     *
     * Generated from protobuf field <code>.google.cloud.policytroubleshooter.iam.v3.HeuristicRelevance relevance = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setRelevance($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\PolicyTroubleshooter\Iam\V3\HeuristicRelevance::class);
        $this->relevance = $var;

        return $this;
    }

}

