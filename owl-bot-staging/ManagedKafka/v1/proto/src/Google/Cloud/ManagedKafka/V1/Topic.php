<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/managedkafka/v1/resources.proto

namespace Google\Cloud\ManagedKafka\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A Kafka topic in a given cluster.
 *
 * Generated from protobuf message <code>google.cloud.managedkafka.v1.Topic</code>
 */
class Topic extends \Google\Protobuf\Internal\Message
{
    /**
     * Identifier. The name of the topic. The `topic` segment is used when
     * connecting directly to the cluster. Structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     */
    protected $name = '';
    /**
     * Required. The number of partitions this topic has. The partition count can
     * only be increased, not decreased. Please note that if partitions are
     * increased for a topic that has a key, the partitioning logic or the
     * ordering of the messages will be affected.
     *
     * Generated from protobuf field <code>int32 partition_count = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $partition_count = 0;
    /**
     * Required. Immutable. The number of replicas of each partition. A
     * replication factor of 3 is recommended for high availability.
     *
     * Generated from protobuf field <code>int32 replication_factor = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     */
    protected $replication_factor = 0;
    /**
     * Optional. Configurations for the topic that are overridden from the cluster
     * defaults. The key of the map is a Kafka topic property name, for example:
     * `cleanup.policy`, `compression.type`.
     *
     * Generated from protobuf field <code>map<string, string> configs = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $configs;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Identifier. The name of the topic. The `topic` segment is used when
     *           connecting directly to the cluster. Structured like:
     *           projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
     *     @type int $partition_count
     *           Required. The number of partitions this topic has. The partition count can
     *           only be increased, not decreased. Please note that if partitions are
     *           increased for a topic that has a key, the partitioning logic or the
     *           ordering of the messages will be affected.
     *     @type int $replication_factor
     *           Required. Immutable. The number of replicas of each partition. A
     *           replication factor of 3 is recommended for high availability.
     *     @type array|\Google\Protobuf\Internal\MapField $configs
     *           Optional. Configurations for the topic that are overridden from the cluster
     *           defaults. The key of the map is a Kafka topic property name, for example:
     *           `cleanup.policy`, `compression.type`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Managedkafka\V1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Identifier. The name of the topic. The `topic` segment is used when
     * connecting directly to the cluster. Structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Identifier. The name of the topic. The `topic` segment is used when
     * connecting directly to the cluster. Structured like:
     * projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = IDENTIFIER];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Required. The number of partitions this topic has. The partition count can
     * only be increased, not decreased. Please note that if partitions are
     * increased for a topic that has a key, the partitioning logic or the
     * ordering of the messages will be affected.
     *
     * Generated from protobuf field <code>int32 partition_count = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getPartitionCount()
    {
        return $this->partition_count;
    }

    /**
     * Required. The number of partitions this topic has. The partition count can
     * only be increased, not decreased. Please note that if partitions are
     * increased for a topic that has a key, the partitioning logic or the
     * ordering of the messages will be affected.
     *
     * Generated from protobuf field <code>int32 partition_count = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setPartitionCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->partition_count = $var;

        return $this;
    }

    /**
     * Required. Immutable. The number of replicas of each partition. A
     * replication factor of 3 is recommended for high availability.
     *
     * Generated from protobuf field <code>int32 replication_factor = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @return int
     */
    public function getReplicationFactor()
    {
        return $this->replication_factor;
    }

    /**
     * Required. Immutable. The number of replicas of each partition. A
     * replication factor of 3 is recommended for high availability.
     *
     * Generated from protobuf field <code>int32 replication_factor = 3 [(.google.api.field_behavior) = REQUIRED, (.google.api.field_behavior) = IMMUTABLE];</code>
     * @param int $var
     * @return $this
     */
    public function setReplicationFactor($var)
    {
        GPBUtil::checkInt32($var);
        $this->replication_factor = $var;

        return $this;
    }

    /**
     * Optional. Configurations for the topic that are overridden from the cluster
     * defaults. The key of the map is a Kafka topic property name, for example:
     * `cleanup.policy`, `compression.type`.
     *
     * Generated from protobuf field <code>map<string, string> configs = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getConfigs()
    {
        return $this->configs;
    }

    /**
     * Optional. Configurations for the topic that are overridden from the cluster
     * defaults. The key of the map is a Kafka topic property name, for example:
     * `cleanup.policy`, `compression.type`.
     *
     * Generated from protobuf field <code>map<string, string> configs = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setConfigs($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->configs = $arr;

        return $this;
    }

}

