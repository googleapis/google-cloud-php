<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/analytics/data/v1alpha/data.proto

namespace Google\Analytics\Data\V1alpha;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Expresses combinations of funnel filters on parameters.
 *
 * Generated from protobuf message <code>google.analytics.data.v1alpha.FunnelParameterFilterExpression</code>
 */
class FunnelParameterFilterExpression extends \Google\Protobuf\Internal\Message
{
    protected $expr;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Analytics\Data\V1alpha\FunnelParameterFilterExpressionList $and_group
     *           The FunnelParameterFilterExpression in `andGroup` have an AND
     *           relationship.
     *     @type \Google\Analytics\Data\V1alpha\FunnelParameterFilterExpressionList $or_group
     *           The FunnelParameterFilterExpression in `orGroup` have an OR
     *           relationship.
     *     @type \Google\Analytics\Data\V1alpha\FunnelParameterFilterExpression $not_expression
     *           The FunnelParameterFilterExpression is NOT of `notExpression`.
     *     @type \Google\Analytics\Data\V1alpha\FunnelParameterFilter $funnel_parameter_filter
     *           A primitive funnel parameter filter.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Analytics\Data\V1Alpha\Data::initOnce();
        parent::__construct($data);
    }

    /**
     * The FunnelParameterFilterExpression in `andGroup` have an AND
     * relationship.
     *
     * Generated from protobuf field <code>.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList and_group = 1;</code>
     * @return \Google\Analytics\Data\V1alpha\FunnelParameterFilterExpressionList|null
     */
    public function getAndGroup()
    {
        return $this->readOneof(1);
    }

    public function hasAndGroup()
    {
        return $this->hasOneof(1);
    }

    /**
     * The FunnelParameterFilterExpression in `andGroup` have an AND
     * relationship.
     *
     * Generated from protobuf field <code>.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList and_group = 1;</code>
     * @param \Google\Analytics\Data\V1alpha\FunnelParameterFilterExpressionList $var
     * @return $this
     */
    public function setAndGroup($var)
    {
        GPBUtil::checkMessage($var, \Google\Analytics\Data\V1alpha\FunnelParameterFilterExpressionList::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * The FunnelParameterFilterExpression in `orGroup` have an OR
     * relationship.
     *
     * Generated from protobuf field <code>.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList or_group = 2;</code>
     * @return \Google\Analytics\Data\V1alpha\FunnelParameterFilterExpressionList|null
     */
    public function getOrGroup()
    {
        return $this->readOneof(2);
    }

    public function hasOrGroup()
    {
        return $this->hasOneof(2);
    }

    /**
     * The FunnelParameterFilterExpression in `orGroup` have an OR
     * relationship.
     *
     * Generated from protobuf field <code>.google.analytics.data.v1alpha.FunnelParameterFilterExpressionList or_group = 2;</code>
     * @param \Google\Analytics\Data\V1alpha\FunnelParameterFilterExpressionList $var
     * @return $this
     */
    public function setOrGroup($var)
    {
        GPBUtil::checkMessage($var, \Google\Analytics\Data\V1alpha\FunnelParameterFilterExpressionList::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * The FunnelParameterFilterExpression is NOT of `notExpression`.
     *
     * Generated from protobuf field <code>.google.analytics.data.v1alpha.FunnelParameterFilterExpression not_expression = 3;</code>
     * @return \Google\Analytics\Data\V1alpha\FunnelParameterFilterExpression|null
     */
    public function getNotExpression()
    {
        return $this->readOneof(3);
    }

    public function hasNotExpression()
    {
        return $this->hasOneof(3);
    }

    /**
     * The FunnelParameterFilterExpression is NOT of `notExpression`.
     *
     * Generated from protobuf field <code>.google.analytics.data.v1alpha.FunnelParameterFilterExpression not_expression = 3;</code>
     * @param \Google\Analytics\Data\V1alpha\FunnelParameterFilterExpression $var
     * @return $this
     */
    public function setNotExpression($var)
    {
        GPBUtil::checkMessage($var, \Google\Analytics\Data\V1alpha\FunnelParameterFilterExpression::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * A primitive funnel parameter filter.
     *
     * Generated from protobuf field <code>.google.analytics.data.v1alpha.FunnelParameterFilter funnel_parameter_filter = 4;</code>
     * @return \Google\Analytics\Data\V1alpha\FunnelParameterFilter|null
     */
    public function getFunnelParameterFilter()
    {
        return $this->readOneof(4);
    }

    public function hasFunnelParameterFilter()
    {
        return $this->hasOneof(4);
    }

    /**
     * A primitive funnel parameter filter.
     *
     * Generated from protobuf field <code>.google.analytics.data.v1alpha.FunnelParameterFilter funnel_parameter_filter = 4;</code>
     * @param \Google\Analytics\Data\V1alpha\FunnelParameterFilter $var
     * @return $this
     */
    public function setFunnelParameterFilter($var)
    {
        GPBUtil::checkMessage($var, \Google\Analytics\Data\V1alpha\FunnelParameterFilter::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getExpr()
    {
        return $this->whichOneof("expr");
    }

}

