<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/baremetalsolution/v2/instance.proto

namespace Google\Cloud\BareMetalSolution\V2\ServerNetworkTemplate\LogicalInterface;

use UnexpectedValueException;

/**
 * Interface type.
 *
 * Protobuf type <code>google.cloud.baremetalsolution.v2.ServerNetworkTemplate.LogicalInterface.InterfaceType</code>
 */
class InterfaceType
{
    /**
     * Unspecified value.
     *
     * Generated from protobuf enum <code>INTERFACE_TYPE_UNSPECIFIED = 0;</code>
     */
    const INTERFACE_TYPE_UNSPECIFIED = 0;
    /**
     * Bond interface type.
     *
     * Generated from protobuf enum <code>BOND = 1;</code>
     */
    const BOND = 1;
    /**
     * NIC interface type.
     *
     * Generated from protobuf enum <code>NIC = 2;</code>
     */
    const NIC = 2;

    private static $valueToName = [
        self::INTERFACE_TYPE_UNSPECIFIED => 'INTERFACE_TYPE_UNSPECIFIED',
        self::BOND => 'BOND',
        self::NIC => 'NIC',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(InterfaceType::class, \Google\Cloud\BareMetalSolution\V2\ServerNetworkTemplate_LogicalInterface_InterfaceType::class);

