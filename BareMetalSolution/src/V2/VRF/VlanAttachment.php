<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/baremetalsolution/v2/network.proto

namespace Google\Cloud\BareMetalSolution\V2\VRF;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * VLAN attachment details.
 *
 * Generated from protobuf message <code>google.cloud.baremetalsolution.v2.VRF.VlanAttachment</code>
 */
class VlanAttachment extends \Google\Protobuf\Internal\Message
{
    /**
     * The peer vlan ID of the attachment.
     *
     * Generated from protobuf field <code>int64 peer_vlan_id = 1;</code>
     */
    private $peer_vlan_id = 0;
    /**
     * The peer IP of the attachment.
     *
     * Generated from protobuf field <code>string peer_ip = 2;</code>
     */
    private $peer_ip = '';
    /**
     * The router IP of the attachment.
     *
     * Generated from protobuf field <code>string router_ip = 3;</code>
     */
    private $router_ip = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $peer_vlan_id
     *           The peer vlan ID of the attachment.
     *     @type string $peer_ip
     *           The peer IP of the attachment.
     *     @type string $router_ip
     *           The router IP of the attachment.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Baremetalsolution\V2\Network::initOnce();
        parent::__construct($data);
    }

    /**
     * The peer vlan ID of the attachment.
     *
     * Generated from protobuf field <code>int64 peer_vlan_id = 1;</code>
     * @return int|string
     */
    public function getPeerVlanId()
    {
        return $this->peer_vlan_id;
    }

    /**
     * The peer vlan ID of the attachment.
     *
     * Generated from protobuf field <code>int64 peer_vlan_id = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setPeerVlanId($var)
    {
        GPBUtil::checkInt64($var);
        $this->peer_vlan_id = $var;

        return $this;
    }

    /**
     * The peer IP of the attachment.
     *
     * Generated from protobuf field <code>string peer_ip = 2;</code>
     * @return string
     */
    public function getPeerIp()
    {
        return $this->peer_ip;
    }

    /**
     * The peer IP of the attachment.
     *
     * Generated from protobuf field <code>string peer_ip = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setPeerIp($var)
    {
        GPBUtil::checkString($var, True);
        $this->peer_ip = $var;

        return $this;
    }

    /**
     * The router IP of the attachment.
     *
     * Generated from protobuf field <code>string router_ip = 3;</code>
     * @return string
     */
    public function getRouterIp()
    {
        return $this->router_ip;
    }

    /**
     * The router IP of the attachment.
     *
     * Generated from protobuf field <code>string router_ip = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setRouterIp($var)
    {
        GPBUtil::checkString($var, True);
        $this->router_ip = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(VlanAttachment::class, \Google\Cloud\BareMetalSolution\V2\VRF_VlanAttachment::class);

