<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmwareengine/v1/vmwareengine.proto

namespace Google\Cloud\VmwareEngine\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [VmwareEngine.CreatePrivateCloud][google.cloud.vmwareengine.v1.VmwareEngine.CreatePrivateCloud]
 *
 * Generated from protobuf message <code>google.cloud.vmwareengine.v1.CreatePrivateCloudRequest</code>
 */
class CreatePrivateCloudRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The resource name of the location to create the new
     * private cloud in. Resource names are schemeless URIs that follow the
     * conventions in https://cloud.google.com/apis/design/resource_names.
     * For example:
     * `projects/my-project/locations/us-central1-a`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    private $parent = '';
    /**
     * Required. The user-provided identifier of the private cloud to be created.
     * This identifier must be unique among each `PrivateCloud` within the parent
     * and becomes the final token in the name URI.
     * The identifier must meet the following requirements:
     * * Only contains 1-63 alphanumeric characters and hyphens
     * * Begins with an alphabetical character
     * * Ends with a non-hyphen character
     * * Not formatted as a UUID
     * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
     * (section 3.5)
     *
     * Generated from protobuf field <code>string private_cloud_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $private_cloud_id = '';
    /**
     * Required. The initial description of the new private cloud.
     *
     * Generated from protobuf field <code>.google.cloud.vmwareengine.v1.PrivateCloud private_cloud = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $private_cloud = null;
    /**
     * Optional. The request ID must be a valid UUID with the exception that zero
     * UUID is not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $request_id = '';
    /**
     * Optional. True if you want the request to be validated and not executed;
     * false otherwise.
     *
     * Generated from protobuf field <code>bool validate_only = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $validate_only = false;

    /**
     * @param string                                     $parent         Required. The resource name of the location to create the new
     *                                                                   private cloud in. Resource names are schemeless URIs that follow the
     *                                                                   conventions in https://cloud.google.com/apis/design/resource_names.
     *                                                                   For example:
     *                                                                   `projects/my-project/locations/us-central1-a`
     *                                                                   Please see {@see VmwareEngineClient::locationName()} for help formatting this field.
     * @param \Google\Cloud\VmwareEngine\V1\PrivateCloud $privateCloud   Required. The initial description of the new private cloud.
     * @param string                                     $privateCloudId Required. The user-provided identifier of the private cloud to be created.
     *                                                                   This identifier must be unique among each `PrivateCloud` within the parent
     *                                                                   and becomes the final token in the name URI.
     *                                                                   The identifier must meet the following requirements:
     *
     *                                                                   * Only contains 1-63 alphanumeric characters and hyphens
     *                                                                   * Begins with an alphabetical character
     *                                                                   * Ends with a non-hyphen character
     *                                                                   * Not formatted as a UUID
     *                                                                   * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
     *                                                                   (section 3.5)
     *
     * @return \Google\Cloud\VmwareEngine\V1\CreatePrivateCloudRequest
     *
     * @experimental
     */
    public static function build(string $parent, \Google\Cloud\VmwareEngine\V1\PrivateCloud $privateCloud, string $privateCloudId): self
    {
        return (new self())
            ->setParent($parent)
            ->setPrivateCloud($privateCloud)
            ->setPrivateCloudId($privateCloudId);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           Required. The resource name of the location to create the new
     *           private cloud in. Resource names are schemeless URIs that follow the
     *           conventions in https://cloud.google.com/apis/design/resource_names.
     *           For example:
     *           `projects/my-project/locations/us-central1-a`
     *     @type string $private_cloud_id
     *           Required. The user-provided identifier of the private cloud to be created.
     *           This identifier must be unique among each `PrivateCloud` within the parent
     *           and becomes the final token in the name URI.
     *           The identifier must meet the following requirements:
     *           * Only contains 1-63 alphanumeric characters and hyphens
     *           * Begins with an alphabetical character
     *           * Ends with a non-hyphen character
     *           * Not formatted as a UUID
     *           * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
     *           (section 3.5)
     *     @type \Google\Cloud\VmwareEngine\V1\PrivateCloud $private_cloud
     *           Required. The initial description of the new private cloud.
     *     @type string $request_id
     *           Optional. The request ID must be a valid UUID with the exception that zero
     *           UUID is not supported (00000000-0000-0000-0000-000000000000).
     *     @type bool $validate_only
     *           Optional. True if you want the request to be validated and not executed;
     *           false otherwise.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Vmwareengine\V1\Vmwareengine::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The resource name of the location to create the new
     * private cloud in. Resource names are schemeless URIs that follow the
     * conventions in https://cloud.google.com/apis/design/resource_names.
     * For example:
     * `projects/my-project/locations/us-central1-a`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * Required. The resource name of the location to create the new
     * private cloud in. Resource names are schemeless URIs that follow the
     * conventions in https://cloud.google.com/apis/design/resource_names.
     * For example:
     * `projects/my-project/locations/us-central1-a`
     *
     * Generated from protobuf field <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * Required. The user-provided identifier of the private cloud to be created.
     * This identifier must be unique among each `PrivateCloud` within the parent
     * and becomes the final token in the name URI.
     * The identifier must meet the following requirements:
     * * Only contains 1-63 alphanumeric characters and hyphens
     * * Begins with an alphabetical character
     * * Ends with a non-hyphen character
     * * Not formatted as a UUID
     * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
     * (section 3.5)
     *
     * Generated from protobuf field <code>string private_cloud_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getPrivateCloudId()
    {
        return $this->private_cloud_id;
    }

    /**
     * Required. The user-provided identifier of the private cloud to be created.
     * This identifier must be unique among each `PrivateCloud` within the parent
     * and becomes the final token in the name URI.
     * The identifier must meet the following requirements:
     * * Only contains 1-63 alphanumeric characters and hyphens
     * * Begins with an alphabetical character
     * * Ends with a non-hyphen character
     * * Not formatted as a UUID
     * * Complies with [RFC 1034](https://datatracker.ietf.org/doc/html/rfc1034)
     * (section 3.5)
     *
     * Generated from protobuf field <code>string private_cloud_id = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setPrivateCloudId($var)
    {
        GPBUtil::checkString($var, True);
        $this->private_cloud_id = $var;

        return $this;
    }

    /**
     * Required. The initial description of the new private cloud.
     *
     * Generated from protobuf field <code>.google.cloud.vmwareengine.v1.PrivateCloud private_cloud = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\VmwareEngine\V1\PrivateCloud|null
     */
    public function getPrivateCloud()
    {
        return $this->private_cloud;
    }

    public function hasPrivateCloud()
    {
        return isset($this->private_cloud);
    }

    public function clearPrivateCloud()
    {
        unset($this->private_cloud);
    }

    /**
     * Required. The initial description of the new private cloud.
     *
     * Generated from protobuf field <code>.google.cloud.vmwareengine.v1.PrivateCloud private_cloud = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\VmwareEngine\V1\PrivateCloud $var
     * @return $this
     */
    public function setPrivateCloud($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\VmwareEngine\V1\PrivateCloud::class);
        $this->private_cloud = $var;

        return $this;
    }

    /**
     * Optional. The request ID must be a valid UUID with the exception that zero
     * UUID is not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Optional. The request ID must be a valid UUID with the exception that zero
     * UUID is not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

    /**
     * Optional. True if you want the request to be validated and not executed;
     * false otherwise.
     *
     * Generated from protobuf field <code>bool validate_only = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getValidateOnly()
    {
        return $this->validate_only;
    }

    /**
     * Optional. True if you want the request to be validated and not executed;
     * false otherwise.
     *
     * Generated from protobuf field <code>bool validate_only = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setValidateOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->validate_only = $var;

        return $this;
    }

}

