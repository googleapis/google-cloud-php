<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmwareengine/v1/vmwareengine_resources.proto

namespace Google\Cloud\VmwareEngine\V1\PrivateConnection;

use UnexpectedValueException;

/**
 * Enum PeeringState defines the possible states of peering between service
 * network and the vpc network peered to service network
 *
 * Protobuf type <code>google.cloud.vmwareengine.v1.PrivateConnection.PeeringState</code>
 */
class PeeringState
{
    /**
     * The default value. This value is used if the peering state is omitted or
     * unknown.
     *
     * Generated from protobuf enum <code>PEERING_STATE_UNSPECIFIED = 0;</code>
     */
    const PEERING_STATE_UNSPECIFIED = 0;
    /**
     * The peering is in active state.
     *
     * Generated from protobuf enum <code>PEERING_ACTIVE = 1;</code>
     */
    const PEERING_ACTIVE = 1;
    /**
     * The peering is in inactive state.
     *
     * Generated from protobuf enum <code>PEERING_INACTIVE = 2;</code>
     */
    const PEERING_INACTIVE = 2;

    private static $valueToName = [
        self::PEERING_STATE_UNSPECIFIED => 'PEERING_STATE_UNSPECIFIED',
        self::PEERING_ACTIVE => 'PEERING_ACTIVE',
        self::PEERING_INACTIVE => 'PEERING_INACTIVE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


