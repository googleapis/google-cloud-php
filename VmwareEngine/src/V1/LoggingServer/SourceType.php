<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmwareengine/v1/vmwareengine_resources.proto

namespace Google\Cloud\VmwareEngine\V1\LoggingServer;

use UnexpectedValueException;

/**
 * Defines possible types of component that produces logs.
 *
 * Protobuf type <code>google.cloud.vmwareengine.v1.LoggingServer.SourceType</code>
 */
class SourceType
{
    /**
     * The default value. This value should never be used.
     *
     * Generated from protobuf enum <code>SOURCE_TYPE_UNSPECIFIED = 0;</code>
     */
    const SOURCE_TYPE_UNSPECIFIED = 0;
    /**
     * Logs produced by ESXI hosts
     *
     * Generated from protobuf enum <code>ESXI = 1;</code>
     */
    const ESXI = 1;
    /**
     * Logs produced by vCenter server
     *
     * Generated from protobuf enum <code>VCSA = 2;</code>
     */
    const VCSA = 2;

    private static $valueToName = [
        self::SOURCE_TYPE_UNSPECIFIED => 'SOURCE_TYPE_UNSPECIFIED',
        self::ESXI => 'ESXI',
        self::VCSA => 'VCSA',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


