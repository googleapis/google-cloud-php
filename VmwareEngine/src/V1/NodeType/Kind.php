<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmwareengine/v1/vmwareengine_resources.proto

namespace Google\Cloud\VmwareEngine\V1\NodeType;

use UnexpectedValueException;

/**
 * Enum Kind defines possible types of a NodeType.
 *
 * Protobuf type <code>google.cloud.vmwareengine.v1.NodeType.Kind</code>
 */
class Kind
{
    /**
     * The default value. This value should never be used.
     *
     * Generated from protobuf enum <code>KIND_UNSPECIFIED = 0;</code>
     */
    const KIND_UNSPECIFIED = 0;
    /**
     * Standard HCI node.
     *
     * Generated from protobuf enum <code>STANDARD = 1;</code>
     */
    const STANDARD = 1;
    /**
     * Storage only Node.
     *
     * Generated from protobuf enum <code>STORAGE_ONLY = 2;</code>
     */
    const STORAGE_ONLY = 2;

    private static $valueToName = [
        self::KIND_UNSPECIFIED => 'KIND_UNSPECIFIED',
        self::STANDARD => 'STANDARD',
        self::STORAGE_ONLY => 'STORAGE_ONLY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


