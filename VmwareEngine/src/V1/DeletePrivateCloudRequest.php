<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmwareengine/v1/vmwareengine.proto

namespace Google\Cloud\VmwareEngine\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [VmwareEngine.DeletePrivateCloud][google.cloud.vmwareengine.v1.VmwareEngine.DeletePrivateCloud]
 *
 * Generated from protobuf message <code>google.cloud.vmwareengine.v1.DeletePrivateCloudRequest</code>
 */
class DeletePrivateCloudRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The resource name of the private cloud to delete.
     * Resource names are schemeless URIs that follow the conventions in
     * https://cloud.google.com/apis/design/resource_names.
     * For example:
     * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    private $name = '';
    /**
     * Optional. The request ID must be a valid UUID with the exception that zero
     * UUID is not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $request_id = '';
    /**
     * Optional. If set to true, cascade delete is enabled and all children of
     * this private cloud resource are also deleted. When this flag is set to
     * false, the private cloud will not be deleted if there are any children
     * other than the management cluster. The management cluster is always
     * deleted.
     *
     * Generated from protobuf field <code>bool force = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $force = false;
    /**
     * Optional. Time delay of the deletion specified in hours. The default value
     * is `3`. Specifying a non-zero value for this field changes the value of
     * `PrivateCloud.state` to `DELETED` and sets `expire_time` to the planned
     * deletion time. Deletion can be cancelled before `expire_time` elapses using
     * [VmwareEngine.UndeletePrivateCloud][google.cloud.vmwareengine.v1.VmwareEngine.UndeletePrivateCloud].
     * Specifying a value of `0` for this field instead begins the deletion
     * process and ceases billing immediately. During the final deletion process,
     * the value of `PrivateCloud.state` becomes `PURGING`.
     *
     * Generated from protobuf field <code>optional int32 delay_hours = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $delay_hours = null;

    /**
     * @param string $name Required. The resource name of the private cloud to delete.
     *                     Resource names are schemeless URIs that follow the conventions in
     *                     https://cloud.google.com/apis/design/resource_names.
     *                     For example:
     *                     `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     *                     Please see {@see VmwareEngineClient::privateCloudName()} for help formatting this field.
     *
     * @return \Google\Cloud\VmwareEngine\V1\DeletePrivateCloudRequest
     *
     * @experimental
     */
    public static function build(string $name): self
    {
        return (new self())
            ->setName($name);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The resource name of the private cloud to delete.
     *           Resource names are schemeless URIs that follow the conventions in
     *           https://cloud.google.com/apis/design/resource_names.
     *           For example:
     *           `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     *     @type string $request_id
     *           Optional. The request ID must be a valid UUID with the exception that zero
     *           UUID is not supported (00000000-0000-0000-0000-000000000000).
     *     @type bool $force
     *           Optional. If set to true, cascade delete is enabled and all children of
     *           this private cloud resource are also deleted. When this flag is set to
     *           false, the private cloud will not be deleted if there are any children
     *           other than the management cluster. The management cluster is always
     *           deleted.
     *     @type int $delay_hours
     *           Optional. Time delay of the deletion specified in hours. The default value
     *           is `3`. Specifying a non-zero value for this field changes the value of
     *           `PrivateCloud.state` to `DELETED` and sets `expire_time` to the planned
     *           deletion time. Deletion can be cancelled before `expire_time` elapses using
     *           [VmwareEngine.UndeletePrivateCloud][google.cloud.vmwareengine.v1.VmwareEngine.UndeletePrivateCloud].
     *           Specifying a value of `0` for this field instead begins the deletion
     *           process and ceases billing immediately. During the final deletion process,
     *           the value of `PrivateCloud.state` becomes `PURGING`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Vmwareengine\V1\Vmwareengine::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The resource name of the private cloud to delete.
     * Resource names are schemeless URIs that follow the conventions in
     * https://cloud.google.com/apis/design/resource_names.
     * For example:
     * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The resource name of the private cloud to delete.
     * Resource names are schemeless URIs that follow the conventions in
     * https://cloud.google.com/apis/design/resource_names.
     * For example:
     * `projects/my-project/locations/us-central1-a/privateClouds/my-cloud`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. The request ID must be a valid UUID with the exception that zero
     * UUID is not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Optional. The request ID must be a valid UUID with the exception that zero
     * UUID is not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

    /**
     * Optional. If set to true, cascade delete is enabled and all children of
     * this private cloud resource are also deleted. When this flag is set to
     * false, the private cloud will not be deleted if there are any children
     * other than the management cluster. The management cluster is always
     * deleted.
     *
     * Generated from protobuf field <code>bool force = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getForce()
    {
        return $this->force;
    }

    /**
     * Optional. If set to true, cascade delete is enabled and all children of
     * this private cloud resource are also deleted. When this flag is set to
     * false, the private cloud will not be deleted if there are any children
     * other than the management cluster. The management cluster is always
     * deleted.
     *
     * Generated from protobuf field <code>bool force = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setForce($var)
    {
        GPBUtil::checkBool($var);
        $this->force = $var;

        return $this;
    }

    /**
     * Optional. Time delay of the deletion specified in hours. The default value
     * is `3`. Specifying a non-zero value for this field changes the value of
     * `PrivateCloud.state` to `DELETED` and sets `expire_time` to the planned
     * deletion time. Deletion can be cancelled before `expire_time` elapses using
     * [VmwareEngine.UndeletePrivateCloud][google.cloud.vmwareengine.v1.VmwareEngine.UndeletePrivateCloud].
     * Specifying a value of `0` for this field instead begins the deletion
     * process and ceases billing immediately. During the final deletion process,
     * the value of `PrivateCloud.state` becomes `PURGING`.
     *
     * Generated from protobuf field <code>optional int32 delay_hours = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getDelayHours()
    {
        return isset($this->delay_hours) ? $this->delay_hours : 0;
    }

    public function hasDelayHours()
    {
        return isset($this->delay_hours);
    }

    public function clearDelayHours()
    {
        unset($this->delay_hours);
    }

    /**
     * Optional. Time delay of the deletion specified in hours. The default value
     * is `3`. Specifying a non-zero value for this field changes the value of
     * `PrivateCloud.state` to `DELETED` and sets `expire_time` to the planned
     * deletion time. Deletion can be cancelled before `expire_time` elapses using
     * [VmwareEngine.UndeletePrivateCloud][google.cloud.vmwareengine.v1.VmwareEngine.UndeletePrivateCloud].
     * Specifying a value of `0` for this field instead begins the deletion
     * process and ceases billing immediately. During the final deletion process,
     * the value of `PrivateCloud.state` becomes `PURGING`.
     *
     * Generated from protobuf field <code>optional int32 delay_hours = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setDelayHours($var)
    {
        GPBUtil::checkInt32($var);
        $this->delay_hours = $var;

        return $this;
    }

}

