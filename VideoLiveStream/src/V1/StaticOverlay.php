<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/video/livestream/v1/resources.proto

namespace Google\Cloud\Video\LiveStream\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Configuration for the static overlay.
 *
 * Generated from protobuf message <code>google.cloud.video.livestream.v1.StaticOverlay</code>
 */
class StaticOverlay extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Asset to use for the overlaid image.
     * The asset must be represented in the form of:
     * `projects/{project}/locations/{location}/assets/{assetId}`.
     * The asset's resource type must be image.
     *
     * Generated from protobuf field <code>string asset = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $asset = '';
    /**
     * Optional. Normalized image resolution, based on output video resolution.
     * Valid values are [0.0, 1.0]. To respect the original image aspect ratio,
     * set either `w` or `h` to 0. To use the original image resolution, set both
     * `w` and `h` to 0. The default is {0, 0}.
     *
     * Generated from protobuf field <code>.google.cloud.video.livestream.v1.NormalizedResolution resolution = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $resolution = null;
    /**
     * Optional. Position of the image in terms of normalized coordinates of the
     * upper-left corner of the image, based on output video resolution. For
     * example, use the x and y coordinates {0, 0} to position the top-left corner
     * of the overlay animation in the top-left corner of the output video.
     *
     * Generated from protobuf field <code>.google.cloud.video.livestream.v1.NormalizedCoordinate position = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $position = null;
    /**
     * Optional. Target image opacity. Valid values are from `1.0` (solid,
     * default) to `0.0` (transparent), exclusive. Set this to a value greater
     * than `0.0`.
     *
     * Generated from protobuf field <code>double opacity = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $opacity = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $asset
     *           Required. Asset to use for the overlaid image.
     *           The asset must be represented in the form of:
     *           `projects/{project}/locations/{location}/assets/{assetId}`.
     *           The asset's resource type must be image.
     *     @type \Google\Cloud\Video\LiveStream\V1\NormalizedResolution $resolution
     *           Optional. Normalized image resolution, based on output video resolution.
     *           Valid values are [0.0, 1.0]. To respect the original image aspect ratio,
     *           set either `w` or `h` to 0. To use the original image resolution, set both
     *           `w` and `h` to 0. The default is {0, 0}.
     *     @type \Google\Cloud\Video\LiveStream\V1\NormalizedCoordinate $position
     *           Optional. Position of the image in terms of normalized coordinates of the
     *           upper-left corner of the image, based on output video resolution. For
     *           example, use the x and y coordinates {0, 0} to position the top-left corner
     *           of the overlay animation in the top-left corner of the output video.
     *     @type float $opacity
     *           Optional. Target image opacity. Valid values are from `1.0` (solid,
     *           default) to `0.0` (transparent), exclusive. Set this to a value greater
     *           than `0.0`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Video\Livestream\V1\Resources::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Asset to use for the overlaid image.
     * The asset must be represented in the form of:
     * `projects/{project}/locations/{location}/assets/{assetId}`.
     * The asset's resource type must be image.
     *
     * Generated from protobuf field <code>string asset = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getAsset()
    {
        return $this->asset;
    }

    /**
     * Required. Asset to use for the overlaid image.
     * The asset must be represented in the form of:
     * `projects/{project}/locations/{location}/assets/{assetId}`.
     * The asset's resource type must be image.
     *
     * Generated from protobuf field <code>string asset = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setAsset($var)
    {
        GPBUtil::checkString($var, True);
        $this->asset = $var;

        return $this;
    }

    /**
     * Optional. Normalized image resolution, based on output video resolution.
     * Valid values are [0.0, 1.0]. To respect the original image aspect ratio,
     * set either `w` or `h` to 0. To use the original image resolution, set both
     * `w` and `h` to 0. The default is {0, 0}.
     *
     * Generated from protobuf field <code>.google.cloud.video.livestream.v1.NormalizedResolution resolution = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\Video\LiveStream\V1\NormalizedResolution|null
     */
    public function getResolution()
    {
        return $this->resolution;
    }

    public function hasResolution()
    {
        return isset($this->resolution);
    }

    public function clearResolution()
    {
        unset($this->resolution);
    }

    /**
     * Optional. Normalized image resolution, based on output video resolution.
     * Valid values are [0.0, 1.0]. To respect the original image aspect ratio,
     * set either `w` or `h` to 0. To use the original image resolution, set both
     * `w` and `h` to 0. The default is {0, 0}.
     *
     * Generated from protobuf field <code>.google.cloud.video.livestream.v1.NormalizedResolution resolution = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\Video\LiveStream\V1\NormalizedResolution $var
     * @return $this
     */
    public function setResolution($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Video\LiveStream\V1\NormalizedResolution::class);
        $this->resolution = $var;

        return $this;
    }

    /**
     * Optional. Position of the image in terms of normalized coordinates of the
     * upper-left corner of the image, based on output video resolution. For
     * example, use the x and y coordinates {0, 0} to position the top-left corner
     * of the overlay animation in the top-left corner of the output video.
     *
     * Generated from protobuf field <code>.google.cloud.video.livestream.v1.NormalizedCoordinate position = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\Video\LiveStream\V1\NormalizedCoordinate|null
     */
    public function getPosition()
    {
        return $this->position;
    }

    public function hasPosition()
    {
        return isset($this->position);
    }

    public function clearPosition()
    {
        unset($this->position);
    }

    /**
     * Optional. Position of the image in terms of normalized coordinates of the
     * upper-left corner of the image, based on output video resolution. For
     * example, use the x and y coordinates {0, 0} to position the top-left corner
     * of the overlay animation in the top-left corner of the output video.
     *
     * Generated from protobuf field <code>.google.cloud.video.livestream.v1.NormalizedCoordinate position = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\Video\LiveStream\V1\NormalizedCoordinate $var
     * @return $this
     */
    public function setPosition($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Video\LiveStream\V1\NormalizedCoordinate::class);
        $this->position = $var;

        return $this;
    }

    /**
     * Optional. Target image opacity. Valid values are from `1.0` (solid,
     * default) to `0.0` (transparent), exclusive. Set this to a value greater
     * than `0.0`.
     *
     * Generated from protobuf field <code>double opacity = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return float
     */
    public function getOpacity()
    {
        return $this->opacity;
    }

    /**
     * Optional. Target image opacity. Valid values are from `1.0` (solid,
     * default) to `0.0` (transparent), exclusive. Set this to a value greater
     * than `0.0`.
     *
     * Generated from protobuf field <code>double opacity = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param float $var
     * @return $this
     */
    public function setOpacity($var)
    {
        GPBUtil::checkDouble($var);
        $this->opacity = $var;

        return $this;
    }

}

