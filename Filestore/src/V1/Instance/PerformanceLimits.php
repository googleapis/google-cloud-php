<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/filestore/v1/cloud_filestore_service.proto

namespace Google\Cloud\Filestore\V1\Instance;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The enforced performance limits, calculated from the instance's performance
 * configuration.
 *
 * Generated from protobuf message <code>google.cloud.filestore.v1.Instance.PerformanceLimits</code>
 */
class PerformanceLimits extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. The max IOPS.
     *
     * Generated from protobuf field <code>int64 max_iops = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $max_iops = 0;
    /**
     * Output only. The max read IOPS.
     *
     * Generated from protobuf field <code>int64 max_read_iops = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $max_read_iops = 0;
    /**
     * Output only. The max write IOPS.
     *
     * Generated from protobuf field <code>int64 max_write_iops = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $max_write_iops = 0;
    /**
     * Output only. The max read throughput in bytes per second.
     *
     * Generated from protobuf field <code>int64 max_read_throughput_bps = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $max_read_throughput_bps = 0;
    /**
     * Output only. The max write throughput in bytes per second.
     *
     * Generated from protobuf field <code>int64 max_write_throughput_bps = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $max_write_throughput_bps = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $max_iops
     *           Output only. The max IOPS.
     *     @type int|string $max_read_iops
     *           Output only. The max read IOPS.
     *     @type int|string $max_write_iops
     *           Output only. The max write IOPS.
     *     @type int|string $max_read_throughput_bps
     *           Output only. The max read throughput in bytes per second.
     *     @type int|string $max_write_throughput_bps
     *           Output only. The max write throughput in bytes per second.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Filestore\V1\CloudFilestoreService::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. The max IOPS.
     *
     * Generated from protobuf field <code>int64 max_iops = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int|string
     */
    public function getMaxIops()
    {
        return $this->max_iops;
    }

    /**
     * Output only. The max IOPS.
     *
     * Generated from protobuf field <code>int64 max_iops = 7 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxIops($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_iops = $var;

        return $this;
    }

    /**
     * Output only. The max read IOPS.
     *
     * Generated from protobuf field <code>int64 max_read_iops = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int|string
     */
    public function getMaxReadIops()
    {
        return $this->max_read_iops;
    }

    /**
     * Output only. The max read IOPS.
     *
     * Generated from protobuf field <code>int64 max_read_iops = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxReadIops($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_read_iops = $var;

        return $this;
    }

    /**
     * Output only. The max write IOPS.
     *
     * Generated from protobuf field <code>int64 max_write_iops = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int|string
     */
    public function getMaxWriteIops()
    {
        return $this->max_write_iops;
    }

    /**
     * Output only. The max write IOPS.
     *
     * Generated from protobuf field <code>int64 max_write_iops = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxWriteIops($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_write_iops = $var;

        return $this;
    }

    /**
     * Output only. The max read throughput in bytes per second.
     *
     * Generated from protobuf field <code>int64 max_read_throughput_bps = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int|string
     */
    public function getMaxReadThroughputBps()
    {
        return $this->max_read_throughput_bps;
    }

    /**
     * Output only. The max read throughput in bytes per second.
     *
     * Generated from protobuf field <code>int64 max_read_throughput_bps = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxReadThroughputBps($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_read_throughput_bps = $var;

        return $this;
    }

    /**
     * Output only. The max write throughput in bytes per second.
     *
     * Generated from protobuf field <code>int64 max_write_throughput_bps = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int|string
     */
    public function getMaxWriteThroughputBps()
    {
        return $this->max_write_throughput_bps;
    }

    /**
     * Output only. The max write throughput in bytes per second.
     *
     * Generated from protobuf field <code>int64 max_write_throughput_bps = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int|string $var
     * @return $this
     */
    public function setMaxWriteThroughputBps($var)
    {
        GPBUtil::checkInt64($var);
        $this->max_write_throughput_bps = $var;

        return $this;
    }

}


