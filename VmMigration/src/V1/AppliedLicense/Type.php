<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmmigration/v1/vmmigration.proto

namespace Google\Cloud\VMMigration\V1\AppliedLicense;

use UnexpectedValueException;

/**
 * License types used in OS adaptation.
 *
 * Protobuf type <code>google.cloud.vmmigration.v1.AppliedLicense.Type</code>
 */
class Type
{
    /**
     * Unspecified license for the OS.
     *
     * Generated from protobuf enum <code>TYPE_UNSPECIFIED = 0;</code>
     */
    const TYPE_UNSPECIFIED = 0;
    /**
     * No license available for the OS.
     *
     * Generated from protobuf enum <code>NONE = 1;</code>
     */
    const NONE = 1;
    /**
     * The license type is Pay As You Go license type.
     *
     * Generated from protobuf enum <code>PAYG = 2;</code>
     */
    const PAYG = 2;
    /**
     * The license type is is Bring Your Own License type.
     *
     * Generated from protobuf enum <code>BYOL = 3;</code>
     */
    const BYOL = 3;

    private static $valueToName = [
        self::TYPE_UNSPECIFIED => 'TYPE_UNSPECIFIED',
        self::NONE => 'NONE',
        self::PAYG => 'PAYG',
        self::BYOL => 'BYOL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


