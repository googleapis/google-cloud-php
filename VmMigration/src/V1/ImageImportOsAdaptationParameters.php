<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmmigration/v1/vmmigration.proto

namespace Google\Cloud\VMMigration\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Parameters affecting the OS adaptation process.
 *
 * Generated from protobuf message <code>google.cloud.vmmigration.v1.ImageImportOsAdaptationParameters</code>
 */
class ImageImportOsAdaptationParameters extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Set to true in order to generalize the imported image.
     * The generalization process enables co-existence of multiple VMs created
     * from the same image.
     * For Windows, generalizing the image removes computer-specific information
     * such as installed drivers and the computer security identifier (SID).
     *
     * Generated from protobuf field <code>bool generalize = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $generalize = false;
    /**
     * Optional. Choose which type of license to apply to the imported image.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.ComputeEngineLicenseType license_type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $license_type = 0;
    /**
     * Optional. By default the image will keep its existing boot option. Setting
     * this property will trigger an internal process which will convert the
     * image from using the existing boot option to another.
     * The size of the boot disk might be increased to allow the conversion
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.BootConversion boot_conversion = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $boot_conversion = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $generalize
     *           Optional. Set to true in order to generalize the imported image.
     *           The generalization process enables co-existence of multiple VMs created
     *           from the same image.
     *           For Windows, generalizing the image removes computer-specific information
     *           such as installed drivers and the computer security identifier (SID).
     *     @type int $license_type
     *           Optional. Choose which type of license to apply to the imported image.
     *     @type int $boot_conversion
     *           Optional. By default the image will keep its existing boot option. Setting
     *           this property will trigger an internal process which will convert the
     *           image from using the existing boot option to another.
     *           The size of the boot disk might be increased to allow the conversion
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Vmmigration\V1\Vmmigration::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Set to true in order to generalize the imported image.
     * The generalization process enables co-existence of multiple VMs created
     * from the same image.
     * For Windows, generalizing the image removes computer-specific information
     * such as installed drivers and the computer security identifier (SID).
     *
     * Generated from protobuf field <code>bool generalize = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getGeneralize()
    {
        return $this->generalize;
    }

    /**
     * Optional. Set to true in order to generalize the imported image.
     * The generalization process enables co-existence of multiple VMs created
     * from the same image.
     * For Windows, generalizing the image removes computer-specific information
     * such as installed drivers and the computer security identifier (SID).
     *
     * Generated from protobuf field <code>bool generalize = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setGeneralize($var)
    {
        GPBUtil::checkBool($var);
        $this->generalize = $var;

        return $this;
    }

    /**
     * Optional. Choose which type of license to apply to the imported image.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.ComputeEngineLicenseType license_type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getLicenseType()
    {
        return $this->license_type;
    }

    /**
     * Optional. Choose which type of license to apply to the imported image.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.ComputeEngineLicenseType license_type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setLicenseType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\VMMigration\V1\ComputeEngineLicenseType::class);
        $this->license_type = $var;

        return $this;
    }

    /**
     * Optional. By default the image will keep its existing boot option. Setting
     * this property will trigger an internal process which will convert the
     * image from using the existing boot option to another.
     * The size of the boot disk might be increased to allow the conversion
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.BootConversion boot_conversion = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getBootConversion()
    {
        return $this->boot_conversion;
    }

    /**
     * Optional. By default the image will keep its existing boot option. Setting
     * this property will trigger an internal process which will convert the
     * image from using the existing boot option to another.
     * The size of the boot disk might be increased to allow the conversion
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.BootConversion boot_conversion = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setBootConversion($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\VMMigration\V1\BootConversion::class);
        $this->boot_conversion = $var;

        return $this;
    }

}

