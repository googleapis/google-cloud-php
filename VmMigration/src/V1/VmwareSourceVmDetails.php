<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmmigration/v1/vmmigration.proto

namespace Google\Cloud\VMMigration\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represent the source Vmware VM details.
 *
 * Generated from protobuf message <code>google.cloud.vmmigration.v1.VmwareSourceVmDetails</code>
 */
class VmwareSourceVmDetails extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. The firmware type of the source VM.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmwareSourceVmDetails.Firmware firmware = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $firmware = 0;
    /**
     * Output only. The total size of the disks being migrated in bytes.
     *
     * Generated from protobuf field <code>int64 committed_storage_bytes = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $committed_storage_bytes = 0;
    /**
     * Output only. The disks attached to the source VM.
     *
     * Generated from protobuf field <code>repeated .google.cloud.vmmigration.v1.VmwareSourceVmDetails.VmwareDiskDetails disks = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $disks;
    /**
     * Output only. Information about VM capabilities needed for some Compute
     * Engine features.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmCapabilities vm_capabilities_info = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $vm_capabilities_info = null;
    /**
     * Output only. The VM architecture.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmArchitecture architecture = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $architecture = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $firmware
     *           Output only. The firmware type of the source VM.
     *     @type int|string $committed_storage_bytes
     *           Output only. The total size of the disks being migrated in bytes.
     *     @type array<\Google\Cloud\VMMigration\V1\VmwareSourceVmDetails\VmwareDiskDetails>|\Google\Protobuf\Internal\RepeatedField $disks
     *           Output only. The disks attached to the source VM.
     *     @type \Google\Cloud\VMMigration\V1\VmCapabilities $vm_capabilities_info
     *           Output only. Information about VM capabilities needed for some Compute
     *           Engine features.
     *     @type int $architecture
     *           Output only. The VM architecture.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Vmmigration\V1\Vmmigration::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. The firmware type of the source VM.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmwareSourceVmDetails.Firmware firmware = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getFirmware()
    {
        return $this->firmware;
    }

    /**
     * Output only. The firmware type of the source VM.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmwareSourceVmDetails.Firmware firmware = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setFirmware($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\VMMigration\V1\VmwareSourceVmDetails\Firmware::class);
        $this->firmware = $var;

        return $this;
    }

    /**
     * Output only. The total size of the disks being migrated in bytes.
     *
     * Generated from protobuf field <code>int64 committed_storage_bytes = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int|string
     */
    public function getCommittedStorageBytes()
    {
        return $this->committed_storage_bytes;
    }

    /**
     * Output only. The total size of the disks being migrated in bytes.
     *
     * Generated from protobuf field <code>int64 committed_storage_bytes = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int|string $var
     * @return $this
     */
    public function setCommittedStorageBytes($var)
    {
        GPBUtil::checkInt64($var);
        $this->committed_storage_bytes = $var;

        return $this;
    }

    /**
     * Output only. The disks attached to the source VM.
     *
     * Generated from protobuf field <code>repeated .google.cloud.vmmigration.v1.VmwareSourceVmDetails.VmwareDiskDetails disks = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDisks()
    {
        return $this->disks;
    }

    /**
     * Output only. The disks attached to the source VM.
     *
     * Generated from protobuf field <code>repeated .google.cloud.vmmigration.v1.VmwareSourceVmDetails.VmwareDiskDetails disks = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param array<\Google\Cloud\VMMigration\V1\VmwareSourceVmDetails\VmwareDiskDetails>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDisks($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\VMMigration\V1\VmwareSourceVmDetails\VmwareDiskDetails::class);
        $this->disks = $arr;

        return $this;
    }

    /**
     * Output only. Information about VM capabilities needed for some Compute
     * Engine features.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmCapabilities vm_capabilities_info = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Cloud\VMMigration\V1\VmCapabilities|null
     */
    public function getVmCapabilitiesInfo()
    {
        return $this->vm_capabilities_info;
    }

    public function hasVmCapabilitiesInfo()
    {
        return isset($this->vm_capabilities_info);
    }

    public function clearVmCapabilitiesInfo()
    {
        unset($this->vm_capabilities_info);
    }

    /**
     * Output only. Information about VM capabilities needed for some Compute
     * Engine features.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmCapabilities vm_capabilities_info = 5 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Cloud\VMMigration\V1\VmCapabilities $var
     * @return $this
     */
    public function setVmCapabilitiesInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\VMMigration\V1\VmCapabilities::class);
        $this->vm_capabilities_info = $var;

        return $this;
    }

    /**
     * Output only. The VM architecture.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmArchitecture architecture = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getArchitecture()
    {
        return $this->architecture;
    }

    /**
     * Output only. The VM architecture.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmArchitecture architecture = 6 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setArchitecture($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\VMMigration\V1\VmArchitecture::class);
        $this->architecture = $var;

        return $this;
    }

}

