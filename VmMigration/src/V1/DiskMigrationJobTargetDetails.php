<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmmigration/v1/vmmigration.proto

namespace Google\Cloud\VMMigration\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details of the target disk in Compute Engine.
 *
 * Generated from protobuf message <code>google.cloud.vmmigration.v1.DiskMigrationJobTargetDetails</code>
 */
class DiskMigrationJobTargetDetails extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the resource of type TargetProject which represents
     * the Compute Engine project in which to create the disk. Should be of the
     * form: projects/{project}/locations/global/targetProjects/{target-project}
     *
     * Generated from protobuf field <code>string target_project = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    protected $target_project = '';
    /**
     * Optional. A map of labels to associate with the disk.
     *
     * Generated from protobuf field <code>map<string, string> labels = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $labels;
    /**
     * Optional. The encryption to apply to the disk.
     * If the DiskMigrationJob parent Source resource has an encryption, this
     * field must be set to the same encryption key.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.Encryption encryption = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $encryption = null;
    protected $target_storage;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\VMMigration\V1\ComputeEngineDisk $target_disk
     *           Required. The target disk.
     *     @type string $target_project
     *           Required. The name of the resource of type TargetProject which represents
     *           the Compute Engine project in which to create the disk. Should be of the
     *           form: projects/{project}/locations/global/targetProjects/{target-project}
     *     @type array|\Google\Protobuf\Internal\MapField $labels
     *           Optional. A map of labels to associate with the disk.
     *     @type \Google\Cloud\VMMigration\V1\Encryption $encryption
     *           Optional. The encryption to apply to the disk.
     *           If the DiskMigrationJob parent Source resource has an encryption, this
     *           field must be set to the same encryption key.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Vmmigration\V1\Vmmigration::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The target disk.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.ComputeEngineDisk target_disk = 8 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\VMMigration\V1\ComputeEngineDisk|null
     */
    public function getTargetDisk()
    {
        return $this->readOneof(8);
    }

    public function hasTargetDisk()
    {
        return $this->hasOneof(8);
    }

    /**
     * Required. The target disk.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.ComputeEngineDisk target_disk = 8 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\VMMigration\V1\ComputeEngineDisk $var
     * @return $this
     */
    public function setTargetDisk($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\VMMigration\V1\ComputeEngineDisk::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * Required. The name of the resource of type TargetProject which represents
     * the Compute Engine project in which to create the disk. Should be of the
     * form: projects/{project}/locations/global/targetProjects/{target-project}
     *
     * Generated from protobuf field <code>string target_project = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getTargetProject()
    {
        return $this->target_project;
    }

    /**
     * Required. The name of the resource of type TargetProject which represents
     * the Compute Engine project in which to create the disk. Should be of the
     * form: projects/{project}/locations/global/targetProjects/{target-project}
     *
     * Generated from protobuf field <code>string target_project = 2 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setTargetProject($var)
    {
        GPBUtil::checkString($var, True);
        $this->target_project = $var;

        return $this;
    }

    /**
     * Optional. A map of labels to associate with the disk.
     *
     * Generated from protobuf field <code>map<string, string> labels = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * Optional. A map of labels to associate with the disk.
     *
     * Generated from protobuf field <code>map<string, string> labels = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setLabels($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;

        return $this;
    }

    /**
     * Optional. The encryption to apply to the disk.
     * If the DiskMigrationJob parent Source resource has an encryption, this
     * field must be set to the same encryption key.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.Encryption encryption = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\VMMigration\V1\Encryption|null
     */
    public function getEncryption()
    {
        return $this->encryption;
    }

    public function hasEncryption()
    {
        return isset($this->encryption);
    }

    public function clearEncryption()
    {
        unset($this->encryption);
    }

    /**
     * Optional. The encryption to apply to the disk.
     * If the DiskMigrationJob parent Source resource has an encryption, this
     * field must be set to the same encryption key.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.Encryption encryption = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\VMMigration\V1\Encryption $var
     * @return $this
     */
    public function setEncryption($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\VMMigration\V1\Encryption::class);
        $this->encryption = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getTargetStorage()
    {
        return $this->whichOneof("target_storage");
    }

}

