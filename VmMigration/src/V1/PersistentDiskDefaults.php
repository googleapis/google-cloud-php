<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmmigration/v1/vmmigration.proto

namespace Google\Cloud\VMMigration\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details for creation of a Persistent Disk.
 *
 * Generated from protobuf message <code>google.cloud.vmmigration.v1.PersistentDiskDefaults</code>
 */
class PersistentDiskDefaults extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The ordinal number of the source VM disk.
     *
     * Generated from protobuf field <code>int32 source_disk_number = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $source_disk_number = 0;
    /**
     * Optional. The name of the Persistent Disk to create.
     *
     * Generated from protobuf field <code>string disk_name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $disk_name = '';
    /**
     * The disk type to use.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 3;</code>
     */
    protected $disk_type = 0;
    /**
     * A map of labels to associate with the Persistent Disk.
     *
     * Generated from protobuf field <code>map<string, string> additional_labels = 4;</code>
     */
    private $additional_labels;
    /**
     * Optional. The encryption to apply to the disk.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.Encryption encryption = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $encryption = null;
    /**
     * Optional. Details for attachment of the disk to a VM.
     * Used when the disk is set to be attached to a target VM.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmAttachmentDetails vm_attachment_details = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $vm_attachment_details = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $source_disk_number
     *           Required. The ordinal number of the source VM disk.
     *     @type string $disk_name
     *           Optional. The name of the Persistent Disk to create.
     *     @type int $disk_type
     *           The disk type to use.
     *     @type array|\Google\Protobuf\Internal\MapField $additional_labels
     *           A map of labels to associate with the Persistent Disk.
     *     @type \Google\Cloud\VMMigration\V1\Encryption $encryption
     *           Optional. The encryption to apply to the disk.
     *     @type \Google\Cloud\VMMigration\V1\VmAttachmentDetails $vm_attachment_details
     *           Optional. Details for attachment of the disk to a VM.
     *           Used when the disk is set to be attached to a target VM.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Vmmigration\V1\Vmmigration::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The ordinal number of the source VM disk.
     *
     * Generated from protobuf field <code>int32 source_disk_number = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getSourceDiskNumber()
    {
        return $this->source_disk_number;
    }

    /**
     * Required. The ordinal number of the source VM disk.
     *
     * Generated from protobuf field <code>int32 source_disk_number = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setSourceDiskNumber($var)
    {
        GPBUtil::checkInt32($var);
        $this->source_disk_number = $var;

        return $this;
    }

    /**
     * Optional. The name of the Persistent Disk to create.
     *
     * Generated from protobuf field <code>string disk_name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDiskName()
    {
        return $this->disk_name;
    }

    /**
     * Optional. The name of the Persistent Disk to create.
     *
     * Generated from protobuf field <code>string disk_name = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDiskName($var)
    {
        GPBUtil::checkString($var, True);
        $this->disk_name = $var;

        return $this;
    }

    /**
     * The disk type to use.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 3;</code>
     * @return int
     */
    public function getDiskType()
    {
        return $this->disk_type;
    }

    /**
     * The disk type to use.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.ComputeEngineDiskType disk_type = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setDiskType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\VMMigration\V1\ComputeEngineDiskType::class);
        $this->disk_type = $var;

        return $this;
    }

    /**
     * A map of labels to associate with the Persistent Disk.
     *
     * Generated from protobuf field <code>map<string, string> additional_labels = 4;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getAdditionalLabels()
    {
        return $this->additional_labels;
    }

    /**
     * A map of labels to associate with the Persistent Disk.
     *
     * Generated from protobuf field <code>map<string, string> additional_labels = 4;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setAdditionalLabels($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->additional_labels = $arr;

        return $this;
    }

    /**
     * Optional. The encryption to apply to the disk.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.Encryption encryption = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\VMMigration\V1\Encryption|null
     */
    public function getEncryption()
    {
        return $this->encryption;
    }

    public function hasEncryption()
    {
        return isset($this->encryption);
    }

    public function clearEncryption()
    {
        unset($this->encryption);
    }

    /**
     * Optional. The encryption to apply to the disk.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.Encryption encryption = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\VMMigration\V1\Encryption $var
     * @return $this
     */
    public function setEncryption($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\VMMigration\V1\Encryption::class);
        $this->encryption = $var;

        return $this;
    }

    /**
     * Optional. Details for attachment of the disk to a VM.
     * Used when the disk is set to be attached to a target VM.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmAttachmentDetails vm_attachment_details = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\VMMigration\V1\VmAttachmentDetails|null
     */
    public function getVmAttachmentDetails()
    {
        return $this->vm_attachment_details;
    }

    public function hasVmAttachmentDetails()
    {
        return isset($this->vm_attachment_details);
    }

    public function clearVmAttachmentDetails()
    {
        unset($this->vm_attachment_details);
    }

    /**
     * Optional. Details for attachment of the disk to a VM.
     * Used when the disk is set to be attached to a target VM.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmAttachmentDetails vm_attachment_details = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\VMMigration\V1\VmAttachmentDetails $var
     * @return $this
     */
    public function setVmAttachmentDetails($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\VMMigration\V1\VmAttachmentDetails::class);
        $this->vm_attachment_details = $var;

        return $this;
    }

}

