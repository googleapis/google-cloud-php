<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmmigration/v1/vmmigration.proto

namespace Google\Cloud\VMMigration\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details for creation of a VM that migrated data disks will be attached to.
 *
 * Generated from protobuf message <code>google.cloud.vmmigration.v1.DisksMigrationVmTargetDefaults</code>
 */
class DisksMigrationVmTargetDefaults extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the VM to create.
     *
     * Generated from protobuf field <code>string vm_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $vm_name = '';
    /**
     * Optional. The machine type series to create the VM with.
     * For presentation only.
     *
     * Generated from protobuf field <code>string machine_type_series = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $machine_type_series = '';
    /**
     * Required. The machine type to create the VM with.
     *
     * Generated from protobuf field <code>string machine_type = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $machine_type = '';
    /**
     * Optional. A list of network tags to associate with the VM.
     *
     * Generated from protobuf field <code>repeated string network_tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $network_tags;
    /**
     * Optional. NICs to attach to the VM.
     *
     * Generated from protobuf field <code>repeated .google.cloud.vmmigration.v1.NetworkInterface network_interfaces = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $network_interfaces;
    /**
     * Optional. The service account to associate the VM with.
     *
     * Generated from protobuf field <code>string service_account = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $service_account = '';
    /**
     * Optional. Compute instance scheduling information (if empty default is
     * used).
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.ComputeScheduling compute_scheduling = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $compute_scheduling = null;
    /**
     * Optional. Defines whether the instance has Secure Boot enabled.
     * This can be set to true only if the VM boot option is EFI.
     *
     * Generated from protobuf field <code>bool secure_boot = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $secure_boot = false;
    /**
     * Optional. Defines whether the instance has vTPM enabled.
     *
     * Generated from protobuf field <code>bool enable_vtpm = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $enable_vtpm = false;
    /**
     * Optional. Defines whether the instance has integrity monitoring enabled.
     *
     * Generated from protobuf field <code>bool enable_integrity_monitoring = 17 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $enable_integrity_monitoring = false;
    /**
     * Optional. The metadata key/value pairs to assign to the VM.
     *
     * Generated from protobuf field <code>map<string, string> metadata = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $metadata;
    /**
     * Optional. Additional licenses to assign to the VM.
     *
     * Generated from protobuf field <code>repeated string additional_licenses = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $additional_licenses;
    /**
     * Optional. The hostname to assign to the VM.
     *
     * Generated from protobuf field <code>string hostname = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $hostname = '';
    /**
     * Optional. A map of labels to associate with the VM.
     *
     * Generated from protobuf field <code>map<string, string> labels = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $labels;
    /**
     * Optional. Details of the boot disk of the VM.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.BootDiskDefaults boot_disk_defaults = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $boot_disk_defaults = null;
    /**
     * Optional. The encryption to apply to the VM.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.Encryption encryption = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $encryption = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $vm_name
     *           Required. The name of the VM to create.
     *     @type string $machine_type_series
     *           Optional. The machine type series to create the VM with.
     *           For presentation only.
     *     @type string $machine_type
     *           Required. The machine type to create the VM with.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $network_tags
     *           Optional. A list of network tags to associate with the VM.
     *     @type array<\Google\Cloud\VMMigration\V1\NetworkInterface>|\Google\Protobuf\Internal\RepeatedField $network_interfaces
     *           Optional. NICs to attach to the VM.
     *     @type string $service_account
     *           Optional. The service account to associate the VM with.
     *     @type \Google\Cloud\VMMigration\V1\ComputeScheduling $compute_scheduling
     *           Optional. Compute instance scheduling information (if empty default is
     *           used).
     *     @type bool $secure_boot
     *           Optional. Defines whether the instance has Secure Boot enabled.
     *           This can be set to true only if the VM boot option is EFI.
     *     @type bool $enable_vtpm
     *           Optional. Defines whether the instance has vTPM enabled.
     *     @type bool $enable_integrity_monitoring
     *           Optional. Defines whether the instance has integrity monitoring enabled.
     *     @type array|\Google\Protobuf\Internal\MapField $metadata
     *           Optional. The metadata key/value pairs to assign to the VM.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $additional_licenses
     *           Optional. Additional licenses to assign to the VM.
     *     @type string $hostname
     *           Optional. The hostname to assign to the VM.
     *     @type array|\Google\Protobuf\Internal\MapField $labels
     *           Optional. A map of labels to associate with the VM.
     *     @type \Google\Cloud\VMMigration\V1\BootDiskDefaults $boot_disk_defaults
     *           Optional. Details of the boot disk of the VM.
     *     @type \Google\Cloud\VMMigration\V1\Encryption $encryption
     *           Optional. The encryption to apply to the VM.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Vmmigration\V1\Vmmigration::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The name of the VM to create.
     *
     * Generated from protobuf field <code>string vm_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getVmName()
    {
        return $this->vm_name;
    }

    /**
     * Required. The name of the VM to create.
     *
     * Generated from protobuf field <code>string vm_name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setVmName($var)
    {
        GPBUtil::checkString($var, True);
        $this->vm_name = $var;

        return $this;
    }

    /**
     * Optional. The machine type series to create the VM with.
     * For presentation only.
     *
     * Generated from protobuf field <code>string machine_type_series = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getMachineTypeSeries()
    {
        return $this->machine_type_series;
    }

    /**
     * Optional. The machine type series to create the VM with.
     * For presentation only.
     *
     * Generated from protobuf field <code>string machine_type_series = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setMachineTypeSeries($var)
    {
        GPBUtil::checkString($var, True);
        $this->machine_type_series = $var;

        return $this;
    }

    /**
     * Required. The machine type to create the VM with.
     *
     * Generated from protobuf field <code>string machine_type = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getMachineType()
    {
        return $this->machine_type;
    }

    /**
     * Required. The machine type to create the VM with.
     *
     * Generated from protobuf field <code>string machine_type = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setMachineType($var)
    {
        GPBUtil::checkString($var, True);
        $this->machine_type = $var;

        return $this;
    }

    /**
     * Optional. A list of network tags to associate with the VM.
     *
     * Generated from protobuf field <code>repeated string network_tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNetworkTags()
    {
        return $this->network_tags;
    }

    /**
     * Optional. A list of network tags to associate with the VM.
     *
     * Generated from protobuf field <code>repeated string network_tags = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNetworkTags($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->network_tags = $arr;

        return $this;
    }

    /**
     * Optional. NICs to attach to the VM.
     *
     * Generated from protobuf field <code>repeated .google.cloud.vmmigration.v1.NetworkInterface network_interfaces = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNetworkInterfaces()
    {
        return $this->network_interfaces;
    }

    /**
     * Optional. NICs to attach to the VM.
     *
     * Generated from protobuf field <code>repeated .google.cloud.vmmigration.v1.NetworkInterface network_interfaces = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Cloud\VMMigration\V1\NetworkInterface>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNetworkInterfaces($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\VMMigration\V1\NetworkInterface::class);
        $this->network_interfaces = $arr;

        return $this;
    }

    /**
     * Optional. The service account to associate the VM with.
     *
     * Generated from protobuf field <code>string service_account = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getServiceAccount()
    {
        return $this->service_account;
    }

    /**
     * Optional. The service account to associate the VM with.
     *
     * Generated from protobuf field <code>string service_account = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setServiceAccount($var)
    {
        GPBUtil::checkString($var, True);
        $this->service_account = $var;

        return $this;
    }

    /**
     * Optional. Compute instance scheduling information (if empty default is
     * used).
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.ComputeScheduling compute_scheduling = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\VMMigration\V1\ComputeScheduling|null
     */
    public function getComputeScheduling()
    {
        return $this->compute_scheduling;
    }

    public function hasComputeScheduling()
    {
        return isset($this->compute_scheduling);
    }

    public function clearComputeScheduling()
    {
        unset($this->compute_scheduling);
    }

    /**
     * Optional. Compute instance scheduling information (if empty default is
     * used).
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.ComputeScheduling compute_scheduling = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\VMMigration\V1\ComputeScheduling $var
     * @return $this
     */
    public function setComputeScheduling($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\VMMigration\V1\ComputeScheduling::class);
        $this->compute_scheduling = $var;

        return $this;
    }

    /**
     * Optional. Defines whether the instance has Secure Boot enabled.
     * This can be set to true only if the VM boot option is EFI.
     *
     * Generated from protobuf field <code>bool secure_boot = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getSecureBoot()
    {
        return $this->secure_boot;
    }

    /**
     * Optional. Defines whether the instance has Secure Boot enabled.
     * This can be set to true only if the VM boot option is EFI.
     *
     * Generated from protobuf field <code>bool secure_boot = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setSecureBoot($var)
    {
        GPBUtil::checkBool($var);
        $this->secure_boot = $var;

        return $this;
    }

    /**
     * Optional. Defines whether the instance has vTPM enabled.
     *
     * Generated from protobuf field <code>bool enable_vtpm = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getEnableVtpm()
    {
        return $this->enable_vtpm;
    }

    /**
     * Optional. Defines whether the instance has vTPM enabled.
     *
     * Generated from protobuf field <code>bool enable_vtpm = 16 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableVtpm($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_vtpm = $var;

        return $this;
    }

    /**
     * Optional. Defines whether the instance has integrity monitoring enabled.
     *
     * Generated from protobuf field <code>bool enable_integrity_monitoring = 17 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getEnableIntegrityMonitoring()
    {
        return $this->enable_integrity_monitoring;
    }

    /**
     * Optional. Defines whether the instance has integrity monitoring enabled.
     *
     * Generated from protobuf field <code>bool enable_integrity_monitoring = 17 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableIntegrityMonitoring($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_integrity_monitoring = $var;

        return $this;
    }

    /**
     * Optional. The metadata key/value pairs to assign to the VM.
     *
     * Generated from protobuf field <code>map<string, string> metadata = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Optional. The metadata key/value pairs to assign to the VM.
     *
     * Generated from protobuf field <code>map<string, string> metadata = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setMetadata($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->metadata = $arr;

        return $this;
    }

    /**
     * Optional. Additional licenses to assign to the VM.
     *
     * Generated from protobuf field <code>repeated string additional_licenses = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAdditionalLicenses()
    {
        return $this->additional_licenses;
    }

    /**
     * Optional. Additional licenses to assign to the VM.
     *
     * Generated from protobuf field <code>repeated string additional_licenses = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAdditionalLicenses($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->additional_licenses = $arr;

        return $this;
    }

    /**
     * Optional. The hostname to assign to the VM.
     *
     * Generated from protobuf field <code>string hostname = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getHostname()
    {
        return $this->hostname;
    }

    /**
     * Optional. The hostname to assign to the VM.
     *
     * Generated from protobuf field <code>string hostname = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setHostname($var)
    {
        GPBUtil::checkString($var, True);
        $this->hostname = $var;

        return $this;
    }

    /**
     * Optional. A map of labels to associate with the VM.
     *
     * Generated from protobuf field <code>map<string, string> labels = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * Optional. A map of labels to associate with the VM.
     *
     * Generated from protobuf field <code>map<string, string> labels = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setLabels($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;

        return $this;
    }

    /**
     * Optional. Details of the boot disk of the VM.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.BootDiskDefaults boot_disk_defaults = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\VMMigration\V1\BootDiskDefaults|null
     */
    public function getBootDiskDefaults()
    {
        return $this->boot_disk_defaults;
    }

    public function hasBootDiskDefaults()
    {
        return isset($this->boot_disk_defaults);
    }

    public function clearBootDiskDefaults()
    {
        unset($this->boot_disk_defaults);
    }

    /**
     * Optional. Details of the boot disk of the VM.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.BootDiskDefaults boot_disk_defaults = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\VMMigration\V1\BootDiskDefaults $var
     * @return $this
     */
    public function setBootDiskDefaults($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\VMMigration\V1\BootDiskDefaults::class);
        $this->boot_disk_defaults = $var;

        return $this;
    }

    /**
     * Optional. The encryption to apply to the VM.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.Encryption encryption = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\VMMigration\V1\Encryption|null
     */
    public function getEncryption()
    {
        return $this->encryption;
    }

    public function hasEncryption()
    {
        return isset($this->encryption);
    }

    public function clearEncryption()
    {
        unset($this->encryption);
    }

    /**
     * Optional. The encryption to apply to the VM.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.Encryption encryption = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\VMMigration\V1\Encryption $var
     * @return $this
     */
    public function setEncryption($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\VMMigration\V1\Encryption::class);
        $this->encryption = $var;

        return $this;
    }

}

