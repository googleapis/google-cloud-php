<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmmigration/v1/vmmigration.proto

namespace Google\Cloud\VMMigration\V1\AzureVmDetails;

use UnexpectedValueException;

/**
 * Possible values for the power state of the VM.
 *
 * Protobuf type <code>google.cloud.vmmigration.v1.AzureVmDetails.PowerState</code>
 */
class PowerState
{
    /**
     * Power state is not specified.
     *
     * Generated from protobuf enum <code>POWER_STATE_UNSPECIFIED = 0;</code>
     */
    const POWER_STATE_UNSPECIFIED = 0;
    /**
     * The VM is starting.
     *
     * Generated from protobuf enum <code>STARTING = 1;</code>
     */
    const STARTING = 1;
    /**
     * The VM is running.
     *
     * Generated from protobuf enum <code>RUNNING = 2;</code>
     */
    const RUNNING = 2;
    /**
     * The VM is stopping.
     *
     * Generated from protobuf enum <code>STOPPING = 3;</code>
     */
    const STOPPING = 3;
    /**
     * The VM is stopped.
     *
     * Generated from protobuf enum <code>STOPPED = 4;</code>
     */
    const STOPPED = 4;
    /**
     * The VM is deallocating.
     *
     * Generated from protobuf enum <code>DEALLOCATING = 5;</code>
     */
    const DEALLOCATING = 5;
    /**
     * The VM is deallocated.
     *
     * Generated from protobuf enum <code>DEALLOCATED = 6;</code>
     */
    const DEALLOCATED = 6;
    /**
     * The VM's power state is unknown.
     *
     * Generated from protobuf enum <code>UNKNOWN = 7;</code>
     */
    const UNKNOWN = 7;

    private static $valueToName = [
        self::POWER_STATE_UNSPECIFIED => 'POWER_STATE_UNSPECIFIED',
        self::STARTING => 'STARTING',
        self::RUNNING => 'RUNNING',
        self::STOPPING => 'STOPPING',
        self::STOPPED => 'STOPPED',
        self::DEALLOCATING => 'DEALLOCATING',
        self::DEALLOCATED => 'DEALLOCATED',
        self::UNKNOWN => 'UNKNOWN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


