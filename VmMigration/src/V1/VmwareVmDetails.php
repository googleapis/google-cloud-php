<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/vmmigration/v1/vmmigration.proto

namespace Google\Cloud\VMMigration\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * VmwareVmDetails describes a VM in vCenter.
 *
 * Generated from protobuf message <code>google.cloud.vmmigration.v1.VmwareVmDetails</code>
 */
class VmwareVmDetails extends \Google\Protobuf\Internal\Message
{
    /**
     * The VM's id in the source (note that this is not the MigratingVm's id).
     * This is the moref id of the VM.
     *
     * Generated from protobuf field <code>string vm_id = 1;</code>
     */
    private $vm_id = '';
    /**
     * The id of the vCenter's datacenter this VM is contained in.
     *
     * Generated from protobuf field <code>string datacenter_id = 2;</code>
     */
    private $datacenter_id = '';
    /**
     * The descriptive name of the vCenter's datacenter this VM is contained in.
     *
     * Generated from protobuf field <code>string datacenter_description = 3;</code>
     */
    private $datacenter_description = '';
    /**
     * The unique identifier of the VM in vCenter.
     *
     * Generated from protobuf field <code>string uuid = 4;</code>
     */
    private $uuid = '';
    /**
     * The display name of the VM. Note that this is not necessarily unique.
     *
     * Generated from protobuf field <code>string display_name = 5;</code>
     */
    private $display_name = '';
    /**
     * The power state of the VM at the moment list was taken.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmwareVmDetails.PowerState power_state = 6;</code>
     */
    private $power_state = 0;
    /**
     * The number of cpus in the VM.
     *
     * Generated from protobuf field <code>int32 cpu_count = 7;</code>
     */
    private $cpu_count = 0;
    /**
     * The size of the memory of the VM in MB.
     *
     * Generated from protobuf field <code>int32 memory_mb = 8;</code>
     */
    private $memory_mb = 0;
    /**
     * The number of disks the VM has.
     *
     * Generated from protobuf field <code>int32 disk_count = 9;</code>
     */
    private $disk_count = 0;
    /**
     * The total size of the storage allocated to the VM in MB.
     *
     * Generated from protobuf field <code>int64 committed_storage_mb = 12;</code>
     */
    private $committed_storage_mb = 0;
    /**
     * The VM's OS. See for example
     * https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html
     * for types of strings this might hold.
     *
     * Generated from protobuf field <code>string guest_description = 11;</code>
     */
    private $guest_description = '';
    /**
     * Output only. The VM Boot Option.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmwareVmDetails.BootOption boot_option = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $boot_option = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $vm_id
     *           The VM's id in the source (note that this is not the MigratingVm's id).
     *           This is the moref id of the VM.
     *     @type string $datacenter_id
     *           The id of the vCenter's datacenter this VM is contained in.
     *     @type string $datacenter_description
     *           The descriptive name of the vCenter's datacenter this VM is contained in.
     *     @type string $uuid
     *           The unique identifier of the VM in vCenter.
     *     @type string $display_name
     *           The display name of the VM. Note that this is not necessarily unique.
     *     @type int $power_state
     *           The power state of the VM at the moment list was taken.
     *     @type int $cpu_count
     *           The number of cpus in the VM.
     *     @type int $memory_mb
     *           The size of the memory of the VM in MB.
     *     @type int $disk_count
     *           The number of disks the VM has.
     *     @type int|string $committed_storage_mb
     *           The total size of the storage allocated to the VM in MB.
     *     @type string $guest_description
     *           The VM's OS. See for example
     *           https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html
     *           for types of strings this might hold.
     *     @type int $boot_option
     *           Output only. The VM Boot Option.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Vmmigration\V1\Vmmigration::initOnce();
        parent::__construct($data);
    }

    /**
     * The VM's id in the source (note that this is not the MigratingVm's id).
     * This is the moref id of the VM.
     *
     * Generated from protobuf field <code>string vm_id = 1;</code>
     * @return string
     */
    public function getVmId()
    {
        return $this->vm_id;
    }

    /**
     * The VM's id in the source (note that this is not the MigratingVm's id).
     * This is the moref id of the VM.
     *
     * Generated from protobuf field <code>string vm_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setVmId($var)
    {
        GPBUtil::checkString($var, True);
        $this->vm_id = $var;

        return $this;
    }

    /**
     * The id of the vCenter's datacenter this VM is contained in.
     *
     * Generated from protobuf field <code>string datacenter_id = 2;</code>
     * @return string
     */
    public function getDatacenterId()
    {
        return $this->datacenter_id;
    }

    /**
     * The id of the vCenter's datacenter this VM is contained in.
     *
     * Generated from protobuf field <code>string datacenter_id = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDatacenterId($var)
    {
        GPBUtil::checkString($var, True);
        $this->datacenter_id = $var;

        return $this;
    }

    /**
     * The descriptive name of the vCenter's datacenter this VM is contained in.
     *
     * Generated from protobuf field <code>string datacenter_description = 3;</code>
     * @return string
     */
    public function getDatacenterDescription()
    {
        return $this->datacenter_description;
    }

    /**
     * The descriptive name of the vCenter's datacenter this VM is contained in.
     *
     * Generated from protobuf field <code>string datacenter_description = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setDatacenterDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->datacenter_description = $var;

        return $this;
    }

    /**
     * The unique identifier of the VM in vCenter.
     *
     * Generated from protobuf field <code>string uuid = 4;</code>
     * @return string
     */
    public function getUuid()
    {
        return $this->uuid;
    }

    /**
     * The unique identifier of the VM in vCenter.
     *
     * Generated from protobuf field <code>string uuid = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setUuid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uuid = $var;

        return $this;
    }

    /**
     * The display name of the VM. Note that this is not necessarily unique.
     *
     * Generated from protobuf field <code>string display_name = 5;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * The display name of the VM. Note that this is not necessarily unique.
     *
     * Generated from protobuf field <code>string display_name = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * The power state of the VM at the moment list was taken.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmwareVmDetails.PowerState power_state = 6;</code>
     * @return int
     */
    public function getPowerState()
    {
        return $this->power_state;
    }

    /**
     * The power state of the VM at the moment list was taken.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmwareVmDetails.PowerState power_state = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setPowerState($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\VMMigration\V1\VmwareVmDetails\PowerState::class);
        $this->power_state = $var;

        return $this;
    }

    /**
     * The number of cpus in the VM.
     *
     * Generated from protobuf field <code>int32 cpu_count = 7;</code>
     * @return int
     */
    public function getCpuCount()
    {
        return $this->cpu_count;
    }

    /**
     * The number of cpus in the VM.
     *
     * Generated from protobuf field <code>int32 cpu_count = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setCpuCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->cpu_count = $var;

        return $this;
    }

    /**
     * The size of the memory of the VM in MB.
     *
     * Generated from protobuf field <code>int32 memory_mb = 8;</code>
     * @return int
     */
    public function getMemoryMb()
    {
        return $this->memory_mb;
    }

    /**
     * The size of the memory of the VM in MB.
     *
     * Generated from protobuf field <code>int32 memory_mb = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setMemoryMb($var)
    {
        GPBUtil::checkInt32($var);
        $this->memory_mb = $var;

        return $this;
    }

    /**
     * The number of disks the VM has.
     *
     * Generated from protobuf field <code>int32 disk_count = 9;</code>
     * @return int
     */
    public function getDiskCount()
    {
        return $this->disk_count;
    }

    /**
     * The number of disks the VM has.
     *
     * Generated from protobuf field <code>int32 disk_count = 9;</code>
     * @param int $var
     * @return $this
     */
    public function setDiskCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->disk_count = $var;

        return $this;
    }

    /**
     * The total size of the storage allocated to the VM in MB.
     *
     * Generated from protobuf field <code>int64 committed_storage_mb = 12;</code>
     * @return int|string
     */
    public function getCommittedStorageMb()
    {
        return $this->committed_storage_mb;
    }

    /**
     * The total size of the storage allocated to the VM in MB.
     *
     * Generated from protobuf field <code>int64 committed_storage_mb = 12;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCommittedStorageMb($var)
    {
        GPBUtil::checkInt64($var);
        $this->committed_storage_mb = $var;

        return $this;
    }

    /**
     * The VM's OS. See for example
     * https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html
     * for types of strings this might hold.
     *
     * Generated from protobuf field <code>string guest_description = 11;</code>
     * @return string
     */
    public function getGuestDescription()
    {
        return $this->guest_description;
    }

    /**
     * The VM's OS. See for example
     * https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html
     * for types of strings this might hold.
     *
     * Generated from protobuf field <code>string guest_description = 11;</code>
     * @param string $var
     * @return $this
     */
    public function setGuestDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->guest_description = $var;

        return $this;
    }

    /**
     * Output only. The VM Boot Option.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmwareVmDetails.BootOption boot_option = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getBootOption()
    {
        return $this->boot_option;
    }

    /**
     * Output only. The VM Boot Option.
     *
     * Generated from protobuf field <code>.google.cloud.vmmigration.v1.VmwareVmDetails.BootOption boot_option = 13 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setBootOption($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\VMMigration\V1\VmwareVmDetails\BootOption::class);
        $this->boot_option = $var;

        return $this;
    }

}

