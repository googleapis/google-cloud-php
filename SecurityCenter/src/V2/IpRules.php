<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/securitycenter/v2/ip_rules.proto

namespace Google\Cloud\SecurityCenter\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * IP rules associated with the finding.
 *
 * Generated from protobuf message <code>google.cloud.securitycenter.v2.IpRules</code>
 */
class IpRules extends \Google\Protobuf\Internal\Message
{
    /**
     * The direction that the rule is applicable to, one of ingress or egress.
     *
     * Generated from protobuf field <code>.google.cloud.securitycenter.v2.IpRules.Direction direction = 1;</code>
     */
    protected $direction = 0;
    /**
     * If source IP ranges are specified, the firewall rule applies only to
     * traffic that has a source IP address in these ranges. These ranges must be
     * expressed in CIDR format. Only supports IPv4.
     *
     * Generated from protobuf field <code>repeated string source_ip_ranges = 4;</code>
     */
    private $source_ip_ranges;
    /**
     * If destination IP ranges are specified, the firewall rule applies only to
     * traffic that has a destination IP address in these ranges. These ranges
     * must be expressed in CIDR format. Only supports IPv4.
     *
     * Generated from protobuf field <code>repeated string destination_ip_ranges = 5;</code>
     */
    private $destination_ip_ranges;
    /**
     * Name of the network protocol service, such as FTP, that is exposed by the
     * open port. Follows the naming convention available at:
     * https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml.
     *
     * Generated from protobuf field <code>repeated string exposed_services = 6;</code>
     */
    private $exposed_services;
    protected $rules;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $direction
     *           The direction that the rule is applicable to, one of ingress or egress.
     *     @type \Google\Cloud\SecurityCenter\V2\Allowed $allowed
     *           Tuple with allowed rules.
     *     @type \Google\Cloud\SecurityCenter\V2\Denied $denied
     *           Tuple with denied rules.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $source_ip_ranges
     *           If source IP ranges are specified, the firewall rule applies only to
     *           traffic that has a source IP address in these ranges. These ranges must be
     *           expressed in CIDR format. Only supports IPv4.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $destination_ip_ranges
     *           If destination IP ranges are specified, the firewall rule applies only to
     *           traffic that has a destination IP address in these ranges. These ranges
     *           must be expressed in CIDR format. Only supports IPv4.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $exposed_services
     *           Name of the network protocol service, such as FTP, that is exposed by the
     *           open port. Follows the naming convention available at:
     *           https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Securitycenter\V2\IpRules::initOnce();
        parent::__construct($data);
    }

    /**
     * The direction that the rule is applicable to, one of ingress or egress.
     *
     * Generated from protobuf field <code>.google.cloud.securitycenter.v2.IpRules.Direction direction = 1;</code>
     * @return int
     */
    public function getDirection()
    {
        return $this->direction;
    }

    /**
     * The direction that the rule is applicable to, one of ingress or egress.
     *
     * Generated from protobuf field <code>.google.cloud.securitycenter.v2.IpRules.Direction direction = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setDirection($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\SecurityCenter\V2\IpRules\Direction::class);
        $this->direction = $var;

        return $this;
    }

    /**
     * Tuple with allowed rules.
     *
     * Generated from protobuf field <code>.google.cloud.securitycenter.v2.Allowed allowed = 2;</code>
     * @return \Google\Cloud\SecurityCenter\V2\Allowed|null
     */
    public function getAllowed()
    {
        return $this->readOneof(2);
    }

    public function hasAllowed()
    {
        return $this->hasOneof(2);
    }

    /**
     * Tuple with allowed rules.
     *
     * Generated from protobuf field <code>.google.cloud.securitycenter.v2.Allowed allowed = 2;</code>
     * @param \Google\Cloud\SecurityCenter\V2\Allowed $var
     * @return $this
     */
    public function setAllowed($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\SecurityCenter\V2\Allowed::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Tuple with denied rules.
     *
     * Generated from protobuf field <code>.google.cloud.securitycenter.v2.Denied denied = 3;</code>
     * @return \Google\Cloud\SecurityCenter\V2\Denied|null
     */
    public function getDenied()
    {
        return $this->readOneof(3);
    }

    public function hasDenied()
    {
        return $this->hasOneof(3);
    }

    /**
     * Tuple with denied rules.
     *
     * Generated from protobuf field <code>.google.cloud.securitycenter.v2.Denied denied = 3;</code>
     * @param \Google\Cloud\SecurityCenter\V2\Denied $var
     * @return $this
     */
    public function setDenied($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\SecurityCenter\V2\Denied::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * If source IP ranges are specified, the firewall rule applies only to
     * traffic that has a source IP address in these ranges. These ranges must be
     * expressed in CIDR format. Only supports IPv4.
     *
     * Generated from protobuf field <code>repeated string source_ip_ranges = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSourceIpRanges()
    {
        return $this->source_ip_ranges;
    }

    /**
     * If source IP ranges are specified, the firewall rule applies only to
     * traffic that has a source IP address in these ranges. These ranges must be
     * expressed in CIDR format. Only supports IPv4.
     *
     * Generated from protobuf field <code>repeated string source_ip_ranges = 4;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSourceIpRanges($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->source_ip_ranges = $arr;

        return $this;
    }

    /**
     * If destination IP ranges are specified, the firewall rule applies only to
     * traffic that has a destination IP address in these ranges. These ranges
     * must be expressed in CIDR format. Only supports IPv4.
     *
     * Generated from protobuf field <code>repeated string destination_ip_ranges = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getDestinationIpRanges()
    {
        return $this->destination_ip_ranges;
    }

    /**
     * If destination IP ranges are specified, the firewall rule applies only to
     * traffic that has a destination IP address in these ranges. These ranges
     * must be expressed in CIDR format. Only supports IPv4.
     *
     * Generated from protobuf field <code>repeated string destination_ip_ranges = 5;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setDestinationIpRanges($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->destination_ip_ranges = $arr;

        return $this;
    }

    /**
     * Name of the network protocol service, such as FTP, that is exposed by the
     * open port. Follows the naming convention available at:
     * https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml.
     *
     * Generated from protobuf field <code>repeated string exposed_services = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getExposedServices()
    {
        return $this->exposed_services;
    }

    /**
     * Name of the network protocol service, such as FTP, that is exposed by the
     * open port. Follows the naming convention available at:
     * https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml.
     *
     * Generated from protobuf field <code>repeated string exposed_services = 6;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setExposedServices($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->exposed_services = $arr;

        return $this;
    }

    /**
     * @return string
     */
    public function getRules()
    {
        return $this->whichOneof("rules");
    }

}

