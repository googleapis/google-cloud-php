<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/telcoautomation/v1/telcoautomation.proto

namespace Google\Cloud\TelcoAutomation\V1\Deployment;

use UnexpectedValueException;

/**
 * State defines which state the current deployment is in.
 *
 * Protobuf type <code>google.cloud.telcoautomation.v1.Deployment.State</code>
 */
class State
{
    /**
     * Unspecified state.
     *
     * Generated from protobuf enum <code>STATE_UNSPECIFIED = 0;</code>
     */
    const STATE_UNSPECIFIED = 0;
    /**
     * A deployment starts in DRAFT state. All edits are made in DRAFT state. A
     * deployment opened for editing after applying will be in draft state,
     * while its prevision revision will be its current applied version.
     *
     * Generated from protobuf enum <code>DRAFT = 1;</code>
     */
    const DRAFT = 1;
    /**
     * This state means that the contents (YAML files containing kubernetes
     * resources) of the deployment have been applied to an Orchestration or
     * Workload Cluster. A revision is created when a deployment is applied.
     * This revision will represent the latest view of what is applied on the
     * cluster until the deployment is modified and applied again, which will
     * create a new revision.
     *
     * Generated from protobuf enum <code>APPLIED = 2;</code>
     */
    const APPLIED = 2;
    /**
     * A deployment in DELETING state has been marked for deletion. Its
     * deletion status can be queried using `ComputeDeploymentStatus` API. No
     * updates are allowed to a deployment in DELETING state.
     *
     * Generated from protobuf enum <code>DELETING = 3;</code>
     */
    const DELETING = 3;

    private static $valueToName = [
        self::STATE_UNSPECIFIED => 'STATE_UNSPECIFIED',
        self::DRAFT => 'DRAFT',
        self::APPLIED => 'APPLIED',
        self::DELETING => 'DELETING',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


