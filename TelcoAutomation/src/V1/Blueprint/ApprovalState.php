<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/telcoautomation/v1/telcoautomation.proto

namespace Google\Cloud\TelcoAutomation\V1\Blueprint;

use UnexpectedValueException;

/**
 * Approval state indicates the state of a Blueprint in its approval
 * lifecycle.
 *
 * Protobuf type <code>google.cloud.telcoautomation.v1.Blueprint.ApprovalState</code>
 */
class ApprovalState
{
    /**
     * Unspecified state.
     *
     * Generated from protobuf enum <code>APPROVAL_STATE_UNSPECIFIED = 0;</code>
     */
    const APPROVAL_STATE_UNSPECIFIED = 0;
    /**
     * A blueprint starts in DRAFT state once it is created. All edits are made
     * to the blueprint in DRAFT state.
     *
     * Generated from protobuf enum <code>DRAFT = 1;</code>
     */
    const DRAFT = 1;
    /**
     * When the edits are ready for review, blueprint can be proposed and moves
     * to PROPOSED state. Edits cannot be made to a blueprint in PROPOSED state.
     *
     * Generated from protobuf enum <code>PROPOSED = 2;</code>
     */
    const PROPOSED = 2;
    /**
     * When a proposed blueprint is approved, it moves to APPROVED state. A new
     * revision is committed. The latest committed revision can be used to
     * create a deployment on Orchestration or Workload Cluster. Edits to an
     * APPROVED blueprint changes its state back to DRAFT. The last committed
     * revision of a blueprint represents its latest APPROVED state.
     *
     * Generated from protobuf enum <code>APPROVED = 3;</code>
     */
    const APPROVED = 3;

    private static $valueToName = [
        self::APPROVAL_STATE_UNSPECIFIED => 'APPROVAL_STATE_UNSPECIFIED',
        self::DRAFT => 'DRAFT',
        self::PROPOSED => 'PROPOSED',
        self::APPROVED => 'APPROVED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


