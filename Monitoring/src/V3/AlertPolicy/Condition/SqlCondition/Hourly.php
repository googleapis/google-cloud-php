<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/monitoring/v3/alert.proto

namespace Google\Cloud\Monitoring\V3\AlertPolicy\Condition\SqlCondition;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Used to schedule the query to run every so many hours.
 *
 * Generated from protobuf message <code>google.monitoring.v3.AlertPolicy.Condition.SqlCondition.Hourly</code>
 */
class Hourly extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The number of hours between runs. Must be greater than or
     * equal to 1 hour and less than or equal to 48 hours.
     *
     * Generated from protobuf field <code>int32 periodicity = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $periodicity = 0;
    /**
     * Optional. The number of minutes after the hour (in UTC) to run the
     * query. Must be greater than or equal to 0 minutes and less than or
     * equal to 59 minutes.  If left unspecified, then an arbitrary offset
     * is used.
     *
     * Generated from protobuf field <code>optional int32 minute_offset = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $minute_offset = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $periodicity
     *           Required. The number of hours between runs. Must be greater than or
     *           equal to 1 hour and less than or equal to 48 hours.
     *     @type int $minute_offset
     *           Optional. The number of minutes after the hour (in UTC) to run the
     *           query. Must be greater than or equal to 0 minutes and less than or
     *           equal to 59 minutes.  If left unspecified, then an arbitrary offset
     *           is used.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Monitoring\V3\Alert::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The number of hours between runs. Must be greater than or
     * equal to 1 hour and less than or equal to 48 hours.
     *
     * Generated from protobuf field <code>int32 periodicity = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getPeriodicity()
    {
        return $this->periodicity;
    }

    /**
     * Required. The number of hours between runs. Must be greater than or
     * equal to 1 hour and less than or equal to 48 hours.
     *
     * Generated from protobuf field <code>int32 periodicity = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setPeriodicity($var)
    {
        GPBUtil::checkInt32($var);
        $this->periodicity = $var;

        return $this;
    }

    /**
     * Optional. The number of minutes after the hour (in UTC) to run the
     * query. Must be greater than or equal to 0 minutes and less than or
     * equal to 59 minutes.  If left unspecified, then an arbitrary offset
     * is used.
     *
     * Generated from protobuf field <code>optional int32 minute_offset = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getMinuteOffset()
    {
        return isset($this->minute_offset) ? $this->minute_offset : 0;
    }

    public function hasMinuteOffset()
    {
        return isset($this->minute_offset);
    }

    public function clearMinuteOffset()
    {
        unset($this->minute_offset);
    }

    /**
     * Optional. The number of minutes after the hour (in UTC) to run the
     * query. Must be greater than or equal to 0 minutes and less than or
     * equal to 59 minutes.  If left unspecified, then an arbitrary offset
     * is used.
     *
     * Generated from protobuf field <code>optional int32 minute_offset = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setMinuteOffset($var)
    {
        GPBUtil::checkInt32($var);
        $this->minute_offset = $var;

        return $this;
    }

}


