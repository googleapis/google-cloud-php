<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/maps/fleetengine/v1/vehicles.proto

namespace Maps\Fleetengine\V1;

use UnexpectedValueException;

/**
 * How location features are configured to behave on the mobile device when the
 * devices "battery saver" feature is on.
 * (https://developer.android.com/reference/android/os/PowerManager#getLocationPowerSaveMode())
 *
 * Protobuf type <code>maps.fleetengine.v1.LocationPowerSaveMode</code>
 */
class LocationPowerSaveMode
{
    /**
     * Undefined LocationPowerSaveMode
     *
     * Generated from protobuf enum <code>UNKNOWN_LOCATION_POWER_SAVE_MODE = 0;</code>
     */
    const UNKNOWN_LOCATION_POWER_SAVE_MODE = 0;
    /**
     * Either the location providers shouldn't be affected by battery saver, or
     * battery saver is off.
     *
     * Generated from protobuf enum <code>LOCATION_MODE_NO_CHANGE = 1;</code>
     */
    const LOCATION_MODE_NO_CHANGE = 1;
    /**
     * The GPS based location provider should be disabled when battery saver is on
     * and the device is non-interactive.
     *
     * Generated from protobuf enum <code>LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF = 2;</code>
     */
    const LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF = 2;
    /**
     * All location providers should be disabled when battery saver is on and the
     * device is non-interactive.
     *
     * Generated from protobuf enum <code>LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF = 3;</code>
     */
    const LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF = 3;
    /**
     * All the location providers will be kept available, but location fixes
     * should only be provided to foreground apps.
     *
     * Generated from protobuf enum <code>LOCATION_MODE_FOREGROUND_ONLY = 4;</code>
     */
    const LOCATION_MODE_FOREGROUND_ONLY = 4;
    /**
     * Location will not be turned off, but LocationManager will throttle all
     * requests to providers when the device is non-interactive.
     *
     * Generated from protobuf enum <code>LOCATION_MODE_THROTTLE_REQUESTS_WHEN_SCREEN_OFF = 5;</code>
     */
    const LOCATION_MODE_THROTTLE_REQUESTS_WHEN_SCREEN_OFF = 5;

    private static $valueToName = [
        self::UNKNOWN_LOCATION_POWER_SAVE_MODE => 'UNKNOWN_LOCATION_POWER_SAVE_MODE',
        self::LOCATION_MODE_NO_CHANGE => 'LOCATION_MODE_NO_CHANGE',
        self::LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF => 'LOCATION_MODE_GPS_DISABLED_WHEN_SCREEN_OFF',
        self::LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF => 'LOCATION_MODE_ALL_DISABLED_WHEN_SCREEN_OFF',
        self::LOCATION_MODE_FOREGROUND_ONLY => 'LOCATION_MODE_FOREGROUND_ONLY',
        self::LOCATION_MODE_THROTTLE_REQUESTS_WHEN_SCREEN_OFF => 'LOCATION_MODE_THROTTLE_REQUESTS_WHEN_SCREEN_OFF',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

