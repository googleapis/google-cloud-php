<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datafusion/v1/datafusion.proto

namespace Google\Cloud\DataFusion\V1\Instance;

use UnexpectedValueException;

/**
 * Represents the type of Data Fusion instance. Each type is configured with
 * the default settings for processing and memory.
 *
 * Protobuf type <code>google.cloud.datafusion.v1.Instance.Type</code>
 */
class Type
{
    /**
     * No type specified. The instance creation will fail.
     *
     * Generated from protobuf enum <code>TYPE_UNSPECIFIED = 0;</code>
     */
    const TYPE_UNSPECIFIED = 0;
    /**
     * Basic Data Fusion instance. In Basic type, the user will be able to
     * create data pipelines using point and click UI. However, there are
     * certain limitations, such as fewer number of concurrent pipelines, no
     * support for streaming pipelines, etc.
     *
     * Generated from protobuf enum <code>BASIC = 1;</code>
     */
    const BASIC = 1;
    /**
     * Enterprise Data Fusion instance. In Enterprise type, the user will have
     * all features available, such as support for streaming pipelines, higher
     * number of concurrent pipelines, etc.
     *
     * Generated from protobuf enum <code>ENTERPRISE = 2;</code>
     */
    const ENTERPRISE = 2;
    /**
     * Developer Data Fusion instance. In Developer type, the user will have all
     * features available but with restrictive capabilities. This is to help
     * enterprises design and develop their data ingestion and integration
     * pipelines at low cost.
     *
     * Generated from protobuf enum <code>DEVELOPER = 3;</code>
     */
    const DEVELOPER = 3;

    private static $valueToName = [
        self::TYPE_UNSPECIFIED => 'TYPE_UNSPECIFIED',
        self::BASIC => 'BASIC',
        self::ENTERPRISE => 'ENTERPRISE',
        self::DEVELOPER => 'DEVELOPER',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


