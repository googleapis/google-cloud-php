<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/audit/audit_log.proto

namespace Google\Cloud\Audit;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Represents OrgPolicy Violation information.
 *
 * Generated from protobuf message <code>google.cloud.audit.OrgPolicyViolationInfo</code>
 */
class OrgPolicyViolationInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Resource payload that is currently in scope and is subjected to orgpolicy
     * conditions. This payload may be the subset of the actual Resource that may
     * come in the request. This payload should not contain any core content.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct payload = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $payload = null;
    /**
     * Optional. Resource type that the orgpolicy is checked against.
     * Example: compute.googleapis.com/Instance, store.googleapis.com/bucket
     *
     * Generated from protobuf field <code>string resource_type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $resource_type = '';
    /**
     * Optional. Tags referenced on the resource at the time of evaluation. These also
     * include the federated tags, if they are supplied in the CheckOrgPolicy
     * or CheckCustomConstraints Requests.
     * Optional field as of now. These tags are the Cloud tags that are
     * available on the resource during the policy evaluation and will
     * be available as part of the OrgPolicy check response for logging purposes.
     *
     * Generated from protobuf field <code>map<string, string> resource_tags = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $resource_tags;
    /**
     * Optional. Policy violations
     *
     * Generated from protobuf field <code>repeated .google.cloud.audit.ViolationInfo violation_info = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $violation_info;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Struct $payload
     *           Optional. Resource payload that is currently in scope and is subjected to orgpolicy
     *           conditions. This payload may be the subset of the actual Resource that may
     *           come in the request. This payload should not contain any core content.
     *     @type string $resource_type
     *           Optional. Resource type that the orgpolicy is checked against.
     *           Example: compute.googleapis.com/Instance, store.googleapis.com/bucket
     *     @type array|\Google\Protobuf\Internal\MapField $resource_tags
     *           Optional. Tags referenced on the resource at the time of evaluation. These also
     *           include the federated tags, if they are supplied in the CheckOrgPolicy
     *           or CheckCustomConstraints Requests.
     *           Optional field as of now. These tags are the Cloud tags that are
     *           available on the resource during the policy evaluation and will
     *           be available as part of the OrgPolicy check response for logging purposes.
     *     @type array<\Google\Cloud\Audit\ViolationInfo>|\Google\Protobuf\Internal\RepeatedField $violation_info
     *           Optional. Policy violations
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Audit\AuditLog::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Resource payload that is currently in scope and is subjected to orgpolicy
     * conditions. This payload may be the subset of the actual Resource that may
     * come in the request. This payload should not contain any core content.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct payload = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Struct|null
     */
    public function getPayload()
    {
        return $this->payload;
    }

    public function hasPayload()
    {
        return isset($this->payload);
    }

    public function clearPayload()
    {
        unset($this->payload);
    }

    /**
     * Optional. Resource payload that is currently in scope and is subjected to orgpolicy
     * conditions. This payload may be the subset of the actual Resource that may
     * come in the request. This payload should not contain any core content.
     *
     * Generated from protobuf field <code>.google.protobuf.Struct payload = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\Struct $var
     * @return $this
     */
    public function setPayload($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Struct::class);
        $this->payload = $var;

        return $this;
    }

    /**
     * Optional. Resource type that the orgpolicy is checked against.
     * Example: compute.googleapis.com/Instance, store.googleapis.com/bucket
     *
     * Generated from protobuf field <code>string resource_type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getResourceType()
    {
        return $this->resource_type;
    }

    /**
     * Optional. Resource type that the orgpolicy is checked against.
     * Example: compute.googleapis.com/Instance, store.googleapis.com/bucket
     *
     * Generated from protobuf field <code>string resource_type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setResourceType($var)
    {
        GPBUtil::checkString($var, True);
        $this->resource_type = $var;

        return $this;
    }

    /**
     * Optional. Tags referenced on the resource at the time of evaluation. These also
     * include the federated tags, if they are supplied in the CheckOrgPolicy
     * or CheckCustomConstraints Requests.
     * Optional field as of now. These tags are the Cloud tags that are
     * available on the resource during the policy evaluation and will
     * be available as part of the OrgPolicy check response for logging purposes.
     *
     * Generated from protobuf field <code>map<string, string> resource_tags = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getResourceTags()
    {
        return $this->resource_tags;
    }

    /**
     * Optional. Tags referenced on the resource at the time of evaluation. These also
     * include the federated tags, if they are supplied in the CheckOrgPolicy
     * or CheckCustomConstraints Requests.
     * Optional field as of now. These tags are the Cloud tags that are
     * available on the resource during the policy evaluation and will
     * be available as part of the OrgPolicy check response for logging purposes.
     *
     * Generated from protobuf field <code>map<string, string> resource_tags = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setResourceTags($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->resource_tags = $arr;

        return $this;
    }

    /**
     * Optional. Policy violations
     *
     * Generated from protobuf field <code>repeated .google.cloud.audit.ViolationInfo violation_info = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getViolationInfo()
    {
        return $this->violation_info;
    }

    /**
     * Optional. Policy violations
     *
     * Generated from protobuf field <code>repeated .google.cloud.audit.ViolationInfo violation_info = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Cloud\Audit\ViolationInfo>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setViolationInfo($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\Audit\ViolationInfo::class);
        $this->violation_info = $arr;

        return $this;
    }

}

