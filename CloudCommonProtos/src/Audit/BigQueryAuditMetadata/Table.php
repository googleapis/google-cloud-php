<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/audit/bigquery_audit_metadata.proto

namespace Google\Cloud\Audit\BigQueryAuditMetadata;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * BigQuery table.
 *
 * Generated from protobuf message <code>google.cloud.audit.BigQueryAuditMetadata.Table</code>
 */
class Table extends \Google\Protobuf\Internal\Message
{
    /**
     * Table URI.
     * Format: `projects/<project_id>/datasets/<dataset_id>/tables/<table_id>`.
     *
     * Generated from protobuf field <code>string table_name = 1;</code>
     */
    protected $table_name = '';
    /**
     * User-provided metadata for the table.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.EntityInfo table_info = 10;</code>
     */
    protected $table_info = null;
    /**
     * A JSON representation of the table's schema. Entire field is truncated
     * if exceeds 40K.
     *
     * Generated from protobuf field <code>string schema_json = 3;</code>
     */
    protected $schema_json = '';
    /**
     * True if the schema_json field was truncated.
     *
     * Generated from protobuf field <code>bool schema_json_truncated = 11;</code>
     */
    protected $schema_json_truncated = false;
    /**
     * View metadata. Only present for views.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.TableViewDefinition view = 4;</code>
     */
    protected $view = null;
    /**
     * Table expiration time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 5;</code>
     */
    protected $expire_time = null;
    /**
     * The table creation time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6;</code>
     */
    protected $create_time = null;
    /**
     * The last time metadata update time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 7;</code>
     */
    protected $update_time = null;
    /**
     * The last table truncation time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp truncate_time = 8;</code>
     */
    protected $truncate_time = null;
    /**
     * Table encryption information. Set when non-default encryption is used.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo encryption = 9;</code>
     */
    protected $encryption = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $table_name
     *           Table URI.
     *           Format: `projects/<project_id>/datasets/<dataset_id>/tables/<table_id>`.
     *     @type \Google\Cloud\Audit\BigQueryAuditMetadata\EntityInfo $table_info
     *           User-provided metadata for the table.
     *     @type string $schema_json
     *           A JSON representation of the table's schema. Entire field is truncated
     *           if exceeds 40K.
     *     @type bool $schema_json_truncated
     *           True if the schema_json field was truncated.
     *     @type \Google\Cloud\Audit\BigQueryAuditMetadata\TableViewDefinition $view
     *           View metadata. Only present for views.
     *     @type \Google\Protobuf\Timestamp $expire_time
     *           Table expiration time.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           The table creation time.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           The last time metadata update time.
     *     @type \Google\Protobuf\Timestamp $truncate_time
     *           The last table truncation time.
     *     @type \Google\Cloud\Audit\BigQueryAuditMetadata\EncryptionInfo $encryption
     *           Table encryption information. Set when non-default encryption is used.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Audit\BigqueryAuditMetadata::initOnce();
        parent::__construct($data);
    }

    /**
     * Table URI.
     * Format: `projects/<project_id>/datasets/<dataset_id>/tables/<table_id>`.
     *
     * Generated from protobuf field <code>string table_name = 1;</code>
     * @return string
     */
    public function getTableName()
    {
        return $this->table_name;
    }

    /**
     * Table URI.
     * Format: `projects/<project_id>/datasets/<dataset_id>/tables/<table_id>`.
     *
     * Generated from protobuf field <code>string table_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTableName($var)
    {
        GPBUtil::checkString($var, True);
        $this->table_name = $var;

        return $this;
    }

    /**
     * User-provided metadata for the table.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.EntityInfo table_info = 10;</code>
     * @return \Google\Cloud\Audit\BigQueryAuditMetadata\EntityInfo|null
     */
    public function getTableInfo()
    {
        return $this->table_info;
    }

    public function hasTableInfo()
    {
        return isset($this->table_info);
    }

    public function clearTableInfo()
    {
        unset($this->table_info);
    }

    /**
     * User-provided metadata for the table.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.EntityInfo table_info = 10;</code>
     * @param \Google\Cloud\Audit\BigQueryAuditMetadata\EntityInfo $var
     * @return $this
     */
    public function setTableInfo($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Audit\BigQueryAuditMetadata\EntityInfo::class);
        $this->table_info = $var;

        return $this;
    }

    /**
     * A JSON representation of the table's schema. Entire field is truncated
     * if exceeds 40K.
     *
     * Generated from protobuf field <code>string schema_json = 3;</code>
     * @return string
     */
    public function getSchemaJson()
    {
        return $this->schema_json;
    }

    /**
     * A JSON representation of the table's schema. Entire field is truncated
     * if exceeds 40K.
     *
     * Generated from protobuf field <code>string schema_json = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setSchemaJson($var)
    {
        GPBUtil::checkString($var, True);
        $this->schema_json = $var;

        return $this;
    }

    /**
     * True if the schema_json field was truncated.
     *
     * Generated from protobuf field <code>bool schema_json_truncated = 11;</code>
     * @return bool
     */
    public function getSchemaJsonTruncated()
    {
        return $this->schema_json_truncated;
    }

    /**
     * True if the schema_json field was truncated.
     *
     * Generated from protobuf field <code>bool schema_json_truncated = 11;</code>
     * @param bool $var
     * @return $this
     */
    public function setSchemaJsonTruncated($var)
    {
        GPBUtil::checkBool($var);
        $this->schema_json_truncated = $var;

        return $this;
    }

    /**
     * View metadata. Only present for views.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.TableViewDefinition view = 4;</code>
     * @return \Google\Cloud\Audit\BigQueryAuditMetadata\TableViewDefinition|null
     */
    public function getView()
    {
        return $this->view;
    }

    public function hasView()
    {
        return isset($this->view);
    }

    public function clearView()
    {
        unset($this->view);
    }

    /**
     * View metadata. Only present for views.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.TableViewDefinition view = 4;</code>
     * @param \Google\Cloud\Audit\BigQueryAuditMetadata\TableViewDefinition $var
     * @return $this
     */
    public function setView($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Audit\BigQueryAuditMetadata\TableViewDefinition::class);
        $this->view = $var;

        return $this;
    }

    /**
     * Table expiration time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 5;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getExpireTime()
    {
        return $this->expire_time;
    }

    public function hasExpireTime()
    {
        return isset($this->expire_time);
    }

    public function clearExpireTime()
    {
        unset($this->expire_time);
    }

    /**
     * Table expiration time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 5;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpireTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expire_time = $var;

        return $this;
    }

    /**
     * The table creation time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * The table creation time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 6;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * The last time metadata update time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 7;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * The last time metadata update time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 7;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * The last table truncation time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp truncate_time = 8;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getTruncateTime()
    {
        return $this->truncate_time;
    }

    public function hasTruncateTime()
    {
        return isset($this->truncate_time);
    }

    public function clearTruncateTime()
    {
        unset($this->truncate_time);
    }

    /**
     * The last table truncation time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp truncate_time = 8;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setTruncateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->truncate_time = $var;

        return $this;
    }

    /**
     * Table encryption information. Set when non-default encryption is used.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo encryption = 9;</code>
     * @return \Google\Cloud\Audit\BigQueryAuditMetadata\EncryptionInfo|null
     */
    public function getEncryption()
    {
        return $this->encryption;
    }

    public function hasEncryption()
    {
        return isset($this->encryption);
    }

    public function clearEncryption()
    {
        unset($this->encryption);
    }

    /**
     * Table encryption information. Set when non-default encryption is used.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo encryption = 9;</code>
     * @param \Google\Cloud\Audit\BigQueryAuditMetadata\EncryptionInfo $var
     * @return $this
     */
    public function setEncryption($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Audit\BigQueryAuditMetadata\EncryptionInfo::class);
        $this->encryption = $var;

        return $this;
    }

}


