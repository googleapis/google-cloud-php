<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/audit/bigquery_audit_metadata.proto

namespace Google\Cloud\Audit\BigQueryAuditMetadata\JobConfig;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Table copy job configuration.
 *
 * Generated from protobuf message <code>google.cloud.audit.BigQueryAuditMetadata.JobConfig.TableCopy</code>
 */
class TableCopy extends \Google\Protobuf\Internal\Message
{
    /**
     * Source tables. Entire list is truncated if exceeds 50K.
     *
     * Generated from protobuf field <code>repeated string source_tables = 1;</code>
     */
    private $source_tables;
    /**
     * True if the source_tables field was truncated.
     *
     * Generated from protobuf field <code>bool source_tables_truncated = 6;</code>
     */
    protected $source_tables_truncated = false;
    /**
     * Destination table.
     *
     * Generated from protobuf field <code>string destination_table = 2;</code>
     */
    protected $destination_table = '';
    /**
     * Destination table create disposition.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.CreateDisposition create_disposition = 3;</code>
     */
    protected $create_disposition = 0;
    /**
     * Destination table write disposition.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.WriteDisposition write_disposition = 4;</code>
     */
    protected $write_disposition = 0;
    /**
     * Result table encryption information. Set when non-default encryption is
     * used.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo destination_table_encryption = 5;</code>
     */
    protected $destination_table_encryption = null;
    /**
     * Supported operation types in the table copy job.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.OperationType operation_type = 7;</code>
     */
    protected $operation_type = 0;
    /**
     * Expiration time set on the destination table. Expired tables will be
     * deleted and their storage reclaimed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp destination_expiration_time = 8;</code>
     */
    protected $destination_expiration_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $source_tables
     *           Source tables. Entire list is truncated if exceeds 50K.
     *     @type bool $source_tables_truncated
     *           True if the source_tables field was truncated.
     *     @type string $destination_table
     *           Destination table.
     *     @type int $create_disposition
     *           Destination table create disposition.
     *     @type int $write_disposition
     *           Destination table write disposition.
     *     @type \Google\Cloud\Audit\BigQueryAuditMetadata\EncryptionInfo $destination_table_encryption
     *           Result table encryption information. Set when non-default encryption is
     *           used.
     *     @type int $operation_type
     *           Supported operation types in the table copy job.
     *     @type \Google\Protobuf\Timestamp $destination_expiration_time
     *           Expiration time set on the destination table. Expired tables will be
     *           deleted and their storage reclaimed.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Audit\BigqueryAuditMetadata::initOnce();
        parent::__construct($data);
    }

    /**
     * Source tables. Entire list is truncated if exceeds 50K.
     *
     * Generated from protobuf field <code>repeated string source_tables = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSourceTables()
    {
        return $this->source_tables;
    }

    /**
     * Source tables. Entire list is truncated if exceeds 50K.
     *
     * Generated from protobuf field <code>repeated string source_tables = 1;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSourceTables($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->source_tables = $arr;

        return $this;
    }

    /**
     * True if the source_tables field was truncated.
     *
     * Generated from protobuf field <code>bool source_tables_truncated = 6;</code>
     * @return bool
     */
    public function getSourceTablesTruncated()
    {
        return $this->source_tables_truncated;
    }

    /**
     * True if the source_tables field was truncated.
     *
     * Generated from protobuf field <code>bool source_tables_truncated = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setSourceTablesTruncated($var)
    {
        GPBUtil::checkBool($var);
        $this->source_tables_truncated = $var;

        return $this;
    }

    /**
     * Destination table.
     *
     * Generated from protobuf field <code>string destination_table = 2;</code>
     * @return string
     */
    public function getDestinationTable()
    {
        return $this->destination_table;
    }

    /**
     * Destination table.
     *
     * Generated from protobuf field <code>string destination_table = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setDestinationTable($var)
    {
        GPBUtil::checkString($var, True);
        $this->destination_table = $var;

        return $this;
    }

    /**
     * Destination table create disposition.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.CreateDisposition create_disposition = 3;</code>
     * @return int
     */
    public function getCreateDisposition()
    {
        return $this->create_disposition;
    }

    /**
     * Destination table create disposition.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.CreateDisposition create_disposition = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setCreateDisposition($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Audit\BigQueryAuditMetadata\CreateDisposition::class);
        $this->create_disposition = $var;

        return $this;
    }

    /**
     * Destination table write disposition.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.WriteDisposition write_disposition = 4;</code>
     * @return int
     */
    public function getWriteDisposition()
    {
        return $this->write_disposition;
    }

    /**
     * Destination table write disposition.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.WriteDisposition write_disposition = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setWriteDisposition($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Audit\BigQueryAuditMetadata\WriteDisposition::class);
        $this->write_disposition = $var;

        return $this;
    }

    /**
     * Result table encryption information. Set when non-default encryption is
     * used.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo destination_table_encryption = 5;</code>
     * @return \Google\Cloud\Audit\BigQueryAuditMetadata\EncryptionInfo|null
     */
    public function getDestinationTableEncryption()
    {
        return $this->destination_table_encryption;
    }

    public function hasDestinationTableEncryption()
    {
        return isset($this->destination_table_encryption);
    }

    public function clearDestinationTableEncryption()
    {
        unset($this->destination_table_encryption);
    }

    /**
     * Result table encryption information. Set when non-default encryption is
     * used.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.EncryptionInfo destination_table_encryption = 5;</code>
     * @param \Google\Cloud\Audit\BigQueryAuditMetadata\EncryptionInfo $var
     * @return $this
     */
    public function setDestinationTableEncryption($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Audit\BigQueryAuditMetadata\EncryptionInfo::class);
        $this->destination_table_encryption = $var;

        return $this;
    }

    /**
     * Supported operation types in the table copy job.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.OperationType operation_type = 7;</code>
     * @return int
     */
    public function getOperationType()
    {
        return $this->operation_type;
    }

    /**
     * Supported operation types in the table copy job.
     *
     * Generated from protobuf field <code>.google.cloud.audit.BigQueryAuditMetadata.OperationType operation_type = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setOperationType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Audit\BigQueryAuditMetadata\OperationType::class);
        $this->operation_type = $var;

        return $this;
    }

    /**
     * Expiration time set on the destination table. Expired tables will be
     * deleted and their storage reclaimed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp destination_expiration_time = 8;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getDestinationExpirationTime()
    {
        return $this->destination_expiration_time;
    }

    public function hasDestinationExpirationTime()
    {
        return isset($this->destination_expiration_time);
    }

    public function clearDestinationExpirationTime()
    {
        unset($this->destination_expiration_time);
    }

    /**
     * Expiration time set on the destination table. Expired tables will be
     * deleted and their storage reclaimed.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp destination_expiration_time = 8;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setDestinationExpirationTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->destination_expiration_time = $var;

        return $this;
    }

}


