<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/speech/v2/locations_metadata.proto

namespace Google\Cloud\Speech\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The access metadata for a particular region. This can be applied if the org
 * policy for the given project disallows a particular region.
 *
 * Generated from protobuf message <code>google.cloud.speech.v2.AccessMetadata</code>
 */
class AccessMetadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Describes the different types of constraints that are applied.
     *
     * Generated from protobuf field <code>.google.cloud.speech.v2.AccessMetadata.ConstraintType constraint_type = 1;</code>
     */
    private $constraint_type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $constraint_type
     *           Describes the different types of constraints that are applied.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Speech\V2\LocationsMetadata::initOnce();
        parent::__construct($data);
    }

    /**
     * Describes the different types of constraints that are applied.
     *
     * Generated from protobuf field <code>.google.cloud.speech.v2.AccessMetadata.ConstraintType constraint_type = 1;</code>
     * @return int
     */
    public function getConstraintType()
    {
        return $this->constraint_type;
    }

    /**
     * Describes the different types of constraints that are applied.
     *
     * Generated from protobuf field <code>.google.cloud.speech.v2.AccessMetadata.ConstraintType constraint_type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setConstraintType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Speech\V2\AccessMetadata\ConstraintType::class);
        $this->constraint_type = $var;

        return $this;
    }

}

