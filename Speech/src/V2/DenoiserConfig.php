<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/speech/v2/cloud_speech.proto

namespace Google\Cloud\Speech\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Denoiser config. May not be supported for all models and may
 * have no effect.
 *
 * Generated from protobuf message <code>google.cloud.speech.v2.DenoiserConfig</code>
 */
class DenoiserConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Denoise audio before sending to the transcription model.
     *
     * Generated from protobuf field <code>bool denoise_audio = 1;</code>
     */
    protected $denoise_audio = false;
    /**
     * Signal-to-Noise Ratio (SNR) threshold for the denoiser. Here SNR means the
     * loudness of the speech signal. Audio with an SNR below this threshold,
     * meaning the speech is too quiet, will be prevented from being sent to the
     * transcription model.
     * If snr_threshold=0, no filtering will be applied.
     *
     * Generated from protobuf field <code>float snr_threshold = 2;</code>
     */
    protected $snr_threshold = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $denoise_audio
     *           Denoise audio before sending to the transcription model.
     *     @type float $snr_threshold
     *           Signal-to-Noise Ratio (SNR) threshold for the denoiser. Here SNR means the
     *           loudness of the speech signal. Audio with an SNR below this threshold,
     *           meaning the speech is too quiet, will be prevented from being sent to the
     *           transcription model.
     *           If snr_threshold=0, no filtering will be applied.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Speech\V2\CloudSpeech::initOnce();
        parent::__construct($data);
    }

    /**
     * Denoise audio before sending to the transcription model.
     *
     * Generated from protobuf field <code>bool denoise_audio = 1;</code>
     * @return bool
     */
    public function getDenoiseAudio()
    {
        return $this->denoise_audio;
    }

    /**
     * Denoise audio before sending to the transcription model.
     *
     * Generated from protobuf field <code>bool denoise_audio = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setDenoiseAudio($var)
    {
        GPBUtil::checkBool($var);
        $this->denoise_audio = $var;

        return $this;
    }

    /**
     * Signal-to-Noise Ratio (SNR) threshold for the denoiser. Here SNR means the
     * loudness of the speech signal. Audio with an SNR below this threshold,
     * meaning the speech is too quiet, will be prevented from being sent to the
     * transcription model.
     * If snr_threshold=0, no filtering will be applied.
     *
     * Generated from protobuf field <code>float snr_threshold = 2;</code>
     * @return float
     */
    public function getSnrThreshold()
    {
        return $this->snr_threshold;
    }

    /**
     * Signal-to-Noise Ratio (SNR) threshold for the denoiser. Here SNR means the
     * loudness of the speech signal. Audio with an SNR below this threshold,
     * meaning the speech is too quiet, will be prevented from being sent to the
     * transcription model.
     * If snr_threshold=0, no filtering will be applied.
     *
     * Generated from protobuf field <code>float snr_threshold = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setSnrThreshold($var)
    {
        GPBUtil::checkFloat($var);
        $this->snr_threshold = $var;

        return $this;
    }

}

