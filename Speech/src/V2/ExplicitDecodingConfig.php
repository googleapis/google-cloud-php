<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/speech/v2/cloud_speech.proto

namespace Google\Cloud\Speech\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Explicitly specified decoding parameters.
 *
 * Generated from protobuf message <code>google.cloud.speech.v2.ExplicitDecodingConfig</code>
 */
class ExplicitDecodingConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Encoding of the audio data sent for recognition.
     *
     * Generated from protobuf field <code>.google.cloud.speech.v2.ExplicitDecodingConfig.AudioEncoding encoding = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $encoding = 0;
    /**
     * Optional. Sample rate in Hertz of the audio data sent for recognition.
     * Valid values are: 8000-48000. 16000 is optimal. For best results, set the
     * sampling rate of the audio source to 16000 Hz. If that's not possible, use
     * the native sample rate of the audio source (instead of re-sampling).
     * Note that this field is marked as OPTIONAL for backward compatibility
     * reasons. It is (and has always been) effectively REQUIRED.
     *
     * Generated from protobuf field <code>int32 sample_rate_hertz = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $sample_rate_hertz = 0;
    /**
     * Optional. Number of channels present in the audio data sent for
     * recognition. Note that this field is marked as OPTIONAL for backward
     * compatibility reasons. It is (and has always been) effectively REQUIRED.
     * The maximum allowed value is 8.
     *
     * Generated from protobuf field <code>int32 audio_channel_count = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $audio_channel_count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $encoding
     *           Required. Encoding of the audio data sent for recognition.
     *     @type int $sample_rate_hertz
     *           Optional. Sample rate in Hertz of the audio data sent for recognition.
     *           Valid values are: 8000-48000. 16000 is optimal. For best results, set the
     *           sampling rate of the audio source to 16000 Hz. If that's not possible, use
     *           the native sample rate of the audio source (instead of re-sampling).
     *           Note that this field is marked as OPTIONAL for backward compatibility
     *           reasons. It is (and has always been) effectively REQUIRED.
     *     @type int $audio_channel_count
     *           Optional. Number of channels present in the audio data sent for
     *           recognition. Note that this field is marked as OPTIONAL for backward
     *           compatibility reasons. It is (and has always been) effectively REQUIRED.
     *           The maximum allowed value is 8.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Speech\V2\CloudSpeech::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Encoding of the audio data sent for recognition.
     *
     * Generated from protobuf field <code>.google.cloud.speech.v2.ExplicitDecodingConfig.AudioEncoding encoding = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getEncoding()
    {
        return $this->encoding;
    }

    /**
     * Required. Encoding of the audio data sent for recognition.
     *
     * Generated from protobuf field <code>.google.cloud.speech.v2.ExplicitDecodingConfig.AudioEncoding encoding = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setEncoding($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Speech\V2\ExplicitDecodingConfig\AudioEncoding::class);
        $this->encoding = $var;

        return $this;
    }

    /**
     * Optional. Sample rate in Hertz of the audio data sent for recognition.
     * Valid values are: 8000-48000. 16000 is optimal. For best results, set the
     * sampling rate of the audio source to 16000 Hz. If that's not possible, use
     * the native sample rate of the audio source (instead of re-sampling).
     * Note that this field is marked as OPTIONAL for backward compatibility
     * reasons. It is (and has always been) effectively REQUIRED.
     *
     * Generated from protobuf field <code>int32 sample_rate_hertz = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getSampleRateHertz()
    {
        return $this->sample_rate_hertz;
    }

    /**
     * Optional. Sample rate in Hertz of the audio data sent for recognition.
     * Valid values are: 8000-48000. 16000 is optimal. For best results, set the
     * sampling rate of the audio source to 16000 Hz. If that's not possible, use
     * the native sample rate of the audio source (instead of re-sampling).
     * Note that this field is marked as OPTIONAL for backward compatibility
     * reasons. It is (and has always been) effectively REQUIRED.
     *
     * Generated from protobuf field <code>int32 sample_rate_hertz = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setSampleRateHertz($var)
    {
        GPBUtil::checkInt32($var);
        $this->sample_rate_hertz = $var;

        return $this;
    }

    /**
     * Optional. Number of channels present in the audio data sent for
     * recognition. Note that this field is marked as OPTIONAL for backward
     * compatibility reasons. It is (and has always been) effectively REQUIRED.
     * The maximum allowed value is 8.
     *
     * Generated from protobuf field <code>int32 audio_channel_count = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getAudioChannelCount()
    {
        return $this->audio_channel_count;
    }

    /**
     * Optional. Number of channels present in the audio data sent for
     * recognition. Note that this field is marked as OPTIONAL for backward
     * compatibility reasons. It is (and has always been) effectively REQUIRED.
     * The maximum allowed value is 8.
     *
     * Generated from protobuf field <code>int32 audio_channel_count = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setAudioChannelCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->audio_channel_count = $var;

        return $this;
    }

}

