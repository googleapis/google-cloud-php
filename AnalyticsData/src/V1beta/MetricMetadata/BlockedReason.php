<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/analytics/data/v1beta/data.proto

namespace Google\Analytics\Data\V1beta\MetricMetadata;

use UnexpectedValueException;

/**
 * Justifications for why this metric is blocked.
 *
 * Protobuf type <code>google.analytics.data.v1beta.MetricMetadata.BlockedReason</code>
 */
class BlockedReason
{
    /**
     * Will never be specified in API response.
     *
     * Generated from protobuf enum <code>BLOCKED_REASON_UNSPECIFIED = 0;</code>
     */
    const BLOCKED_REASON_UNSPECIFIED = 0;
    /**
     * If present, your access is blocked to revenue related metrics for this
     * property, and this metric is revenue related.
     *
     * Generated from protobuf enum <code>NO_REVENUE_METRICS = 1;</code>
     */
    const NO_REVENUE_METRICS = 1;
    /**
     * If present, your access is blocked to cost related metrics for this
     * property, and this metric is cost related.
     *
     * Generated from protobuf enum <code>NO_COST_METRICS = 2;</code>
     */
    const NO_COST_METRICS = 2;

    private static $valueToName = [
        self::BLOCKED_REASON_UNSPECIFIED => 'BLOCKED_REASON_UNSPECIFIED',
        self::NO_REVENUE_METRICS => 'NO_REVENUE_METRICS',
        self::NO_COST_METRICS => 'NO_COST_METRICS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


