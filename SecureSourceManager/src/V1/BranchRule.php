<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/securesourcemanager/v1/secure_source_manager.proto

namespace Google\Cloud\SecureSourceManager\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Metadata of a BranchRule. BranchRule is the protection rule to enforce
 * pre-defined rules on desginated branches within a repository.
 *
 * Generated from protobuf message <code>google.cloud.securesourcemanager.v1.BranchRule</code>
 */
class BranchRule extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. A unique identifier for a BranchRule. The name should be of the
     * format:
     * `projects/{project}/locations/{location}/repositories/{repository}/branchRules/{branch_rule}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $name = '';
    /**
     * Output only. Unique identifier of the repository.
     *
     * Generated from protobuf field <code>string uid = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $uid = '';
    /**
     * Output only. Create timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $create_time = null;
    /**
     * Output only. Update timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $update_time = null;
    /**
     * Optional. User annotations. These attributes can only be set and used by
     * the user. See https://google.aip.dev/128#annotations for more details such
     * as format and size limitations.
     *
     * Generated from protobuf field <code>map<string, string> annotations = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $annotations;
    /**
     * Optional. This checksum is computed by the server based on the value of
     * other fields, and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     *
     * Generated from protobuf field <code>string etag = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $etag = '';
    /**
     * Optional. The pattern of the branch that can match to this BranchRule.
     * Specified as regex.
     * .* for all branches. Examples: main, (main|release.*).
     * Current MVP phase only support `.*` for wildcard.
     *
     * Generated from protobuf field <code>string include_pattern = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $include_pattern = '';
    /**
     * Optional. Determines if the branch rule is disabled or not.
     *
     * Generated from protobuf field <code>bool disabled = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $disabled = false;
    /**
     * Optional. Determines if the branch rule requires a pull request or not.
     *
     * Generated from protobuf field <code>bool require_pull_request = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $require_pull_request = false;
    /**
     * Optional. The minimum number of reviews required for the branch rule to be
     * matched.
     *
     * Generated from protobuf field <code>int32 minimum_reviews_count = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $minimum_reviews_count = 0;
    /**
     * Optional. The minimum number of approvals required for the branch rule to
     * be matched.
     *
     * Generated from protobuf field <code>int32 minimum_approvals_count = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $minimum_approvals_count = 0;
    /**
     * Optional. Determines if require comments resolved before merging to the
     * branch.
     *
     * Generated from protobuf field <code>bool require_comments_resolved = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $require_comments_resolved = false;
    /**
     * Optional. Determines if allow stale reviews or approvals before merging to
     * the branch.
     *
     * Generated from protobuf field <code>bool allow_stale_reviews = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $allow_stale_reviews = false;
    /**
     * Optional. Determines if require linear history before merging to the
     * branch.
     *
     * Generated from protobuf field <code>bool require_linear_history = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $require_linear_history = false;
    /**
     * Optional. List of required status checks before merging to the branch.
     *
     * Generated from protobuf field <code>repeated .google.cloud.securesourcemanager.v1.BranchRule.Check required_status_checks = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $required_status_checks;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Optional. A unique identifier for a BranchRule. The name should be of the
     *           format:
     *           `projects/{project}/locations/{location}/repositories/{repository}/branchRules/{branch_rule}`
     *     @type string $uid
     *           Output only. Unique identifier of the repository.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. Create timestamp.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. Update timestamp.
     *     @type array|\Google\Protobuf\Internal\MapField $annotations
     *           Optional. User annotations. These attributes can only be set and used by
     *           the user. See https://google.aip.dev/128#annotations for more details such
     *           as format and size limitations.
     *     @type string $etag
     *           Optional. This checksum is computed by the server based on the value of
     *           other fields, and may be sent on update and delete requests to ensure the
     *           client has an up-to-date value before proceeding.
     *     @type string $include_pattern
     *           Optional. The pattern of the branch that can match to this BranchRule.
     *           Specified as regex.
     *           .* for all branches. Examples: main, (main|release.*).
     *           Current MVP phase only support `.*` for wildcard.
     *     @type bool $disabled
     *           Optional. Determines if the branch rule is disabled or not.
     *     @type bool $require_pull_request
     *           Optional. Determines if the branch rule requires a pull request or not.
     *     @type int $minimum_reviews_count
     *           Optional. The minimum number of reviews required for the branch rule to be
     *           matched.
     *     @type int $minimum_approvals_count
     *           Optional. The minimum number of approvals required for the branch rule to
     *           be matched.
     *     @type bool $require_comments_resolved
     *           Optional. Determines if require comments resolved before merging to the
     *           branch.
     *     @type bool $allow_stale_reviews
     *           Optional. Determines if allow stale reviews or approvals before merging to
     *           the branch.
     *     @type bool $require_linear_history
     *           Optional. Determines if require linear history before merging to the
     *           branch.
     *     @type array<\Google\Cloud\SecureSourceManager\V1\BranchRule\Check>|\Google\Protobuf\Internal\RepeatedField $required_status_checks
     *           Optional. List of required status checks before merging to the branch.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Securesourcemanager\V1\SecureSourceManager::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. A unique identifier for a BranchRule. The name should be of the
     * format:
     * `projects/{project}/locations/{location}/repositories/{repository}/branchRules/{branch_rule}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Optional. A unique identifier for a BranchRule. The name should be of the
     * format:
     * `projects/{project}/locations/{location}/repositories/{repository}/branchRules/{branch_rule}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Output only. Unique identifier of the repository.
     *
     * Generated from protobuf field <code>string uid = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getUid()
    {
        return $this->uid;
    }

    /**
     * Output only. Unique identifier of the repository.
     *
     * Generated from protobuf field <code>string uid = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uid = $var;

        return $this;
    }

    /**
     * Output only. Create timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. Create timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * Output only. Update timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. Update timestamp.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Optional. User annotations. These attributes can only be set and used by
     * the user. See https://google.aip.dev/128#annotations for more details such
     * as format and size limitations.
     *
     * Generated from protobuf field <code>map<string, string> annotations = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getAnnotations()
    {
        return $this->annotations;
    }

    /**
     * Optional. User annotations. These attributes can only be set and used by
     * the user. See https://google.aip.dev/128#annotations for more details such
     * as format and size limitations.
     *
     * Generated from protobuf field <code>map<string, string> annotations = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setAnnotations($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->annotations = $arr;

        return $this;
    }

    /**
     * Optional. This checksum is computed by the server based on the value of
     * other fields, and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     *
     * Generated from protobuf field <code>string etag = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getEtag()
    {
        return $this->etag;
    }

    /**
     * Optional. This checksum is computed by the server based on the value of
     * other fields, and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     *
     * Generated from protobuf field <code>string etag = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setEtag($var)
    {
        GPBUtil::checkString($var, True);
        $this->etag = $var;

        return $this;
    }

    /**
     * Optional. The pattern of the branch that can match to this BranchRule.
     * Specified as regex.
     * .* for all branches. Examples: main, (main|release.*).
     * Current MVP phase only support `.*` for wildcard.
     *
     * Generated from protobuf field <code>string include_pattern = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getIncludePattern()
    {
        return $this->include_pattern;
    }

    /**
     * Optional. The pattern of the branch that can match to this BranchRule.
     * Specified as regex.
     * .* for all branches. Examples: main, (main|release.*).
     * Current MVP phase only support `.*` for wildcard.
     *
     * Generated from protobuf field <code>string include_pattern = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setIncludePattern($var)
    {
        GPBUtil::checkString($var, True);
        $this->include_pattern = $var;

        return $this;
    }

    /**
     * Optional. Determines if the branch rule is disabled or not.
     *
     * Generated from protobuf field <code>bool disabled = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getDisabled()
    {
        return $this->disabled;
    }

    /**
     * Optional. Determines if the branch rule is disabled or not.
     *
     * Generated from protobuf field <code>bool disabled = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setDisabled($var)
    {
        GPBUtil::checkBool($var);
        $this->disabled = $var;

        return $this;
    }

    /**
     * Optional. Determines if the branch rule requires a pull request or not.
     *
     * Generated from protobuf field <code>bool require_pull_request = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getRequirePullRequest()
    {
        return $this->require_pull_request;
    }

    /**
     * Optional. Determines if the branch rule requires a pull request or not.
     *
     * Generated from protobuf field <code>bool require_pull_request = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setRequirePullRequest($var)
    {
        GPBUtil::checkBool($var);
        $this->require_pull_request = $var;

        return $this;
    }

    /**
     * Optional. The minimum number of reviews required for the branch rule to be
     * matched.
     *
     * Generated from protobuf field <code>int32 minimum_reviews_count = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getMinimumReviewsCount()
    {
        return $this->minimum_reviews_count;
    }

    /**
     * Optional. The minimum number of reviews required for the branch rule to be
     * matched.
     *
     * Generated from protobuf field <code>int32 minimum_reviews_count = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setMinimumReviewsCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->minimum_reviews_count = $var;

        return $this;
    }

    /**
     * Optional. The minimum number of approvals required for the branch rule to
     * be matched.
     *
     * Generated from protobuf field <code>int32 minimum_approvals_count = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getMinimumApprovalsCount()
    {
        return $this->minimum_approvals_count;
    }

    /**
     * Optional. The minimum number of approvals required for the branch rule to
     * be matched.
     *
     * Generated from protobuf field <code>int32 minimum_approvals_count = 11 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setMinimumApprovalsCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->minimum_approvals_count = $var;

        return $this;
    }

    /**
     * Optional. Determines if require comments resolved before merging to the
     * branch.
     *
     * Generated from protobuf field <code>bool require_comments_resolved = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getRequireCommentsResolved()
    {
        return $this->require_comments_resolved;
    }

    /**
     * Optional. Determines if require comments resolved before merging to the
     * branch.
     *
     * Generated from protobuf field <code>bool require_comments_resolved = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setRequireCommentsResolved($var)
    {
        GPBUtil::checkBool($var);
        $this->require_comments_resolved = $var;

        return $this;
    }

    /**
     * Optional. Determines if allow stale reviews or approvals before merging to
     * the branch.
     *
     * Generated from protobuf field <code>bool allow_stale_reviews = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getAllowStaleReviews()
    {
        return $this->allow_stale_reviews;
    }

    /**
     * Optional. Determines if allow stale reviews or approvals before merging to
     * the branch.
     *
     * Generated from protobuf field <code>bool allow_stale_reviews = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setAllowStaleReviews($var)
    {
        GPBUtil::checkBool($var);
        $this->allow_stale_reviews = $var;

        return $this;
    }

    /**
     * Optional. Determines if require linear history before merging to the
     * branch.
     *
     * Generated from protobuf field <code>bool require_linear_history = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getRequireLinearHistory()
    {
        return $this->require_linear_history;
    }

    /**
     * Optional. Determines if require linear history before merging to the
     * branch.
     *
     * Generated from protobuf field <code>bool require_linear_history = 13 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setRequireLinearHistory($var)
    {
        GPBUtil::checkBool($var);
        $this->require_linear_history = $var;

        return $this;
    }

    /**
     * Optional. List of required status checks before merging to the branch.
     *
     * Generated from protobuf field <code>repeated .google.cloud.securesourcemanager.v1.BranchRule.Check required_status_checks = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRequiredStatusChecks()
    {
        return $this->required_status_checks;
    }

    /**
     * Optional. List of required status checks before merging to the branch.
     *
     * Generated from protobuf field <code>repeated .google.cloud.securesourcemanager.v1.BranchRule.Check required_status_checks = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Cloud\SecureSourceManager\V1\BranchRule\Check>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRequiredStatusChecks($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\SecureSourceManager\V1\BranchRule\Check::class);
        $this->required_status_checks = $arr;

        return $this;
    }

}

