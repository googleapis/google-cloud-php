<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storagetransfer/v1/transfer_types.proto

namespace Google\Cloud\StorageTransfer\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A collection of counters that report the progress of a transfer operation.
 *
 * Generated from protobuf message <code>google.storagetransfer.v1.TransferCounters</code>
 */
class TransferCounters extends \Google\Protobuf\Internal\Message
{
    /**
     * Objects found in the data source that are scheduled to be transferred,
     * excluding any that are filtered based on object conditions or skipped due
     * to sync.
     *
     * Generated from protobuf field <code>int64 objects_found_from_source = 1;</code>
     */
    private $objects_found_from_source = 0;
    /**
     * Bytes found in the data source that are scheduled to be transferred,
     * excluding any that are filtered based on object conditions or skipped due
     * to sync.
     *
     * Generated from protobuf field <code>int64 bytes_found_from_source = 2;</code>
     */
    private $bytes_found_from_source = 0;
    /**
     * Objects found only in the data sink that are scheduled to be deleted.
     *
     * Generated from protobuf field <code>int64 objects_found_only_from_sink = 3;</code>
     */
    private $objects_found_only_from_sink = 0;
    /**
     * Bytes found only in the data sink that are scheduled to be deleted.
     *
     * Generated from protobuf field <code>int64 bytes_found_only_from_sink = 4;</code>
     */
    private $bytes_found_only_from_sink = 0;
    /**
     * Objects in the data source that are not transferred because they already
     * exist in the data sink.
     *
     * Generated from protobuf field <code>int64 objects_from_source_skipped_by_sync = 5;</code>
     */
    private $objects_from_source_skipped_by_sync = 0;
    /**
     * Bytes in the data source that are not transferred because they already
     * exist in the data sink.
     *
     * Generated from protobuf field <code>int64 bytes_from_source_skipped_by_sync = 6;</code>
     */
    private $bytes_from_source_skipped_by_sync = 0;
    /**
     * Objects that are copied to the data sink.
     *
     * Generated from protobuf field <code>int64 objects_copied_to_sink = 7;</code>
     */
    private $objects_copied_to_sink = 0;
    /**
     * Bytes that are copied to the data sink.
     *
     * Generated from protobuf field <code>int64 bytes_copied_to_sink = 8;</code>
     */
    private $bytes_copied_to_sink = 0;
    /**
     * Objects that are deleted from the data source.
     *
     * Generated from protobuf field <code>int64 objects_deleted_from_source = 9;</code>
     */
    private $objects_deleted_from_source = 0;
    /**
     * Bytes that are deleted from the data source.
     *
     * Generated from protobuf field <code>int64 bytes_deleted_from_source = 10;</code>
     */
    private $bytes_deleted_from_source = 0;
    /**
     * Objects that are deleted from the data sink.
     *
     * Generated from protobuf field <code>int64 objects_deleted_from_sink = 11;</code>
     */
    private $objects_deleted_from_sink = 0;
    /**
     * Bytes that are deleted from the data sink.
     *
     * Generated from protobuf field <code>int64 bytes_deleted_from_sink = 12;</code>
     */
    private $bytes_deleted_from_sink = 0;
    /**
     * Objects in the data source that failed to be transferred or that failed
     * to be deleted after being transferred.
     *
     * Generated from protobuf field <code>int64 objects_from_source_failed = 13;</code>
     */
    private $objects_from_source_failed = 0;
    /**
     * Bytes in the data source that failed to be transferred or that failed to
     * be deleted after being transferred.
     *
     * Generated from protobuf field <code>int64 bytes_from_source_failed = 14;</code>
     */
    private $bytes_from_source_failed = 0;
    /**
     * Objects that failed to be deleted from the data sink.
     *
     * Generated from protobuf field <code>int64 objects_failed_to_delete_from_sink = 15;</code>
     */
    private $objects_failed_to_delete_from_sink = 0;
    /**
     * Bytes that failed to be deleted from the data sink.
     *
     * Generated from protobuf field <code>int64 bytes_failed_to_delete_from_sink = 16;</code>
     */
    private $bytes_failed_to_delete_from_sink = 0;
    /**
     * For transfers involving PosixFilesystem only.
     * Number of directories found while listing. For example, if the root
     * directory of the transfer is `base/` and there are two other directories,
     * `a/` and `b/` under this directory, the count after listing `base/`,
     * `base/a/` and `base/b/` is 3.
     *
     * Generated from protobuf field <code>int64 directories_found_from_source = 17;</code>
     */
    private $directories_found_from_source = 0;
    /**
     * For transfers involving PosixFilesystem only.
     * Number of listing failures for each directory found at the source.
     * Potential failures when listing a directory include permission failure or
     * block failure. If listing a directory fails, no files in the directory are
     * transferred.
     *
     * Generated from protobuf field <code>int64 directories_failed_to_list_from_source = 18;</code>
     */
    private $directories_failed_to_list_from_source = 0;
    /**
     * For transfers involving PosixFilesystem only.
     * Number of successful listings for each directory found at the source.
     *
     * Generated from protobuf field <code>int64 directories_successfully_listed_from_source = 19;</code>
     */
    private $directories_successfully_listed_from_source = 0;
    /**
     * Number of successfully cleaned up intermediate objects.
     *
     * Generated from protobuf field <code>int64 intermediate_objects_cleaned_up = 22;</code>
     */
    private $intermediate_objects_cleaned_up = 0;
    /**
     * Number of intermediate objects failed cleaned up.
     *
     * Generated from protobuf field <code>int64 intermediate_objects_failed_cleaned_up = 23;</code>
     */
    private $intermediate_objects_failed_cleaned_up = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $objects_found_from_source
     *           Objects found in the data source that are scheduled to be transferred,
     *           excluding any that are filtered based on object conditions or skipped due
     *           to sync.
     *     @type int|string $bytes_found_from_source
     *           Bytes found in the data source that are scheduled to be transferred,
     *           excluding any that are filtered based on object conditions or skipped due
     *           to sync.
     *     @type int|string $objects_found_only_from_sink
     *           Objects found only in the data sink that are scheduled to be deleted.
     *     @type int|string $bytes_found_only_from_sink
     *           Bytes found only in the data sink that are scheduled to be deleted.
     *     @type int|string $objects_from_source_skipped_by_sync
     *           Objects in the data source that are not transferred because they already
     *           exist in the data sink.
     *     @type int|string $bytes_from_source_skipped_by_sync
     *           Bytes in the data source that are not transferred because they already
     *           exist in the data sink.
     *     @type int|string $objects_copied_to_sink
     *           Objects that are copied to the data sink.
     *     @type int|string $bytes_copied_to_sink
     *           Bytes that are copied to the data sink.
     *     @type int|string $objects_deleted_from_source
     *           Objects that are deleted from the data source.
     *     @type int|string $bytes_deleted_from_source
     *           Bytes that are deleted from the data source.
     *     @type int|string $objects_deleted_from_sink
     *           Objects that are deleted from the data sink.
     *     @type int|string $bytes_deleted_from_sink
     *           Bytes that are deleted from the data sink.
     *     @type int|string $objects_from_source_failed
     *           Objects in the data source that failed to be transferred or that failed
     *           to be deleted after being transferred.
     *     @type int|string $bytes_from_source_failed
     *           Bytes in the data source that failed to be transferred or that failed to
     *           be deleted after being transferred.
     *     @type int|string $objects_failed_to_delete_from_sink
     *           Objects that failed to be deleted from the data sink.
     *     @type int|string $bytes_failed_to_delete_from_sink
     *           Bytes that failed to be deleted from the data sink.
     *     @type int|string $directories_found_from_source
     *           For transfers involving PosixFilesystem only.
     *           Number of directories found while listing. For example, if the root
     *           directory of the transfer is `base/` and there are two other directories,
     *           `a/` and `b/` under this directory, the count after listing `base/`,
     *           `base/a/` and `base/b/` is 3.
     *     @type int|string $directories_failed_to_list_from_source
     *           For transfers involving PosixFilesystem only.
     *           Number of listing failures for each directory found at the source.
     *           Potential failures when listing a directory include permission failure or
     *           block failure. If listing a directory fails, no files in the directory are
     *           transferred.
     *     @type int|string $directories_successfully_listed_from_source
     *           For transfers involving PosixFilesystem only.
     *           Number of successful listings for each directory found at the source.
     *     @type int|string $intermediate_objects_cleaned_up
     *           Number of successfully cleaned up intermediate objects.
     *     @type int|string $intermediate_objects_failed_cleaned_up
     *           Number of intermediate objects failed cleaned up.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Storagetransfer\V1\TransferTypes::initOnce();
        parent::__construct($data);
    }

    /**
     * Objects found in the data source that are scheduled to be transferred,
     * excluding any that are filtered based on object conditions or skipped due
     * to sync.
     *
     * Generated from protobuf field <code>int64 objects_found_from_source = 1;</code>
     * @return int|string
     */
    public function getObjectsFoundFromSource()
    {
        return $this->objects_found_from_source;
    }

    /**
     * Objects found in the data source that are scheduled to be transferred,
     * excluding any that are filtered based on object conditions or skipped due
     * to sync.
     *
     * Generated from protobuf field <code>int64 objects_found_from_source = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setObjectsFoundFromSource($var)
    {
        GPBUtil::checkInt64($var);
        $this->objects_found_from_source = $var;

        return $this;
    }

    /**
     * Bytes found in the data source that are scheduled to be transferred,
     * excluding any that are filtered based on object conditions or skipped due
     * to sync.
     *
     * Generated from protobuf field <code>int64 bytes_found_from_source = 2;</code>
     * @return int|string
     */
    public function getBytesFoundFromSource()
    {
        return $this->bytes_found_from_source;
    }

    /**
     * Bytes found in the data source that are scheduled to be transferred,
     * excluding any that are filtered based on object conditions or skipped due
     * to sync.
     *
     * Generated from protobuf field <code>int64 bytes_found_from_source = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBytesFoundFromSource($var)
    {
        GPBUtil::checkInt64($var);
        $this->bytes_found_from_source = $var;

        return $this;
    }

    /**
     * Objects found only in the data sink that are scheduled to be deleted.
     *
     * Generated from protobuf field <code>int64 objects_found_only_from_sink = 3;</code>
     * @return int|string
     */
    public function getObjectsFoundOnlyFromSink()
    {
        return $this->objects_found_only_from_sink;
    }

    /**
     * Objects found only in the data sink that are scheduled to be deleted.
     *
     * Generated from protobuf field <code>int64 objects_found_only_from_sink = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setObjectsFoundOnlyFromSink($var)
    {
        GPBUtil::checkInt64($var);
        $this->objects_found_only_from_sink = $var;

        return $this;
    }

    /**
     * Bytes found only in the data sink that are scheduled to be deleted.
     *
     * Generated from protobuf field <code>int64 bytes_found_only_from_sink = 4;</code>
     * @return int|string
     */
    public function getBytesFoundOnlyFromSink()
    {
        return $this->bytes_found_only_from_sink;
    }

    /**
     * Bytes found only in the data sink that are scheduled to be deleted.
     *
     * Generated from protobuf field <code>int64 bytes_found_only_from_sink = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBytesFoundOnlyFromSink($var)
    {
        GPBUtil::checkInt64($var);
        $this->bytes_found_only_from_sink = $var;

        return $this;
    }

    /**
     * Objects in the data source that are not transferred because they already
     * exist in the data sink.
     *
     * Generated from protobuf field <code>int64 objects_from_source_skipped_by_sync = 5;</code>
     * @return int|string
     */
    public function getObjectsFromSourceSkippedBySync()
    {
        return $this->objects_from_source_skipped_by_sync;
    }

    /**
     * Objects in the data source that are not transferred because they already
     * exist in the data sink.
     *
     * Generated from protobuf field <code>int64 objects_from_source_skipped_by_sync = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setObjectsFromSourceSkippedBySync($var)
    {
        GPBUtil::checkInt64($var);
        $this->objects_from_source_skipped_by_sync = $var;

        return $this;
    }

    /**
     * Bytes in the data source that are not transferred because they already
     * exist in the data sink.
     *
     * Generated from protobuf field <code>int64 bytes_from_source_skipped_by_sync = 6;</code>
     * @return int|string
     */
    public function getBytesFromSourceSkippedBySync()
    {
        return $this->bytes_from_source_skipped_by_sync;
    }

    /**
     * Bytes in the data source that are not transferred because they already
     * exist in the data sink.
     *
     * Generated from protobuf field <code>int64 bytes_from_source_skipped_by_sync = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBytesFromSourceSkippedBySync($var)
    {
        GPBUtil::checkInt64($var);
        $this->bytes_from_source_skipped_by_sync = $var;

        return $this;
    }

    /**
     * Objects that are copied to the data sink.
     *
     * Generated from protobuf field <code>int64 objects_copied_to_sink = 7;</code>
     * @return int|string
     */
    public function getObjectsCopiedToSink()
    {
        return $this->objects_copied_to_sink;
    }

    /**
     * Objects that are copied to the data sink.
     *
     * Generated from protobuf field <code>int64 objects_copied_to_sink = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setObjectsCopiedToSink($var)
    {
        GPBUtil::checkInt64($var);
        $this->objects_copied_to_sink = $var;

        return $this;
    }

    /**
     * Bytes that are copied to the data sink.
     *
     * Generated from protobuf field <code>int64 bytes_copied_to_sink = 8;</code>
     * @return int|string
     */
    public function getBytesCopiedToSink()
    {
        return $this->bytes_copied_to_sink;
    }

    /**
     * Bytes that are copied to the data sink.
     *
     * Generated from protobuf field <code>int64 bytes_copied_to_sink = 8;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBytesCopiedToSink($var)
    {
        GPBUtil::checkInt64($var);
        $this->bytes_copied_to_sink = $var;

        return $this;
    }

    /**
     * Objects that are deleted from the data source.
     *
     * Generated from protobuf field <code>int64 objects_deleted_from_source = 9;</code>
     * @return int|string
     */
    public function getObjectsDeletedFromSource()
    {
        return $this->objects_deleted_from_source;
    }

    /**
     * Objects that are deleted from the data source.
     *
     * Generated from protobuf field <code>int64 objects_deleted_from_source = 9;</code>
     * @param int|string $var
     * @return $this
     */
    public function setObjectsDeletedFromSource($var)
    {
        GPBUtil::checkInt64($var);
        $this->objects_deleted_from_source = $var;

        return $this;
    }

    /**
     * Bytes that are deleted from the data source.
     *
     * Generated from protobuf field <code>int64 bytes_deleted_from_source = 10;</code>
     * @return int|string
     */
    public function getBytesDeletedFromSource()
    {
        return $this->bytes_deleted_from_source;
    }

    /**
     * Bytes that are deleted from the data source.
     *
     * Generated from protobuf field <code>int64 bytes_deleted_from_source = 10;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBytesDeletedFromSource($var)
    {
        GPBUtil::checkInt64($var);
        $this->bytes_deleted_from_source = $var;

        return $this;
    }

    /**
     * Objects that are deleted from the data sink.
     *
     * Generated from protobuf field <code>int64 objects_deleted_from_sink = 11;</code>
     * @return int|string
     */
    public function getObjectsDeletedFromSink()
    {
        return $this->objects_deleted_from_sink;
    }

    /**
     * Objects that are deleted from the data sink.
     *
     * Generated from protobuf field <code>int64 objects_deleted_from_sink = 11;</code>
     * @param int|string $var
     * @return $this
     */
    public function setObjectsDeletedFromSink($var)
    {
        GPBUtil::checkInt64($var);
        $this->objects_deleted_from_sink = $var;

        return $this;
    }

    /**
     * Bytes that are deleted from the data sink.
     *
     * Generated from protobuf field <code>int64 bytes_deleted_from_sink = 12;</code>
     * @return int|string
     */
    public function getBytesDeletedFromSink()
    {
        return $this->bytes_deleted_from_sink;
    }

    /**
     * Bytes that are deleted from the data sink.
     *
     * Generated from protobuf field <code>int64 bytes_deleted_from_sink = 12;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBytesDeletedFromSink($var)
    {
        GPBUtil::checkInt64($var);
        $this->bytes_deleted_from_sink = $var;

        return $this;
    }

    /**
     * Objects in the data source that failed to be transferred or that failed
     * to be deleted after being transferred.
     *
     * Generated from protobuf field <code>int64 objects_from_source_failed = 13;</code>
     * @return int|string
     */
    public function getObjectsFromSourceFailed()
    {
        return $this->objects_from_source_failed;
    }

    /**
     * Objects in the data source that failed to be transferred or that failed
     * to be deleted after being transferred.
     *
     * Generated from protobuf field <code>int64 objects_from_source_failed = 13;</code>
     * @param int|string $var
     * @return $this
     */
    public function setObjectsFromSourceFailed($var)
    {
        GPBUtil::checkInt64($var);
        $this->objects_from_source_failed = $var;

        return $this;
    }

    /**
     * Bytes in the data source that failed to be transferred or that failed to
     * be deleted after being transferred.
     *
     * Generated from protobuf field <code>int64 bytes_from_source_failed = 14;</code>
     * @return int|string
     */
    public function getBytesFromSourceFailed()
    {
        return $this->bytes_from_source_failed;
    }

    /**
     * Bytes in the data source that failed to be transferred or that failed to
     * be deleted after being transferred.
     *
     * Generated from protobuf field <code>int64 bytes_from_source_failed = 14;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBytesFromSourceFailed($var)
    {
        GPBUtil::checkInt64($var);
        $this->bytes_from_source_failed = $var;

        return $this;
    }

    /**
     * Objects that failed to be deleted from the data sink.
     *
     * Generated from protobuf field <code>int64 objects_failed_to_delete_from_sink = 15;</code>
     * @return int|string
     */
    public function getObjectsFailedToDeleteFromSink()
    {
        return $this->objects_failed_to_delete_from_sink;
    }

    /**
     * Objects that failed to be deleted from the data sink.
     *
     * Generated from protobuf field <code>int64 objects_failed_to_delete_from_sink = 15;</code>
     * @param int|string $var
     * @return $this
     */
    public function setObjectsFailedToDeleteFromSink($var)
    {
        GPBUtil::checkInt64($var);
        $this->objects_failed_to_delete_from_sink = $var;

        return $this;
    }

    /**
     * Bytes that failed to be deleted from the data sink.
     *
     * Generated from protobuf field <code>int64 bytes_failed_to_delete_from_sink = 16;</code>
     * @return int|string
     */
    public function getBytesFailedToDeleteFromSink()
    {
        return $this->bytes_failed_to_delete_from_sink;
    }

    /**
     * Bytes that failed to be deleted from the data sink.
     *
     * Generated from protobuf field <code>int64 bytes_failed_to_delete_from_sink = 16;</code>
     * @param int|string $var
     * @return $this
     */
    public function setBytesFailedToDeleteFromSink($var)
    {
        GPBUtil::checkInt64($var);
        $this->bytes_failed_to_delete_from_sink = $var;

        return $this;
    }

    /**
     * For transfers involving PosixFilesystem only.
     * Number of directories found while listing. For example, if the root
     * directory of the transfer is `base/` and there are two other directories,
     * `a/` and `b/` under this directory, the count after listing `base/`,
     * `base/a/` and `base/b/` is 3.
     *
     * Generated from protobuf field <code>int64 directories_found_from_source = 17;</code>
     * @return int|string
     */
    public function getDirectoriesFoundFromSource()
    {
        return $this->directories_found_from_source;
    }

    /**
     * For transfers involving PosixFilesystem only.
     * Number of directories found while listing. For example, if the root
     * directory of the transfer is `base/` and there are two other directories,
     * `a/` and `b/` under this directory, the count after listing `base/`,
     * `base/a/` and `base/b/` is 3.
     *
     * Generated from protobuf field <code>int64 directories_found_from_source = 17;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDirectoriesFoundFromSource($var)
    {
        GPBUtil::checkInt64($var);
        $this->directories_found_from_source = $var;

        return $this;
    }

    /**
     * For transfers involving PosixFilesystem only.
     * Number of listing failures for each directory found at the source.
     * Potential failures when listing a directory include permission failure or
     * block failure. If listing a directory fails, no files in the directory are
     * transferred.
     *
     * Generated from protobuf field <code>int64 directories_failed_to_list_from_source = 18;</code>
     * @return int|string
     */
    public function getDirectoriesFailedToListFromSource()
    {
        return $this->directories_failed_to_list_from_source;
    }

    /**
     * For transfers involving PosixFilesystem only.
     * Number of listing failures for each directory found at the source.
     * Potential failures when listing a directory include permission failure or
     * block failure. If listing a directory fails, no files in the directory are
     * transferred.
     *
     * Generated from protobuf field <code>int64 directories_failed_to_list_from_source = 18;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDirectoriesFailedToListFromSource($var)
    {
        GPBUtil::checkInt64($var);
        $this->directories_failed_to_list_from_source = $var;

        return $this;
    }

    /**
     * For transfers involving PosixFilesystem only.
     * Number of successful listings for each directory found at the source.
     *
     * Generated from protobuf field <code>int64 directories_successfully_listed_from_source = 19;</code>
     * @return int|string
     */
    public function getDirectoriesSuccessfullyListedFromSource()
    {
        return $this->directories_successfully_listed_from_source;
    }

    /**
     * For transfers involving PosixFilesystem only.
     * Number of successful listings for each directory found at the source.
     *
     * Generated from protobuf field <code>int64 directories_successfully_listed_from_source = 19;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDirectoriesSuccessfullyListedFromSource($var)
    {
        GPBUtil::checkInt64($var);
        $this->directories_successfully_listed_from_source = $var;

        return $this;
    }

    /**
     * Number of successfully cleaned up intermediate objects.
     *
     * Generated from protobuf field <code>int64 intermediate_objects_cleaned_up = 22;</code>
     * @return int|string
     */
    public function getIntermediateObjectsCleanedUp()
    {
        return $this->intermediate_objects_cleaned_up;
    }

    /**
     * Number of successfully cleaned up intermediate objects.
     *
     * Generated from protobuf field <code>int64 intermediate_objects_cleaned_up = 22;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIntermediateObjectsCleanedUp($var)
    {
        GPBUtil::checkInt64($var);
        $this->intermediate_objects_cleaned_up = $var;

        return $this;
    }

    /**
     * Number of intermediate objects failed cleaned up.
     *
     * Generated from protobuf field <code>int64 intermediate_objects_failed_cleaned_up = 23;</code>
     * @return int|string
     */
    public function getIntermediateObjectsFailedCleanedUp()
    {
        return $this->intermediate_objects_failed_cleaned_up;
    }

    /**
     * Number of intermediate objects failed cleaned up.
     *
     * Generated from protobuf field <code>int64 intermediate_objects_failed_cleaned_up = 23;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIntermediateObjectsFailedCleanedUp($var)
    {
        GPBUtil::checkInt64($var);
        $this->intermediate_objects_failed_cleaned_up = $var;

        return $this;
    }

}

