<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/oracledatabase/v1/db_system.proto

namespace Google\Cloud\OracleDatabase\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Data collection options for DbSystem.
 *
 * Generated from protobuf message <code>google.cloud.oracledatabase.v1.DataCollectionOptionsDbSystem</code>
 */
class DataCollectionOptionsDbSystem extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Indicates whether to enable data collection for diagnostics.
     *
     * Generated from protobuf field <code>bool is_diagnostics_events_enabled = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $is_diagnostics_events_enabled = false;
    /**
     * Optional. Indicates whether to enable incident logs and trace collection.
     *
     * Generated from protobuf field <code>bool is_incident_logs_enabled = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $is_incident_logs_enabled = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $is_diagnostics_events_enabled
     *           Optional. Indicates whether to enable data collection for diagnostics.
     *     @type bool $is_incident_logs_enabled
     *           Optional. Indicates whether to enable incident logs and trace collection.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Oracledatabase\V1\DbSystem::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Indicates whether to enable data collection for diagnostics.
     *
     * Generated from protobuf field <code>bool is_diagnostics_events_enabled = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getIsDiagnosticsEventsEnabled()
    {
        return $this->is_diagnostics_events_enabled;
    }

    /**
     * Optional. Indicates whether to enable data collection for diagnostics.
     *
     * Generated from protobuf field <code>bool is_diagnostics_events_enabled = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setIsDiagnosticsEventsEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->is_diagnostics_events_enabled = $var;

        return $this;
    }

    /**
     * Optional. Indicates whether to enable incident logs and trace collection.
     *
     * Generated from protobuf field <code>bool is_incident_logs_enabled = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getIsIncidentLogsEnabled()
    {
        return $this->is_incident_logs_enabled;
    }

    /**
     * Optional. Indicates whether to enable incident logs and trace collection.
     *
     * Generated from protobuf field <code>bool is_incident_logs_enabled = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setIsIncidentLogsEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->is_incident_logs_enabled = $var;

        return $this;
    }

}

