<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/oracledatabase/v1/autonomous_database.proto

namespace Google\Cloud\OracleDatabase\V1\AutonomousDatabaseProperties;

use UnexpectedValueException;

/**
 * The license types available for the Autonomous Database.
 *
 * Protobuf type <code>google.cloud.oracledatabase.v1.AutonomousDatabaseProperties.LicenseType</code>
 */
class LicenseType
{
    /**
     * Unspecified
     *
     * Generated from protobuf enum <code>LICENSE_TYPE_UNSPECIFIED = 0;</code>
     */
    const LICENSE_TYPE_UNSPECIFIED = 0;
    /**
     * License included part of offer
     *
     * Generated from protobuf enum <code>LICENSE_INCLUDED = 1;</code>
     */
    const LICENSE_INCLUDED = 1;
    /**
     * Bring your own license
     *
     * Generated from protobuf enum <code>BRING_YOUR_OWN_LICENSE = 2;</code>
     */
    const BRING_YOUR_OWN_LICENSE = 2;

    private static $valueToName = [
        self::LICENSE_TYPE_UNSPECIFIED => 'LICENSE_TYPE_UNSPECIFIED',
        self::LICENSE_INCLUDED => 'LICENSE_INCLUDED',
        self::BRING_YOUR_OWN_LICENSE => 'BRING_YOUR_OWN_LICENSE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


