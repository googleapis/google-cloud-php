<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/oracledatabase/v1/db_system_initial_storage_size.proto

namespace Google\Cloud\OracleDatabase\V1\DbSystemInitialStorageSizeProperties;

use UnexpectedValueException;

/**
 * The storage option used in the DB system.
 *
 * Protobuf type <code>google.cloud.oracledatabase.v1.DbSystemInitialStorageSizeProperties.StorageManagement</code>
 */
class StorageManagement
{
    /**
     * Unspecified storage management.
     *
     * Generated from protobuf enum <code>STORAGE_MANAGEMENT_UNSPECIFIED = 0;</code>
     */
    const STORAGE_MANAGEMENT_UNSPECIFIED = 0;
    /**
     * Automatic Storage Management.
     *
     * Generated from protobuf enum <code>ASM = 1;</code>
     */
    const ASM = 1;
    /**
     * Logical Volume Management.
     *
     * Generated from protobuf enum <code>LVM = 2;</code>
     */
    const LVM = 2;

    private static $valueToName = [
        self::STORAGE_MANAGEMENT_UNSPECIFIED => 'STORAGE_MANAGEMENT_UNSPECIFIED',
        self::ASM => 'ASM',
        self::LVM => 'LVM',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


