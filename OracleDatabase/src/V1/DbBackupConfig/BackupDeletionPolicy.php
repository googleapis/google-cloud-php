<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/oracledatabase/v1/database.proto

namespace Google\Cloud\OracleDatabase\V1\DbBackupConfig;

use UnexpectedValueException;

/**
 * This defines when the backups will be deleted after Database termination.
 *
 * Protobuf type <code>google.cloud.oracledatabase.v1.DbBackupConfig.BackupDeletionPolicy</code>
 */
class BackupDeletionPolicy
{
    /**
     * Default unspecified value.
     *
     * Generated from protobuf enum <code>BACKUP_DELETION_POLICY_UNSPECIFIED = 0;</code>
     */
    const BACKUP_DELETION_POLICY_UNSPECIFIED = 0;
    /**
     * Keeps the backup for predefined time
     * i.e. 72 hours and then delete permanently.
     *
     * Generated from protobuf enum <code>DELETE_IMMEDIATELY = 1;</code>
     */
    const DELETE_IMMEDIATELY = 1;
    /**
     * Keeps the backups as per the policy defined
     * for database backups.
     *
     * Generated from protobuf enum <code>DELETE_AFTER_RETENTION_PERIOD = 2;</code>
     */
    const DELETE_AFTER_RETENTION_PERIOD = 2;

    private static $valueToName = [
        self::BACKUP_DELETION_POLICY_UNSPECIFIED => 'BACKUP_DELETION_POLICY_UNSPECIFIED',
        self::DELETE_IMMEDIATELY => 'DELETE_IMMEDIATELY',
        self::DELETE_AFTER_RETENTION_PERIOD => 'DELETE_AFTER_RETENTION_PERIOD',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


