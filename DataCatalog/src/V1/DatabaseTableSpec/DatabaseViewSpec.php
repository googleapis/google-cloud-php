<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datacatalog/v1/datacatalog.proto

namespace Google\Cloud\DataCatalog\V1\DatabaseTableSpec;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Specification that applies to database view.
 *
 * Generated from protobuf message <code>google.cloud.datacatalog.v1.DatabaseTableSpec.DatabaseViewSpec</code>
 */
class DatabaseViewSpec extends \Google\Protobuf\Internal\Message
{
    /**
     * Type of this view.
     *
     * Generated from protobuf field <code>.google.cloud.datacatalog.v1.DatabaseTableSpec.DatabaseViewSpec.ViewType view_type = 1;</code>
     */
    private $view_type = 0;
    protected $source_definition;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $view_type
     *           Type of this view.
     *     @type string $base_table
     *           Name of a singular table this view reflects one to one.
     *     @type string $sql_query
     *           SQL query used to generate this view.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Datacatalog\V1\Datacatalog::initOnce();
        parent::__construct($data);
    }

    /**
     * Type of this view.
     *
     * Generated from protobuf field <code>.google.cloud.datacatalog.v1.DatabaseTableSpec.DatabaseViewSpec.ViewType view_type = 1;</code>
     * @return int
     */
    public function getViewType()
    {
        return $this->view_type;
    }

    /**
     * Type of this view.
     *
     * Generated from protobuf field <code>.google.cloud.datacatalog.v1.DatabaseTableSpec.DatabaseViewSpec.ViewType view_type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setViewType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\DataCatalog\V1\DatabaseTableSpec\DatabaseViewSpec\ViewType::class);
        $this->view_type = $var;

        return $this;
    }

    /**
     * Name of a singular table this view reflects one to one.
     *
     * Generated from protobuf field <code>string base_table = 2;</code>
     * @return string
     */
    public function getBaseTable()
    {
        return $this->readOneof(2);
    }

    public function hasBaseTable()
    {
        return $this->hasOneof(2);
    }

    /**
     * Name of a singular table this view reflects one to one.
     *
     * Generated from protobuf field <code>string base_table = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setBaseTable($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * SQL query used to generate this view.
     *
     * Generated from protobuf field <code>string sql_query = 3;</code>
     * @return string
     */
    public function getSqlQuery()
    {
        return $this->readOneof(3);
    }

    public function hasSqlQuery()
    {
        return $this->hasOneof(3);
    }

    /**
     * SQL query used to generate this view.
     *
     * Generated from protobuf field <code>string sql_query = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setSqlQuery($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getSourceDefinition()
    {
        return $this->whichOneof("source_definition");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(DatabaseViewSpec::class, \Google\Cloud\DataCatalog\V1\DatabaseTableSpec_DatabaseViewSpec::class);

