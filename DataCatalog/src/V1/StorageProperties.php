<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datacatalog/v1/data_source.proto

namespace Google\Cloud\DataCatalog\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Details the properties of the underlying storage.
 *
 * Generated from protobuf message <code>google.cloud.datacatalog.v1.StorageProperties</code>
 */
class StorageProperties extends \Google\Protobuf\Internal\Message
{
    /**
     * Patterns to identify a set of files for this fileset.
     * Examples of a valid `file_pattern`:
     *  * `gs://bucket_name/dir/&#42;`: matches all files in the `bucket_name/dir`
     *                              directory
     *  * `gs://bucket_name/dir/&#42;*`: matches all files in the `bucket_name/dir`
     *                               and all subdirectories recursively
     *  * `gs://bucket_name/file*`: matches files prefixed by `file` in
     *                              `bucket_name`
     *  * `gs://bucket_name/??.txt`: matches files with two characters followed by
     *                               `.txt` in `bucket_name`
     *  * `gs://bucket_name/[aeiou].txt`: matches files that contain a single
     *                                    vowel character followed by `.txt` in
     *                                    `bucket_name`
     *  * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ...
     *                                  or `m` followed by `.txt` in `bucket_name`
     *  * `gs://bucket_name/a/&#42;&#47;b`: matches all files in `bucket_name` that match
     *                              the `a/&#42;&#47;b` pattern, such as `a/c/b`, `a/d/b`
     *  * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
     *
     * Generated from protobuf field <code>repeated string file_pattern = 1;</code>
     */
    private $file_pattern;
    /**
     * File type in MIME format, for example, `text/plain`.
     *
     * Generated from protobuf field <code>string file_type = 2;</code>
     */
    private $file_type = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $file_pattern
     *           Patterns to identify a set of files for this fileset.
     *           Examples of a valid `file_pattern`:
     *            * `gs://bucket_name/dir/&#42;`: matches all files in the `bucket_name/dir`
     *                                        directory
     *            * `gs://bucket_name/dir/&#42;*`: matches all files in the `bucket_name/dir`
     *                                         and all subdirectories recursively
     *            * `gs://bucket_name/file*`: matches files prefixed by `file` in
     *                                        `bucket_name`
     *            * `gs://bucket_name/??.txt`: matches files with two characters followed by
     *                                         `.txt` in `bucket_name`
     *            * `gs://bucket_name/[aeiou].txt`: matches files that contain a single
     *                                              vowel character followed by `.txt` in
     *                                              `bucket_name`
     *            * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ...
     *                                            or `m` followed by `.txt` in `bucket_name`
     *            * `gs://bucket_name/a/&#42;&#47;b`: matches all files in `bucket_name` that match
     *                                        the `a/&#42;&#47;b` pattern, such as `a/c/b`, `a/d/b`
     *            * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
     *     @type string $file_type
     *           File type in MIME format, for example, `text/plain`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Datacatalog\V1\DataSource::initOnce();
        parent::__construct($data);
    }

    /**
     * Patterns to identify a set of files for this fileset.
     * Examples of a valid `file_pattern`:
     *  * `gs://bucket_name/dir/&#42;`: matches all files in the `bucket_name/dir`
     *                              directory
     *  * `gs://bucket_name/dir/&#42;*`: matches all files in the `bucket_name/dir`
     *                               and all subdirectories recursively
     *  * `gs://bucket_name/file*`: matches files prefixed by `file` in
     *                              `bucket_name`
     *  * `gs://bucket_name/??.txt`: matches files with two characters followed by
     *                               `.txt` in `bucket_name`
     *  * `gs://bucket_name/[aeiou].txt`: matches files that contain a single
     *                                    vowel character followed by `.txt` in
     *                                    `bucket_name`
     *  * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ...
     *                                  or `m` followed by `.txt` in `bucket_name`
     *  * `gs://bucket_name/a/&#42;&#47;b`: matches all files in `bucket_name` that match
     *                              the `a/&#42;&#47;b` pattern, such as `a/c/b`, `a/d/b`
     *  * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
     *
     * Generated from protobuf field <code>repeated string file_pattern = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFilePattern()
    {
        return $this->file_pattern;
    }

    /**
     * Patterns to identify a set of files for this fileset.
     * Examples of a valid `file_pattern`:
     *  * `gs://bucket_name/dir/&#42;`: matches all files in the `bucket_name/dir`
     *                              directory
     *  * `gs://bucket_name/dir/&#42;*`: matches all files in the `bucket_name/dir`
     *                               and all subdirectories recursively
     *  * `gs://bucket_name/file*`: matches files prefixed by `file` in
     *                              `bucket_name`
     *  * `gs://bucket_name/??.txt`: matches files with two characters followed by
     *                               `.txt` in `bucket_name`
     *  * `gs://bucket_name/[aeiou].txt`: matches files that contain a single
     *                                    vowel character followed by `.txt` in
     *                                    `bucket_name`
     *  * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ...
     *                                  or `m` followed by `.txt` in `bucket_name`
     *  * `gs://bucket_name/a/&#42;&#47;b`: matches all files in `bucket_name` that match
     *                              the `a/&#42;&#47;b` pattern, such as `a/c/b`, `a/d/b`
     *  * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
     *
     * Generated from protobuf field <code>repeated string file_pattern = 1;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFilePattern($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->file_pattern = $arr;

        return $this;
    }

    /**
     * File type in MIME format, for example, `text/plain`.
     *
     * Generated from protobuf field <code>string file_type = 2;</code>
     * @return string
     */
    public function getFileType()
    {
        return $this->file_type;
    }

    /**
     * File type in MIME format, for example, `text/plain`.
     *
     * Generated from protobuf field <code>string file_type = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setFileType($var)
    {
        GPBUtil::checkString($var, True);
        $this->file_type = $var;

        return $this;
    }

}

