<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datacatalog/v1/datacatalog.proto

namespace Google\Cloud\DataCatalog\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Specification that applies to
 * entries that are part `LOOKER` system
 * (user_specified_type)
 *
 * Generated from protobuf message <code>google.cloud.datacatalog.v1.LookerSystemSpec</code>
 */
class LookerSystemSpec extends \Google\Protobuf\Internal\Message
{
    /**
     * ID of the parent Looker Instance. Empty if it does not exist.
     * Example value: `someinstance.looker.com`
     *
     * Generated from protobuf field <code>string parent_instance_id = 1;</code>
     */
    private $parent_instance_id = '';
    /**
     * Name of the parent Looker Instance. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_instance_display_name = 2;</code>
     */
    private $parent_instance_display_name = '';
    /**
     * ID of the parent Model. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_model_id = 3;</code>
     */
    private $parent_model_id = '';
    /**
     * Name of the parent Model. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_model_display_name = 4;</code>
     */
    private $parent_model_display_name = '';
    /**
     * ID of the parent View. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_view_id = 5;</code>
     */
    private $parent_view_id = '';
    /**
     * Name of the parent View. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_view_display_name = 6;</code>
     */
    private $parent_view_display_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent_instance_id
     *           ID of the parent Looker Instance. Empty if it does not exist.
     *           Example value: `someinstance.looker.com`
     *     @type string $parent_instance_display_name
     *           Name of the parent Looker Instance. Empty if it does not exist.
     *     @type string $parent_model_id
     *           ID of the parent Model. Empty if it does not exist.
     *     @type string $parent_model_display_name
     *           Name of the parent Model. Empty if it does not exist.
     *     @type string $parent_view_id
     *           ID of the parent View. Empty if it does not exist.
     *     @type string $parent_view_display_name
     *           Name of the parent View. Empty if it does not exist.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Datacatalog\V1\Datacatalog::initOnce();
        parent::__construct($data);
    }

    /**
     * ID of the parent Looker Instance. Empty if it does not exist.
     * Example value: `someinstance.looker.com`
     *
     * Generated from protobuf field <code>string parent_instance_id = 1;</code>
     * @return string
     */
    public function getParentInstanceId()
    {
        return $this->parent_instance_id;
    }

    /**
     * ID of the parent Looker Instance. Empty if it does not exist.
     * Example value: `someinstance.looker.com`
     *
     * Generated from protobuf field <code>string parent_instance_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setParentInstanceId($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent_instance_id = $var;

        return $this;
    }

    /**
     * Name of the parent Looker Instance. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_instance_display_name = 2;</code>
     * @return string
     */
    public function getParentInstanceDisplayName()
    {
        return $this->parent_instance_display_name;
    }

    /**
     * Name of the parent Looker Instance. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_instance_display_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setParentInstanceDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent_instance_display_name = $var;

        return $this;
    }

    /**
     * ID of the parent Model. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_model_id = 3;</code>
     * @return string
     */
    public function getParentModelId()
    {
        return $this->parent_model_id;
    }

    /**
     * ID of the parent Model. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_model_id = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setParentModelId($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent_model_id = $var;

        return $this;
    }

    /**
     * Name of the parent Model. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_model_display_name = 4;</code>
     * @return string
     */
    public function getParentModelDisplayName()
    {
        return $this->parent_model_display_name;
    }

    /**
     * Name of the parent Model. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_model_display_name = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setParentModelDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent_model_display_name = $var;

        return $this;
    }

    /**
     * ID of the parent View. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_view_id = 5;</code>
     * @return string
     */
    public function getParentViewId()
    {
        return $this->parent_view_id;
    }

    /**
     * ID of the parent View. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_view_id = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setParentViewId($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent_view_id = $var;

        return $this;
    }

    /**
     * Name of the parent View. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_view_display_name = 6;</code>
     * @return string
     */
    public function getParentViewDisplayName()
    {
        return $this->parent_view_display_name;
    }

    /**
     * Name of the parent View. Empty if it does not exist.
     *
     * Generated from protobuf field <code>string parent_view_display_name = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setParentViewDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent_view_display_name = $var;

        return $this;
    }

}

