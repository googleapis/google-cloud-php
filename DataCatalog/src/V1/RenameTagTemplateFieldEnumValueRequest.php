<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/datacatalog/v1/datacatalog.proto

namespace Google\Cloud\DataCatalog\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for
 * [RenameTagTemplateFieldEnumValue][google.cloud.datacatalog.v1.DataCatalog.RenameTagTemplateFieldEnumValue].
 *
 * Generated from protobuf message <code>google.cloud.datacatalog.v1.RenameTagTemplateFieldEnumValueRequest</code>
 */
class RenameTagTemplateFieldEnumValueRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the enum field value.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    private $name = '';
    /**
     * Required. The new display name of the enum value. For example,
     * `my_new_enum_value`.
     *
     * Generated from protobuf field <code>string new_enum_value_display_name = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $new_enum_value_display_name = '';

    /**
     * @param string $name                    Required. The name of the enum field value. Please see
     *                                        {@see DataCatalogClient::tagTemplateFieldEnumValueName()} for help formatting this field.
     * @param string $newEnumValueDisplayName Required. The new display name of the enum value. For example,
     *                                        `my_new_enum_value`.
     *
     * @return \Google\Cloud\DataCatalog\V1\RenameTagTemplateFieldEnumValueRequest
     *
     * @experimental
     */
    public static function build(string $name, string $newEnumValueDisplayName): self
    {
        return (new self())
            ->setName($name)
            ->setNewEnumValueDisplayName($newEnumValueDisplayName);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The name of the enum field value.
     *     @type string $new_enum_value_display_name
     *           Required. The new display name of the enum value. For example,
     *           `my_new_enum_value`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Datacatalog\V1\Datacatalog::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The name of the enum field value.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The name of the enum field value.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Required. The new display name of the enum value. For example,
     * `my_new_enum_value`.
     *
     * Generated from protobuf field <code>string new_enum_value_display_name = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getNewEnumValueDisplayName()
    {
        return $this->new_enum_value_display_name;
    }

    /**
     * Required. The new display name of the enum value. For example,
     * `my_new_enum_value`.
     *
     * Generated from protobuf field <code>string new_enum_value_display_name = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setNewEnumValueDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->new_enum_value_display_name = $var;

        return $this;
    }

}

