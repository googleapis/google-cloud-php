<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/cloudsecuritycompliance/v1/common.proto

namespace Google\Cloud\CloudSecurityCompliance\V1;

use UnexpectedValueException;

/**
 * The category for the framework.
 *
 * Protobuf type <code>google.cloud.cloudsecuritycompliance.v1.FrameworkCategory</code>
 */
class FrameworkCategory
{
    /**
     * Default value. This value is unused.
     *
     * Generated from protobuf enum <code>FRAMEWORK_CATEGORY_UNSPECIFIED = 0;</code>
     */
    const FRAMEWORK_CATEGORY_UNSPECIFIED = 0;
    /**
     * An industry-defined framework.
     *
     * Generated from protobuf enum <code>INDUSTRY_DEFINED_STANDARD = 1;</code>
     */
    const INDUSTRY_DEFINED_STANDARD = 1;
    /**
     * An Assured Workloads framework.
     *
     * Generated from protobuf enum <code>ASSURED_WORKLOADS = 2;</code>
     */
    const ASSURED_WORKLOADS = 2;
    /**
     * A data security posture framework.
     *
     * Generated from protobuf enum <code>DATA_SECURITY = 3;</code>
     */
    const DATA_SECURITY = 3;
    /**
     * A Google's best practices framework.
     *
     * Generated from protobuf enum <code>GOOGLE_BEST_PRACTICES = 4;</code>
     */
    const GOOGLE_BEST_PRACTICES = 4;
    /**
     * A user-created framework.
     *
     * Generated from protobuf enum <code>CUSTOM_FRAMEWORK = 5;</code>
     */
    const CUSTOM_FRAMEWORK = 5;

    private static $valueToName = [
        self::FRAMEWORK_CATEGORY_UNSPECIFIED => 'FRAMEWORK_CATEGORY_UNSPECIFIED',
        self::INDUSTRY_DEFINED_STANDARD => 'INDUSTRY_DEFINED_STANDARD',
        self::ASSURED_WORKLOADS => 'ASSURED_WORKLOADS',
        self::DATA_SECURITY => 'DATA_SECURITY',
        self::GOOGLE_BEST_PRACTICES => 'GOOGLE_BEST_PRACTICES',
        self::CUSTOM_FRAMEWORK => 'CUSTOM_FRAMEWORK',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

