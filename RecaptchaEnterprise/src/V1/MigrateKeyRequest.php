<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/recaptchaenterprise/v1/recaptchaenterprise.proto

namespace Google\Cloud\RecaptchaEnterprise\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The migrate key request message.
 *
 * Generated from protobuf message <code>google.cloud.recaptchaenterprise.v1.MigrateKeyRequest</code>
 */
class MigrateKeyRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The name of the key to be migrated, in the format
     * "projects/{project}/keys/{key}".
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    private $name = '';
    /**
     * Optional. If true, skips the billing check.
     * A reCAPTCHA Enterprise key or migrated key behaves differently than a
     * reCAPTCHA (non-Enterprise version) key when you reach a quota limit (see
     * https://cloud.google.com/recaptcha-enterprise/quotas#quota_limit). To avoid
     * any disruption of your usage, we check that a billing account is present.
     * If your usage of reCAPTCHA is under the free quota, you can safely skip the
     * billing check and proceed with the migration. See
     * https://cloud.google.com/recaptcha-enterprise/docs/billing-information.
     *
     * Generated from protobuf field <code>bool skip_billing_check = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $skip_billing_check = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. The name of the key to be migrated, in the format
     *           "projects/{project}/keys/{key}".
     *     @type bool $skip_billing_check
     *           Optional. If true, skips the billing check.
     *           A reCAPTCHA Enterprise key or migrated key behaves differently than a
     *           reCAPTCHA (non-Enterprise version) key when you reach a quota limit (see
     *           https://cloud.google.com/recaptcha-enterprise/quotas#quota_limit). To avoid
     *           any disruption of your usage, we check that a billing account is present.
     *           If your usage of reCAPTCHA is under the free quota, you can safely skip the
     *           billing check and proceed with the migration. See
     *           https://cloud.google.com/recaptcha-enterprise/docs/billing-information.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Recaptchaenterprise\V1\Recaptchaenterprise::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The name of the key to be migrated, in the format
     * "projects/{project}/keys/{key}".
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. The name of the key to be migrated, in the format
     * "projects/{project}/keys/{key}".
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. If true, skips the billing check.
     * A reCAPTCHA Enterprise key or migrated key behaves differently than a
     * reCAPTCHA (non-Enterprise version) key when you reach a quota limit (see
     * https://cloud.google.com/recaptcha-enterprise/quotas#quota_limit). To avoid
     * any disruption of your usage, we check that a billing account is present.
     * If your usage of reCAPTCHA is under the free quota, you can safely skip the
     * billing check and proceed with the migration. See
     * https://cloud.google.com/recaptcha-enterprise/docs/billing-information.
     *
     * Generated from protobuf field <code>bool skip_billing_check = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getSkipBillingCheck()
    {
        return $this->skip_billing_check;
    }

    /**
     * Optional. If true, skips the billing check.
     * A reCAPTCHA Enterprise key or migrated key behaves differently than a
     * reCAPTCHA (non-Enterprise version) key when you reach a quota limit (see
     * https://cloud.google.com/recaptcha-enterprise/quotas#quota_limit). To avoid
     * any disruption of your usage, we check that a billing account is present.
     * If your usage of reCAPTCHA is under the free quota, you can safely skip the
     * billing check and proceed with the migration. See
     * https://cloud.google.com/recaptcha-enterprise/docs/billing-information.
     *
     * Generated from protobuf field <code>bool skip_billing_check = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setSkipBillingCheck($var)
    {
        GPBUtil::checkBool($var);
        $this->skip_billing_check = $var;

        return $this;
    }

}

