<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/recaptchaenterprise/v1/recaptchaenterprise.proto

namespace Google\Cloud\RecaptchaEnterprise\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The update firewall policy request message.
 *
 * Generated from protobuf message <code>google.cloud.recaptchaenterprise.v1.UpdateFirewallPolicyRequest</code>
 */
class UpdateFirewallPolicyRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The policy to update.
     *
     * Generated from protobuf field <code>.google.cloud.recaptchaenterprise.v1.FirewallPolicy firewall_policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $firewall_policy = null;
    /**
     * Optional. The mask to control which fields of the policy get updated. If
     * the mask is not present, all fields will be updated.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $update_mask = null;

    /**
     * @param \Google\Cloud\RecaptchaEnterprise\V1\FirewallPolicy $firewallPolicy Required. The policy to update.
     * @param \Google\Protobuf\FieldMask                          $updateMask     Optional. The mask to control which fields of the policy get updated. If
     *                                                                            the mask is not present, all fields will be updated.
     *
     * @return \Google\Cloud\RecaptchaEnterprise\V1\UpdateFirewallPolicyRequest
     *
     * @experimental
     */
    public static function build(\Google\Cloud\RecaptchaEnterprise\V1\FirewallPolicy $firewallPolicy, \Google\Protobuf\FieldMask $updateMask): self
    {
        return (new self())
            ->setFirewallPolicy($firewallPolicy)
            ->setUpdateMask($updateMask);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\RecaptchaEnterprise\V1\FirewallPolicy $firewall_policy
     *           Required. The policy to update.
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           Optional. The mask to control which fields of the policy get updated. If
     *           the mask is not present, all fields will be updated.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Recaptchaenterprise\V1\Recaptchaenterprise::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The policy to update.
     *
     * Generated from protobuf field <code>.google.cloud.recaptchaenterprise.v1.FirewallPolicy firewall_policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\RecaptchaEnterprise\V1\FirewallPolicy|null
     */
    public function getFirewallPolicy()
    {
        return $this->firewall_policy;
    }

    public function hasFirewallPolicy()
    {
        return isset($this->firewall_policy);
    }

    public function clearFirewallPolicy()
    {
        unset($this->firewall_policy);
    }

    /**
     * Required. The policy to update.
     *
     * Generated from protobuf field <code>.google.cloud.recaptchaenterprise.v1.FirewallPolicy firewall_policy = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\RecaptchaEnterprise\V1\FirewallPolicy $var
     * @return $this
     */
    public function setFirewallPolicy($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\RecaptchaEnterprise\V1\FirewallPolicy::class);
        $this->firewall_policy = $var;

        return $this;
    }

    /**
     * Optional. The mask to control which fields of the policy get updated. If
     * the mask is not present, all fields will be updated.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * Optional. The mask to control which fields of the policy get updated. If
     * the mask is not present, all fields will be updated.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

}

