<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/recaptchaenterprise/v1/recaptchaenterprise.proto

namespace Google\Cloud\RecaptchaEnterprise\V1\FraudSignals;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Signals describing the user involved in this transaction.
 *
 * Generated from protobuf message <code>google.cloud.recaptchaenterprise.v1.FraudSignals.UserSignals</code>
 */
class UserSignals extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. This user (based on email, phone, and other identifiers) has
     * been seen on the internet for at least this number of days.
     *
     * Generated from protobuf field <code>int32 active_days_lower_bound = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $active_days_lower_bound = 0;
    /**
     * Output only. Likelihood (from 0.0 to 1.0) this user includes synthetic
     * components in their identity, such as a randomly generated email address,
     * temporary phone number, or fake shipping address.
     *
     * Generated from protobuf field <code>float synthetic_risk = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $synthetic_risk = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $active_days_lower_bound
     *           Output only. This user (based on email, phone, and other identifiers) has
     *           been seen on the internet for at least this number of days.
     *     @type float $synthetic_risk
     *           Output only. Likelihood (from 0.0 to 1.0) this user includes synthetic
     *           components in their identity, such as a randomly generated email address,
     *           temporary phone number, or fake shipping address.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Recaptchaenterprise\V1\Recaptchaenterprise::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. This user (based on email, phone, and other identifiers) has
     * been seen on the internet for at least this number of days.
     *
     * Generated from protobuf field <code>int32 active_days_lower_bound = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getActiveDaysLowerBound()
    {
        return $this->active_days_lower_bound;
    }

    /**
     * Output only. This user (based on email, phone, and other identifiers) has
     * been seen on the internet for at least this number of days.
     *
     * Generated from protobuf field <code>int32 active_days_lower_bound = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setActiveDaysLowerBound($var)
    {
        GPBUtil::checkInt32($var);
        $this->active_days_lower_bound = $var;

        return $this;
    }

    /**
     * Output only. Likelihood (from 0.0 to 1.0) this user includes synthetic
     * components in their identity, such as a randomly generated email address,
     * temporary phone number, or fake shipping address.
     *
     * Generated from protobuf field <code>float synthetic_risk = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return float
     */
    public function getSyntheticRisk()
    {
        return $this->synthetic_risk;
    }

    /**
     * Output only. Likelihood (from 0.0 to 1.0) this user includes synthetic
     * components in their identity, such as a randomly generated email address,
     * temporary phone number, or fake shipping address.
     *
     * Generated from protobuf field <code>float synthetic_risk = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param float $var
     * @return $this
     */
    public function setSyntheticRisk($var)
    {
        GPBUtil::checkFloat($var);
        $this->synthetic_risk = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(UserSignals::class, \Google\Cloud\RecaptchaEnterprise\V1\FraudSignals_UserSignals::class);

