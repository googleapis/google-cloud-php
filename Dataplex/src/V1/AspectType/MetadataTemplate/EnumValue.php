<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataplex/v1/catalog.proto

namespace Google\Cloud\Dataplex\V1\AspectType\MetadataTemplate;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Definition of Enumvalue, to be used for enum fields.
 *
 * Generated from protobuf message <code>google.cloud.dataplex.v1.AspectType.MetadataTemplate.EnumValue</code>
 */
class EnumValue extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Index for the enum value. It can't be modified.
     *
     * Generated from protobuf field <code>int32 index = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $index = 0;
    /**
     * Required. Name of the enumvalue. This is the actual value that the
     * aspect can contain.
     *
     * Generated from protobuf field <code>string name = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $name = '';
    /**
     * Optional. You can set this message if you need to deprecate an enum
     * value.
     *
     * Generated from protobuf field <code>string deprecated = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $deprecated = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $index
     *           Required. Index for the enum value. It can't be modified.
     *     @type string $name
     *           Required. Name of the enumvalue. This is the actual value that the
     *           aspect can contain.
     *     @type string $deprecated
     *           Optional. You can set this message if you need to deprecate an enum
     *           value.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataplex\V1\Catalog::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Index for the enum value. It can't be modified.
     *
     * Generated from protobuf field <code>int32 index = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int
     */
    public function getIndex()
    {
        return $this->index;
    }

    /**
     * Required. Index for the enum value. It can't be modified.
     *
     * Generated from protobuf field <code>int32 index = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int $var
     * @return $this
     */
    public function setIndex($var)
    {
        GPBUtil::checkInt32($var);
        $this->index = $var;

        return $this;
    }

    /**
     * Required. Name of the enumvalue. This is the actual value that the
     * aspect can contain.
     *
     * Generated from protobuf field <code>string name = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. Name of the enumvalue. This is the actual value that the
     * aspect can contain.
     *
     * Generated from protobuf field <code>string name = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. You can set this message if you need to deprecate an enum
     * value.
     *
     * Generated from protobuf field <code>string deprecated = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDeprecated()
    {
        return $this->deprecated;
    }

    /**
     * Optional. You can set this message if you need to deprecate an enum
     * value.
     *
     * Generated from protobuf field <code>string deprecated = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDeprecated($var)
    {
        GPBUtil::checkString($var, True);
        $this->deprecated = $var;

        return $this;
    }

}


