<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataplex/v1/processing.proto

namespace Google\Cloud\Dataplex\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The data scanned during processing (e.g. in incremental DataScan)
 *
 * Generated from protobuf message <code>google.cloud.dataplex.v1.ScannedData</code>
 */
class ScannedData extends \Google\Protobuf\Internal\Message
{
    protected $data_range;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Dataplex\V1\ScannedData\IncrementalField $incremental_field
     *           The range denoted by values of an incremental field
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataplex\V1\Processing::initOnce();
        parent::__construct($data);
    }

    /**
     * The range denoted by values of an incremental field
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.ScannedData.IncrementalField incremental_field = 1;</code>
     * @return \Google\Cloud\Dataplex\V1\ScannedData\IncrementalField|null
     */
    public function getIncrementalField()
    {
        return $this->readOneof(1);
    }

    public function hasIncrementalField()
    {
        return $this->hasOneof(1);
    }

    /**
     * The range denoted by values of an incremental field
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.ScannedData.IncrementalField incremental_field = 1;</code>
     * @param \Google\Cloud\Dataplex\V1\ScannedData\IncrementalField $var
     * @return $this
     */
    public function setIncrementalField($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dataplex\V1\ScannedData\IncrementalField::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getDataRange()
    {
        return $this->whichOneof("data_range");
    }

}

