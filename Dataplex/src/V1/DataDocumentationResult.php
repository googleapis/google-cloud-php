<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataplex/v1/data_documentation.proto

namespace Google\Cloud\Dataplex\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The output of a DataDocumentation scan.
 *
 * Generated from protobuf message <code>google.cloud.dataplex.v1.DataDocumentationResult</code>
 */
class DataDocumentationResult extends \Google\Protobuf\Internal\Message
{
    protected $result;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\Dataplex\V1\DataDocumentationResult\TableResult $table_result
     *           Output only. Table result for insights.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataplex\V1\DataDocumentation::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. Table result for insights.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.DataDocumentationResult.TableResult table_result = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Cloud\Dataplex\V1\DataDocumentationResult\TableResult|null
     */
    public function getTableResult()
    {
        return $this->readOneof(8);
    }

    public function hasTableResult()
    {
        return $this->hasOneof(8);
    }

    /**
     * Output only. Table result for insights.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.DataDocumentationResult.TableResult table_result = 8 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Cloud\Dataplex\V1\DataDocumentationResult\TableResult $var
     * @return $this
     */
    public function setTableResult($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dataplex\V1\DataDocumentationResult\TableResult::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getResult()
    {
        return $this->whichOneof("result");
    }

}

