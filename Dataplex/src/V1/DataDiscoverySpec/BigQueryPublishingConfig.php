<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataplex/v1/data_discovery.proto

namespace Google\Cloud\Dataplex\V1\DataDiscoverySpec;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Describes BigQuery publishing configurations.
 *
 * Generated from protobuf message <code>google.cloud.dataplex.v1.DataDiscoverySpec.BigQueryPublishingConfig</code>
 */
class BigQueryPublishingConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Determines whether to  publish discovered tables as BigLake
     * external tables or non-BigLake external tables.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.DataDiscoverySpec.BigQueryPublishingConfig.TableType table_type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $table_type = 0;
    /**
     * Optional. The BigQuery connection used to create BigLake tables.
     * Must be in the form
     * `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
     *
     * Generated from protobuf field <code>string connection = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     */
    protected $connection = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $table_type
     *           Optional. Determines whether to  publish discovered tables as BigLake
     *           external tables or non-BigLake external tables.
     *     @type string $connection
     *           Optional. The BigQuery connection used to create BigLake tables.
     *           Must be in the form
     *           `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataplex\V1\DataDiscovery::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Determines whether to  publish discovered tables as BigLake
     * external tables or non-BigLake external tables.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.DataDiscoverySpec.BigQueryPublishingConfig.TableType table_type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getTableType()
    {
        return $this->table_type;
    }

    /**
     * Optional. Determines whether to  publish discovered tables as BigLake
     * external tables or non-BigLake external tables.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.DataDiscoverySpec.BigQueryPublishingConfig.TableType table_type = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setTableType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Dataplex\V1\DataDiscoverySpec\BigQueryPublishingConfig\TableType::class);
        $this->table_type = $var;

        return $this;
    }

    /**
     * Optional. The BigQuery connection used to create BigLake tables.
     * Must be in the form
     * `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
     *
     * Generated from protobuf field <code>string connection = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getConnection()
    {
        return $this->connection;
    }

    /**
     * Optional. The BigQuery connection used to create BigLake tables.
     * Must be in the form
     * `projects/{project_id}/locations/{location_id}/connections/{connection_id}`
     *
     * Generated from protobuf field <code>string connection = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setConnection($var)
    {
        GPBUtil::checkString($var, True);
        $this->connection = $var;

        return $this;
    }

}


