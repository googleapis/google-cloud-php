<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataplex/v1/catalog.proto

namespace Google\Cloud\Dataplex\V1\MetadataJob\ImportJobSpec;

use UnexpectedValueException;

/**
 * The level of logs to write to Cloud Logging for this job.
 *
 * Protobuf type <code>google.cloud.dataplex.v1.MetadataJob.ImportJobSpec.LogLevel</code>
 */
class LogLevel
{
    /**
     * Log level unspecified.
     *
     * Generated from protobuf enum <code>LOG_LEVEL_UNSPECIFIED = 0;</code>
     */
    const LOG_LEVEL_UNSPECIFIED = 0;
    /**
     * Debug-level logging. Captures detailed logs for each import item. Use
     * debug-level logging to troubleshoot issues with specific import items.
     * For example, use debug-level logging to identify resources that are
     * missing from the job scope, entries or aspects that don't conform to
     * the associated entry type or aspect type, or other misconfigurations
     * with the metadata import file.
     * Depending on the size of your metadata job and the number of logs that
     * are generated, debug-level logging might incur
     * [additional costs](https://cloud.google.com/stackdriver/pricing).
     *
     * Generated from protobuf enum <code>DEBUG = 1;</code>
     */
    const DEBUG = 1;
    /**
     * Info-level logging. Captures logs at the overall job level. Includes
     * aggregate logs about import items, but doesn't specify which import
     * item has an error.
     *
     * Generated from protobuf enum <code>INFO = 2;</code>
     */
    const INFO = 2;

    private static $valueToName = [
        self::LOG_LEVEL_UNSPECIFIED => 'LOG_LEVEL_UNSPECIFIED',
        self::DEBUG => 'DEBUG',
        self::INFO => 'INFO',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


