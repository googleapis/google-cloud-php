<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataplex/v1/catalog.proto

namespace Google\Cloud\Dataplex\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Aspect Type is a template for creating Aspects, and represents the
 * JSON-schema for a given Entry, e.g., BigQuery Table Schema.
 *
 * Generated from protobuf message <code>google.cloud.dataplex.v1.AspectType</code>
 */
class AspectType extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. The relative resource name of the AspectType, of the form:
     * projects/{project_number}/locations/{location_id}/aspectTypes/{aspect_type_id}.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = {</code>
     */
    private $name = '';
    /**
     * Output only. System generated globally unique ID for the AspectType. This
     * ID will be different if the AspectType is deleted and re-created with the
     * same name.
     *
     * Generated from protobuf field <code>string uid = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $uid = '';
    /**
     * Output only. The time when the AspectType was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $create_time = null;
    /**
     * Output only. The time when the AspectType was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $update_time = null;
    /**
     * Optional. Description of the AspectType.
     *
     * Generated from protobuf field <code>string description = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $description = '';
    /**
     * Optional. User friendly display name.
     *
     * Generated from protobuf field <code>string display_name = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $display_name = '';
    /**
     * Optional. User-defined labels for the AspectType.
     *
     * Generated from protobuf field <code>map<string, string> labels = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $labels;
    /**
     * This checksum is computed by the server based on the value of other
     * fields, and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     *
     * Generated from protobuf field <code>string etag = 8;</code>
     */
    private $etag = '';
    /**
     * Immutable. Authorization defined for this type.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.AspectType.Authorization authorization = 52 [(.google.api.field_behavior) = IMMUTABLE];</code>
     */
    private $authorization = null;
    /**
     * Required. MetadataTemplate of the aspect.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.AspectType.MetadataTemplate metadata_template = 53 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $metadata_template = null;
    /**
     * Output only. Denotes the transfer status of the Aspect Type. It is
     * unspecified for Aspect Types created from Dataplex API.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.TransferStatus transfer_status = 202 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    private $transfer_status = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Output only. The relative resource name of the AspectType, of the form:
     *           projects/{project_number}/locations/{location_id}/aspectTypes/{aspect_type_id}.
     *     @type string $uid
     *           Output only. System generated globally unique ID for the AspectType. This
     *           ID will be different if the AspectType is deleted and re-created with the
     *           same name.
     *     @type \Google\Protobuf\Timestamp $create_time
     *           Output only. The time when the AspectType was created.
     *     @type \Google\Protobuf\Timestamp $update_time
     *           Output only. The time when the AspectType was last updated.
     *     @type string $description
     *           Optional. Description of the AspectType.
     *     @type string $display_name
     *           Optional. User friendly display name.
     *     @type array|\Google\Protobuf\Internal\MapField $labels
     *           Optional. User-defined labels for the AspectType.
     *     @type string $etag
     *           This checksum is computed by the server based on the value of other
     *           fields, and may be sent on update and delete requests to ensure the
     *           client has an up-to-date value before proceeding.
     *     @type \Google\Cloud\Dataplex\V1\AspectType\Authorization $authorization
     *           Immutable. Authorization defined for this type.
     *     @type \Google\Cloud\Dataplex\V1\AspectType\MetadataTemplate $metadata_template
     *           Required. MetadataTemplate of the aspect.
     *     @type int $transfer_status
     *           Output only. Denotes the transfer status of the Aspect Type. It is
     *           unspecified for Aspect Types created from Dataplex API.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataplex\V1\Catalog::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. The relative resource name of the AspectType, of the form:
     * projects/{project_number}/locations/{location_id}/aspectTypes/{aspect_type_id}.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Output only. The relative resource name of the AspectType, of the form:
     * projects/{project_number}/locations/{location_id}/aspectTypes/{aspect_type_id}.
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = OUTPUT_ONLY, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Output only. System generated globally unique ID for the AspectType. This
     * ID will be different if the AspectType is deleted and re-created with the
     * same name.
     *
     * Generated from protobuf field <code>string uid = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return string
     */
    public function getUid()
    {
        return $this->uid;
    }

    /**
     * Output only. System generated globally unique ID for the AspectType. This
     * ID will be different if the AspectType is deleted and re-created with the
     * same name.
     *
     * Generated from protobuf field <code>string uid = 2 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param string $var
     * @return $this
     */
    public function setUid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uid = $var;

        return $this;
    }

    /**
     * Output only. The time when the AspectType was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * Output only. The time when the AspectType was created.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 3 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * Output only. The time when the AspectType was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * Output only. The time when the AspectType was last updated.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 4 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * Optional. Description of the AspectType.
     *
     * Generated from protobuf field <code>string description = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Optional. Description of the AspectType.
     *
     * Generated from protobuf field <code>string description = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Optional. User friendly display name.
     *
     * Generated from protobuf field <code>string display_name = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * Optional. User friendly display name.
     *
     * Generated from protobuf field <code>string display_name = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;

        return $this;
    }

    /**
     * Optional. User-defined labels for the AspectType.
     *
     * Generated from protobuf field <code>map<string, string> labels = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * Optional. User-defined labels for the AspectType.
     *
     * Generated from protobuf field <code>map<string, string> labels = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setLabels($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;

        return $this;
    }

    /**
     * This checksum is computed by the server based on the value of other
     * fields, and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     *
     * Generated from protobuf field <code>string etag = 8;</code>
     * @return string
     */
    public function getEtag()
    {
        return $this->etag;
    }

    /**
     * This checksum is computed by the server based on the value of other
     * fields, and may be sent on update and delete requests to ensure the
     * client has an up-to-date value before proceeding.
     *
     * Generated from protobuf field <code>string etag = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setEtag($var)
    {
        GPBUtil::checkString($var, True);
        $this->etag = $var;

        return $this;
    }

    /**
     * Immutable. Authorization defined for this type.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.AspectType.Authorization authorization = 52 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @return \Google\Cloud\Dataplex\V1\AspectType\Authorization|null
     */
    public function getAuthorization()
    {
        return $this->authorization;
    }

    public function hasAuthorization()
    {
        return isset($this->authorization);
    }

    public function clearAuthorization()
    {
        unset($this->authorization);
    }

    /**
     * Immutable. Authorization defined for this type.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.AspectType.Authorization authorization = 52 [(.google.api.field_behavior) = IMMUTABLE];</code>
     * @param \Google\Cloud\Dataplex\V1\AspectType\Authorization $var
     * @return $this
     */
    public function setAuthorization($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dataplex\V1\AspectType\Authorization::class);
        $this->authorization = $var;

        return $this;
    }

    /**
     * Required. MetadataTemplate of the aspect.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.AspectType.MetadataTemplate metadata_template = 53 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\Dataplex\V1\AspectType\MetadataTemplate|null
     */
    public function getMetadataTemplate()
    {
        return $this->metadata_template;
    }

    public function hasMetadataTemplate()
    {
        return isset($this->metadata_template);
    }

    public function clearMetadataTemplate()
    {
        unset($this->metadata_template);
    }

    /**
     * Required. MetadataTemplate of the aspect.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.AspectType.MetadataTemplate metadata_template = 53 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Dataplex\V1\AspectType\MetadataTemplate $var
     * @return $this
     */
    public function setMetadataTemplate($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dataplex\V1\AspectType\MetadataTemplate::class);
        $this->metadata_template = $var;

        return $this;
    }

    /**
     * Output only. Denotes the transfer status of the Aspect Type. It is
     * unspecified for Aspect Types created from Dataplex API.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.TransferStatus transfer_status = 202 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getTransferStatus()
    {
        return $this->transfer_status;
    }

    /**
     * Output only. Denotes the transfer status of the Aspect Type. It is
     * unspecified for Aspect Types created from Dataplex API.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.TransferStatus transfer_status = 202 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setTransferStatus($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Dataplex\V1\TransferStatus::class);
        $this->transfer_status = $var;

        return $this;
    }

}

