<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataplex/v1/analyze.proto

namespace Google\Cloud\Dataplex\V1\Environment\InfrastructureSpec;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Compute resources associated with the analyze interactive workloads.
 *
 * Generated from protobuf message <code>google.cloud.dataplex.v1.Environment.InfrastructureSpec.ComputeResources</code>
 */
class ComputeResources extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Size in GB of the disk. Default is 100 GB.
     *
     * Generated from protobuf field <code>int32 disk_size_gb = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $disk_size_gb = 0;
    /**
     * Optional. Total number of nodes in the sessions created for this environment.
     *
     * Generated from protobuf field <code>int32 node_count = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $node_count = 0;
    /**
     * Optional. Max configurable nodes.
     * If max_node_count > node_count, then auto-scaling is enabled.
     *
     * Generated from protobuf field <code>int32 max_node_count = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $max_node_count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $disk_size_gb
     *           Optional. Size in GB of the disk. Default is 100 GB.
     *     @type int $node_count
     *           Optional. Total number of nodes in the sessions created for this environment.
     *     @type int $max_node_count
     *           Optional. Max configurable nodes.
     *           If max_node_count > node_count, then auto-scaling is enabled.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataplex\V1\Analyze::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Size in GB of the disk. Default is 100 GB.
     *
     * Generated from protobuf field <code>int32 disk_size_gb = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getDiskSizeGb()
    {
        return $this->disk_size_gb;
    }

    /**
     * Optional. Size in GB of the disk. Default is 100 GB.
     *
     * Generated from protobuf field <code>int32 disk_size_gb = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setDiskSizeGb($var)
    {
        GPBUtil::checkInt32($var);
        $this->disk_size_gb = $var;

        return $this;
    }

    /**
     * Optional. Total number of nodes in the sessions created for this environment.
     *
     * Generated from protobuf field <code>int32 node_count = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getNodeCount()
    {
        return $this->node_count;
    }

    /**
     * Optional. Total number of nodes in the sessions created for this environment.
     *
     * Generated from protobuf field <code>int32 node_count = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setNodeCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->node_count = $var;

        return $this;
    }

    /**
     * Optional. Max configurable nodes.
     * If max_node_count > node_count, then auto-scaling is enabled.
     *
     * Generated from protobuf field <code>int32 max_node_count = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getMaxNodeCount()
    {
        return $this->max_node_count;
    }

    /**
     * Optional. Max configurable nodes.
     * If max_node_count > node_count, then auto-scaling is enabled.
     *
     * Generated from protobuf field <code>int32 max_node_count = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setMaxNodeCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->max_node_count = $var;

        return $this;
    }

}


