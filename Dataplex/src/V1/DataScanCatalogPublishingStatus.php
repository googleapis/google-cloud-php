<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataplex/v1/datascans_common.proto

namespace Google\Cloud\Dataplex\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The status of publishing the data scan result as Dataplex Universal Catalog
 * metadata.
 *
 * Generated from protobuf message <code>google.cloud.dataplex.v1.DataScanCatalogPublishingStatus</code>
 */
class DataScanCatalogPublishingStatus extends \Google\Protobuf\Internal\Message
{
    /**
     * Output only. Execution state for catalog publishing.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.DataScanCatalogPublishingStatus.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     */
    protected $state = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $state
     *           Output only. Execution state for catalog publishing.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataplex\V1\DatascansCommon::initOnce();
        parent::__construct($data);
    }

    /**
     * Output only. Execution state for catalog publishing.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.DataScanCatalogPublishingStatus.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * Output only. Execution state for catalog publishing.
     *
     * Generated from protobuf field <code>.google.cloud.dataplex.v1.DataScanCatalogPublishingStatus.State state = 1 [(.google.api.field_behavior) = OUTPUT_ONLY];</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Dataplex\V1\DataScanCatalogPublishingStatus\State::class);
        $this->state = $var;

        return $this;
    }

}

