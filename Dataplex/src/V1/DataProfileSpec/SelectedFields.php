<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataplex/v1/data_profile.proto

namespace Google\Cloud\Dataplex\V1\DataProfileSpec;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The specification for fields to include or exclude in data profile scan.
 *
 * Generated from protobuf message <code>google.cloud.dataplex.v1.DataProfileSpec.SelectedFields</code>
 */
class SelectedFields extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Expected input is a list of fully qualified names of fields as
     * in the schema.
     * Only top-level field names for nested fields are supported.
     * For instance, if 'x' is of nested field type, listing 'x' is supported
     * but 'x.y.z' is not supported. Here 'y' and 'y.z' are nested fields of
     * 'x'.
     *
     * Generated from protobuf field <code>repeated string field_names = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $field_names;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $field_names
     *           Optional. Expected input is a list of fully qualified names of fields as
     *           in the schema.
     *           Only top-level field names for nested fields are supported.
     *           For instance, if 'x' is of nested field type, listing 'x' is supported
     *           but 'x.y.z' is not supported. Here 'y' and 'y.z' are nested fields of
     *           'x'.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Dataplex\V1\DataProfile::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Expected input is a list of fully qualified names of fields as
     * in the schema.
     * Only top-level field names for nested fields are supported.
     * For instance, if 'x' is of nested field type, listing 'x' is supported
     * but 'x.y.z' is not supported. Here 'y' and 'y.z' are nested fields of
     * 'x'.
     *
     * Generated from protobuf field <code>repeated string field_names = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFieldNames()
    {
        return $this->field_names;
    }

    /**
     * Optional. Expected input is a list of fully qualified names of fields as
     * in the schema.
     * Only top-level field names for nested fields are supported.
     * For instance, if 'x' is of nested field type, listing 'x' is supported
     * but 'x.y.z' is not supported. Here 'y' and 'y.z' are nested fields of
     * 'x'.
     *
     * Generated from protobuf field <code>repeated string field_names = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFieldNames($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->field_names = $arr;

        return $this;
    }

}


