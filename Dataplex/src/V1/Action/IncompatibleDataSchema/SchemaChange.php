<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataplex/v1/resources.proto

namespace Google\Cloud\Dataplex\V1\Action\IncompatibleDataSchema;

use UnexpectedValueException;

/**
 * Whether the action relates to a schema that is incompatible or modified.
 *
 * Protobuf type <code>google.cloud.dataplex.v1.Action.IncompatibleDataSchema.SchemaChange</code>
 */
class SchemaChange
{
    /**
     * Schema change unspecified.
     *
     * Generated from protobuf enum <code>SCHEMA_CHANGE_UNSPECIFIED = 0;</code>
     */
    const SCHEMA_CHANGE_UNSPECIFIED = 0;
    /**
     * Newly discovered schema is incompatible with existing schema.
     *
     * Generated from protobuf enum <code>INCOMPATIBLE = 1;</code>
     */
    const INCOMPATIBLE = 1;
    /**
     * Newly discovered schema has changed from existing schema for data in a
     * curated zone.
     *
     * Generated from protobuf enum <code>MODIFIED = 2;</code>
     */
    const MODIFIED = 2;

    private static $valueToName = [
        self::SCHEMA_CHANGE_UNSPECIFIED => 'SCHEMA_CHANGE_UNSPECIFIED',
        self::INCOMPATIBLE => 'INCOMPATIBLE',
        self::MODIFIED => 'MODIFIED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


