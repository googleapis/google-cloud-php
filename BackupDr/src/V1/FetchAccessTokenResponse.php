<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/backupdr/v1/backupvault.proto

namespace Google\Cloud\BackupDR\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Response message for FetchAccessToken.
 *
 * Generated from protobuf message <code>google.cloud.backupdr.v1.FetchAccessTokenResponse</code>
 */
class FetchAccessTokenResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * The location in bucket that can be used for reading.
     *
     * Generated from protobuf field <code>string read_location = 1;</code>
     */
    protected $read_location = '';
    /**
     * The location in bucket that can be used for writing.
     *
     * Generated from protobuf field <code>string write_location = 2;</code>
     */
    protected $write_location = '';
    /**
     * The downscoped token that was created.
     *
     * Generated from protobuf field <code>string token = 3;</code>
     */
    protected $token = '';
    /**
     * The token is valid until this time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 4;</code>
     */
    protected $expire_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $read_location
     *           The location in bucket that can be used for reading.
     *     @type string $write_location
     *           The location in bucket that can be used for writing.
     *     @type string $token
     *           The downscoped token that was created.
     *     @type \Google\Protobuf\Timestamp $expire_time
     *           The token is valid until this time.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Backupdr\V1\Backupvault::initOnce();
        parent::__construct($data);
    }

    /**
     * The location in bucket that can be used for reading.
     *
     * Generated from protobuf field <code>string read_location = 1;</code>
     * @return string
     */
    public function getReadLocation()
    {
        return $this->read_location;
    }

    /**
     * The location in bucket that can be used for reading.
     *
     * Generated from protobuf field <code>string read_location = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setReadLocation($var)
    {
        GPBUtil::checkString($var, True);
        $this->read_location = $var;

        return $this;
    }

    /**
     * The location in bucket that can be used for writing.
     *
     * Generated from protobuf field <code>string write_location = 2;</code>
     * @return string
     */
    public function getWriteLocation()
    {
        return $this->write_location;
    }

    /**
     * The location in bucket that can be used for writing.
     *
     * Generated from protobuf field <code>string write_location = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setWriteLocation($var)
    {
        GPBUtil::checkString($var, True);
        $this->write_location = $var;

        return $this;
    }

    /**
     * The downscoped token that was created.
     *
     * Generated from protobuf field <code>string token = 3;</code>
     * @return string
     */
    public function getToken()
    {
        return $this->token;
    }

    /**
     * The downscoped token that was created.
     *
     * Generated from protobuf field <code>string token = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->token = $var;

        return $this;
    }

    /**
     * The token is valid until this time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 4;</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getExpireTime()
    {
        return $this->expire_time;
    }

    public function hasExpireTime()
    {
        return isset($this->expire_time);
    }

    public function clearExpireTime()
    {
        unset($this->expire_time);
    }

    /**
     * The token is valid until this time.
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp expire_time = 4;</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setExpireTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->expire_time = $var;

        return $this;
    }

}

