<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/backupdr/v1/backupvault_disk.proto

namespace Google\Cloud\BackupDR\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * DiskBackupProperties represents the properties of a Disk backup.
 *
 * Generated from protobuf message <code>google.cloud.backupdr.v1.DiskBackupProperties</code>
 */
class DiskBackupProperties extends \Google\Protobuf\Internal\Message
{
    /**
     * A description of the source disk.
     *
     * Generated from protobuf field <code>optional string description = 1;</code>
     */
    protected $description = null;
    /**
     * A list of publicly available licenses that are applicable to this backup.
     * This is applicable if the original image had licenses attached, e.g.
     * Windows image.
     *
     * Generated from protobuf field <code>repeated string licenses = 2;</code>
     */
    private $licenses;
    /**
     * A list of guest OS features that are applicable to this backup.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 3;</code>
     */
    private $guest_os_feature;
    /**
     * The architecture of the source disk. Valid values are
     * ARM64 or X86_64.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.DiskBackupProperties.Architecture architecture = 4;</code>
     */
    protected $architecture = null;
    /**
     * The URL of the type of the disk.
     *
     * Generated from protobuf field <code>optional string type = 5;</code>
     */
    protected $type = null;
    /**
     * Size(in GB) of the source disk.
     *
     * Generated from protobuf field <code>optional int64 size_gb = 6;</code>
     */
    protected $size_gb = null;
    /**
     * Region and zone are mutually exclusive fields.
     * The URL of the region of the source disk.
     *
     * Generated from protobuf field <code>optional string region = 7;</code>
     */
    protected $region = null;
    /**
     * The URL of the Zone where the source disk.
     *
     * Generated from protobuf field <code>optional string zone = 8;</code>
     */
    protected $zone = null;
    /**
     * The URL of the Zones where the source disk should be replicated.
     *
     * Generated from protobuf field <code>repeated string replica_zones = 9;</code>
     */
    private $replica_zones;
    /**
     * The source disk used to create this backup.
     *
     * Generated from protobuf field <code>optional string source_disk = 10;</code>
     */
    protected $source_disk = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $description
     *           A description of the source disk.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $licenses
     *           A list of publicly available licenses that are applicable to this backup.
     *           This is applicable if the original image had licenses attached, e.g.
     *           Windows image.
     *     @type array<\Google\Cloud\BackupDR\V1\GuestOsFeature>|\Google\Protobuf\Internal\RepeatedField $guest_os_feature
     *           A list of guest OS features that are applicable to this backup.
     *     @type int $architecture
     *           The architecture of the source disk. Valid values are
     *           ARM64 or X86_64.
     *     @type string $type
     *           The URL of the type of the disk.
     *     @type int|string $size_gb
     *           Size(in GB) of the source disk.
     *     @type string $region
     *           Region and zone are mutually exclusive fields.
     *           The URL of the region of the source disk.
     *     @type string $zone
     *           The URL of the Zone where the source disk.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $replica_zones
     *           The URL of the Zones where the source disk should be replicated.
     *     @type string $source_disk
     *           The source disk used to create this backup.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Backupdr\V1\BackupvaultDisk::initOnce();
        parent::__construct($data);
    }

    /**
     * A description of the source disk.
     *
     * Generated from protobuf field <code>optional string description = 1;</code>
     * @return string
     */
    public function getDescription()
    {
        return isset($this->description) ? $this->description : '';
    }

    public function hasDescription()
    {
        return isset($this->description);
    }

    public function clearDescription()
    {
        unset($this->description);
    }

    /**
     * A description of the source disk.
     *
     * Generated from protobuf field <code>optional string description = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * A list of publicly available licenses that are applicable to this backup.
     * This is applicable if the original image had licenses attached, e.g.
     * Windows image.
     *
     * Generated from protobuf field <code>repeated string licenses = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLicenses()
    {
        return $this->licenses;
    }

    /**
     * A list of publicly available licenses that are applicable to this backup.
     * This is applicable if the original image had licenses attached, e.g.
     * Windows image.
     *
     * Generated from protobuf field <code>repeated string licenses = 2;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setLicenses($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->licenses = $arr;

        return $this;
    }

    /**
     * A list of guest OS features that are applicable to this backup.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getGuestOsFeature()
    {
        return $this->guest_os_feature;
    }

    /**
     * A list of guest OS features that are applicable to this backup.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 3;</code>
     * @param array<\Google\Cloud\BackupDR\V1\GuestOsFeature>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setGuestOsFeature($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\BackupDR\V1\GuestOsFeature::class);
        $this->guest_os_feature = $arr;

        return $this;
    }

    /**
     * The architecture of the source disk. Valid values are
     * ARM64 or X86_64.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.DiskBackupProperties.Architecture architecture = 4;</code>
     * @return int
     */
    public function getArchitecture()
    {
        return isset($this->architecture) ? $this->architecture : 0;
    }

    public function hasArchitecture()
    {
        return isset($this->architecture);
    }

    public function clearArchitecture()
    {
        unset($this->architecture);
    }

    /**
     * The architecture of the source disk. Valid values are
     * ARM64 or X86_64.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.DiskBackupProperties.Architecture architecture = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setArchitecture($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\BackupDR\V1\DiskBackupProperties\Architecture::class);
        $this->architecture = $var;

        return $this;
    }

    /**
     * The URL of the type of the disk.
     *
     * Generated from protobuf field <code>optional string type = 5;</code>
     * @return string
     */
    public function getType()
    {
        return isset($this->type) ? $this->type : '';
    }

    public function hasType()
    {
        return isset($this->type);
    }

    public function clearType()
    {
        unset($this->type);
    }

    /**
     * The URL of the type of the disk.
     *
     * Generated from protobuf field <code>optional string type = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

    /**
     * Size(in GB) of the source disk.
     *
     * Generated from protobuf field <code>optional int64 size_gb = 6;</code>
     * @return int|string
     */
    public function getSizeGb()
    {
        return isset($this->size_gb) ? $this->size_gb : 0;
    }

    public function hasSizeGb()
    {
        return isset($this->size_gb);
    }

    public function clearSizeGb()
    {
        unset($this->size_gb);
    }

    /**
     * Size(in GB) of the source disk.
     *
     * Generated from protobuf field <code>optional int64 size_gb = 6;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSizeGb($var)
    {
        GPBUtil::checkInt64($var);
        $this->size_gb = $var;

        return $this;
    }

    /**
     * Region and zone are mutually exclusive fields.
     * The URL of the region of the source disk.
     *
     * Generated from protobuf field <code>optional string region = 7;</code>
     * @return string
     */
    public function getRegion()
    {
        return isset($this->region) ? $this->region : '';
    }

    public function hasRegion()
    {
        return isset($this->region);
    }

    public function clearRegion()
    {
        unset($this->region);
    }

    /**
     * Region and zone are mutually exclusive fields.
     * The URL of the region of the source disk.
     *
     * Generated from protobuf field <code>optional string region = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setRegion($var)
    {
        GPBUtil::checkString($var, True);
        $this->region = $var;

        return $this;
    }

    /**
     * The URL of the Zone where the source disk.
     *
     * Generated from protobuf field <code>optional string zone = 8;</code>
     * @return string
     */
    public function getZone()
    {
        return isset($this->zone) ? $this->zone : '';
    }

    public function hasZone()
    {
        return isset($this->zone);
    }

    public function clearZone()
    {
        unset($this->zone);
    }

    /**
     * The URL of the Zone where the source disk.
     *
     * Generated from protobuf field <code>optional string zone = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setZone($var)
    {
        GPBUtil::checkString($var, True);
        $this->zone = $var;

        return $this;
    }

    /**
     * The URL of the Zones where the source disk should be replicated.
     *
     * Generated from protobuf field <code>repeated string replica_zones = 9;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getReplicaZones()
    {
        return $this->replica_zones;
    }

    /**
     * The URL of the Zones where the source disk should be replicated.
     *
     * Generated from protobuf field <code>repeated string replica_zones = 9;</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setReplicaZones($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->replica_zones = $arr;

        return $this;
    }

    /**
     * The source disk used to create this backup.
     *
     * Generated from protobuf field <code>optional string source_disk = 10;</code>
     * @return string
     */
    public function getSourceDisk()
    {
        return isset($this->source_disk) ? $this->source_disk : '';
    }

    public function hasSourceDisk()
    {
        return isset($this->source_disk);
    }

    public function clearSourceDisk()
    {
        unset($this->source_disk);
    }

    /**
     * The source disk used to create this backup.
     *
     * Generated from protobuf field <code>optional string source_disk = 10;</code>
     * @param string $var
     * @return $this
     */
    public function setSourceDisk($var)
    {
        GPBUtil::checkString($var, True);
        $this->source_disk = $var;

        return $this;
    }

}

