<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/backupdr/v1/backupvault_gce.proto

namespace Google\Cloud\BackupDR\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Sets the scheduling options for an Instance.
 *
 * Generated from protobuf message <code>google.cloud.backupdr.v1.Scheduling</code>
 */
class Scheduling extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Defines the maintenance behavior for this instance.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.Scheduling.OnHostMaintenance on_host_maintenance = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $on_host_maintenance = null;
    /**
     * Optional. Specifies whether the instance should be automatically restarted
     * if it is terminated by Compute Engine (not terminated by a user).
     *
     * Generated from protobuf field <code>optional bool automatic_restart = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $automatic_restart = null;
    /**
     * Optional. Defines whether the instance is preemptible.
     *
     * Generated from protobuf field <code>optional bool preemptible = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $preemptible = null;
    /**
     * Optional. A set of node affinity and anti-affinity configurations.
     * Overrides reservationAffinity.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.Scheduling.NodeAffinity node_affinities = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $node_affinities;
    /**
     * Optional. The minimum number of virtual CPUs this instance will consume
     * when running on a sole-tenant node.
     *
     * Generated from protobuf field <code>optional int32 min_node_cpus = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $min_node_cpus = null;
    /**
     * Optional. Specifies the provisioning model of the instance.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.Scheduling.ProvisioningModel provisioning_model = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $provisioning_model = null;
    /**
     * Optional. Specifies the termination action for the instance.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.Scheduling.InstanceTerminationAction instance_termination_action = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $instance_termination_action = null;
    /**
     * Optional. Specifies the maximum amount of time a Local Ssd Vm should wait
     * while recovery of the Local Ssd state is attempted. Its value should be in
     * between 0 and 168 hours with hour granularity and the default value being 1
     * hour.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.SchedulingDuration local_ssd_recovery_timeout = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $local_ssd_recovery_timeout = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $on_host_maintenance
     *           Optional. Defines the maintenance behavior for this instance.
     *     @type bool $automatic_restart
     *           Optional. Specifies whether the instance should be automatically restarted
     *           if it is terminated by Compute Engine (not terminated by a user).
     *     @type bool $preemptible
     *           Optional. Defines whether the instance is preemptible.
     *     @type array<\Google\Cloud\BackupDR\V1\Scheduling\NodeAffinity>|\Google\Protobuf\Internal\RepeatedField $node_affinities
     *           Optional. A set of node affinity and anti-affinity configurations.
     *           Overrides reservationAffinity.
     *     @type int $min_node_cpus
     *           Optional. The minimum number of virtual CPUs this instance will consume
     *           when running on a sole-tenant node.
     *     @type int $provisioning_model
     *           Optional. Specifies the provisioning model of the instance.
     *     @type int $instance_termination_action
     *           Optional. Specifies the termination action for the instance.
     *     @type \Google\Cloud\BackupDR\V1\SchedulingDuration $local_ssd_recovery_timeout
     *           Optional. Specifies the maximum amount of time a Local Ssd Vm should wait
     *           while recovery of the Local Ssd state is attempted. Its value should be in
     *           between 0 and 168 hours with hour granularity and the default value being 1
     *           hour.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Backupdr\V1\BackupvaultGce::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Defines the maintenance behavior for this instance.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.Scheduling.OnHostMaintenance on_host_maintenance = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getOnHostMaintenance()
    {
        return isset($this->on_host_maintenance) ? $this->on_host_maintenance : 0;
    }

    public function hasOnHostMaintenance()
    {
        return isset($this->on_host_maintenance);
    }

    public function clearOnHostMaintenance()
    {
        unset($this->on_host_maintenance);
    }

    /**
     * Optional. Defines the maintenance behavior for this instance.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.Scheduling.OnHostMaintenance on_host_maintenance = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setOnHostMaintenance($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\BackupDR\V1\Scheduling\OnHostMaintenance::class);
        $this->on_host_maintenance = $var;

        return $this;
    }

    /**
     * Optional. Specifies whether the instance should be automatically restarted
     * if it is terminated by Compute Engine (not terminated by a user).
     *
     * Generated from protobuf field <code>optional bool automatic_restart = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getAutomaticRestart()
    {
        return isset($this->automatic_restart) ? $this->automatic_restart : false;
    }

    public function hasAutomaticRestart()
    {
        return isset($this->automatic_restart);
    }

    public function clearAutomaticRestart()
    {
        unset($this->automatic_restart);
    }

    /**
     * Optional. Specifies whether the instance should be automatically restarted
     * if it is terminated by Compute Engine (not terminated by a user).
     *
     * Generated from protobuf field <code>optional bool automatic_restart = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setAutomaticRestart($var)
    {
        GPBUtil::checkBool($var);
        $this->automatic_restart = $var;

        return $this;
    }

    /**
     * Optional. Defines whether the instance is preemptible.
     *
     * Generated from protobuf field <code>optional bool preemptible = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getPreemptible()
    {
        return isset($this->preemptible) ? $this->preemptible : false;
    }

    public function hasPreemptible()
    {
        return isset($this->preemptible);
    }

    public function clearPreemptible()
    {
        unset($this->preemptible);
    }

    /**
     * Optional. Defines whether the instance is preemptible.
     *
     * Generated from protobuf field <code>optional bool preemptible = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setPreemptible($var)
    {
        GPBUtil::checkBool($var);
        $this->preemptible = $var;

        return $this;
    }

    /**
     * Optional. A set of node affinity and anti-affinity configurations.
     * Overrides reservationAffinity.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.Scheduling.NodeAffinity node_affinities = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getNodeAffinities()
    {
        return $this->node_affinities;
    }

    /**
     * Optional. A set of node affinity and anti-affinity configurations.
     * Overrides reservationAffinity.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.Scheduling.NodeAffinity node_affinities = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Cloud\BackupDR\V1\Scheduling\NodeAffinity>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setNodeAffinities($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\BackupDR\V1\Scheduling\NodeAffinity::class);
        $this->node_affinities = $arr;

        return $this;
    }

    /**
     * Optional. The minimum number of virtual CPUs this instance will consume
     * when running on a sole-tenant node.
     *
     * Generated from protobuf field <code>optional int32 min_node_cpus = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getMinNodeCpus()
    {
        return isset($this->min_node_cpus) ? $this->min_node_cpus : 0;
    }

    public function hasMinNodeCpus()
    {
        return isset($this->min_node_cpus);
    }

    public function clearMinNodeCpus()
    {
        unset($this->min_node_cpus);
    }

    /**
     * Optional. The minimum number of virtual CPUs this instance will consume
     * when running on a sole-tenant node.
     *
     * Generated from protobuf field <code>optional int32 min_node_cpus = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setMinNodeCpus($var)
    {
        GPBUtil::checkInt32($var);
        $this->min_node_cpus = $var;

        return $this;
    }

    /**
     * Optional. Specifies the provisioning model of the instance.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.Scheduling.ProvisioningModel provisioning_model = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getProvisioningModel()
    {
        return isset($this->provisioning_model) ? $this->provisioning_model : 0;
    }

    public function hasProvisioningModel()
    {
        return isset($this->provisioning_model);
    }

    public function clearProvisioningModel()
    {
        unset($this->provisioning_model);
    }

    /**
     * Optional. Specifies the provisioning model of the instance.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.Scheduling.ProvisioningModel provisioning_model = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setProvisioningModel($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\BackupDR\V1\Scheduling\ProvisioningModel::class);
        $this->provisioning_model = $var;

        return $this;
    }

    /**
     * Optional. Specifies the termination action for the instance.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.Scheduling.InstanceTerminationAction instance_termination_action = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getInstanceTerminationAction()
    {
        return isset($this->instance_termination_action) ? $this->instance_termination_action : 0;
    }

    public function hasInstanceTerminationAction()
    {
        return isset($this->instance_termination_action);
    }

    public function clearInstanceTerminationAction()
    {
        unset($this->instance_termination_action);
    }

    /**
     * Optional. Specifies the termination action for the instance.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.Scheduling.InstanceTerminationAction instance_termination_action = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setInstanceTerminationAction($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\BackupDR\V1\Scheduling\InstanceTerminationAction::class);
        $this->instance_termination_action = $var;

        return $this;
    }

    /**
     * Optional. Specifies the maximum amount of time a Local Ssd Vm should wait
     * while recovery of the Local Ssd state is attempted. Its value should be in
     * between 0 and 168 hours with hour granularity and the default value being 1
     * hour.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.SchedulingDuration local_ssd_recovery_timeout = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\BackupDR\V1\SchedulingDuration|null
     */
    public function getLocalSsdRecoveryTimeout()
    {
        return $this->local_ssd_recovery_timeout;
    }

    public function hasLocalSsdRecoveryTimeout()
    {
        return isset($this->local_ssd_recovery_timeout);
    }

    public function clearLocalSsdRecoveryTimeout()
    {
        unset($this->local_ssd_recovery_timeout);
    }

    /**
     * Optional. Specifies the maximum amount of time a Local Ssd Vm should wait
     * while recovery of the Local Ssd state is attempted. Its value should be in
     * between 0 and 168 hours with hour granularity and the default value being 1
     * hour.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.SchedulingDuration local_ssd_recovery_timeout = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\BackupDR\V1\SchedulingDuration $var
     * @return $this
     */
    public function setLocalSsdRecoveryTimeout($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\BackupDR\V1\SchedulingDuration::class);
        $this->local_ssd_recovery_timeout = $var;

        return $this;
    }

}

