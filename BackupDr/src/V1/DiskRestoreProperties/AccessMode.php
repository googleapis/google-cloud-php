<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/backupdr/v1/backupvault_disk.proto

namespace Google\Cloud\BackupDR\V1\DiskRestoreProperties;

use UnexpectedValueException;

/**
 * The supported access modes of the disk.
 *
 * Protobuf type <code>google.cloud.backupdr.v1.DiskRestoreProperties.AccessMode</code>
 */
class AccessMode
{
    /**
     * The default AccessMode, means the disk can be attached to single instance
     * in RW mode.
     *
     * Generated from protobuf enum <code>READ_WRITE_SINGLE = 0;</code>
     */
    const READ_WRITE_SINGLE = 0;
    /**
     * The AccessMode means the disk can be attached to multiple instances in RW
     * mode.
     *
     * Generated from protobuf enum <code>READ_WRITE_MANY = 1;</code>
     */
    const READ_WRITE_MANY = 1;
    /**
     * The AccessMode means the disk can be attached to multiple instances in RO
     * mode.
     *
     * Generated from protobuf enum <code>READ_ONLY_MANY = 2;</code>
     */
    const READ_ONLY_MANY = 2;

    private static $valueToName = [
        self::READ_WRITE_SINGLE => 'READ_WRITE_SINGLE',
        self::READ_WRITE_MANY => 'READ_WRITE_MANY',
        self::READ_ONLY_MANY => 'READ_ONLY_MANY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


