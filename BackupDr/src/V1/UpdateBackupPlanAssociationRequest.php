<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/backupdr/v1/backupplanassociation.proto

namespace Google\Cloud\BackupDR\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request message for updating a backup plan association.
 *
 * Generated from protobuf message <code>google.cloud.backupdr.v1.UpdateBackupPlanAssociationRequest</code>
 */
class UpdateBackupPlanAssociationRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. The resource being updated
     *
     * Generated from protobuf field <code>.google.cloud.backupdr.v1.BackupPlanAssociation backup_plan_association = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $backup_plan_association = null;
    /**
     * Required. The list of fields to update.
     * Field mask is used to specify the fields to be overwritten in the
     * BackupPlanAssociation resource by the update.
     * The fields specified in the update_mask are relative to the resource, not
     * the full request. A field will be overwritten if it is in the mask. If the
     * user does not provide a mask then the request will fail.
     * Currently backup_plan_association.backup_plan is the only supported field.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $update_mask = null;
    /**
     * Optional. An optional request ID to identify requests. Specify a unique
     * request ID so that if you must retry your request, the server will know to
     * ignore the request if it has already been completed. The server will
     * guarantee that for at least 60 minutes since the first request.
     * For example, consider a situation where you make an initial request and t
     * he request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, will ignore the second request. This prevents
     * clients from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     */
    protected $request_id = '';

    /**
     * @param \Google\Cloud\BackupDR\V1\BackupPlanAssociation $backupPlanAssociation Required. The resource being updated
     * @param \Google\Protobuf\FieldMask                      $updateMask            Required. The list of fields to update.
     *                                                                               Field mask is used to specify the fields to be overwritten in the
     *                                                                               BackupPlanAssociation resource by the update.
     *                                                                               The fields specified in the update_mask are relative to the resource, not
     *                                                                               the full request. A field will be overwritten if it is in the mask. If the
     *                                                                               user does not provide a mask then the request will fail.
     *                                                                               Currently backup_plan_association.backup_plan is the only supported field.
     *
     * @return \Google\Cloud\BackupDR\V1\UpdateBackupPlanAssociationRequest
     *
     * @experimental
     */
    public static function build(\Google\Cloud\BackupDR\V1\BackupPlanAssociation $backupPlanAssociation, \Google\Protobuf\FieldMask $updateMask): self
    {
        return (new self())
            ->setBackupPlanAssociation($backupPlanAssociation)
            ->setUpdateMask($updateMask);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Cloud\BackupDR\V1\BackupPlanAssociation $backup_plan_association
     *           Required. The resource being updated
     *     @type \Google\Protobuf\FieldMask $update_mask
     *           Required. The list of fields to update.
     *           Field mask is used to specify the fields to be overwritten in the
     *           BackupPlanAssociation resource by the update.
     *           The fields specified in the update_mask are relative to the resource, not
     *           the full request. A field will be overwritten if it is in the mask. If the
     *           user does not provide a mask then the request will fail.
     *           Currently backup_plan_association.backup_plan is the only supported field.
     *     @type string $request_id
     *           Optional. An optional request ID to identify requests. Specify a unique
     *           request ID so that if you must retry your request, the server will know to
     *           ignore the request if it has already been completed. The server will
     *           guarantee that for at least 60 minutes since the first request.
     *           For example, consider a situation where you make an initial request and t
     *           he request times out. If you make the request again with the same request
     *           ID, the server can check if original operation with the same request ID
     *           was received, and if so, will ignore the second request. This prevents
     *           clients from accidentally creating duplicate commitments.
     *           The request ID must be a valid UUID with the exception that zero UUID is
     *           not supported (00000000-0000-0000-0000-000000000000).
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Backupdr\V1\Backupplanassociation::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. The resource being updated
     *
     * Generated from protobuf field <code>.google.cloud.backupdr.v1.BackupPlanAssociation backup_plan_association = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\BackupDR\V1\BackupPlanAssociation|null
     */
    public function getBackupPlanAssociation()
    {
        return $this->backup_plan_association;
    }

    public function hasBackupPlanAssociation()
    {
        return isset($this->backup_plan_association);
    }

    public function clearBackupPlanAssociation()
    {
        unset($this->backup_plan_association);
    }

    /**
     * Required. The resource being updated
     *
     * Generated from protobuf field <code>.google.cloud.backupdr.v1.BackupPlanAssociation backup_plan_association = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\BackupDR\V1\BackupPlanAssociation $var
     * @return $this
     */
    public function setBackupPlanAssociation($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\BackupDR\V1\BackupPlanAssociation::class);
        $this->backup_plan_association = $var;

        return $this;
    }

    /**
     * Required. The list of fields to update.
     * Field mask is used to specify the fields to be overwritten in the
     * BackupPlanAssociation resource by the update.
     * The fields specified in the update_mask are relative to the resource, not
     * the full request. A field will be overwritten if it is in the mask. If the
     * user does not provide a mask then the request will fail.
     * Currently backup_plan_association.backup_plan is the only supported field.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Protobuf\FieldMask|null
     */
    public function getUpdateMask()
    {
        return $this->update_mask;
    }

    public function hasUpdateMask()
    {
        return isset($this->update_mask);
    }

    public function clearUpdateMask()
    {
        unset($this->update_mask);
    }

    /**
     * Required. The list of fields to update.
     * Field mask is used to specify the fields to be overwritten in the
     * BackupPlanAssociation resource by the update.
     * The fields specified in the update_mask are relative to the resource, not
     * the full request. A field will be overwritten if it is in the mask. If the
     * user does not provide a mask then the request will fail.
     * Currently backup_plan_association.backup_plan is the only supported field.
     *
     * Generated from protobuf field <code>.google.protobuf.FieldMask update_mask = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setUpdateMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->update_mask = $var;

        return $this;
    }

    /**
     * Optional. An optional request ID to identify requests. Specify a unique
     * request ID so that if you must retry your request, the server will know to
     * ignore the request if it has already been completed. The server will
     * guarantee that for at least 60 minutes since the first request.
     * For example, consider a situation where you make an initial request and t
     * he request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, will ignore the second request. This prevents
     * clients from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @return string
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Optional. An optional request ID to identify requests. Specify a unique
     * request ID so that if you must retry your request, the server will know to
     * ignore the request if it has already been completed. The server will
     * guarantee that for at least 60 minutes since the first request.
     * For example, consider a situation where you make an initial request and t
     * he request times out. If you make the request again with the same request
     * ID, the server can check if original operation with the same request ID
     * was received, and if so, will ignore the second request. This prevents
     * clients from accidentally creating duplicate commitments.
     * The request ID must be a valid UUID with the exception that zero UUID is
     * not supported (00000000-0000-0000-0000-000000000000).
     *
     * Generated from protobuf field <code>string request_id = 3 [(.google.api.field_behavior) = OPTIONAL, (.google.api.field_info) = {</code>
     * @param string $var
     * @return $this
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;

        return $this;
    }

}

