<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/backupdr/v1/backupvault_gce.proto

namespace Google\Cloud\BackupDR\V1\AttachedDisk;

use UnexpectedValueException;

/**
 * List of the Disk Types.
 *
 * Protobuf type <code>google.cloud.backupdr.v1.AttachedDisk.DiskType</code>
 */
class DiskType
{
    /**
     * Default value, which is unused.
     *
     * Generated from protobuf enum <code>DISK_TYPE_UNSPECIFIED = 0;</code>
     */
    const DISK_TYPE_UNSPECIFIED = 0;
    /**
     * A scratch disk type.
     *
     * Generated from protobuf enum <code>SCRATCH = 1;</code>
     */
    const SCRATCH = 1;
    /**
     * A persistent disk type.
     *
     * Generated from protobuf enum <code>PERSISTENT = 2;</code>
     */
    const PERSISTENT = 2;

    private static $valueToName = [
        self::DISK_TYPE_UNSPECIFIED => 'DISK_TYPE_UNSPECIFIED',
        self::SCRATCH => 'SCRATCH',
        self::PERSISTENT => 'PERSISTENT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


