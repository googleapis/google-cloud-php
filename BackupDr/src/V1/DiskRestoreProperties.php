<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/backupdr/v1/backupvault_disk.proto

namespace Google\Cloud\BackupDR\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * DiskRestoreProperties represents the properties of a Disk restore.
 *
 * Generated from protobuf message <code>google.cloud.backupdr.v1.DiskRestoreProperties</code>
 */
class DiskRestoreProperties extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Name of the disk.
     *
     * Generated from protobuf field <code>optional string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $name = null;
    /**
     * Optional. An optional description of this resource. Provide this property
     * when you create the resource.
     *
     * Generated from protobuf field <code>optional string description = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $description = null;
    /**
     * Required. The size of the disk in GB.
     *
     * Generated from protobuf field <code>optional int64 size_gb = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $size_gb = null;
    /**
     * Optional. A list of publicly available licenses that are applicable to this
     * backup. This is applicable if the original image had licenses attached,
     * e.g. Windows image
     *
     * Generated from protobuf field <code>repeated string licenses = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $licenses;
    /**
     * Optional. A list of features to enable in the guest operating system. This
     * is applicable only for bootable images.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $guest_os_feature;
    /**
     * Optional. Encrypts the disk using a
     * customer-supplied encryption key or a customer-managed encryption key.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $disk_encryption_key = null;
    /**
     * Optional. Physical block size of the persistent disk, in bytes.
     * If not present in a request, a default value is used.
     * Currently, the supported size is 4096.
     *
     * Generated from protobuf field <code>optional int64 physical_block_size_bytes = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $physical_block_size_bytes = null;
    /**
     * Optional. Indicates how many IOPS to provision for the disk. This sets the
     * number of I/O operations per second that the disk can handle.
     *
     * Generated from protobuf field <code>optional int64 provisioned_iops = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $provisioned_iops = null;
    /**
     * Optional. Indicates how much throughput to provision for the disk. This
     * sets the number of throughput MB per second that the disk can handle.
     *
     * Generated from protobuf field <code>optional int64 provisioned_throughput = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $provisioned_throughput = null;
    /**
     * Optional. Indicates whether this disk is using confidential compute mode.
     * Encryption with a Cloud KMS key is required to enable this option.
     *
     * Generated from protobuf field <code>optional bool enable_confidential_compute = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $enable_confidential_compute = null;
    /**
     * Optional. The storage pool in which the new disk is created. You can
     * provide this as a partial or full URL to the resource.
     *
     * Generated from protobuf field <code>optional string storage_pool = 11 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     */
    protected $storage_pool = null;
    /**
     * Optional. The access mode of the disk.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.DiskRestoreProperties.AccessMode access_mode = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $access_mode = null;
    /**
     * Optional. The architecture of the source disk. Valid values are
     * ARM64 or X86_64.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.DiskRestoreProperties.Architecture architecture = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $architecture = null;
    /**
     * Optional. Resource policies applied to this disk.
     *
     * Generated from protobuf field <code>repeated string resource_policy = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $resource_policy;
    /**
     * Required. URL of the disk type resource describing which disk type to use
     * to create the disk.
     *
     * Generated from protobuf field <code>optional string type = 16 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    protected $type = null;
    /**
     * Optional. Labels to apply to this disk. These can be modified later using
     * <code>setLabels</code> method. Label values can be empty.
     *
     * Generated from protobuf field <code>map<string, string> labels = 17 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $labels;
    /**
     * Optional. Resource manager tags to be bound to the disk.
     *
     * Generated from protobuf field <code>map<string, string> resource_manager_tags = 18 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $resource_manager_tags;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. Name of the disk.
     *     @type string $description
     *           Optional. An optional description of this resource. Provide this property
     *           when you create the resource.
     *     @type int|string $size_gb
     *           Required. The size of the disk in GB.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $licenses
     *           Optional. A list of publicly available licenses that are applicable to this
     *           backup. This is applicable if the original image had licenses attached,
     *           e.g. Windows image
     *     @type array<\Google\Cloud\BackupDR\V1\GuestOsFeature>|\Google\Protobuf\Internal\RepeatedField $guest_os_feature
     *           Optional. A list of features to enable in the guest operating system. This
     *           is applicable only for bootable images.
     *     @type \Google\Cloud\BackupDR\V1\CustomerEncryptionKey $disk_encryption_key
     *           Optional. Encrypts the disk using a
     *           customer-supplied encryption key or a customer-managed encryption key.
     *     @type int|string $physical_block_size_bytes
     *           Optional. Physical block size of the persistent disk, in bytes.
     *           If not present in a request, a default value is used.
     *           Currently, the supported size is 4096.
     *     @type int|string $provisioned_iops
     *           Optional. Indicates how many IOPS to provision for the disk. This sets the
     *           number of I/O operations per second that the disk can handle.
     *     @type int|string $provisioned_throughput
     *           Optional. Indicates how much throughput to provision for the disk. This
     *           sets the number of throughput MB per second that the disk can handle.
     *     @type bool $enable_confidential_compute
     *           Optional. Indicates whether this disk is using confidential compute mode.
     *           Encryption with a Cloud KMS key is required to enable this option.
     *     @type string $storage_pool
     *           Optional. The storage pool in which the new disk is created. You can
     *           provide this as a partial or full URL to the resource.
     *     @type int $access_mode
     *           Optional. The access mode of the disk.
     *     @type int $architecture
     *           Optional. The architecture of the source disk. Valid values are
     *           ARM64 or X86_64.
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $resource_policy
     *           Optional. Resource policies applied to this disk.
     *     @type string $type
     *           Required. URL of the disk type resource describing which disk type to use
     *           to create the disk.
     *     @type array|\Google\Protobuf\Internal\MapField $labels
     *           Optional. Labels to apply to this disk. These can be modified later using
     *           <code>setLabels</code> method. Label values can be empty.
     *     @type array|\Google\Protobuf\Internal\MapField $resource_manager_tags
     *           Optional. Resource manager tags to be bound to the disk.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Backupdr\V1\BackupvaultDisk::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Name of the disk.
     *
     * Generated from protobuf field <code>optional string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getName()
    {
        return isset($this->name) ? $this->name : '';
    }

    public function hasName()
    {
        return isset($this->name);
    }

    public function clearName()
    {
        unset($this->name);
    }

    /**
     * Required. Name of the disk.
     *
     * Generated from protobuf field <code>optional string name = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Optional. An optional description of this resource. Provide this property
     * when you create the resource.
     *
     * Generated from protobuf field <code>optional string description = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getDescription()
    {
        return isset($this->description) ? $this->description : '';
    }

    public function hasDescription()
    {
        return isset($this->description);
    }

    public function clearDescription()
    {
        unset($this->description);
    }

    /**
     * Optional. An optional description of this resource. Provide this property
     * when you create the resource.
     *
     * Generated from protobuf field <code>optional string description = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;

        return $this;
    }

    /**
     * Required. The size of the disk in GB.
     *
     * Generated from protobuf field <code>optional int64 size_gb = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return int|string
     */
    public function getSizeGb()
    {
        return isset($this->size_gb) ? $this->size_gb : 0;
    }

    public function hasSizeGb()
    {
        return isset($this->size_gb);
    }

    public function clearSizeGb()
    {
        unset($this->size_gb);
    }

    /**
     * Required. The size of the disk in GB.
     *
     * Generated from protobuf field <code>optional int64 size_gb = 3 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param int|string $var
     * @return $this
     */
    public function setSizeGb($var)
    {
        GPBUtil::checkInt64($var);
        $this->size_gb = $var;

        return $this;
    }

    /**
     * Optional. A list of publicly available licenses that are applicable to this
     * backup. This is applicable if the original image had licenses attached,
     * e.g. Windows image
     *
     * Generated from protobuf field <code>repeated string licenses = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getLicenses()
    {
        return $this->licenses;
    }

    /**
     * Optional. A list of publicly available licenses that are applicable to this
     * backup. This is applicable if the original image had licenses attached,
     * e.g. Windows image
     *
     * Generated from protobuf field <code>repeated string licenses = 4 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setLicenses($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->licenses = $arr;

        return $this;
    }

    /**
     * Optional. A list of features to enable in the guest operating system. This
     * is applicable only for bootable images.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getGuestOsFeature()
    {
        return $this->guest_os_feature;
    }

    /**
     * Optional. A list of features to enable in the guest operating system. This
     * is applicable only for bootable images.
     *
     * Generated from protobuf field <code>repeated .google.cloud.backupdr.v1.GuestOsFeature guest_os_feature = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<\Google\Cloud\BackupDR\V1\GuestOsFeature>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setGuestOsFeature($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Cloud\BackupDR\V1\GuestOsFeature::class);
        $this->guest_os_feature = $arr;

        return $this;
    }

    /**
     * Optional. Encrypts the disk using a
     * customer-supplied encryption key or a customer-managed encryption key.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\BackupDR\V1\CustomerEncryptionKey|null
     */
    public function getDiskEncryptionKey()
    {
        return $this->disk_encryption_key;
    }

    public function hasDiskEncryptionKey()
    {
        return isset($this->disk_encryption_key);
    }

    public function clearDiskEncryptionKey()
    {
        unset($this->disk_encryption_key);
    }

    /**
     * Optional. Encrypts the disk using a
     * customer-supplied encryption key or a customer-managed encryption key.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.CustomerEncryptionKey disk_encryption_key = 6 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\BackupDR\V1\CustomerEncryptionKey $var
     * @return $this
     */
    public function setDiskEncryptionKey($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\BackupDR\V1\CustomerEncryptionKey::class);
        $this->disk_encryption_key = $var;

        return $this;
    }

    /**
     * Optional. Physical block size of the persistent disk, in bytes.
     * If not present in a request, a default value is used.
     * Currently, the supported size is 4096.
     *
     * Generated from protobuf field <code>optional int64 physical_block_size_bytes = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int|string
     */
    public function getPhysicalBlockSizeBytes()
    {
        return isset($this->physical_block_size_bytes) ? $this->physical_block_size_bytes : 0;
    }

    public function hasPhysicalBlockSizeBytes()
    {
        return isset($this->physical_block_size_bytes);
    }

    public function clearPhysicalBlockSizeBytes()
    {
        unset($this->physical_block_size_bytes);
    }

    /**
     * Optional. Physical block size of the persistent disk, in bytes.
     * If not present in a request, a default value is used.
     * Currently, the supported size is 4096.
     *
     * Generated from protobuf field <code>optional int64 physical_block_size_bytes = 7 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int|string $var
     * @return $this
     */
    public function setPhysicalBlockSizeBytes($var)
    {
        GPBUtil::checkInt64($var);
        $this->physical_block_size_bytes = $var;

        return $this;
    }

    /**
     * Optional. Indicates how many IOPS to provision for the disk. This sets the
     * number of I/O operations per second that the disk can handle.
     *
     * Generated from protobuf field <code>optional int64 provisioned_iops = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int|string
     */
    public function getProvisionedIops()
    {
        return isset($this->provisioned_iops) ? $this->provisioned_iops : 0;
    }

    public function hasProvisionedIops()
    {
        return isset($this->provisioned_iops);
    }

    public function clearProvisionedIops()
    {
        unset($this->provisioned_iops);
    }

    /**
     * Optional. Indicates how many IOPS to provision for the disk. This sets the
     * number of I/O operations per second that the disk can handle.
     *
     * Generated from protobuf field <code>optional int64 provisioned_iops = 8 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int|string $var
     * @return $this
     */
    public function setProvisionedIops($var)
    {
        GPBUtil::checkInt64($var);
        $this->provisioned_iops = $var;

        return $this;
    }

    /**
     * Optional. Indicates how much throughput to provision for the disk. This
     * sets the number of throughput MB per second that the disk can handle.
     *
     * Generated from protobuf field <code>optional int64 provisioned_throughput = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int|string
     */
    public function getProvisionedThroughput()
    {
        return isset($this->provisioned_throughput) ? $this->provisioned_throughput : 0;
    }

    public function hasProvisionedThroughput()
    {
        return isset($this->provisioned_throughput);
    }

    public function clearProvisionedThroughput()
    {
        unset($this->provisioned_throughput);
    }

    /**
     * Optional. Indicates how much throughput to provision for the disk. This
     * sets the number of throughput MB per second that the disk can handle.
     *
     * Generated from protobuf field <code>optional int64 provisioned_throughput = 9 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int|string $var
     * @return $this
     */
    public function setProvisionedThroughput($var)
    {
        GPBUtil::checkInt64($var);
        $this->provisioned_throughput = $var;

        return $this;
    }

    /**
     * Optional. Indicates whether this disk is using confidential compute mode.
     * Encryption with a Cloud KMS key is required to enable this option.
     *
     * Generated from protobuf field <code>optional bool enable_confidential_compute = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getEnableConfidentialCompute()
    {
        return isset($this->enable_confidential_compute) ? $this->enable_confidential_compute : false;
    }

    public function hasEnableConfidentialCompute()
    {
        return isset($this->enable_confidential_compute);
    }

    public function clearEnableConfidentialCompute()
    {
        unset($this->enable_confidential_compute);
    }

    /**
     * Optional. Indicates whether this disk is using confidential compute mode.
     * Encryption with a Cloud KMS key is required to enable this option.
     *
     * Generated from protobuf field <code>optional bool enable_confidential_compute = 10 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableConfidentialCompute($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_confidential_compute = $var;

        return $this;
    }

    /**
     * Optional. The storage pool in which the new disk is created. You can
     * provide this as a partial or full URL to the resource.
     *
     * Generated from protobuf field <code>optional string storage_pool = 11 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getStoragePool()
    {
        return isset($this->storage_pool) ? $this->storage_pool : '';
    }

    public function hasStoragePool()
    {
        return isset($this->storage_pool);
    }

    public function clearStoragePool()
    {
        unset($this->storage_pool);
    }

    /**
     * Optional. The storage pool in which the new disk is created. You can
     * provide this as a partial or full URL to the resource.
     *
     * Generated from protobuf field <code>optional string storage_pool = 11 [(.google.api.field_behavior) = OPTIONAL, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setStoragePool($var)
    {
        GPBUtil::checkString($var, True);
        $this->storage_pool = $var;

        return $this;
    }

    /**
     * Optional. The access mode of the disk.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.DiskRestoreProperties.AccessMode access_mode = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getAccessMode()
    {
        return isset($this->access_mode) ? $this->access_mode : 0;
    }

    public function hasAccessMode()
    {
        return isset($this->access_mode);
    }

    public function clearAccessMode()
    {
        unset($this->access_mode);
    }

    /**
     * Optional. The access mode of the disk.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.DiskRestoreProperties.AccessMode access_mode = 12 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setAccessMode($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\BackupDR\V1\DiskRestoreProperties\AccessMode::class);
        $this->access_mode = $var;

        return $this;
    }

    /**
     * Optional. The architecture of the source disk. Valid values are
     * ARM64 or X86_64.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.DiskRestoreProperties.Architecture architecture = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int
     */
    public function getArchitecture()
    {
        return isset($this->architecture) ? $this->architecture : 0;
    }

    public function hasArchitecture()
    {
        return isset($this->architecture);
    }

    public function clearArchitecture()
    {
        unset($this->architecture);
    }

    /**
     * Optional. The architecture of the source disk. Valid values are
     * ARM64 or X86_64.
     *
     * Generated from protobuf field <code>optional .google.cloud.backupdr.v1.DiskRestoreProperties.Architecture architecture = 14 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int $var
     * @return $this
     */
    public function setArchitecture($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\BackupDR\V1\DiskRestoreProperties\Architecture::class);
        $this->architecture = $var;

        return $this;
    }

    /**
     * Optional. Resource policies applied to this disk.
     *
     * Generated from protobuf field <code>repeated string resource_policy = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getResourcePolicy()
    {
        return $this->resource_policy;
    }

    /**
     * Optional. Resource policies applied to this disk.
     *
     * Generated from protobuf field <code>repeated string resource_policy = 15 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setResourcePolicy($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->resource_policy = $arr;

        return $this;
    }

    /**
     * Required. URL of the disk type resource describing which disk type to use
     * to create the disk.
     *
     * Generated from protobuf field <code>optional string type = 16 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return string
     */
    public function getType()
    {
        return isset($this->type) ? $this->type : '';
    }

    public function hasType()
    {
        return isset($this->type);
    }

    public function clearType()
    {
        unset($this->type);
    }

    /**
     * Required. URL of the disk type resource describing which disk type to use
     * to create the disk.
     *
     * Generated from protobuf field <code>optional string type = 16 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

    /**
     * Optional. Labels to apply to this disk. These can be modified later using
     * <code>setLabels</code> method. Label values can be empty.
     *
     * Generated from protobuf field <code>map<string, string> labels = 17 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getLabels()
    {
        return $this->labels;
    }

    /**
     * Optional. Labels to apply to this disk. These can be modified later using
     * <code>setLabels</code> method. Label values can be empty.
     *
     * Generated from protobuf field <code>map<string, string> labels = 17 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setLabels($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->labels = $arr;

        return $this;
    }

    /**
     * Optional. Resource manager tags to be bound to the disk.
     *
     * Generated from protobuf field <code>map<string, string> resource_manager_tags = 18 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getResourceManagerTags()
    {
        return $this->resource_manager_tags;
    }

    /**
     * Optional. Resource manager tags to be bound to the disk.
     *
     * Generated from protobuf field <code>map<string, string> resource_manager_tags = 18 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setResourceManagerTags($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->resource_manager_tags = $arr;

        return $this;
    }

}

