<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/notebooks/v1/managed_service.proto

namespace Google\Cloud\Notebooks\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for creating a notebook instance diagnostic file.
 *
 * Generated from protobuf message <code>google.cloud.notebooks.v1.DiagnoseRuntimeRequest</code>
 */
class DiagnoseRuntimeRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Required. Format:
     * `projects/{project_id}/locations/{location}/runtimes/{runtimes_id}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     */
    private $name = '';
    /**
     * Required. Defines flags that are used to run the diagnostic tool
     *
     * Generated from protobuf field <code>.google.cloud.notebooks.v1.DiagnosticConfig diagnostic_config = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private $diagnostic_config = null;

    /**
     * @param string                                      $name             Required. Format:
     *                                                                      `projects/{project_id}/locations/{location}/runtimes/{runtimes_id}`
     *                                                                      Please see {@see ManagedNotebookServiceClient::runtimeName()} for help formatting this field.
     * @param \Google\Cloud\Notebooks\V1\DiagnosticConfig $diagnosticConfig Required. Defines flags that are used to run the diagnostic tool
     *
     * @return \Google\Cloud\Notebooks\V1\DiagnoseRuntimeRequest
     *
     * @experimental
     */
    public static function build(string $name, \Google\Cloud\Notebooks\V1\DiagnosticConfig $diagnosticConfig): self
    {
        return (new self())
            ->setName($name)
            ->setDiagnosticConfig($diagnosticConfig);
    }

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *           Required. Format:
     *           `projects/{project_id}/locations/{location}/runtimes/{runtimes_id}`
     *     @type \Google\Cloud\Notebooks\V1\DiagnosticConfig $diagnostic_config
     *           Required. Defines flags that are used to run the diagnostic tool
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Notebooks\V1\ManagedService::initOnce();
        parent::__construct($data);
    }

    /**
     * Required. Format:
     * `projects/{project_id}/locations/{location}/runtimes/{runtimes_id}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Required. Format:
     * `projects/{project_id}/locations/{location}/runtimes/{runtimes_id}`
     *
     * Generated from protobuf field <code>string name = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = {</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Required. Defines flags that are used to run the diagnostic tool
     *
     * Generated from protobuf field <code>.google.cloud.notebooks.v1.DiagnosticConfig diagnostic_config = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return \Google\Cloud\Notebooks\V1\DiagnosticConfig|null
     */
    public function getDiagnosticConfig()
    {
        return $this->diagnostic_config;
    }

    public function hasDiagnosticConfig()
    {
        return isset($this->diagnostic_config);
    }

    public function clearDiagnosticConfig()
    {
        unset($this->diagnostic_config);
    }

    /**
     * Required. Defines flags that are used to run the diagnostic tool
     *
     * Generated from protobuf field <code>.google.cloud.notebooks.v1.DiagnosticConfig diagnostic_config = 2 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param \Google\Cloud\Notebooks\V1\DiagnosticConfig $var
     * @return $this
     */
    public function setDiagnosticConfig($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Notebooks\V1\DiagnosticConfig::class);
        $this->diagnostic_config = $var;

        return $this;
    }

}

