<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/notebooks/v2/gce_setup.proto

namespace Google\Cloud\Notebooks\V2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A GPU driver configuration
 *
 * Generated from protobuf message <code>google.cloud.notebooks.v2.GPUDriverConfig</code>
 */
class GPUDriverConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. Whether the end user authorizes Google Cloud to install GPU
     * driver on this VM instance. If this field is empty or set to false, the GPU
     * driver won't be installed. Only applicable to instances with GPUs.
     *
     * Generated from protobuf field <code>bool enable_gpu_driver = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $enable_gpu_driver = false;
    /**
     * Optional. Specify a custom Cloud Storage path where the GPU driver is
     * stored. If not specified, we'll automatically choose from official GPU
     * drivers.
     *
     * Generated from protobuf field <code>string custom_gpu_driver_path = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $custom_gpu_driver_path = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enable_gpu_driver
     *           Optional. Whether the end user authorizes Google Cloud to install GPU
     *           driver on this VM instance. If this field is empty or set to false, the GPU
     *           driver won't be installed. Only applicable to instances with GPUs.
     *     @type string $custom_gpu_driver_path
     *           Optional. Specify a custom Cloud Storage path where the GPU driver is
     *           stored. If not specified, we'll automatically choose from official GPU
     *           drivers.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Notebooks\V2\GceSetup::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. Whether the end user authorizes Google Cloud to install GPU
     * driver on this VM instance. If this field is empty or set to false, the GPU
     * driver won't be installed. Only applicable to instances with GPUs.
     *
     * Generated from protobuf field <code>bool enable_gpu_driver = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool
     */
    public function getEnableGpuDriver()
    {
        return $this->enable_gpu_driver;
    }

    /**
     * Optional. Whether the end user authorizes Google Cloud to install GPU
     * driver on this VM instance. If this field is empty or set to false, the GPU
     * driver won't be installed. Only applicable to instances with GPUs.
     *
     * Generated from protobuf field <code>bool enable_gpu_driver = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableGpuDriver($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_gpu_driver = $var;

        return $this;
    }

    /**
     * Optional. Specify a custom Cloud Storage path where the GPU driver is
     * stored. If not specified, we'll automatically choose from official GPU
     * drivers.
     *
     * Generated from protobuf field <code>string custom_gpu_driver_path = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return string
     */
    public function getCustomGpuDriverPath()
    {
        return $this->custom_gpu_driver_path;
    }

    /**
     * Optional. Specify a custom Cloud Storage path where the GPU driver is
     * stored. If not specified, we'll automatically choose from official GPU
     * drivers.
     *
     * Generated from protobuf field <code>string custom_gpu_driver_path = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param string $var
     * @return $this
     */
    public function setCustomGpuDriverPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->custom_gpu_driver_path = $var;

        return $this;
    }

}

