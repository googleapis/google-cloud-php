<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/sql/v1/cloud_sql_resources.proto

namespace Google\Cloud\Sql\V1\BackupConfiguration;

use UnexpectedValueException;

/**
 * This value contains the storage location of the transactional logs
 * used to perform point-in-time recovery (PITR) for the database.
 *
 * Protobuf type <code>google.cloud.sql.v1.BackupConfiguration.TransactionalLogStorageState</code>
 */
class TransactionalLogStorageState
{
    /**
     * Unspecified.
     *
     * Generated from protobuf enum <code>TRANSACTIONAL_LOG_STORAGE_STATE_UNSPECIFIED = 0;</code>
     */
    const TRANSACTIONAL_LOG_STORAGE_STATE_UNSPECIFIED = 0;
    /**
     * The transaction logs used for PITR for the instance are stored
     * on a data disk.
     *
     * Generated from protobuf enum <code>DISK = 1;</code>
     */
    const DISK = 1;
    /**
     * The transaction logs used for PITR for the instance are switching from
     * being stored on a data disk to being stored in Cloud Storage.
     * Only applicable to MySQL.
     *
     * Generated from protobuf enum <code>SWITCHING_TO_CLOUD_STORAGE = 2;</code>
     */
    const SWITCHING_TO_CLOUD_STORAGE = 2;
    /**
     * The transaction logs used for PITR for the instance are now stored
     * in Cloud Storage. Previously, they were stored on a data disk.
     * Only applicable to MySQL.
     *
     * Generated from protobuf enum <code>SWITCHED_TO_CLOUD_STORAGE = 3;</code>
     */
    const SWITCHED_TO_CLOUD_STORAGE = 3;
    /**
     * The transaction logs used for PITR for the instance are stored in
     * Cloud Storage. Only applicable to MySQL and PostgreSQL.
     *
     * Generated from protobuf enum <code>CLOUD_STORAGE = 4;</code>
     */
    const CLOUD_STORAGE = 4;

    private static $valueToName = [
        self::TRANSACTIONAL_LOG_STORAGE_STATE_UNSPECIFIED => 'TRANSACTIONAL_LOG_STORAGE_STATE_UNSPECIFIED',
        self::DISK => 'DISK',
        self::SWITCHING_TO_CLOUD_STORAGE => 'SWITCHING_TO_CLOUD_STORAGE',
        self::SWITCHED_TO_CLOUD_STORAGE => 'SWITCHED_TO_CLOUD_STORAGE',
        self::CLOUD_STORAGE => 'CLOUD_STORAGE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}


