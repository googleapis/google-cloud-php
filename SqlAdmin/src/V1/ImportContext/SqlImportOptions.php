<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/sql/v1/cloud_sql_resources.proto

namespace Google\Cloud\Sql\V1\ImportContext;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>google.cloud.sql.v1.ImportContext.SqlImportOptions</code>
 */
class SqlImportOptions extends \Google\Protobuf\Internal\Message
{
    /**
     * Optional. The number of threads to use for parallel import.
     *
     * Generated from protobuf field <code>.google.protobuf.Int32Value threads = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $threads = null;
    /**
     * Optional. Whether or not the import should be parallel.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue parallel = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $parallel = null;
    /**
     * Optional. Options for importing from a Cloud SQL for PostgreSQL instance.
     *
     * Generated from protobuf field <code>.google.cloud.sql.v1.ImportContext.SqlImportOptions.PostgresImportOptions postgres_import_options = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    protected $postgres_import_options = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Google\Protobuf\Int32Value $threads
     *           Optional. The number of threads to use for parallel import.
     *     @type \Google\Protobuf\BoolValue $parallel
     *           Optional. Whether or not the import should be parallel.
     *     @type \Google\Cloud\Sql\V1\ImportContext\SqlImportOptions\PostgresImportOptions $postgres_import_options
     *           Optional. Options for importing from a Cloud SQL for PostgreSQL instance.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Sql\V1\CloudSqlResources::initOnce();
        parent::__construct($data);
    }

    /**
     * Optional. The number of threads to use for parallel import.
     *
     * Generated from protobuf field <code>.google.protobuf.Int32Value threads = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\Int32Value|null
     */
    public function getThreads()
    {
        return $this->threads;
    }

    public function hasThreads()
    {
        return isset($this->threads);
    }

    public function clearThreads()
    {
        unset($this->threads);
    }

    /**
     * Returns the unboxed value from <code>getThreads()</code>

     * Optional. The number of threads to use for parallel import.
     *
     * Generated from protobuf field <code>.google.protobuf.Int32Value threads = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return int|null
     */
    public function getThreadsUnwrapped()
    {
        return $this->readWrapperValue("threads");
    }

    /**
     * Optional. The number of threads to use for parallel import.
     *
     * Generated from protobuf field <code>.google.protobuf.Int32Value threads = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\Int32Value $var
     * @return $this
     */
    public function setThreads($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Int32Value::class);
        $this->threads = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\Int32Value object.

     * Optional. The number of threads to use for parallel import.
     *
     * Generated from protobuf field <code>.google.protobuf.Int32Value threads = 1 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param int|null $var
     * @return $this
     */
    public function setThreadsUnwrapped($var)
    {
        $this->writeWrapperValue("threads", $var);
        return $this;}

    /**
     * Optional. Whether or not the import should be parallel.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue parallel = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\BoolValue|null
     */
    public function getParallel()
    {
        return $this->parallel;
    }

    public function hasParallel()
    {
        return isset($this->parallel);
    }

    public function clearParallel()
    {
        unset($this->parallel);
    }

    /**
     * Returns the unboxed value from <code>getParallel()</code>

     * Optional. Whether or not the import should be parallel.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue parallel = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool|null
     */
    public function getParallelUnwrapped()
    {
        return $this->readWrapperValue("parallel");
    }

    /**
     * Optional. Whether or not the import should be parallel.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue parallel = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\BoolValue $var
     * @return $this
     */
    public function setParallel($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\BoolValue::class);
        $this->parallel = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\BoolValue object.

     * Optional. Whether or not the import should be parallel.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue parallel = 2 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool|null $var
     * @return $this
     */
    public function setParallelUnwrapped($var)
    {
        $this->writeWrapperValue("parallel", $var);
        return $this;}

    /**
     * Optional. Options for importing from a Cloud SQL for PostgreSQL instance.
     *
     * Generated from protobuf field <code>.google.cloud.sql.v1.ImportContext.SqlImportOptions.PostgresImportOptions postgres_import_options = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Cloud\Sql\V1\ImportContext\SqlImportOptions\PostgresImportOptions|null
     */
    public function getPostgresImportOptions()
    {
        return $this->postgres_import_options;
    }

    public function hasPostgresImportOptions()
    {
        return isset($this->postgres_import_options);
    }

    public function clearPostgresImportOptions()
    {
        unset($this->postgres_import_options);
    }

    /**
     * Optional. Options for importing from a Cloud SQL for PostgreSQL instance.
     *
     * Generated from protobuf field <code>.google.cloud.sql.v1.ImportContext.SqlImportOptions.PostgresImportOptions postgres_import_options = 3 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Cloud\Sql\V1\ImportContext\SqlImportOptions\PostgresImportOptions $var
     * @return $this
     */
    public function setPostgresImportOptions($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Sql\V1\ImportContext\SqlImportOptions\PostgresImportOptions::class);
        $this->postgres_import_options = $var;

        return $this;
    }

}


