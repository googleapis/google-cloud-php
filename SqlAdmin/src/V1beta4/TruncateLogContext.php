<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/sql/v1beta4/cloud_sql_resources.proto

namespace Google\Cloud\Sql\V1beta4;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Database Instance truncate log context.
 *
 * Generated from protobuf message <code>google.cloud.sql.v1beta4.TruncateLogContext</code>
 */
class TruncateLogContext extends \Google\Protobuf\Internal\Message
{
    /**
     * This is always `sql#truncateLogContext`.
     *
     * Generated from protobuf field <code>string kind = 1;</code>
     */
    private $kind = '';
    /**
     * The type of log to truncate. Valid values are `MYSQL_GENERAL_TABLE` and
     * `MYSQL_SLOW_TABLE`.
     *
     * Generated from protobuf field <code>string log_type = 2;</code>
     */
    private $log_type = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $kind
     *           This is always `sql#truncateLogContext`.
     *     @type string $log_type
     *           The type of log to truncate. Valid values are `MYSQL_GENERAL_TABLE` and
     *           `MYSQL_SLOW_TABLE`.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Sql\V1Beta4\CloudSqlResources::initOnce();
        parent::__construct($data);
    }

    /**
     * This is always `sql#truncateLogContext`.
     *
     * Generated from protobuf field <code>string kind = 1;</code>
     * @return string
     */
    public function getKind()
    {
        return $this->kind;
    }

    /**
     * This is always `sql#truncateLogContext`.
     *
     * Generated from protobuf field <code>string kind = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setKind($var)
    {
        GPBUtil::checkString($var, True);
        $this->kind = $var;

        return $this;
    }

    /**
     * The type of log to truncate. Valid values are `MYSQL_GENERAL_TABLE` and
     * `MYSQL_SLOW_TABLE`.
     *
     * Generated from protobuf field <code>string log_type = 2;</code>
     * @return string
     */
    public function getLogType()
    {
        return $this->log_type;
    }

    /**
     * The type of log to truncate. Valid values are `MYSQL_GENERAL_TABLE` and
     * `MYSQL_SLOW_TABLE`.
     *
     * Generated from protobuf field <code>string log_type = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setLogType($var)
    {
        GPBUtil::checkString($var, True);
        $this->log_type = $var;

        return $this;
    }

}

