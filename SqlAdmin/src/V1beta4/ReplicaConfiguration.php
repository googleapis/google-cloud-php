<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/sql/v1beta4/cloud_sql_resources.proto

namespace Google\Cloud\Sql\V1beta4;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Read-replica configuration for connecting to the primary instance.
 *
 * Generated from protobuf message <code>google.cloud.sql.v1beta4.ReplicaConfiguration</code>
 */
class ReplicaConfiguration extends \Google\Protobuf\Internal\Message
{
    /**
     * This is always `sql#replicaConfiguration`.
     *
     * Generated from protobuf field <code>string kind = 1;</code>
     */
    private $kind = '';
    /**
     * MySQL specific configuration when replicating from a MySQL on-premises
     * primary instance. Replication configuration information such as the
     * username, password, certificates, and keys are not stored in the instance
     * metadata. The configuration information is used only to set up the
     * replication connection and is stored by MySQL in a file named
     * `master.info` in the data directory.
     *
     * Generated from protobuf field <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
     */
    private $mysql_replica_configuration = null;
    /**
     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue failover_target = 3;</code>
     */
    private $failover_target = null;
    /**
     * Optional. Specifies if a SQL Server replica is a cascadable replica. A
     * cascadable replica is a SQL Server cross region replica that supports
     * replica(s) under it.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue cascadable_replica = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     */
    private $cascadable_replica = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $kind
     *           This is always `sql#replicaConfiguration`.
     *     @type \Google\Cloud\Sql\V1beta4\MySqlReplicaConfiguration $mysql_replica_configuration
     *           MySQL specific configuration when replicating from a MySQL on-premises
     *           primary instance. Replication configuration information such as the
     *           username, password, certificates, and keys are not stored in the instance
     *           metadata. The configuration information is used only to set up the
     *           replication connection and is stored by MySQL in a file named
     *           `master.info` in the data directory.
     *     @type \Google\Protobuf\BoolValue $failover_target
     *           Specifies if the replica is the failover target. If the field is set to
     *           `true` the replica will be designated as a failover replica. In case the
     *           primary instance fails, the replica instance will be promoted as the new
     *           primary instance. Only one replica can be specified as failover target, and
     *           the replica has to be in different zone with the primary instance.
     *     @type \Google\Protobuf\BoolValue $cascadable_replica
     *           Optional. Specifies if a SQL Server replica is a cascadable replica. A
     *           cascadable replica is a SQL Server cross region replica that supports
     *           replica(s) under it.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Sql\V1Beta4\CloudSqlResources::initOnce();
        parent::__construct($data);
    }

    /**
     * This is always `sql#replicaConfiguration`.
     *
     * Generated from protobuf field <code>string kind = 1;</code>
     * @return string
     */
    public function getKind()
    {
        return $this->kind;
    }

    /**
     * This is always `sql#replicaConfiguration`.
     *
     * Generated from protobuf field <code>string kind = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setKind($var)
    {
        GPBUtil::checkString($var, True);
        $this->kind = $var;

        return $this;
    }

    /**
     * MySQL specific configuration when replicating from a MySQL on-premises
     * primary instance. Replication configuration information such as the
     * username, password, certificates, and keys are not stored in the instance
     * metadata. The configuration information is used only to set up the
     * replication connection and is stored by MySQL in a file named
     * `master.info` in the data directory.
     *
     * Generated from protobuf field <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
     * @return \Google\Cloud\Sql\V1beta4\MySqlReplicaConfiguration|null
     */
    public function getMysqlReplicaConfiguration()
    {
        return $this->mysql_replica_configuration;
    }

    public function hasMysqlReplicaConfiguration()
    {
        return isset($this->mysql_replica_configuration);
    }

    public function clearMysqlReplicaConfiguration()
    {
        unset($this->mysql_replica_configuration);
    }

    /**
     * MySQL specific configuration when replicating from a MySQL on-premises
     * primary instance. Replication configuration information such as the
     * username, password, certificates, and keys are not stored in the instance
     * metadata. The configuration information is used only to set up the
     * replication connection and is stored by MySQL in a file named
     * `master.info` in the data directory.
     *
     * Generated from protobuf field <code>.google.cloud.sql.v1beta4.MySqlReplicaConfiguration mysql_replica_configuration = 2;</code>
     * @param \Google\Cloud\Sql\V1beta4\MySqlReplicaConfiguration $var
     * @return $this
     */
    public function setMysqlReplicaConfiguration($var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Sql\V1beta4\MySqlReplicaConfiguration::class);
        $this->mysql_replica_configuration = $var;

        return $this;
    }

    /**
     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue failover_target = 3;</code>
     * @return \Google\Protobuf\BoolValue|null
     */
    public function getFailoverTarget()
    {
        return $this->failover_target;
    }

    public function hasFailoverTarget()
    {
        return isset($this->failover_target);
    }

    public function clearFailoverTarget()
    {
        unset($this->failover_target);
    }

    /**
     * Returns the unboxed value from <code>getFailoverTarget()</code>

     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue failover_target = 3;</code>
     * @return bool|null
     */
    public function getFailoverTargetValue()
    {
        return $this->readWrapperValue("failover_target");
    }

    /**
     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue failover_target = 3;</code>
     * @param \Google\Protobuf\BoolValue $var
     * @return $this
     */
    public function setFailoverTarget($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\BoolValue::class);
        $this->failover_target = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\BoolValue object.

     * Specifies if the replica is the failover target. If the field is set to
     * `true` the replica will be designated as a failover replica. In case the
     * primary instance fails, the replica instance will be promoted as the new
     * primary instance. Only one replica can be specified as failover target, and
     * the replica has to be in different zone with the primary instance.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue failover_target = 3;</code>
     * @param bool|null $var
     * @return $this
     */
    public function setFailoverTargetValue($var)
    {
        $this->writeWrapperValue("failover_target", $var);
        return $this;}

    /**
     * Optional. Specifies if a SQL Server replica is a cascadable replica. A
     * cascadable replica is a SQL Server cross region replica that supports
     * replica(s) under it.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue cascadable_replica = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return \Google\Protobuf\BoolValue|null
     */
    public function getCascadableReplica()
    {
        return $this->cascadable_replica;
    }

    public function hasCascadableReplica()
    {
        return isset($this->cascadable_replica);
    }

    public function clearCascadableReplica()
    {
        unset($this->cascadable_replica);
    }

    /**
     * Returns the unboxed value from <code>getCascadableReplica()</code>

     * Optional. Specifies if a SQL Server replica is a cascadable replica. A
     * cascadable replica is a SQL Server cross region replica that supports
     * replica(s) under it.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue cascadable_replica = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @return bool|null
     */
    public function getCascadableReplicaValue()
    {
        return $this->readWrapperValue("cascadable_replica");
    }

    /**
     * Optional. Specifies if a SQL Server replica is a cascadable replica. A
     * cascadable replica is a SQL Server cross region replica that supports
     * replica(s) under it.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue cascadable_replica = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param \Google\Protobuf\BoolValue $var
     * @return $this
     */
    public function setCascadableReplica($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\BoolValue::class);
        $this->cascadable_replica = $var;

        return $this;
    }

    /**
     * Sets the field by wrapping a primitive type in a Google\Protobuf\BoolValue object.

     * Optional. Specifies if a SQL Server replica is a cascadable replica. A
     * cascadable replica is a SQL Server cross region replica that supports
     * replica(s) under it.
     *
     * Generated from protobuf field <code>.google.protobuf.BoolValue cascadable_replica = 5 [(.google.api.field_behavior) = OPTIONAL];</code>
     * @param bool|null $var
     * @return $this
     */
    public function setCascadableReplicaValue($var)
    {
        $this->writeWrapperValue("cascadable_replica", $var);
        return $this;}

}

